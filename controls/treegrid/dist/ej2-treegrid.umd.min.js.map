{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        if ((isPrinting === true || args[isPdfExport]) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.parent.grid.selectedRowIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","hasOwnProperty","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"shBAIO,SAASA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAEX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAKhD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAEX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,SAAgBG,EAAkBC,GAC9B,IAAIC,EACJA,KAEA,IAAK,IAAId,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EAKX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAEX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAEX,SAAgBE,EAAaC,GAQzB,cAPOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,aACNF,EAAMG,gBACNH,EAAMjB,SACNiB,EAEX,SAAgBlB,EAAcrC,EAAQuD,EAAOI,GACzC,GAAIA,EAAe,CAEf,OAAO3D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GAG1B,SAAgBK,EAASC,GACrB,IAAIC,EAAQC,OAAOC,iBAAiBH,GACpC,MAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCvJ1C,SAASC,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGI/D,EACA0C,EAEAsB,EANApB,EAAQa,EAAQb,MAChBqB,EAASR,EAAQQ,OAMjBzD,EAAMkD,EAAQpD,KAAK4D,0BAA0B,GAC7CC,EAAWT,EAAQpE,sBAAsBC,cACzCmE,EAAQpE,WAAWA,WAAW8E,KAAOV,EAAQpE,WAC7C+E,KACAC,EAAe1B,EACf2B,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQpD,KAAKoE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE9D,OAAU,CACxC,IAAI0E,EA+GZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAInB,EACA2B,GAAS,EACTM,EAAqBnB,EAAQpD,KAAKwE,wBAGtC,OAFAlC,EAAQmC,YAAWtB,EAAQb,OAC3BA,EAAQD,EAAaC,GACbc,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQrC,GACjB2B,GAAS,EACT,MACJ,IAAK,SACDJ,EAAShD,KAAKyB,GACd2B,GAAS,EACT,MACJ,IAAK,QAOG3B,EANCvC,oBAAkB0D,GAMXpB,EADRC,EAAQmC,YAAWF,EAAmBjB,EAAc,KAH5CjB,EADRC,EAAQmC,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAK1D,oBAAkB0D,GAIlB,CACD,IAAImB,EAAcxB,EAAQpD,KAAK4D,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrChB,EAAQD,EALJC,GADCvC,oBAAkB8E,IAAgBA,EAAYD,KAAiBzB,EAAQb,MAAMsC,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQb,QAI/Bc,EAAQgB,WAA2B,mBAAE3B,SAAWH,OAbhDA,EAAQD,EADRC,EAAQmC,YAAWhB,KAgBA,IAAnBF,IACAM,EAASc,QAAQrC,GACjB2B,GAAS,GAGrB,OAAS3B,MAAOA,EAAO2B,OAAQA,GAhKda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGnB,EAAQgC,EAAOhC,MACf2B,EAASK,EAAOL,OAQpB,GANI3B,aAAiByC,MACjBhB,EAAe/B,EAAYM,GAG3ByB,EAAalD,KAAK4D,YAAWnC,KAE5B2B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAanE,OAAQoF,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAG9E,KACxB6D,EAAaiB,GAAKjB,EAAaiB,GAAG9E,IAEtC,IAAIS,EAAOoD,EAAaiB,GAAGvC,SAAW/B,OAAOC,KAAKoD,EAAaiB,GAAGvC,UAC9D/B,OAAOC,KAAKoD,EAAaiB,IAC7BtF,EAAImE,EAASjE,OAqFb,IApFA,IAAIqF,EAAU,WACV,GAAIpB,EAASnE,GAAGQ,KAAS6D,EAAaiB,GAAG9E,GAAM,CAC3C,GAAe,WAAXyD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKvB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIyB,EAASnE,GAAGwF,eAAevE,EAAKyB,MAAuC,SAA9BgB,EAAQc,aAAaC,OACzDpE,oBAAkB2D,IAAyD,IAAxCA,EAA2B,eAAE9D,QAClEe,EAAKyB,KAAOoB,GAAa,CAC5B,IAAI2B,EAAa/D,EAAcgC,EAASW,EAAaiB,GAAG3D,UAExD,GADAwC,EAASnE,GAAGiB,EAAKyB,IAAM2B,EAAaiB,GAAGrE,EAAKyB,IACxC+C,GAAcA,EAAW1C,SACzB,GAAI2C,aAAY,CAEZD,EAAW1C,SAAS9B,EAAKyB,IACnB+C,EAAWxE,EAAKyB,IAAMgB,EAAQpD,KAAKqF,gBAAgB3F,GAAGiB,EAAKyB,IACvDgB,EAAQpD,KAAKqF,gBAAgB3F,GAAW,SAAEiB,EAAKyB,IAAMyB,EAASnE,GAAGiB,EAAKyB,SAGhF+C,EAAW1C,SAAS9B,EAAKyB,IAAM+C,EAAWxE,EAAKyB,IAAMyB,EAASnE,GAAGiB,EAAKyB,UAMrF,GAAe,QAAXuB,GAA+B,cAAXA,EAAwB,CACjD,IAAIpB,OAAQ,EACgC,UAAxCa,EAAQc,aAAaQ,eACjBrB,GACAW,EAAavB,SAASW,EAAQkC,iBAAmBzB,EAASnE,GAAG0D,EAAQmC,WACrE1B,EAAS2B,OAAO9F,EAAI,EAAG,EAAGsE,EAAavB,YAGlCoB,EAASnE,GAAGwF,eAAe9B,EAAQqC,gBACpC5B,EAASnE,GAAG0D,EAAQqC,kBAExB5B,EAASnE,GAAG0D,EAAQqC,cAAc5E,KAAKmD,EAAavB,UACpDiD,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAAS2B,OAAO9F,EAAI,EAAG,EAAGsE,EAAavB,UACvCiD,EAAgBxF,EAAK2D,EAASnE,EAAI,GAAIiE,EAAQP,EAASC,EAAiBW,IAElEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAAS2B,OAAO9F,EAAG,EAAGsE,EAAavB,UACnCiD,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,KALpEzB,EAAQ,EACRsB,EAAS2B,OAAOjD,EAAO,EAAGyB,EAAavB,WAO/C,MAAO,QAxEP,IAAIkD,EAAgB9B,EAASnE,GAE7B,GADAmE,EAAS2B,OAAO9F,EAAG,GACf2D,EAAiB,CACjB,IAAKtD,oBAAkB4F,EAAcvC,EAAQkC,kBAKzC,IAAK,IAJDM,EAAaxC,EAAQyC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAE3C,EAAQmC,aAAeI,EAAcvC,EAAQkC,mBACvD,GACC3D,EAAeiE,EAAaA,EAAWxC,EAAQqC,iBAC1CO,EAAIrE,EAAa/B,OAAS,EAAGoG,GAAK,EAAGA,IAC1C,GAAIrE,EAAaqE,GAAG5C,EAAQmC,aAAeI,EAAcvC,EAAQmC,WAAY,CACzE5D,EAAa6D,OAAOQ,EAAG,GAClBrE,EAAa/B,SACdgG,EAAWlE,iBAAkB,EAC7BgE,EAAgBxF,EAAK0F,EAAYjC,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cAwDTtD,oBAAkB8D,EAASnE,GAAG0D,EAAQqC,gBACxCQ,EAAmBpC,EAASnE,GAAG0D,EAAQqC,cAAe1B,EAAaiB,GAAIrB,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC5HkC,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,IAIxD3D,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFuF,IAEV,QAwDpB,SAAgBgB,EAAmBtE,EAAcoC,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAI0C,GAAa,EACb9D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS6D,EAAa7D,IACrCmD,GAAmB1B,EAAaS,GAAGgB,EAAQkC,mBAAqBvB,EAAaX,EAAQmC,WAAa,CACnG,GAAe,SAAX5B,EAAmB,CAGnB,IAAK,IAFDhD,EAAOD,OAAOC,KAAKoD,GACnBoB,EAAa/D,EAAcgC,EAASW,EAAa1C,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIiC,EAAaS,GAAG8C,eAAevE,EAAKjB,MAAsC,SAA9B0D,EAAQc,aAAaC,MAAmBxD,EAAKjB,KAAO8D,KAChG2B,EAAWxE,EAAKjB,IAAMyF,EAAW1C,SAAS9B,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMqE,EAAapD,EAAKjB,IAC3D,WAAnC0D,EAAQpD,KAAKkE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQpD,KAAKoE,WAAqB,WAAE+B,aAAepC,EAAaxB,MAChEa,EAAQpD,KAAKoE,WAAqB,WAAEgC,sBAAsBrC,GAItE,MAEC,GAAe,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQkC,iBAAmB3D,EAAaS,GAAGgB,EAAQmC,WAChE5D,EAAa6D,OAAOpD,EAAI,EAAG,EAAG4B,GAC9B0B,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,KAGnErC,EAAaS,GAAG8C,eAAe9B,EAAQqC,gBACxC9D,EAAaS,GAAGgB,EAAQqC,kBAE5B9D,EAAaS,GAAGgB,EAAQqC,cAAc5E,KAAKmD,EAAavB,UACxDiD,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B/C,EAAa6D,OAAOpD,EAAG,EAAG4B,EAAavB,UACvCiD,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1B/C,EAAa6D,OAAOpD,EAAI,EAAG,EAAG4B,EAAavB,UAC3CiD,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,QAG3E,CACgBrC,EAAaS,GAAGjB,WACjCQ,EAAa6D,OAAOpD,EAAG,GAClBT,EAAa/B,SACdsG,GAAa,SAIfnG,oBAAkB4B,EAAaS,GAAGgB,EAAQqC,gBAC5CQ,EAAmBtE,EAAaS,GAAGgB,EAAQqC,cAAe1B,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC7HkC,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,GAInE,OAAO6C,EAEX,SAAgBR,EAAgBxF,EAAKa,EAAQ4C,EAAQP,EAASC,EAAiBgD,GAC3E,GAA6C,UAAxCjD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B5D,oBAAkBsG,EAAMlF,YAI7E,CACD,IACImF,EADAC,EAAiBnD,EAAQpD,KAAKwE,wBAalC,GAXA+B,EAAeC,IAAI,SAAUT,EAAGrG,GAASqG,EAAE7F,KAASa,EAAOb,KACvDoG,EAAU5G,KAGTK,oBAAkBuG,KACnBvF,EAASwF,EAAeD,IAExBlD,EAAQqD,sBAAwB1G,oBAAkBgB,KAAYhB,oBAAkBsG,KAChFtF,EAAS2F,WAAS,sBAAwBL,EAAMM,eAAgBvD,IAEpErC,EAAOW,iBAAkB,EACV,QAAXiC,GAA+B,cAAXA,EAAwB,CAC5C5C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrB0B,EAAQwD,aAAajH,QAAQC,QAAUG,oBAAkBsG,KACzDA,EAAQE,EAAeT,OAAO,SAAUC,GACpC,OAAIA,EAAEY,iBAAmB5F,EAAOM,SACrB0E,EAGA,QAInB,IAAIpE,EAAe0E,EAAQA,aAAiBtB,MAAQsB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxClD,EAAQc,aAAaQ,iBAChB3D,EAAOmE,eAAe,gBAIlBnF,oBAAkBsG,IAAUtF,EAAOb,KAASmG,EAAMnG,IACnDa,EAAOY,aAAad,KAAKwF,GAJ7BtF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAakF,QAAQlF,IAAwBZ,EAAOb,KAASmG,EAAMnG,IAC1Ea,EAAOY,aAAagD,QAAQhD,GAE5B0B,IACKtC,EAAOmE,eAAe9B,EAAQqC,gBAC/B1E,EAAOqC,EAAQqC,mBAEyC,IAAxD1E,EAAOqC,EAAQqC,cAAcoB,QAAQlF,IAAwBZ,EAAOb,KAASmG,EAAMnG,IACnFa,EAAOqC,EAAQqC,cAAcd,QAAQhD,KAQrD,IAAK,IAHDiD,EAAcxB,EAAQpD,KAAK4D,0BAA0B,GACrDkD,EAAO1D,EAAQpD,KAAKhB,sBAAsBC,cAC1CmE,EAAQpD,KAAKhB,WAAWA,WAAW8E,KAAOV,EAAQpD,KAAKhB,WAClDU,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7B,GAAIoH,EAAKpH,GAAGkF,KAAiB7D,EAAO6D,GAAc,CAC9CkC,EAAKpH,GAAKqB,EACV,MAGRqC,EAAQpD,KAAK+G,WAAW7G,EAAKa,GAC7B,IAAIiG,EAAM5D,EAAQ6D,cAAcX,GACE,UAA9BlD,EAAQc,aAAaC,OACrB6C,EAAM5D,EAAQ8D,UAAU9D,EAAQpD,KAAKmH,wBAAwBpG,EAAOb,MAExE,IAAIkH,OAAa,EAIjB,IAHIhE,EAAQiE,YAAcjE,EAAQkE,sBAC9BF,EAAahE,EAAQmE,qBAAqBjB,KAEzClD,EAAQqD,uBAAyB1G,oBAAkBiH,KAASjH,oBAAkBqH,GAAa,CAC5F,IAAII,EAAUpE,EAAQqE,gBAClBrE,EAAQsE,qBAAuBtE,EAAQuE,sBACvCH,GAAoB,GAExBpE,EAAQwE,aAAaC,YACjBf,KAAM/F,EAAQ+G,KAAMd,EAAIe,MAAMP,GAAWR,EAAIe,MAAMP,GAC7CJ,EAAWW,MAAMP,EAAUpE,EAAQkE,oBACzCU,OAAQ5E,EAAQpD,KAAKiI,aAAa7E,EAAQqE,iBAC1CS,YAAavE,SAjFsE,CAC1EvC,EAAcgC,EAASiD,EAAMlF,WAAWE,UAC9CM,aAAad,KAAKwF,ICrPrC,IAAI8B,EAAwB,WA6DxB,OA5DA,SAAgBC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAKjI,gBAAiB,EAMtBiI,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKvC,UACL+C,QAAMR,KAAMD,OC/DhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,OAxCAS,EAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAY,GACpCE,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACxCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,gBACDH,EAAUb,UAAW,yBAAqB,GAC7CE,GACIc,gBACDH,EAAUb,UAAW,sBAAkB,GAC1CE,GACIc,cACDH,EAAUb,UAAW,YAAQ,GAChCE,GACIc,cACDH,EAAUb,UAAW,mBAAe,GACvCE,GACIc,cACDH,EAAUb,UAAW,WAAO,GAC/BE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,EAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,eAAW,GACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,cACDE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,2BAAuB,GACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,0BAAsB,GACnDE,GACIc,cACDE,EAAelB,UAAW,iBAAa,GAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,oBAAgB,GAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,qBAAiB,GACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,EAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,gBAAY,GACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCuB,EAAU,oDACVC,EAAe,2CAIfC,EAAwB,SAAUT,GAElC,SAASS,EAAO9L,GAIZ,OAFA+L,OAAKC,OAAOC,UACJZ,EAAOa,KAAK5C,KAAMtJ,IAAWsJ,KAsEzC,OA1EAS,EAAU+B,EAAQT,GAWlBS,EAAOvB,UAAU4B,cAAgB,WAC7B,MAAO,UAEXL,EAAOvB,UAAU6B,IAAM,SAAUC,EAAOC,GAC9BD,aAAiBrG,QACnBqG,GAASA,IAGb,IAAK,IADDE,EAAOF,EACF1L,EAAI,EAAGA,EAAI4L,EAAK1L,OAAQF,IAAK,CAClC,IAAI6L,EAAOC,cAAYF,EAAK5L,IACxB+L,EAAMF,EAAKG,MAAML,EAAMhD,KAAKtJ,QAChC,GAAI0M,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMhD,KAAKtJ,OAAQ0M,EAAIrD,SAEtD7F,GADJqJ,EAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,KACtFjF,QAAQ,SACxBkF,EAAUH,EAAQI,UAAUzJ,GAChB,mBAAZ+I,EAAK5L,GACLkM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAK5L,IAA+C,0BAAZ4L,EAAK5L,GAClDkM,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAK5L,GACVkM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAK5L,GACVkM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAK5L,GACVkM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAK5L,KACVkM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjC,+BAAZW,EAAK5L,GACAK,oBAAkBsI,KAAK4D,cAAiBlM,oBAAkBsI,KAAK4D,YAAYC,kBAC5EC,QAAQZ,EAAKa,SAASR,GAI1BO,QAAQZ,EAAKa,SAASR,MAKtCf,EAAOvB,UAAU+C,QAAU,SAAUjB,EAAOC,EAAMiB,GAC9CjE,KAAK4D,YAAcK,EACblB,aAAiBrG,QACnBqG,GAASA,IAEb,IAAIE,EAAOF,EACPkB,EAAS5E,qBACTW,KAAK8C,IAAI,yBAA0BE,GAEvC,IAAK,IAAI3L,EAAI,EAAGA,EAAI4L,EAAK1L,OAAQF,IAAK,CAClC,IAAI6L,EAAOgB,EAAgBjB,EAAK5L,IAC5B+L,EAAMF,EAAKG,MAAML,EAAMiB,GAC3B,GAAIb,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMiB,EAAUb,EAAIrD,SACvD+D,QAAQZ,EAAKa,SAASR,MAI3Bf,GACTG,UAESuB,GACPC,wBACIlB,KAAM,yBACNc,QAAS,QACTV,MAAO,SAAUL,EAAMtM,GACnB,IAAI0N,GAAQd,SAAS,GAOrB,OANK5L,oBAAkBhB,EAAOwG,YAAcxF,oBAAkBhB,EAAO0G,eAC9D1F,oBAAkBhB,EAAOuG,mBAC1BvF,oBAAkBhB,EAAOwG,YAAcxF,oBAAkBhB,EAAOuG,kBACjEvF,oBAAkBhB,EAAOwG,aAAexF,oBAAkBhB,EAAOuG,oBAClEmH,GAAQd,SAAS,IAEdc,GAEXZ,gBAAiB,SAAUR,EAAMtM,EAAQ2N,GACrC,MAAOC,iRAIF/B,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCCtHrBgC,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdb,EAAkB,kBAElBc,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAIlB9L,EAAW,WAIX+L,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,EAAmB,mBAQnBC,GAAa,aAEbC,GAAY,YAEZC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpB1G,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAoBxCqG,GAA+B,SAAUrF,GAEzC,SAASqF,EAAc1Q,GACnB,IAAI2Q,EAAQtF,EAAOa,KAAK5C,KAAMtJ,EAAOiB,OAASqI,KAI9C,OAHAqH,EAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB9Q,EAChB2Q,EAsJX,OA5JA5G,GAAU2G,EAAerF,GAQzBqF,EAAcnG,UAAUwG,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdzJ,EAAiB8B,KAAKwH,eAAerL,wBACzC,GAAyC,KAArC1B,OAAOmN,eAAeC,WAAmB,CACzC7H,KAAK8H,kBAAkB7N,MAAQ+F,KAAK2H,GAAe,GACnD,IAAII,EAAO/H,KAAKwH,eAAe7P,KAAKkH,UACpC,GAAmD,SAA/CmB,KAAKwH,eAAeQ,kBAAkBlM,KAAiB,CAIvD,IAAK,IAHDmM,EAAkBjI,KAAKwH,eAAeU,wBAAwBC,KAAK,SAAUC,EAAGxH,GAChF,OAAOwH,EAAIxH,IAENvJ,EAAI,EAAGA,EAAI4Q,EAAgB1Q,OAAQF,IAIxC,GAHIA,EAAI,IACJ2I,KAAKsH,iBAAmB,OAEvBS,EAAKE,EAAgB5Q,IAAIgR,UAAUC,SAAS,gBAAiB,CAC9D,IAAI5I,KAAW6I,MAAM3F,KAAKmF,EAAKE,EAAgB5Q,IAAImR,iBAAiB,eAChEC,EAAWzI,KAAKwH,eAAekB,qBAAqBrR,GAAW,UACV,IAArD2I,KAAKuH,yBAAyB/I,QAAQiK,KACQ,WAA1CzI,KAAKwH,eAAemB,mBAA4E,SAA1C3I,KAAKwH,eAAemB,mBAC1E3I,KAAK4I,kBAAkB1K,EAAgB+J,EAAgB5Q,GAAI0Q,EAAML,EAAYrQ,GAEjF2I,KAAgB,YAAEN,GAAO,EAAO,KAAMgI,GACtC1H,KAAKsH,iBAAmBtH,KAAK2H,GAC7B3H,KAAKuH,yBAAyB/O,KAAKiQ,GACnCzI,KAAK2H,GAAe,GAC0B,UAA1C3H,KAAKwH,eAAemB,mBAA2E,SAA1C3I,KAAKwH,eAAemB,mBACzE3I,KAAK6I,iBAAiB3K,EAAgB+J,EAAgB5Q,GAAI0Q,EAAML,IAKhF,GAAIA,EAAY,CAEP,IADDoB,KACJ,IAASzR,EAAI,EAAGA,EAAI2I,KAAKwH,eAAeuB,oBAAoBxR,OAAQF,IAChEyR,EAAgBzR,GAAK2I,KAAKwH,eAAeuB,oBAAoB1R,GAAG2R,WAEpEhJ,KAAgB,YAAE8I,GAAiB,EAAO,KAAMpB,GAChD1H,KAAKsH,gBAAkBtH,KAAK2H,GAAe,KAAO3H,KAAKsH,gBAE3D,IAAItE,GACAvE,KAAMuB,KAAKsH,gBACX2B,QAAQ,GAGZ,GADAjJ,KAAKwH,eAAe0B,QDpBZ,aCoBuClG,GAC3CA,EAAKiG,OACL,OAEJjJ,KAAK8H,kBAAkB7N,MAAQ+F,KAAK2H,GAAe3E,EAAKvE,KACnD0K,UAAQC,UAAUC,MAAM,qBAIzBrJ,KAAK8H,kBAAkBwB,kBAAkB,EAAGtJ,KAAK8H,kBAAkB7N,MAAM1C,QAHzEyI,KAAK8H,kBAAkByB,SAK3BvJ,KAAa,UAAI,EACjBA,KAAKuH,4BACLvH,KAAKsH,gBAAkB,QAGvBvF,EAAOd,UAAUwG,YAAY7E,KAAK5C,KAAM0H,KAIpDN,EAAcnG,UAAU2H,kBAAoB,SAAU1K,EAAgBhD,EAAe6M,EAAML,EAAYxN,GACnG,IACIyN,EAAc,cACd7O,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkBwG,EAAehD,GAAepC,IAEjD,IAAK,IADD0Q,EAAYtL,EAAehD,GAAepC,GAAiB,MACtDzB,EAAI,EAAGA,EAAImS,EAAY,EAAGnS,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAImE,EAAe3G,OAAQwC,IACvC,IAAKrC,oBAAkBwG,EAAehD,GAAepC,KACjDoF,EAAenE,GAAGf,KAAckF,EAAehD,GAAepC,GAAYE,GAAW,CACrFkC,EAAgBnB,EAChB,IAAI2F,KAAW6I,MAAM3F,KAAKmF,EAAK7M,GAAesN,iBAAiB,eAC3DC,EAAWvK,EAAenE,GAAGf,GACjC,IAAyD,IAArDgH,KAAKuH,yBAAyB/I,QAAQiK,GAAkB,CACxDzI,KAAgB,YAAEN,GAAO,EAAO,KAAMgI,GAElC1H,KAAKsH,gBADLpN,EAAQ,EACe8F,KAAKsH,gBAAkBtH,KAAK2H,GAAe,KAG3C3H,KAAK2H,GAAe,KAAO3H,KAAKsH,gBAE3DtH,KAAKuH,yBAAyB/O,KAAKiQ,GACnCzI,KAAK2H,GAAe,GACpB,SAOxBP,EAAcnG,UAAUwI,KAAO,SAAU/B,GACrC3F,EAAOd,UAAUwI,KAAK7G,KAAK5C,KAAM0H,IAErCN,EAAcnG,UAAUyI,MAAQ,SAAUjL,EAAMkL,EAAUC,GACtD7H,EAAOd,UAAUyI,MAAM9G,KAAK5C,KAAMvB,EAAMkL,EAAUC,IAMtDxC,EAAcnG,UAAU4B,cAAgB,WACpC,MAAO,aAQXuE,EAAcnG,UAAU4I,QAAU,WAC9B9H,EAAOd,UAAU4I,QAAQjH,KAAK5C,OAElCoH,EAAcnG,UAAU4H,iBAAmB,SAAU3K,EAAgBhD,EAAe6M,EAAML,GACtF,IAII1O,EAAW,WACf,GAAIkF,EAAehD,GAA8B,gBAE7C,IAAK,IADD4O,EAAY5L,EAAehD,GAA2B,aACjD7D,EAAI,EAAGA,EAAIyS,EAAUvS,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAImE,EAAe3G,OAAQwC,IACvC,IAAKrC,oBAAkBoS,EAAUzS,GAAG2B,KAAckF,EAAenE,GAAGf,KAAc8Q,EAAUzS,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkBqQ,EAAKhO,MAASgO,EAAKhO,GAAGsO,UAAUC,SAAS,gBAAiB,CAC9E,IAAI5I,KAAW6I,MAAM3F,KAAKmF,EAAKhO,GAAGyO,iBAAiB,eAC/CC,EAAWvK,EAAenE,GAAGf,IACwB,IAArDgH,KAAKuH,yBAAyB/I,QAAQiK,KACtCzI,KAAgB,YAAEN,GAAO,EAAO,KAAMgI,GACtC1H,KAAKsH,iBAAoB,KAAOtH,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKuH,yBAAyB/O,KAAKiQ,GACnCzI,KAAK6I,iBAAiB3K,EAAgBnE,EAAGgO,EAAML,IAGvD,QAMbN,GACT2C,aCzKEC,GAA2B,WAI3B,SAASA,EAAUtT,GACfsJ,KAAKtJ,OAASA,EACdsJ,KAAKiK,iBACLjK,KAAKiI,mBACLjI,KAAKkK,mBA2aT,OAraAF,EAAU/I,UAAU4B,cAAgB,WAChC,MAAO,aAEXmH,EAAU/I,UAAUiJ,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKoK,eAAgBpK,MACpDA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKqK,eAAgBrK,MACtDA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAKsK,kBAAmBtK,MAC5DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,mBAAoBnK,KAAKoK,eAAgBpK,MAC7DA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAKuK,kBAAmBvK,OAEhEgK,EAAU/I,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKoK,gBACrCpK,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKqK,gBACvCrK,KAAKtJ,OAAOiB,KAAK+S,IAAI,mBAAoB1K,KAAKoK,gBAC9CpK,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAKuK,mBAC1CvK,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAKsK,qBAO9CN,EAAU/I,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAETR,EAAU/I,UAAUsJ,kBAAoB,SAAUvH,GAC9C,IAEI2H,EAFAtJ,EAAS9I,YAAU,SAAUyK,GAC7B4H,EAAYC,eAAaxJ,EAAQ,sBAErC,GAAIuJ,GAAaA,EAAUpC,iBAAiB,sBAAsBjR,OAAS,EAAG,CAC1EoT,EAAWC,EAAUE,cAAc,0BACnC,IAAInB,OAAW,GACfA,MACSnR,KAAK6I,EAAO0J,QAAQ,MAAMpB,UACnC3J,KAAKgL,iBAAiBrB,GACtB3J,KAAKiL,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYjH,EAAO0J,QAAQ,YAE9G,GAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoBjR,OAAS,GAAKyI,KAAKtJ,OAAOyU,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,UAC/DtI,KAAKqL,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnC9K,KAAKiL,sBAAsBN,EAAUS,EAAe/J,EAAO0J,QAAQ,SAG3Ef,EAAU/I,UAAUgK,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAI9M,EAAOuB,KAAKtJ,OAAOyF,wBAAwBoP,EAAW5B,UACtD3G,GAASwI,QAASF,EAAYjK,OAAQsJ,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BtI,KAAKtJ,OAAOgV,oBAAsBjN,GAC5CuB,KAAKtJ,OAAOwS,QAAQyC,EAAuB3I,IAE/CgH,EAAU/I,UAAU2K,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACAxU,EAAW0I,KAAKtJ,OAAc,QACzBqV,EAAM,EAAGA,EAAMzU,EAAQC,OAAQwU,IAChCzU,EAAQyU,GAAKvU,eACbqU,EAAa7L,KAAKtJ,OAAOY,QAAQyU,GAAKC,KAI9C,IAAK,IADDC,EAAmBjM,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,oBAAoBjR,OAClFwC,EAAI,EAAGA,EAAIkS,EAAkBlS,IAAK,CACtBiG,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,oBAAoBzO,GACtEoS,aAAa,kBAAoBN,IAC5CC,EAAc/R,GAGtB,OAAO+R,GAEX9B,EAAU/I,UAAUmJ,eAAiB,WAEjC,GADApK,KAAK8L,YAAc9L,KAAK4L,yBACpB5L,KAAK8L,aAAe,GAAoF,IAA/E9L,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,oBAAoBjR,OAAc,CAC3G,IAAI6U,EAAgBpM,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,oBAAoBxI,KAAK8L,aACzFlB,OAAY,EAEZyB,EAAYrM,KAAKtJ,OAAO4V,cAAc,SAAWC,UAAW,kBAAmBC,OAASvJ,KAAQ,eACpG2H,EAAY6B,iBAAezM,KAAKtJ,OAAO4V,eAAe,GAASd,SAFnD,EAEmEkB,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYtQ,MAAMoS,MAAQ,OAClDhC,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACnDrV,oBAAkB0U,IACnBA,EAAcS,aAAajC,EAAWwB,EAAcW,YAEpD/M,KAAKtJ,OAAOyU,oBACZnL,KAAKqL,uBAGR,GAAIrL,KAAK8L,aAAe,GAAK9L,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,oBAAoBjR,OAAS,EAAG,CAC9G,IACI6T,GADAR,EAAY5K,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,WACvEtI,KAAKtJ,OAAOyU,oBAAsBC,GAClCpL,KAAKqL,gBAAgBD,KAIjCpB,EAAU/I,UAAU+L,qBAAuB,SAAUhK,GACjD,IAAI4H,EACAyB,EAAYrM,KAAKtJ,OAAO4V,cAAc,SAAWC,UAAW,oBAAqBC,OAASvJ,KAAQ,cAClGxE,EAAOuE,EAAKvE,KAChBuE,EAAKvD,KAAK4I,UAAUsE,IAAI,sBACxB3J,EAAKvD,KAAKwN,aAAa,aAAc,YACrC,IAAIhT,GAASvC,oBAAkB+G,EAAKyO,gBAAyC,YAAvBzO,EAAKyO,cAI3D,IAHAtC,EAAY6B,iBAAezM,KAAKtJ,OAAO4V,eAAe,GAASd,QAASvR,EAAOyS,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYtQ,MAAMoS,MAAQ,OACvB,kBAAvBnO,EAAKyO,cAAmC,CACxC,IAAIC,EAAWvC,EAAUpC,iBAAiB,YAAY,GACtD4E,eAAaD,IAAY,UAAW,SAAU,cAC9CvC,EAAUE,cAAc,YAAYzC,UAAUsE,IAAI,UAGtD,OADA/B,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACjDnC,GAEXZ,EAAU/I,UAAUoJ,eAAiB,SAAUgD,GAC3C,IAAIzC,EAAY5K,KAAKgN,qBAAqBK,GACtCC,EAAeD,EAAU5N,KAAKqL,cAAc,2BAChD,GAAKpT,oBAAkB4V,GAKlB,CACD,IAAIC,EAAUvN,KAAKtJ,OAAO4V,cAAc,QAAUC,UAAW,mBACzD9N,EAAO4O,EAAU5N,KAAK+N,UAC1BH,EAAU5N,KAAK+N,UAAY,GAC3BD,EAAQC,UAAY/O,EACpB,IAAIgP,EAASzN,KAAKtJ,OAAO4V,cAAc,OAASC,UAAW,6BAC3DkB,EAAOC,YAAY9C,GACnB6C,EAAOC,YAAYH,GACnBF,EAAU5N,KAAKiO,YAAYD,QAZtBJ,EAAU5N,KAAKqL,cAAc,yBAC9BwC,EAAaT,aAAajC,EAAW0C,EAAa9E,iBAAiB,eAAe,KAc9FwB,EAAU/I,UAAU+J,iBAAmB,SAAU2C,GAE7C,IAAK,IAAItW,EAAI,EAAGA,EAAIsW,EAAWpW,OAAQF,IAAK,CACxC,IAAIqB,EAASsH,KAAKtJ,OAAOyF,wBAAwBwR,EAAWtW,IACxDuW,EAAa7U,EAAciH,KAAKtJ,OAAQgC,EAAOM,UAG/CkU,EAA0C,aAF9CxU,EAAUqE,cAAsD,kBAAxCiD,KAAKtJ,OAAOC,WAAsB,YACtD+B,EAASkV,GACeV,cAA+B,QAAU,UACrExU,EAAOwU,cAAgBA,EAEvB,IAAK,IADD5U,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB6T,EAAW/Q,eAAevE,EAAKyB,MAC/B6T,EAAWtV,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1CiG,KAAK6N,gBAAgBnV,EAAQwU,GAAe,GACxClN,KAAKtJ,OAAOyU,oBACZnL,KAAKqL,oBAIjBrB,EAAU/I,UAAU4M,gBAAkB,SAAUnV,EAAQwU,EAAeY,GACnE,IAAIvW,EAAS,EAKb,GAJAyI,KAAK+N,oBAAoBrV,EAAQwU,IAC5BY,GAAepV,EAAOI,YAAckH,KAAKtJ,OAAOyU,oBACjDnL,KAAKgO,sBAAsBtV,EAAOI,YAElCJ,EAAOY,cAAgB0G,KAAKtJ,OAAOyU,mBAAoB,CACvD,IAAI7R,EAAeZ,EAAOY,cACrB5B,oBAAkBsI,KAAKtJ,OAAOuX,eAC/BjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,OAAS,GAAKyI,KAAKtJ,OAAOyU,qBAClE7R,EAAe0G,KAAKmO,wBAAwB7U,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAI6W,EAAQ,EAAGA,EAAQ7W,EAAQ6W,IAC3B9U,EAAa8U,GAAOC,eACjB/U,EAAa8U,GAAO/U,gBACpB2G,KAAK6N,gBAAgBvU,EAAa8U,GAAQlB,GAAe,GAGzDlN,KAAK+N,oBAAoBzU,EAAa8U,GAAQlB,MAMlElD,EAAU/I,UAAUkN,wBAA0B,SAAU7U,GACpD,IAAI+N,EAAQrH,KAIZ,OAH2B1G,EAAamE,OAAO,SAAUC,GACrD,OAAO2J,EAAM3Q,OAAOuX,aAAaC,eAAe1P,QAAQd,IAAM,KAItEsM,EAAU/I,UAAU+M,sBAAwB,SAAUnV,GAClD,IACItB,EAAS,EACT+B,KACAZ,EAASK,EAAciH,KAAKtJ,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBsI,KAAKtJ,OAAOuX,eAC/BjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,OAAS,GAAKyI,KAAKtJ,OAAOyU,qBAClE7R,EAAe0G,KAAKmO,wBAAwB7U,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAI+W,EAAU,EACVC,EAAoB,EACxB,IAAK7W,oBAAkBgB,GAAS,CAkB5B,IAAK,IAjBDkE,EAAU,SAAUvF,GACpB,IAAImX,EAAcC,EAAO/X,OAAOyF,wBAAwBsB,OAAO,SAAUC,GACrE,OAAOA,EAAE1E,WAAaM,EAAajC,GAAG2B,WAEtC0V,EAAgB3V,EAAc0V,EAAO/X,OAAQ4C,EAAajC,GAAG2B,UAC7D2V,EAAkB5R,cAAwD,kBAA1C0R,EAAO/X,OAAOC,WAAsB,YACpE6X,EAAY,GAAKE,EAChBhX,oBAAkBiX,KACkB,kBAAjCA,EAAezB,cACfoB,IAEsC,UAAjCK,EAAezB,eACpBqB,MAIRE,EAASzO,KACJ3I,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCuF,EAAQvF,GAGRqB,EAAOwU,cADPoB,EAAU,GAAMC,EAAoB,GAAKA,IAAsBhX,EACxC,gBAEI,IAAtBgX,GAAuC,IAAZD,EACT,UAGA,QAE3BtO,KAAK+N,oBAAoBrV,EAAQA,EAAOwU,eACpCxU,EAAOI,YACPkH,KAAKgO,sBAAsBtV,EAAOI,cAI9CkR,EAAU/I,UAAUoK,gBAAkB,SAAUuD,GAC5C,IAAIvH,EAAQrH,KAGRzI,EAAS,EACTkH,GAAS/G,oBAAkBsI,KAAKtJ,OAAOuX,eACvCjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,OAAS,EAAKyI,KAAKtJ,OAAOuX,aAAaC,eAC/ElO,KAAKtJ,OAAO8G,SAGhB,GAFAiB,EAAQ1B,cAAsD,kBAAxCiD,KAAKtJ,OAAOC,WAAsB,aAA0BF,EAAauJ,KAAKtJ,QAChGsJ,KAAKtJ,OAAOyF,wBAA0BsC,GACrC/G,oBAAkBkX,GACnB,IAAK,IAAIvX,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7B,GAAIuX,EAAU,CACV,GAA8B,UAA1BnQ,EAAKpH,GAAG6V,cACR,SAEJzO,EAAKpH,GAAG6V,cAAgB,QACxBlN,KAAK+N,oBAAoBtP,EAAKpH,GAAIoH,EAAKpH,GAAG6V,oBAGlClN,KAAKiK,cAAczL,QAAQC,EAAKpH,KAC3B,IACToH,EAAKpH,GAAG6V,cAAgB,UACxBlN,KAAK+N,oBAAoBtP,EAAKpH,GAAIoH,EAAKpH,GAAG6V,eACtClN,KAAKtJ,OAAOyU,oBACZnL,KAAKgO,sBAAsBvP,EAAKpH,MAMnC,IAAbuX,GAAsB5O,KAAKtJ,OAAO0H,uBAClC4B,KAAKiK,iBACLjK,KAAKiI,mBACLxJ,EAAKhB,OAAO,SAAUoR,GAClBA,EAAI3B,cAAgB,UACpB7F,EAAM0G,oBAAoBc,EAAKA,EAAI3B,kBAG3C3V,EAASyI,KAAKiK,cAAc1S,OAC5B,IAAI4V,EAAWnN,KAAKtJ,OAAOwV,mBAAmB1D,iBAAiB,YAAY,GACvEjR,EAAS,GAAKkH,EAAKlH,OAAS,EACxBA,IAAWkH,EAAKlH,QAAWqX,GAK3BxB,eAAaD,IAAY,WACzBA,EAAS9E,UAAUsE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS9E,UAAUsE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5CnD,EAAU/I,UAAU8M,oBAAsB,SAAUW,EAAepD,EAAY7N,GAC3E,IAGIqR,EAIA3B,EAPAzU,EAASsH,KAAKtJ,OAAOyF,wBAAwBsB,OAAO,SAAUC,GAC9D,OAAOA,EAAE1E,WAAa0V,EAAc1V,WAIpC+V,EAAc/O,KAAKtJ,OAAOyF,wBAAwBqC,QAAQ9F,EAAO,IACjEsW,EAAiBjW,EAAciH,KAAKtJ,OAAQgY,EAAc1V,UAE9D,GAAI+V,GAAe,EAAG,CAClB,IAAIE,EAAKjP,KAAKtJ,OAAOmI,UAAUkQ,GAC3BG,OAAY,GACZlP,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,sBACtCiQ,EAAYlP,KAAKtJ,OAAOyY,qBAAqBJ,IAEjD5B,EAAW8B,EAAGzG,iBAAiB,YAAY,GAAKyG,EAAGzG,iBAAiB,YAAY,GAC1E0G,EAAU1G,iBAAiB,YAAY,GACxC9Q,oBAAkByV,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA2B,EAAiB/R,cAAsD,kBAAxCiD,KAAKtJ,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKsW,EACZtX,oBAAkBoX,KAClBA,EAAgBJ,GAEpBI,EAAc5B,cAAgB5B,EACX,UAAfA,GAA0B5T,oBAAkBgX,EAAcL,eACrC,IAAjBU,IAAqE,IAA/C/O,KAAKiI,gBAAgBzJ,QAAQuQ,IACnD/O,KAAKiI,gBAAgBzP,KAAKuW,IAEqB,IAA/C/O,KAAKiK,cAAczL,QAAQsQ,KAA2C,IAAjBC,IACnDrX,oBAAkBsI,KAAKtJ,OAAOuX,eAAiBjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,OAAS,GAClGyI,KAAKiK,cAAczR,KAAKsW,IAEuB,IAA/C9O,KAAKiK,cAAczL,QAAQsQ,IAA2BpX,oBAAkBsI,KAAKtJ,OAAOuX,eACjC,IAAnDjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,QACxCyI,KAAKiK,cAAczR,KAAKsW,IAEuB,IAA/C9O,KAAKiK,cAAczL,QAAQsQ,IAAyBpX,oBAAkBsI,KAAKtJ,OAAOuX,eAClFjO,KAAKiK,cAAczR,KAAKsW,QAG3B,IAAoB,YAAfxD,GAA2C,kBAAfA,IAAmC5T,oBAAkBgX,EAAcL,cAAe,CACpH,IAAInU,EAAQ8F,KAAKiK,cAAczL,QAAQsQ,GAIvC,IAHe,IAAX5U,GACA8F,KAAKiK,cAAc9M,OAAOjD,EAAO,IAEc,IAA/C8F,KAAKiI,gBAAgBzJ,QAAQuQ,GAAqB,CAClD,IAAIK,EAAepP,KAAKiI,gBAAgBzJ,QAAQuQ,GAChD/O,KAAKiI,gBAAgB9K,OAAOiS,EAAc,IAGlD,IAAIC,EAA+B,kBAAf/D,EAAiC,SAAW,KAAOA,EACnEyD,GAAe,IACVrX,oBAAkByV,IACnBA,EAAS9E,UAAUsE,IAAI0C,KAInCrF,EAAU/I,UAAUqJ,kBAAoB,SAAUtH,GAC9C,IAEI8G,EACAwF,EAHAjI,EAAQrH,KACRH,EAAcmD,EAAKnD,YAGvB,GAAIzI,EAAiB4I,KAAKtJ,SAClBsJ,KAAKtJ,OAAOyU,mBACZ,GAAqB,YAAhBtL,GAA6C,WAAhBA,EAA2B,CACzD,IAAIkI,EAAO/H,KAAKtJ,OAAOiB,KAAKkH,UAE5ByQ,GADAxF,EAAY9J,KAAKtJ,OAAOyF,yBACA5E,OACxByI,KAAKiI,mBACL,IAAK,IAAI5Q,EAAI,EAAGA,EAAIiY,EAAajY,IACxB0Q,EAAK1Q,GAAGgR,UAAUC,SAAS,iBAC5BtI,KAAK+N,oBAAoBjE,EAAUzS,GAAIyS,EAAUzS,GAAG6V,eAAe,QAI1E,GAAoB,WAAhBrN,GAA4C,QAAhBmD,EAAK1H,OAAkB,CACxD,IAAIiU,KACgB,WAAhB1P,EACA0P,EAAcvM,EAAKvE,KAGnB8Q,EAAY/W,KAAKwK,EAAKvE,MAE1B,IAASpH,EAAI,EAAGA,EAAIkY,EAAYhY,OAAQF,IAAK,CACzC,GAAoB,WAAhBwI,EAA0B,CAC1B,IAAI3F,EAAQ8F,KAAKtJ,OAAO8G,SAASgB,QAAQ+Q,EAAYlY,IACjD+X,EAAepP,KAAKiI,gBAAgBzJ,QAAQtE,GAChD8F,KAAKiI,gBAAgB9K,OAAOiS,EAAc,GAC1CpP,KAAK+N,oBAAoBwB,EAAYlY,GAAI,WAExCK,oBAAkB6X,EAAYlY,GAAGyB,aAClCkH,KAAKgO,sBAAsBuB,EAAYlY,GAAGyB,iBAIxB,QAArBkK,EAAKnD,aAAyBG,KAAKtJ,OAAOyU,mBAC/CnI,EAAKvE,KAAKyO,cAAgB,WAEL,cAAhBrN,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DpJ,EAAauJ,KAAKtJ,WACtBsJ,KAAKiK,iBACLjK,KAAKiI,oBACL6B,GAAcpS,oBAAkBsI,KAAKtJ,OAAOuX,eAAiBjO,KAAKtJ,OAAOuX,aAAaC,eAAe3W,OAAS,EAC1GyI,KAAKtJ,OAAOyF,wBAA0B6D,KAAKtJ,OAAO8G,UAC5CgS,QAAQ,SAAU9W,GACpBA,EAAOW,gBACPgO,EAAM2G,sBAAsBtV,GAG5B2O,EAAM0G,oBAAoBrV,EAAQA,EAAOwU,iBAGjDlN,KAAKqL,oBAKrBrB,EAAU/I,UAAUwO,kBAAoB,WACpC,OAAOzP,KAAKiK,eAEhBD,EAAU/I,UAAUyO,qBAAuB,WACvC,OAAO1P,KAAKiI,iBAET+B,KCrbP2F,GAAuB,WAIvB,SAASA,EAAMjZ,GACXsJ,KAAKtJ,OAASA,EACd+L,OAAKC,OAAOkN,SACZ5P,KAAKkK,mBAqCT,OA/BAyF,EAAM1O,UAAU4B,cAAgB,WAC5B,MAAO,SAKX8M,EAAM1O,UAAUiJ,iBAAmB,WAC/BlK,KAAKtJ,OAAOiB,KAAKwS,GAAG0F,EAAsB7P,KAAK8P,cAAe9P,OAElE2P,EAAM1O,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAOiB,KAAK+S,IAAImF,EAAsB7P,KAAK8P,gBAEpDH,EAAM1O,UAAU6O,cAAgB,SAAUC,GACtC,IAAIpY,EAAOY,YAAU,YAAawX,GAC9BC,EAAczX,YAAU,UAAWwX,GACvCpY,EAAKuS,iBAAiB+F,EAAsBjQ,KAAKtJ,OAAOiB,KAAK6M,eAC7D7M,EAAKuS,iBAAiBgG,EAAqBlQ,KAAKtJ,OAAOiB,KAAK4M,cAC5D5M,EAAKuS,iBAAiBiG,EAAwBnQ,KAAKtJ,OAAOiB,KAAK8M,iBAC/D2L,YAAUJ,GAAc,eAE5BL,EAAM1O,UAAUoP,MAAQ,WACpBrQ,KAAKtJ,OAAOiB,KAAK0Y,SAOrBV,EAAM1O,UAAU4I,QAAU,WACtB7J,KAAKwK,uBAEFmF,KCnDPlP,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5D6O,GAAgC,SAAUvO,GAE1C,SAASuO,IACL,OAAkB,OAAXvO,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,OAnBAS,GAAU6P,EAAgBvO,GAI1BZ,IACIc,cACDqO,EAAerP,UAAW,cAAU,GACvCE,IACIc,YAAS,IACVqO,EAAerP,UAAW,kBAAc,GAC3CE,IACIc,WAAS,aACVqO,EAAerP,UAAW,gBAAY,GACzCE,IACIc,cACDqO,EAAerP,UAAW,WAAO,GACpCE,IACIc,cACDqO,EAAerP,UAAW,qBAAiB,GACvCqP,GACTpO,iBC5CEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5D8O,GAAmC,SAAUxO,GAE7C,SAASwO,IACL,OAAkB,OAAXxO,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,OAzBAS,GAAU8P,EAAmBxO,GAI7BZ,IACIc,WAAS,QACVsO,EAAkBtP,UAAW,YAAQ,GACxCE,IACIc,WAAS,SACVsO,EAAkBtP,UAAW,yBAAqB,GACrDE,IACIc,WAAS,WACVsO,EAAkBtP,UAAW,YAAQ,GACxCE,IACIc,YAAS,IACVsO,EAAkBtP,UAAW,wBAAoB,GACpDE,IACIc,WAAS,YACVsO,EAAkBtP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVsO,EAAkBtP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVsO,EAAkBtP,UAAW,oBAAgB,GACzCsP,GACTrO,iBCzCEsO,GAAwB,WAIxB,SAASA,EAAO9Z,GACZsJ,KAAKtJ,OAASA,EACdsJ,KAAKyQ,eAAiB,KACtBzQ,KAAKtJ,OAAOiB,KAAKwS,GAAG,kBAAmBnK,KAAK0Q,qBAAsB1Q,MAClEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,sBAAuBnK,KAAK2Q,oBAAqB3Q,MAgPzE,OA3OAwQ,EAAOvP,UAAU2P,YAAc,SAAU5N,GACrC,GAAKA,EAAKvE,KAAV,CAGA,IAAIA,EAAOuE,EAAKvE,KACZlB,EAAakB,EAAK3F,WAEtB,GAAKpB,oBAAkB+G,EAAK3F,aAAgBrB,EAAuBuI,KAAKtJ,SACjEsJ,KAAKtJ,OAAOma,aAA2D,SAA1C7Q,KAAKtJ,OAAOoa,aAAaC,gBACpDta,EAAauJ,KAAKtJ,SAAY8C,EAAUwG,KAAKtJ,UAUzCsM,EAAKrE,IAAIwN,aAAa,qBAV8B,CACrD1N,EAAK3F,WAAWoB,OACP8F,KAAKtJ,OAAOuC,kBAAoBvB,oBAAkB6F,EAAWyC,KAAKtJ,OAAOwC,sBACtFqE,EAAWyC,KAAKtJ,OAAOwC,sBAAwB8G,KAAKtJ,OAAOsa,qBAC1DvY,EAAgBuH,KAAKtJ,OAAQsM,EAAKvE,KAAMuB,KAAKtJ,OAAOiB,KAAKwE,4BAE1D6G,EAAKrE,IAAInE,MAAMG,QAAU,QAMjC,GAAIlE,EAAauJ,KAAKtJ,UAAY8C,EAAUwG,KAAKtJ,QAAS,CACtD,IAAIua,EAAUjR,KAAKtJ,OACfwa,EAAYlR,KAAKtJ,OAAOyF,wBAAwBsB,OAAO,SAAUoR,GACjE,OAAOxQ,WAAS4S,EAAQ/T,UAAW2R,KAASxQ,WAAS4S,EAAQhU,gBAAiBwB,KAElF,GAAIyS,EAAU3Z,OAAS,EAAG,CACtB,IAAIoD,EAAUuW,EAAU,GAAG/X,SAAW,YAAc,OACpD6J,EAAKrE,IAAIsO,aAAa,QAAS,YAActS,EAAU,MAI9CpC,YAAU,eAAgByK,EAAKvE,OAE5C2R,YAAUpN,EAAKrE,KAAM,gBAErBqE,EAAKrE,IAAImM,cAAc,qBACvB9H,EAAKrE,IAAIsO,aAAa,gBAAiB,QAElCjK,EAAKrE,IAAImM,cAAc,wBAC5B9H,EAAKrE,IAAIsO,aAAa,gBAAiB,SAEvCjN,KAAKtJ,OAAOsa,mBAAqBhR,KAAKtJ,OAAOuC,gBACxCvB,oBAAkB+G,EAAK3F,cACxBkK,EAAKrE,IAAInE,MAAMG,QAAU,SAGjCqF,KAAKtJ,OAAOwS,QAAQgH,EAAqBlN,KAK7CwN,EAAOvP,UAAUzB,WAAa,SAAUwD,GACpC,GAAKA,EAAKvE,KAAV,CAGA,IAEIvE,EAIAiX,EANAxZ,EAAOqI,KAAKtJ,OAAOiB,KACnB8G,EAAOuE,EAAKvE,KAGZ2S,EADc1Z,oBAAkB+G,EAAK4S,aACjB5S,EAAKtE,MAAQsE,EAAK4S,YACtCC,EAAkB,EAElB3R,EAASK,KAAKtJ,OAAO6a,eAAevO,EAAKrD,OAAOqM,KAChDwF,EAAa/S,EAAK4P,aAClBoD,EAAgBzR,KAAKtJ,OAAOuI,mBAOhC,GAFI/E,EAJCxC,oBAAkB+G,EAAK3F,YAIhB2F,EAAKvE,MAHLuE,EAAK3F,WAAWoB,MAKxBvC,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,iBAAyC,QAArB4D,EAAKnD,aAC/E,mBADwGmD,EAAKnD,aACpE,WAArBmD,EAAKnD,cAA4BnI,oBAAkBsL,EAAKvD,KAAKqL,cAAc,gBAqD9F9K,KAAKyQ,iBACVzQ,KAAKyQ,eAAiB,UAtD+F,CAMrH,IAAK,IALDpD,EAAYf,gBAAc,OAASC,UAAW,2BAC9CoF,EAAkBrF,gBAAc,QAChCC,UAAW,iBACXqF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBjE,EAAUK,YAAYiE,EAAgB7E,aAE1C,IAAIgF,EAAgBpa,oBAAkB+G,EAAKsT,yBACNtT,EAAKpF,gBAApCoF,EAAKsT,wBAIX,GAHID,IAAiBpa,oBAAkB+G,EAAKnF,gBACxCwY,IAA8C,IAA7BrT,EAAKnF,aAAa/B,SAEnCua,EAAc,CACd1B,YAAUpN,EAAKvD,MAAO,iBACtB,IAAIuS,EAAa1F,gBAAc,QAAUC,UAAW,YAChD0F,OAAS,EAETA,EADAjS,KAAKtJ,OAAOuC,cACHwF,EAAKtF,WACTzB,oBAAkB+G,EAAKuB,KAAKtJ,OAAOwC,sBAAwBuF,EAAKuB,KAAKtJ,OAAOwC,uBAC5E8G,KAAKtJ,OAAOsa,qBAGLvS,EAAKtF,WAAaV,EAAgBuH,KAAKtJ,OAAQ+H,EAAMuB,KAAKtJ,OAAOiB,KAAKwE,0BAEtFiU,YAAU4B,GAAa,EAAW,mBAAqB,sBACvDV,GAAmB,GACnBjE,EAAUK,YAAYsE,GACtBL,EAAgBnX,MAAMoS,MAAQ,MAC9B0E,GAAmB,EACnBjE,EAAUK,YAAYiE,EAAgB7E,kBAEjCsE,IAAQA,IAAQ3S,EAAKtE,SAE1BmX,GAAmB,GACnBjE,EAAUK,YAAYiE,EAAgB7E,aACtCO,EAAUK,YAAYiE,EAAgB7E,cAM1CqE,EAAc7E,gBAAc,QAAUC,UAAW,eAC7CvM,KAAKtJ,OAAOwb,gBACZf,EAAY3W,MAAMoS,MAAQ,eAAiB0E,EAAkB,OAEjElB,YAAUpN,EAAKvD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAChE6F,KAAKmS,eAAenP,EAAMmO,EAAa9D,GACvCA,EAAUK,YAAYyD,GACtBnO,EAAKvD,KAAKiO,YAAYL,GAkB1B,GAbIoE,EAAgBzR,KAAKtJ,OAAO0I,iBAAmBqS,EAAgB,GAC/D9Z,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAASyF,EAC9CrB,YAAUpN,EAAKvD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAE3DsX,EAAgBzR,KAAKtJ,OAAO0I,iBAAmBqS,EAAgB,IACnE9Z,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAASyF,GACxC9Z,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAASyF,EAAgB,GACrErB,YAAUpN,EAAKvD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAE3DsX,IAAkBzR,KAAKtJ,OAAO0I,iBAAmBqS,EAAgB,GACtE9Z,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAAkB,GAC5EgR,YAAUpN,EAAKvD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,QAE/DzC,oBAAkBiI,IAAWA,EAAOnI,eACrCwI,KAAKtJ,OAAO0b,OAAO,iBAAkBpP,GACjChD,KAAKtJ,OAAOwb,eAAe,CAC3B,IAAIG,EAAkBrP,EAAKvD,KAAK+I,iBAAiB,YAAY,GAE7D8I,GADYgB,SAASD,EAAgB7X,MAAMoS,MAAO,IAElD0E,GAAmB,IAEfH,EADAxZ,EAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAC5C4D,EAAKvD,KAAKqL,cAAc,eAGxB9H,EAAKvD,KAAKqL,cAAc,oBAE9BtQ,MAAMoS,MAAQ,eAAiB0E,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUpN,EAAKvD,MAAO,iBACtB,IAAI8S,EAAcha,YAAUyK,EAAKrD,OAAO0E,MAAOrB,EAAKvE,MACV,MAA1CuE,EAAKvD,KAAKqL,cAAc,eACpB9H,EAAKvD,KAAKqL,cAAc,eAAe0C,UAAY+E,EAAcvP,EAAKvD,KAAK+N,UAAY+E,EAE3F7a,oBAAkBsI,KAAKtJ,OAAO8b,cAC9BxS,KAAKtJ,OAAOwS,QAAQ+G,EAAsBjN,KAGlDwN,EAAOvP,UAAUkR,eAAiB,SAAUnP,EAAMmO,EAAa9D,GAC3D,IAAIoF,EAAazS,KAAKtJ,OAAOY,QAAQ0I,KAAKtJ,OAAO0I,iBAC7CsT,EAAa,aACbC,EAAW3P,EAAKrD,OAAOzF,MACvBxC,oBAAkB+a,EAAWpO,QAC7BrB,EAAKvD,KAAKwN,aAAa,gBAAiB0F,EAAW,IAEnDF,EAAWpO,QAAUrB,EAAKrD,OAAO0E,OAAU3M,oBAAkB+a,EAAWG,WAAc7V,eACtFiG,EAAKrD,OAAOiT,SAAWH,EAAWG,SAClC5P,EAAKrD,OAAO+S,GAAcG,mBAAiB7P,EAAKrD,OAAOiT,UACvD5P,EAAKvD,KAAK4I,UAAUsE,IAAI,mBAE5B,IAAImG,EAAwD,MAA1C9P,EAAKvD,KAAKqL,cAAc,eACtC9H,EAAKvD,KAAKqL,cAAc,eAAe0C,UAAYxK,EAAKvD,KAAK+N,UACjE,GAAsC,iBAA1BxK,EAAKrD,OAAe,UAAkBK,KAAKyQ,eACnDsC,iBAAe5B,EAAanR,KAAKyQ,gBACjCzQ,KAAKyQ,eAAiB,KACtBzN,EAAKvD,KAAK+N,UAAY,QAErB,GAAIxK,EAAKvD,KAAK4I,UAAUC,SAAS,kBAAmB,CACrD,IAAIlQ,EAAM4K,EAAKvD,KAAKuT,SAASzb,OACzB0b,EAASjT,KAAKtJ,OAAOwc,QAAQC,GAAKnQ,EAAKrD,OAAOqM,IAClD,GAAIyG,EAAWpO,QAAUrB,EAAKrD,OAAO0E,OAAU3M,oBAAkB+a,EAAWG,WAAc7V,aAqBtF,KAAa,EAAO3E,EAAKA,EAAM4K,EAAKvD,KAAKuT,SAASzb,OAC9C4Z,EAAYzD,YAAY1K,EAAKvD,KAAKuT,SADzB,QArBqF,CAGlG,GAAIhT,KAAKtJ,OAAO0c,QACZpQ,EAAKrD,OAAO+S,GAAY1P,EAAKvE,KAAMuB,KAAKtJ,OAAQ,WAAYuc,EAAQ,KAAM,KAAM9B,GAC5EzZ,oBAAkBsI,KAAKtJ,OAAOiB,KAAY,WAC1CqI,KAAKtJ,OAAOiB,KAAY,QAAIqI,KAAKtJ,OAAc,SAEnDsJ,KAAKtJ,OAA2B,2BAE/B,CACD,IACI2c,OAAS,EACbA,EAASrQ,EAAKrD,OAAO+S,GAAYtW,UAASlC,MAAS,IAAM8I,EAAKvE,MAAOuB,KAAKtJ,OAAQ,WAAYuc,EAAQjT,KAAKtJ,OAAU,kBACrHqc,iBAAe5B,EAAakC,UAEzBrQ,EAAKrD,OAAOiT,gBACZ5P,EAAKrD,OAAO+S,GACnB1P,EAAKvD,KAAK+N,UAAY,SAS1B2D,EAAY3D,UAAYsF,EACxB9P,EAAKvD,KAAK+N,UAAY,IAG9BgD,EAAOvP,UAAUyP,qBAAuB,SAAU1N,GAC9ChD,KAAKyQ,eAAiBzN,EAAK4P,UAE/BpC,EAAOvP,UAAU0P,oBAAsB,SAAU3N,GAG7ChD,KAAKtJ,OAAc,QAAIsM,EACvBhD,KAAKtJ,OAAO0b,OAAO,sBAAuBpS,KAAKtJ,OAAc,SAC7DsJ,KAAKtJ,OAA2B,wBAEpC8Z,EAAOvP,UAAU4I,QAAU,WACvB7J,KAAKtJ,OAAOiB,KAAK+S,IAAI,kBAAmB1K,KAAK0Q,sBAC7C1Q,KAAKtJ,OAAOiB,KAAK+S,IAAI,sBAAuB1K,KAAK2Q,sBAE9CH,KCvPP8C,GAAkC,WAClC,SAASA,EAAiB3b,GACtBqI,KAAKuT,aAAe,eACpBvT,KAAKtJ,OAASiB,EACdqI,KAAKwT,eACLxT,KAAKyT,WACLzT,KAAK0T,iBACL1T,KAAK2T,aAAe,EACpB3T,KAAK4T,cACL5T,KAAK6T,cAAe,EACpB7T,KAAKkK,mBACLlK,KAAK8T,eACL9T,KAAKhF,iBAAmBtD,oBAAkBsI,KAAKtJ,OAAOuG,iBAsiB1D,OAjiBAqW,EAAiBrS,UAAUiJ,iBAAmB,WAC1ClK,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAK+T,uBAAwB/T,MACjEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,gBAAiBnK,KAAKgU,aAAchU,MACxDA,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKiU,WAAYjU,MAChDA,KAAKtJ,OAAOyT,GAAG+J,EAAqBlU,KAAKmU,qBAAsBnU,MAC/DA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAKoU,cAAepU,OAKxDsT,EAAiBrS,UAAUuJ,oBAAsB,WACzCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIwJ,EAAqBlU,KAAKmU,sBAC1CnU,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAK+T,wBAC1C/T,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKiU,YACrCjU,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAKoU,eACtCpU,KAAKtJ,OAAOiB,KAAK+S,IAAI,gBAAiB1K,KAAKgU,gBAO/CV,EAAiBrS,UAAU4I,QAAU,WACjC7J,KAAKwK,uBAGT8I,EAAiBrS,UAAUoT,SAAW,WAClC,OAAMrU,KAAKtJ,OAAOC,sBAAsBC,eAW5C0c,EAAiBrS,UAAUqT,kBAAoB,SAAU7V,GACrD,IAAI4I,EAAQrH,KACZA,KAAKtJ,OAAO8G,SAAyC,IAA7BnF,OAAOC,KAAKmG,GAAMlH,QAAkByI,KAAKtJ,OAAOC,sBAAsBC,iBAC1FoJ,KAAKtJ,OAAOC,WAChBqJ,KAAKtJ,OAAO6G,cAEZ,GAAK9G,EAAauJ,KAAKtJ,UAAY8C,EAAUwG,KAAKtJ,SAAY+H,aAAgB7H,iBAAiB6H,aAAgB/B,OAAQ,CACnH,IAAIjD,EAAKuG,KAAKtJ,OAAOC,WACrB,GAAIqJ,KAAKtJ,OAAOuG,gBAAiB,CAG7B,GAFA+C,KAAKtJ,OAAO6d,MAAQ7c,oBAAkBsI,KAAKtJ,OAAO6d,OAC9C,IAAIC,QAAUxU,KAAKtJ,OAAO6d,MAC1BvU,KAAKtJ,OAAOuG,gBAAiB,CAC7B,IAAIwX,EAAYzU,KAAKtJ,OAAO6d,MAAMG,OAAOjX,OAAO,SAAUkX,GAAS,MAAqB,cAAdA,EAAM9c,MAC5EmI,KAAKtJ,OAAOuC,gBAAkBwb,EAAUld,SACxCyI,KAAKtJ,OAAO6d,MAAMK,MAAM5U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAC9D+C,KAAKtJ,OAAO6d,MAAMM,UAAU,YAAa7U,KAAKtJ,OAAOwG,YAI7D,IAAK8C,KAAKtJ,OAAOoe,kBAA6D,kBAAxC9U,KAAKtJ,OAAOC,WAAsB,aAA0BqJ,KAAKtJ,OAAmB,gBAAI,CAC1H,IAAIqe,EAAM/U,KAAKtJ,OAAO6d,MAAMS,QAC5BD,EAAIE,YACJF,EAAMA,EAAIxL,QAAQvJ,KAAKtJ,OAAOuG,mBAC1B9F,iBAAkB,EACtBsC,EAAGyb,aAAaH,GAAKI,KAAK,SAAUzX,GAChC2J,EAAMmM,YAAc4B,WAASC,SAAS3X,EAAE2V,OAAQhM,EAAM3Q,OAAOuG,iBAAiB,GAIlE,IAHF1E,YAAU,sBAAuB8O,EAAM3Q,QAAQ+G,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE4X,YAAYC,aACtBhe,SAECie,WAAS,+BAA+B,EAAMnO,EAAM3Q,QAC/CgB,oBAAkB2P,EAAMoO,mBACzBD,WAAS,UAAU,EAAOnO,EAAMoO,iBAChCpX,WAAS,oBAAqBgJ,EAAM3Q,QAAQgf,mBAAmBrO,EAAMoO,iBACrEpO,EAAMoO,gBAAkB,MAE5BpO,EAAM3Q,OAAOiB,KAAKge,wBAM7BlX,aAAgB/B,OACrBsD,KAAK4V,gBAAgBnX,IAG7B6U,EAAiBrS,UAAU2U,gBAAkB,SAAUnX,GAGnD,GAFAuB,KAAK0T,iBACL1T,KAAKyT,WACAzT,KAAKtJ,OAAOwG,UAIb,IAAK,IAAI7F,EAAI,EAAGA,EAAIgB,OAAOC,KAAKmG,GAAMlH,OAAQF,IAAK,CAC/C,IAAIwe,EAAWpX,EAAKpH,GACpB2I,KAAK0T,cAAclb,KAAK4D,YAAWyZ,IAC9Bne,oBAAkBme,EAAS7V,KAAKtJ,OAAOwG,aACxC8C,KAAKyT,QAAQjb,KAAKqd,EAAS7V,KAAKtJ,OAAOwG,iBAP/C8C,KAAK0T,cAAgBjV,EAWzB,GAAIuB,KAAKhF,gBAAiB,CAIjB,IAHD8a,KACAC,EAAc,IAAInf,cAAYoJ,KAAK0T,eAAesC,cAAa,IAAIxB,SAClEyB,MAAMjW,KAAKtJ,OAAOuG,kBACvB,IAAS5F,EAAI,EAAGA,EAAI0e,EAAYxe,OAAQF,IAAK,CACzC,IAAI6e,EAAYH,EAAY1e,GACxB6C,EAAQ8F,KAAKyT,QAAQjV,QAAQ0X,EAAUre,KAC3C,IAAKH,oBAAkBwe,EAAUre,MACzBqC,GAAS,EADjB,CAEQ,IAAI4P,EAAaoM,EAAe,MAChClW,KAAK0T,cAAcxZ,GAAO8F,KAAKtJ,OAAO0G,cAAgB0M,OAI9DgM,EAAStd,KAAKwJ,MAAM8T,EAAUI,EAAUC,OAE5CnW,KAAK0T,cAAgB1T,KAAKoW,oBAAoBN,GAElD,GAAKzd,OAAOC,KAAK0H,KAAK0T,eAAenc,OAMjCyI,KAAKqW,cAAcrW,KAAK0T,mBANiB,CACzC,IACI4C,IAAkBtW,KAAKtJ,OAAOC,sBAAsBC,gBAAgBoJ,KAAKtJ,OAAc,QAC3FsJ,KAAKtJ,OAAO8G,SAAW8Y,EAAiBtW,KAAKtJ,OAAiB,cAKlEsJ,KAAK2T,aAAe,GAYxBL,EAAiBrS,UAAUmV,oBAAsB,SAAUN,GAEvD,IADA,IAAIzC,KACGrT,KAAK0T,cAAcnc,OAAS,GAAKue,EAASve,OAAS,GAAG,CACzD,IAAI2C,EAAQ4b,EAAStX,QAAQwB,KAAK0T,cAAc,KACjC,IAAXxZ,EACA8F,KAAK0T,cAAc6C,SAGnBlD,EAAO7a,KAAKwH,KAAK0T,cAAc6C,SAC/BT,EAAS3Y,OAAOjD,EAAO,IAG/B,OAAOmZ,GAMXC,EAAiBrS,UAAU8S,uBAAyB,SAAU/Q,GAC1D,IAAI9K,EAAU8K,EAAKqQ,OACfmD,EAAc,cACdC,EAAe,iBACnB,GAAKzW,KAAKtJ,OAAOoe,iBAAoB9U,KAAKwT,YAAYjc,QACP,kBAAxCyI,KAAKtJ,OAAOC,WAAW6f,KAAqCxW,KAAKtJ,OAAO+f,IAAmBzW,KAAKtJ,OAAOggB,kBAK1G,GAA8C,kBAAxC1W,KAAKtJ,OAAOC,WAAW6f,KAAqCxW,KAAKtJ,OAAO+f,IAAmBzW,KAAKtJ,OAAOggB,kBAgBpGhf,oBAAkBQ,IACnB8H,KAAKsU,kBAAkBpc,QAhB3B,IAAK,IAAI2W,EAAM,EAAGA,EAAM3W,EAAQX,OAAQsX,IAChCnX,oBAAkBQ,EAAQ2W,GAAK3U,SAC/BhC,EAAQ2W,GAAKzU,SAAWgC,YAAWlE,EAAQ2W,IAC3C3W,EAAQ2W,GAAK7V,SAAW2d,SAAO3W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACxDqC,WAAS,sBAAwBtd,EAAQ2W,GAAK7V,SAAUd,EAAQ2W,GAAM7O,KAAKtJ,QAC3EwB,EAAQ2W,GAAK1U,MAAQ,EACrBjC,EAAQ2W,GAAK3U,MAAQ0c,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/B5e,EAAQ2W,GAAK7O,KAAKtJ,OAAOoe,mBAAuF,IAAnE9U,KAAKwT,YAAYhV,QAAQtG,EAAQ2W,GAAK7O,KAAKtJ,OAAOwG,eAChGhF,EAAQ2W,GAAKxV,iBAAkB,GAEnCnB,EAAQ2W,GAAK3B,cAAgB,gBAfzClN,KAAKyV,gBAAkBzS,EACvBwS,WAAS,UAAU,EAAMxS,GAwB7BA,EAAKqQ,OAAkD,kBAAxCrT,KAAKtJ,OAAOC,WAAW6f,KAAqCxW,KAAKtJ,OAAO+f,KAAkB/e,oBAAkBQ,IACpH8H,KAAKtJ,OAAOggB,kBAAoB1W,KAAKtJ,OAAO8G,SAAWtF,EAC9D8H,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,IAMxCsQ,EAAiBrS,UAAUkT,qBAAuB,SAAU4C,EAAYC,GACpE,IAAIC,EAAWjX,KAAKtJ,OAAOmI,UAC3B,GAAImB,KAAKtJ,OAAO8b,YAAa,CACzB,IAAIzK,EAAO/H,KAAKtJ,OAAOwgB,kBAAkBnP,KACzCkP,KAAc1O,MAAM3F,KAAKmF,GAE7B,IAAIyG,EAGJ,GAAIuI,EAAWhP,KAAKxQ,OAAS,EAAG,CACvByf,IACDD,EAAWre,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAI0f,EAAWhP,KAAKxQ,OAAQF,IAAK,CAQ7C,GAPI0F,cAAciD,KAAKtJ,OAAOygB,kBAC1B/J,eAAa2J,EAAWhP,KAAK1Q,IAAK,sBAClC+Y,YAAU2G,EAAWhP,KAAK1Q,IAAK,sBAG/B0f,EAAWhP,KAAK1Q,GAAGmD,MAAMG,QAAU,YAElCoC,cAAuD,kBAAxCiD,KAAKtJ,OAAOC,WAAsB,cAA0BqJ,KAAKtJ,OAAmB,gBACjGsJ,KAAKtJ,OAAOggB,kBAAmB,CAClC,IAAIU,EAAYL,EAAWhP,KAAK1Q,GAAGggB,uBAAuB,sBAAsB,GAChF7I,EAAcxO,KAAKtJ,OAAO8b,YAAcxS,KAAKtJ,OAAOiB,KAAKwE,wBAAwB4a,EAAWhP,KAAK1Q,GAAGsS,UAChG3J,KAAKtJ,OAAOiB,KAAK2f,oBAAoBP,EAAWhP,KAAK1Q,GAAG8U,aAAa,aAAa1N,MACjF/G,oBAAkB0f,IAAc5I,EAAYrV,WAC7CiX,YAAUgH,GAAY,oBACtBhK,eAAagK,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASxZ,OAAO,SAAUgE,GAClC,OAAOA,EAAEqJ,cAAc,kBAAoB0D,EAAYtU,MAAQ,SAAWsU,EAAYrU,MAAQ,OAEpF5C,QAAUiX,EAAYrV,UAChC6G,KAAKmU,sBAAuBzb,OAAQ8V,EAAazG,KAAMwP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAWhP,KAAK1Q,GAAGyT,cAAc,wBAC9CpT,oBAAkB+f,IACnBzX,KAAKtJ,OAAOiB,KAAK+f,gBAAgBzF,OAAOwF,SAKhDzX,KAAK2X,sBAAuBjf,OAAQqe,EAAWre,OAAQqP,KAAMgP,EAAWhP,KAAMyP,UAAWT,EAAWS,aAG5GlE,EAAiBrS,UAAU0W,qBAAuB,SAAUZ,EAAYC,GACpE,IAAI3P,EAAQrH,KACRgD,GAASrE,IAAKoY,EAAWS,UAAW/Y,KAAMsY,EAAWre,QACrDe,EAAKuG,KAAKtJ,OAAOC,WACjBoe,EAAM/U,KAAKtJ,OAAOiB,KAAKigB,gBAAgBC,gBACvCC,EAAc/C,EAAIE,QAAQxX,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEqa,IAA4B,YAATra,EAAEqa,KAClFhD,EAAIE,QAAU6C,EACd/C,EAAI5d,iBAAkB,EACtB4d,EAAIH,MAAM5U,KAAKtJ,OAAOuG,gBAAiB,QAAS8Z,EAAWre,OAAOsH,KAAKtJ,OAAOwG,YAC9E8a,cAAYhY,KAAKtJ,OAAOwc,SACxBzZ,EAAGyb,aAAaH,GAAKI,KAAK,SAAUzX,GAChC,IAAIvF,EAAQkP,EAAM3Q,OAAOiB,KAAKqF,gBAC1Bib,EAAM9f,EAAMqG,QAAQuY,EAAWre,SACtB,IAATuf,GACA5Q,EAAM3Q,OAAOiB,KAAKugB,gBAAgB1I,QAAQ,SAAUzH,GAC5CA,EAAKtJ,KAAKzF,WAAa+d,EAAWre,OAAOM,WACzCif,EAAMlQ,EAAK7N,SAIvB,IAAIie,EAAY5f,YAAU,mBAAoBmF,GAC1C2V,EAAS3V,EAAE2V,OACf0D,EAAWre,OAAOY,aAAe+Z,EACjC,IAAK,IAAI5R,EAAI,EAAGA,EAAI4R,EAAO9b,OAAQkK,IAAK,CACpC4R,EAAO5R,GAAGrH,SAAWgC,YAAWiX,EAAO5R,IACvC4R,EAAO5R,GAAGtH,MAAQ4c,EAAWre,OAAOyB,MAAQ,EAC5CkZ,EAAO5R,GAAGvH,MAAQ0c,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAIvZ,EAAanB,YAAW2a,EAAWre,eAChC6E,EAAWjE,aAClB+Z,EAAO5R,GAAG3I,WAAayE,EACvB8V,EAAO5R,GAAGnD,eAAiByY,EAAWre,OAAOM,SAC7Cqa,EAAO5R,GAAGzI,SAAW2d,SAAOtP,EAAM3Q,OAAOwc,QAAQC,GAAK,UACtDE,EAAO5R,GAAGyL,cAAgB,UAC1BsI,WAAS,sBAAwBnC,EAAO5R,GAAGzI,SAAUqa,EAAO5R,GAAI4F,EAAM3Q,SAEjE2c,EAAO5R,GAAG4F,EAAM3Q,OAAOoe,mBAAsF,IAAlEzN,EAAMmM,YAAYhV,QAAQ6U,EAAO5R,GAAG4F,EAAM3Q,OAAOwG,aACxFib,IAAcA,EAAU1W,KAC7B4R,EAAO5R,GAAGpI,iBAAkB,EAC5Bga,EAAO5R,GAAGtI,UAAW,GAEzBhB,EAAMgF,OAAO8a,EAAMxW,EAAI,EAAG,EAAG4R,EAAO5R,IAMxC,GAJA+T,WAAS,SAAUrd,EAAOuF,GAC1B8X,WAAS,SAAU,sBAAuB9X,GAC1C2J,EAAM3Q,OAAOwS,QAAQkP,EAAuB1a,GAC5CiY,cAAYtO,EAAM3Q,OAAOwc,SACrB7L,EAAM3Q,OAAOiB,KAAK0gB,WAAW9gB,OAAS,IAAM8P,EAAM3Q,OAAO0H,qBAAsB,CAC/E,IAAIka,EAAY/f,YAAU,QAASmF,GAKnC,GAHIhG,oBAAkB4gB,KAClBA,EAAYja,WAAS,yBAA0BgJ,EAAM3Q,QAAQ6hB,eAAe,IAAI/D,WAE/E9c,oBAAkB4gB,GAAY,CAC/B,IAAIE,EAAeF,EAAUrD,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEV,KACpEra,EAAU,OAAI2J,EAAM3Q,OAAOgiB,cAAcC,sBAAsBH,EAAc9a,EAAU,QAAG,IAGlGA,EAAE0Q,MAAQ/G,EAAM3Q,OAAOiB,KAAKmZ,aAAa8H,kBACzC,IAAIC,KACAxR,EAAM3Q,OAAO0H,sBACbiJ,EAAMyR,oBAAoBD,GAE9Bxa,WAAS,oBAAqBgJ,EAAM3Q,QAAQgf,mBAAmBhY,EAAGmb,GAClExR,EAAM3Q,OAAOwS,QAAQ6P,EAAiB/V,MAG9CsQ,EAAiBrS,UAAU6X,oBAAsB,SAAUD,GACvDA,EAAYhZ,YAAc,UAC1B2V,WAAS,oBAAoB,EAAMqD,GACnC,IAAIG,EAAgB3a,WAAS,qBAAsB2B,KAAKtJ,QACpDuiB,EAAc5a,WAAS,cAAe2a,GACtCE,EAAW7a,WAAS,WAAY2a,GAChCC,EAAYE,UAAYnZ,KAAKtJ,OAAOiB,KAAKmZ,aAAasI,cAAgBH,EAAYI,SAASC,OAC3FtZ,KAAKtJ,OAAOiB,KAAKmZ,aAAasI,YAAcF,EAASI,OAG7DhG,EAAiBrS,UAAU+S,aAAe,WACtChU,KAAK6T,cAAe,GAExBP,EAAiBrS,UAAUoV,cAAgB,SAAU5X,EAAM8a,GAEvD,IAAK,IADDC,KACKniB,EAAI,EAAGe,EAAMC,OAAOC,KAAKmG,GAAMlH,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAIoiB,EAAcrd,YAAWqC,EAAKpH,IAClCoiB,EAAYrf,SAAWqE,EAAKpH,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBA6F,KAAK2T,cACA8F,EAAY5c,eAAe,WAC5B4c,EAAYvf,MAAQ8F,KAAK2T,eAExBjc,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAO0G,gBAC1Cqc,EAAYzZ,KAAKtJ,OAAOoe,kBAAoB3d,EAAgB6I,KAAKtJ,WAClE+iB,EAAYpgB,iBAAkB,EAC1B2G,KAAKtJ,OAAOsa,oBAAsBtZ,oBAAkBsI,KAAKtJ,OAAOmN,kBAC7DnM,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAO0G,eAC7Cqc,EAAYtgB,UAAW,EAGvBsgB,EAAYtgB,WAAYzB,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAOwC,sBAC5DugB,EAAYzZ,KAAKtJ,OAAOwC,qBAGjCugB,EAAY5c,eAAe,WAC5B4c,EAAYvf,OAAQuf,EAAYpgB,gBAAkB2G,KAAK2T,cAEvD3T,KAAKhF,iBAAmBtD,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAOuG,mBAClE+C,KAAKtJ,OAAO6G,WAAW/E,KAAKihB,GAEhCA,EAAYzgB,SAAW2d,SAAO3W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACvDqC,WAAS,sBAAwBiE,EAAYzgB,SAAUygB,EAAazZ,KAAKtJ,SACpEgB,oBAAkB6hB,GAAgB,CACnC,IAAIhc,EAAanB,YAAWmd,UACrBhc,EAAWjE,oBACXiE,EAAWyC,KAAKtJ,OAAO0G,cAC1B4C,KAAKhF,wBACEuC,EAAWnD,SAAS4F,KAAKtJ,OAAO0G,cAE3Cqc,EAAY3gB,WAAayE,EACzBkc,EAAYnb,eAAiBf,EAAWvE,SACxCmB,EAAQof,EAAcpf,MAAQ,EAYlC,GAVKsf,EAAY5c,eAAe,WAC5B4c,EAAYtf,MAAQA,GAExBsf,EAAYvM,cAAgB,WACxBxV,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAOuG,mBAAqBwc,EAAY3gB,aAC3EkH,KAAKtJ,OAAO8G,SAAShF,KAAKihB,GAEzBzZ,KAAKhF,iBAAyC,IAAtBye,EAAYtf,OACrC6F,KAAKtJ,OAAO6G,WAAW/E,KAAKihB,IAE3B/hB,oBAAkB+hB,EAAYzZ,KAAKtJ,OAAO0G,eAAiBqc,EAAYzZ,KAAKtJ,OAAO0G,cAAc7F,QAAS,CAC3G,IAAImB,EAASsH,KAAKqW,cAAcoD,EAAYzZ,KAAKtJ,OAAO0G,cAAeqc,GACvEA,EAAYngB,aAAeZ,EAE/B8gB,EAAahhB,KAAKihB,GAEtB,OAAOD,GAMXlG,EAAiBrS,UAAUmT,cAAgB,SAAUpR,GACjD,IAII0W,EAJAC,EAAWphB,YAAU,WAAYyK,GACjC4W,EAAarhB,YAAU,aAAcyK,GACrC6W,EAAathB,YAAU,aAAcyK,GACrC8W,EAAavhB,YAAU,aAAcyK,GAErC+W,EAAaxhB,YAAU,aAAcyK,GACrCnD,EAActH,YAAU,cAAeyK,GACvCgX,EAAazhB,YAAU,OAAQyK,GAC/B1H,EAAS/C,YAAU,SAAUyK,GAC7BiX,EAAgBF,EAChBG,EAAuBla,KAAKtJ,OAAO6E,0BAA0B,GAC7D4e,EAAY5hB,YAAU,OAAQ0hB,GAC5BviB,oBAAkBuiB,IAAqBviB,oBAAkBuiB,EAAc3e,SAAsC,QAAzB2e,EAAc3e,QAC/F5D,oBAAkBuiB,EAAcxb,QAAU/G,oBAAkBuiB,EAAcxb,KAAKyb,MACpFD,EAAcxb,KAAKyb,GAAwBlX,EAAKqQ,OAAO4G,EAAc/f,OAAOggB,GAC5EC,EAAU/f,SAAS8f,GAAwBlX,EAAKqQ,OAAO4G,EAAc/f,OAAOggB,MAE1ExiB,oBAAkBqiB,IAAe1hB,OAAOC,KAAKyhB,GAAYxiB,QAA2B,SAAhBsI,KACtEA,EAAcA,GAA4Bka,EAAWla,YACrDma,EAAaA,GAA0BzhB,YAAU,OAAQwhB,GACzDze,EAASA,GAAkB/C,YAAU,SAAUwhB,GACT,UAAlC/Z,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAK3E,aAAe2E,KAAKtJ,OAAOiB,KAAKoE,WAAWC,mBAEhDgE,KAAKtJ,OAAO0jB,aACZpa,KAAKqa,aAAaL,EAAY1e,EAAQuE,IAU9C,IAAIya,GANAZ,EADAC,IAAajiB,oBAAkBkiB,GACrBA,EAGAziB,EAAgB6I,KAAKtJ,QAAU2H,WAAS,SAAU2B,KAAKtJ,OAAOiB,KAAKhB,YACvEqJ,KAAKtJ,OAAOiB,KAAKhB,sBAEMC,cAAc8iB,EAAQ/iB,WAAW8E,KAAOie,EACrEtL,EAAQjX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YACnE2jB,EAAQ/iB,OACd,GAAKyI,KAAKtJ,OAAOiB,KAAKI,gBAAkBiI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,IAAIwd,EAAM,IAAIP,QACV8D,EAAY/f,YAAU,QAASyK,GAC/BtL,oBAAkB4gB,KAClBA,EAAY,IAAI9D,QAChB8D,EAAYja,WAAS,yBAA0B2B,KAAKtJ,QAAQ6jB,YAAYjC,GACxEA,EAAYja,WAAS,yBAA0B2B,KAAKtJ,QAAQ8jB,YAAYlC,IAE5E,IAAImC,EAAYnC,EAAUrD,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,YAATA,EAAEV,KAC7D2C,EAAYpC,EAAUrD,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,aAATA,EAAEV,KACjEhD,EAAIE,QAAUwF,EAAUlhB,OAAOmhB,GAC/B,IAAIC,EAAe,IAAI/jB,cAAY0jB,GAAStE,aAAajB,GAIzD,GAHA/U,KAAKtJ,OAAO0b,OAAO,oBAAsB3T,KAAMkc,IAC/CL,EAAUta,KAAK8T,YAAYT,OAC3BrT,KAAK8T,YAAYT,OAAS,KACtBrT,KAAKtJ,OAAOiB,KAAK0gB,WAAW9gB,OAAS,EAAG,CACxC,IAAIgd,EAAQhc,YAAU,QAASyK,GAI/B,GAHItL,oBAAkB4gB,KAClBA,EAAYja,WAAS,yBAA0B2B,KAAKtJ,QAAQ6hB,eAAe,IAAI/D,WAE9E9c,oBAAkB6c,GAAQ,CAC3B,IAAIiE,EAAejE,EAAMU,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEV,KAChEuC,EAAUta,KAAKtJ,OAAOgiB,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAIta,KAAKtJ,OAAOiB,KAAK0gB,WAAW9gB,QAA2D,IAAjDyI,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,QACtB,IAAnDyI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiByI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpG+gB,EAAY/f,YAAU,QAASyK,GAC/BtL,oBAAkB4gB,KAClBA,EAAYja,WAAS,yBAA0B2B,KAAKtJ,QAAQ6hB,eAAe,IAAI/D,UAE/EgE,EAAeF,EAAUrD,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEV,KACpEuC,EAAUta,KAAKtJ,OAAOgiB,cAAcC,sBAAsBH,EAAcxY,KAAKtJ,OAAO8G,UAAU,GAElG,GAAIwC,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,OAAS,GAAKyI,KAAK6T,aAAc,CACvE7T,KAAK6T,cAAe,EACpB,IAAItW,OAAa,EACjBA,EAEayC,KAAKtJ,OAAO6G,WAErBgX,EAAQhc,YAAU,QAASyK,GAE/B,IAAK,IADD4X,EAAS,IAAIpG,QACRqG,EAAM7a,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,OAAS,EAAGsjB,GAAO,EAAGA,IAAO,CAC9E,IAAI9O,EAAM/L,KAAKtJ,OAAOiB,KAAKmjB,iBAAiB9a,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKxW,OACnF0W,EAAUhP,EAAIiP,cAAgBxhB,EAAUwG,KAAKtJ,QAC7CqV,EAAIiP,aAAaC,KAAKlP,GACtB/L,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKK,UAC/CN,EAAOO,OAAOnb,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKxW,MAAO0W,GAEpE,IAEIK,GAAa1f,aAFE,IAAI9E,cAAY2G,GAAYyY,aAAa4E,GAEfD,aAAcL,EAASM,OAAQA,GAM5E,GALA5a,KAAKtJ,OAAO0b,OAAO,aAAcgJ,GACjCd,EAAUc,EAAS1f,aACnBsE,KAAK8T,YAAYT,OAAS,KAC1BrT,KAAK4T,WAAa0G,EAClBta,KAAKtJ,OAAO0b,OAAO,kBACfpS,KAAKtJ,OAAOiB,KAAK0gB,WAAW9gB,OAAS,IAAMG,oBAAkB6c,GAAQ,CAGjEiE,EADUjgB,YAAU,QAASyK,GACNiS,QAAQxX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEV,KAClEuC,EAAUta,KAAKtJ,OAAOgiB,cAAcC,sBAAsBH,EAAcxY,KAAK4T,YAHhE,IAMrBxF,EAAQjX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YAC/D2jB,EAAQ/iB,OACd,IAAI8jB,EAAOrb,KAAKsb,OAAOhB,EAASlM,EAAOuL,EAAUG,EAAYD,EAAY7W,GACzEsX,EAAUe,EAAKhI,OACfjF,EAAQiN,EAAKjN,MACbpL,EAAKqQ,OAASiH,EACdtX,EAAKoL,MAAQA,EACbpO,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,IAExCsQ,EAAiBrS,UAAUqa,OAAS,SAAUhB,EAASlM,EAAOuL,EAAUG,EAAYD,EAAY7W,IACxFhD,KAAKtJ,OAAOma,aAAiB8I,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B9Z,KAAKtJ,OAAO6kB,WAM1Bvb,KAAKtJ,OAAO0H,sBAA0Bub,GAA2B,gBAAfE,GAClB,SAAlCxb,WAAS,cAAe2E,KAC3BhD,KAAKtJ,OAAO0b,OAAOoJ,GAAwBnI,OAAQiH,EAASlM,MAAOA,EAAO2L,WAAY1b,WAAS,aAAc2E,KAC7GsX,EAAUta,KAAK8T,YAAYT,OAC3BjF,EAAQpO,KAAK8T,YAAY1F,QATzBpO,KAAKtJ,OAAO0b,OAAOoJ,GAAwBnI,OAAQiH,EAASlM,MAAOA,IACnEkM,EAAUta,KAAK8T,YAAYT,OAC3BjF,EAAQjX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YAC/DqJ,KAAK8T,YAAY1F,OAS3B,KAAoB,IAAf0L,GAAuB9W,EAAgB,cAAgC,aAA1BhD,KAAKtJ,OAAO6kB,UAA0B,CAEpF,IAAK,IADDE,KACKpkB,EAAI,EAAGA,EAAIijB,EAAQ/iB,OAAQF,IAAK,CAClBoB,EAAgBuH,KAAKtJ,OAAQ4jB,EAAQjjB,GAAI2I,KAAKtJ,OAAO6G,aAEpEke,EAAcjjB,KAAK8hB,EAAQjjB,IAInC+W,GADAkM,EAAUmB,GACMlkB,OAGpB,OADc8b,OAAQiH,EAASlM,MAAOA,IAM1CkF,EAAiBrS,UAAUgT,WAAa,SAAUyH,GAC9C1b,KAAK8T,YAAc4H,GAEvBpI,EAAiBrS,UAAUoZ,aAAe,SAAUL,EAAY1e,EAAQuE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKtJ,OAAO0b,OAAOuJ,IAAqB1hB,MAAO+f,EAAY1e,OAAQA,GAAUuE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKtJ,OAAOmF,aAAaC,MACxDkE,KAAKtJ,OAAO0b,OAAOwJ,QAGpBtI,MCvjBX,SAAWuI,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC3CxB,IAAIrb,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5Dsa,GAA8B,SAAUha,GAExC,SAASga,IACL,OAAkB,OAAXha,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,GAAUsb,EAAcha,GAIxBZ,IACIc,WAAS,KACV8Z,EAAa9a,UAAW,gBAAY,GACvCE,IACIc,WAAS,IACV8Z,EAAa9a,UAAW,iBAAa,GACxCE,IACIc,WAAS,IACV8Z,EAAa9a,UAAW,mBAAe,GAC1CE,IACIc,cACD8Z,EAAa9a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV8Z,EAAa9a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV8Z,EAAa9a,UAAW,iBAAa,GACxCE,IACIc,WAAS,OACV8Z,EAAa9a,UAAW,gBAAY,GACvCE,IACIc,WAAS,QACV8Z,EAAa9a,UAAW,oBAAgB,GACpC8a,GACT7Z,iBCrDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAQ5Dua,GAAiC,SAAUja,GAE3C,SAASia,IACL,IAAI3U,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAGhE,OAFAqH,EAAM4U,KAAO,IAAIC,uBACjB7U,EAAMqL,cACCrL,EAmEX,OAxEA5G,GAAUub,EAAiBja,GAU3Bia,EAAgB/a,UAAUkb,aAAe,SAAUC,GAC3Cpc,KAAKqc,SAAWrc,KAAKqc,OAAOC,UAAYtc,KAAKqc,OAAOA,UACpDrc,KAAKuc,SAAWvc,KAAKwc,kBAAkBxc,KAAKqc,UAMpDL,EAAgB/a,UAAUub,kBAAoB,SAAUH,GACpD,OAAIA,EAAOpZ,KACAjD,KAAKic,KAAKQ,cAAcJ,GAGxBrc,KAAKic,KAAKS,gBAAgBL,IAMzCL,EAAgB/a,UAAU0b,aAAe,WACrC,OAAO3c,KAAKuc,UAKhBP,EAAgB/a,UAAU2b,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxB9c,KAAK+c,iBACL/c,KAAK0S,WAAWsK,eAAaC,WAAUA,WAASC,WAAcnF,GAAIoF,UAAQnd,KAAK+c,eAAgBF,GAC3FO,SAAU,oBAMtBpB,EAAgB/a,UAAUoc,YAAc,SAAUpa,GAC9C,OAAOjD,KAAK0S,WAAWsK,eAAaC,WAAUha,KAKlD+Y,EAAgB/a,UAAUqc,oBAAsB,SAAUC,GACtDvd,KAAKwd,cAAcD,GAAM,IAE7Bpc,IACIc,cACD+Z,EAAgB/a,UAAW,YAAQ,GACtCE,IACIc,cACD+Z,EAAgB/a,UAAW,sBAAkB,GAChDE,IACIc,cACD+Z,EAAgB/a,UAAW,aAAS,GACvCE,IACIc,cACD+Z,EAAgB/a,UAAW,cAAU,GACxCE,IACIc,cACD+Z,EAAgB/a,UAAW,kBAAc,GAC5CE,IACIc,cACD+Z,EAAgB/a,UAAW,uBAAmB,GAC1C+a,GACT9Z,iBAEEub,GAA8B,SAAU1b,GAExC,SAAS0b,IACL,OAAkB,OAAX1b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUgd,EAAc1b,GAIxBZ,IACIiB,gBAAe4Z,KAChByB,EAAaxc,UAAW,eAAW,GACtCE,IACIc,YAAS,IACVwb,EAAaxc,UAAW,wBAAoB,GACxCwc,GACTvb,iBCjHEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5Dic,GAA8B,SAAU3b,GAExC,SAAS2b,IACL,OAAkB,OAAX3b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,OAlCAS,GAAUid,EAAc3b,GAIxBZ,IACIc,YAAS,IACVyb,EAAazc,UAAW,mBAAe,GAC1CE,IACIc,YAAS,IACVyb,EAAazc,UAAW,oBAAgB,GAC3CE,IACIc,YAAS,IACVyb,EAAazc,UAAW,qBAAiB,GAC5CE,IACIc,WAAS,SACVyb,EAAazc,UAAW,YAAQ,GACnCE,IACIc,WAAS,QACVyb,EAAazc,UAAW,sBAAkB,GAC7CE,IACIc,YAAS,IACVyb,EAAazc,UAAW,2BAAuB,GAClDE,IACIc,YAAS,IACVyb,EAAazc,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACVyb,EAAazc,UAAW,+BAA2B,GACtDE,IACIc,WAAS,KACVyb,EAAazc,UAAW,gBAAY,GACvCE,IACIc,gBACDyb,EAAazc,UAAW,cAAU,GAC9Byc,GACTxb,iBC3DEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5Dkc,GAAgC,SAAU5b,GAE1C,SAAS4b,IACL,OAAkB,OAAX5b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUkd,EAAgB5b,GAI1BZ,IACIc,cACD0b,EAAe1c,UAAW,aAAS,GACtCE,IACIc,cACD0b,EAAe1c,UAAW,iBAAa,GACnC0c,GACTzb,iBAKE0b,GAA8B,SAAU7b,GAExC,SAAS6b,IACL,OAAkB,OAAX7b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUmd,EAAc7b,GAIxBZ,IACIiB,gBAAeub,KAChBC,EAAa3c,UAAW,eAAW,GACtCE,IACIc,YAAS,IACV2b,EAAa3c,UAAW,mBAAe,GACnC2c,GACT1b,iBCpDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GA0C5Doc,GAA0B,SAAU9b,GAEpC,SAAS8b,EAAS9d,EAASmT,GACvB,IAAI7L,EAAQtF,EAAOa,KAAK5C,KAAMD,EAASmT,IAAYlT,KACnDqH,EAAMyM,eACNzM,EAAMyW,sBACNzW,EAAM0W,4BACN1W,EAAM2W,eAAiB,iBACvB3W,EAAM4W,eAAiB,iBACvB5W,EAAMkM,aAAe,eACrB2K,EAAWxb,OAAOyb,IAClB3I,WAAS,mBAAoBnO,EAAM+W,yBAA0B/W,GAM7D,OAJK3P,oBAAkB2P,EAAMgX,gBAAsB,SAC/C5b,OAAKC,OAAOF,UAEhB6E,EAAM1P,KAAO,IAAI8K,OACV4E,EAhBX5G,GAAUod,EAAU9b,GAkBpBmc,EAAaL,EAUbA,EAAS5c,UAAUqd,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,OAAI3hB,cACAiD,KAAK2e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ1e,KAAK2e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS5c,UAAU4d,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,OAAI3hB,cACAiD,KAAK2e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ1e,KAAK2e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS5c,UAAU6d,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,OAAI3hB,cACAiD,KAAKif,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJ1e,KAAKif,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFb,EAAS5c,UAAU4B,cAAgB,WAC/B,MAAO,YAMXgb,EAAS5c,UAAUie,UAAY,WAC3Blf,KAAKmf,iBACLnf,KAAKof,iBACLpf,KAAKqf,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB5f,KAAK6f,KAAO,IAAIC,OAAK,WAAY9f,KAAKqf,cAAerf,KAAK+f,QACtD/f,KAAKhF,iBAAmBtD,oBAAkBsI,KAAK5C,gBAC/C4C,KAAK5C,aAAe,aAU5BygB,EAAS5c,UAAU+e,aAAe,SAAU7kB,EAAY+f,EAAW+E,GAC/DjgB,KAAKkgB,WAAWC,WAAWhlB,EAAY+f,EAAW+E,IAMtDpC,EAAS5c,UAAUmf,aAAe,WAC1BpgB,KAAKkgB,YACLlgB,KAAKkgB,WAAWE,gBASxBvC,EAAS5c,UAAUof,iBAAmB,SAAUhc,GAC5CrE,KAAKkgB,WAAWG,iBAAiBhc,IASrCwZ,EAAS5c,UAAUqf,OAAS,SAAUC,GAClCvgB,KAAKrI,KAAK2oB,OAAOC,IAYrB1C,EAAS5c,UAAUuf,eAAiB,SAAUC,GAC1CzgB,KAAK0gB,aAAaF,eAAeC,GACjCzgB,KAAK2gB,qBAQT9C,EAAS5c,UAAU2f,eAAiB,SAAUC,EAAWC,GACrD9gB,KAAKrI,KAAKipB,eAAeC,EAAWC,IAExCjD,EAAS5c,UAAUke,eAAiB,WAEhC,IACI4B,EADAhB,EAASD,OAAKC,OAElBgB,KACAvL,WAASxV,KAAK+f,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAazoB,YAAUyH,KAAK+f,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiB1oB,YAAUyH,KAAK6C,gBAAiBme,GACjDxL,WAAS,OAAQyL,EAAgB1oB,YAAUyH,KAAK+f,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdlD,EAAS5c,UAAUoP,MAAQ,WACvBrQ,KAAKmhB,YAAY9Q,SAErBwN,EAAS5c,UAAUmgB,yBAA2B,SAAU1jB,GACpD,GAAIsC,KAAKqhB,cACL,OAAQ3jB,EAAEpC,QACN,IAAK,gBACD0E,KAAKshB,YACL,MACJ,IAAK,cACDthB,KAAKuhB,cACL,MACJ,IAAK,mBACD,IAEIC,EAFiB9jB,EAAE2D,OACa0J,QAAQ,cACXA,QAAQ,MACrC0W,EAAcD,EAAY1W,cAAc,qBACxB,OAAhB2W,QAAwC3E,IAAhB2E,GACxBzhB,KAAK0hB,sBAAsBF,EAAY1W,cAAc,sBAEzD,MACJ,IAAK,qBACD,IAEI6W,EAFejkB,EAAE2D,OACW0J,QAAQ,cACXA,QAAQ,MACjC6W,EAAYD,EAAU7W,cAAc,uBACtB,OAAd8W,QAAoC9E,IAAd8E,GACtB5hB,KAAK0hB,sBAAsBC,EAAU7W,cAAc,wBAEvD,MACJ,IAAK,YACD,IAAIzJ,EAAS3D,EAAE2D,OAAOwgB,cAClBC,EAAiB9hB,KAAK+hB,mBAAmB1gB,GAC7C,GAAuB,OAAnBygB,EAAyB,CACzB,IAAInY,EAAWmY,EAAenY,SAC9B3J,KAAKgiB,UAAUrY,GACf,IAAIsY,EAAYvkB,EAAE2D,OAAO4gB,UACrBtjB,EAAMmjB,EAAe9O,SAASiP,GAClC7R,YAAUzR,GAAM,aAChByR,YAAUzR,GAAM,gBAGhBqB,KAAKkiB,iBAET,MACJ,IAAK,UACD,IAAIC,EAAYzkB,EAAE2D,OAAOwgB,cACrBO,EAAoBpiB,KAAKqiB,uBAAuBF,GACpD,GAA0B,OAAtBC,EAA4B,CAC5B,IAAIE,EAASF,EAAkBzY,SAC/B3J,KAAKgiB,UAAUM,GACf,IAAIC,EAAS7kB,EAAE2D,OAAO4gB,UAClBla,EAAOqa,EAAkBpP,SAASuP,GACtCnS,YAAUrI,GAAO,aACjBqI,YAAUrI,GAAO,gBAGjB/H,KAAKkiB,mBAMzBrE,EAAS5c,UAAU8gB,mBAAqB,SAAUK,GAC9C,IAAI7W,EAAa6W,EAAkBlX,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAU/N,QAAQ,iBACxB,SAA7B+M,EAAW/Q,MAAMG,UACjB4Q,EAAavL,KAAK+hB,mBAAmBxW,IAElCA,GAGXsS,EAAS5c,UAAUohB,uBAAyB,SAAUD,GAClD,IAAI7W,EAAa6W,EAAkBI,uBAKnC,OAJmB,OAAfjX,IAA0E,IAAlDA,EAAWgB,UAAU/N,QAAQ,iBACxB,SAA7B+M,EAAW/Q,MAAMG,UACjB4Q,EAAavL,KAAKqiB,uBAAuB9W,IAEtCA,GAEXsS,EAAS5c,UAAUme,eAAiB,WAChCpf,KAAKqf,iBACLrf,KAAKxC,YACLwC,KAAKzC,cACLyC,KAAKyiB,eACLziB,KAAK0iB,aAAc,EACnB1iB,KAAK2iB,eAAgB,EACrB3iB,KAAK4iB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbljB,KAAKoa,cAAiBpa,KAAKrJ,sBAAsBC,gBAAgBoJ,KAAKrJ,WAAWA,WAAWwsB,UACnFzrB,oBAAkBsI,KAAKrJ,WAAW+C,QAAWsG,KAAKrJ,WAAWE,mBAAmBusB,oBACzFpjB,KAAKhF,iBAAmBtD,oBAAkBsI,KAAK/C,kBAMnD4gB,EAAS5c,UAAUoiB,WAAa,WAC5BC,eAAa3W,IAAI3M,KAAKrI,KAAKub,QAAS,QAASlT,KAAKujB,kBAAmBvjB,MACrEsjB,eAAa3W,IAAI3M,KAAKkT,QAAS,WAAYlT,KAAKujB,kBAAmBvjB,MACnEA,KAAKwjB,eAAiB,IAAIC,iBAAezjB,KAAKkT,SAC1CwQ,UAAW1jB,KAAKohB,yBAAyBnG,KAAKjb,MAC9C4iB,WAAY5iB,KAAK4iB,WACjBe,UAAW,YAEX3jB,KAAKqhB,gBACLrhB,KAAKkT,QAAQ0Q,UAAsC,IAA3B5jB,KAAKkT,QAAQ0Q,SAAkB,EAAI5jB,KAAKkT,QAAQ0Q,WAQhF/F,EAAS5c,UAAU4iB,gBAAkB,WACjC,IAAIC,KACJ,OAAI9jB,KAAKyK,YACEqZ,GAEXA,EAAQtrB,MACJurB,OAAQ,SAAU/gB,MAAOhD,KAAMA,KAAKhI,kBAEnCN,oBAAkBsI,KAAKgkB,UACxBF,EAAQtrB,MACJurB,OAAQ,UACR/gB,MAAOhD,QAGXA,KAAKikB,kBACLH,EAAQtrB,MACJurB,OAAQ,cACR/gB,MAAOhD,QAGXA,KAAK6Q,aACLiT,EAAQtrB,MACJurB,OAAQ,QACR/gB,MAAOhD,KAAMA,KAAK8Q,gBAGtB9Q,KAAKI,iBACL0jB,EAAQtrB,MACJurB,OAAQ,UACR/gB,MAAOhD,QAGXA,KAAKM,cACLwjB,EAAQtrB,MACJurB,OAAQ,OACR/gB,MAAOhD,QAGXA,KAAKqY,WAAW9gB,OAAS,GACzBusB,EAAQtrB,MACJurB,OAAQ,UAAW/gB,MAAOhD,QAGlC8jB,EAAQtrB,MACJurB,OAAQ,SAAU/gB,MAAOhD,QAEzBA,KAAKkkB,kBACLJ,EAAQtrB,MACJurB,OAAQ,cAAe/gB,MAAOhD,SAGlCA,KAAKyR,eAAiBzR,KAAKhB,YAAcgB,KAAKf,qBAC9C6kB,EAAQtrB,MACJurB,OAAQ,SAAU/gB,MAAOhD,QAG7BA,KAAKmkB,gBACLL,EAAQtrB,MACJurB,OAAQ,YAAa/gB,MAAOhD,QAGhCA,KAAKokB,gBACLN,EAAQtrB,MACJurB,OAAQ,YAAa/gB,MAAOhD,QAGhCA,KAAKK,gBACLyjB,EAAQtrB,MACJurB,OAAQ,aAAc/gB,MAAOhD,QAGjCA,KAAKqkB,mBACLP,EAAQtrB,MACJurB,OAAQ,gBAAiB/gB,MAAOhD,QAGxCA,KAAKskB,sBAAsBR,GACpBA,IAEXjG,EAAS5c,UAAUqjB,sBAAwB,SAAUR,GAC7C9jB,KAAKX,qBACLykB,EAAQtrB,MACJurB,OAAQ,iBACR/gB,MAAOhD,SAGXA,KAAKnE,aAAa0oB,aAAevkB,KAAKnE,aAAa2oB,eAAiBxkB,KAAKnE,aAAaoE,eACtF6jB,EAAQtrB,MACJurB,OAAQ,OACR/gB,MAAOhD,QAGXA,KAAKykB,gBAAgBzkB,KAAK1I,UAC1BwsB,EAAQtrB,MACJurB,OAAQ,gBACR/gB,MAAOhD,QAGXA,KAAK0kB,gBACLZ,EAAQtrB,MACJurB,OAAQ,YACR/gB,MAAOhD,QAGXA,KAAK5B,sBACL0lB,EAAQtrB,MACJurB,OAAQ,gBACR/gB,MAAOhD,QAGf8jB,EAAQtrB,MACJurB,OAAQ,SACR/gB,MAAOhD,KAAKrI,SAGpBkmB,EAAS5c,UAAUwjB,gBAAkB,SAAUntB,GAC3C,IAAI+P,EAAQrH,KACZ,OAAO1I,EAAQqtB,KAAK,SAAU5Y,GAC1B,OAAIA,EAAIzU,QACG+P,EAAMod,gBAAgB1Y,EAAIzU,YAE3ByU,EAAI6Y,WAAY7Y,EAAI8Y,qBAOtChH,EAAS5c,UAAU6jB,aAAe,WAC1B9kB,KAAKrI,MAAQqI,KAAKrI,KAAKub,SACvBoQ,eAAayB,OAAO/kB,KAAKrI,KAAKub,QAAS,QAASlT,KAAKujB,oBAO7D1F,EAAS5c,UAAU6B,IAAM,SAAUC,EAAOC,GACtChD,KAAKglB,cAAehlB,KAAKglB,aAAahhB,QAAQjB,EAAOC,EAAMhD,OAM/D6d,EAAS5c,UAAUgkB,OAAS,WACxB,IAAI5d,EAAQrH,KACRA,KAAKoT,UACLpT,KAAKrI,KAAKyb,SAAU,GAExB8R,iBAAgB7jB,OAAQrB,KAAKkT,SAAWlT,KAAKsM,eAC7CtM,KAAK8C,KAAK,2BACV9C,KAAKT,aAAe,IAAIiR,GAAOxQ,MAC/BA,KAAKmlB,WAAa,IAAI7R,GAAiBtT,MACvCA,KAAKmhB,YAAc,IAAIxR,GAAM3P,MAW7B,GATIA,KAAiB,iBACjBA,KAAKmX,kBAAmB,GAE5BnX,KAAKkJ,QbtgBK,QaugBVlJ,KAAKolB,sBACLplB,KAAK/G,eAAgB,EAChBvB,oBAAkBsI,KAAKrJ,aACxBqJ,KAAKqlB,gBAAgBrlB,KAAKrJ,aAEzBoG,eAAeiD,KAAKmX,iBAAkB,CACvCnX,KAAKslB,WACDtlB,KAAKkT,QAAQ7K,UAAUC,SAAS,eAAiBtI,KAAKulB,gBAAgBC,WACtExlB,KAAKrI,KAAK4tB,gBAAgBC,UAAY,gBAE1CxlB,KAAKylB,cACL,IAAIC,EAAgBpZ,gBAAc,OAAS6G,GAAInT,KAAKkT,QAAQC,GAAK,iBACjE/C,YAAUpQ,KAAKkT,SAAU,cACpBxb,oBAAkBsI,KAAK2lB,SAAoC,iBAAjB3lB,KAAW,SAAgD,IAA9BA,KAAK2lB,OAAOnnB,QAAQ,OAC5FwB,KAAKkT,QAAQ1Y,MAAMmrB,OAAS3lB,KAAK2lB,QAEhCjuB,oBAAkBsI,KAAK4M,QAAkC,iBAAhB5M,KAAU,QAA+C,IAA7BA,KAAK4M,MAAMpO,QAAQ,OACzFwB,KAAKkT,QAAQ1Y,MAAMoS,MAAQ5M,KAAK4M,OAEpC5M,KAAKkT,QAAQxF,YAAYgY,GACzB1lB,KAAKrI,KAAKiuB,SAASF,GACnB1lB,KAAKqjB,aAETrjB,KAAK6lB,iBACL,IACIC,EAAoB9lB,KAAKrI,KAAoB,gBASjD,GAPAqI,KAAKrI,KAAoB,gBAAI,SAAUqL,EAAM9I,GACzC4rB,EAAkB9jB,MAAMqF,EAAM1P,MAExB0P,EAAM+L,SAAW1b,oBAAkB2P,EAAa,UAClDA,EAAM0e,cAAc/iB,EAAM9I,IAG9B6C,cAAciD,KAAKmX,iBAAkB,CACrC,IAAI6O,EAAO,SAAUhjB,GAAQ,OAAOqE,EAAM4e,aAAajjB,EAAMgjB,IAC7DE,eAAa/b,GAAG,qBAAsB6b,EAAMhmB,QAGpD6d,EAAS5c,UAAUklB,gBAAkB,WAC5BzuB,oBAAkBsI,KAAKrI,KAAKyuB,kBAC7BpmB,KAAKrI,KAAKyuB,gBAAgBvc,UAE9B7J,KAAKomB,gBAAkBpmB,KAAKrI,KAAKyuB,gBAAkB,IAAIhf,GAAcpH,OAEzE6d,EAAS5c,UAAUglB,aAAe,SAAUjjB,EAAM+U,GAC9C,GAAI/U,EAAKmQ,KAAOnT,KAAKkT,QAAQC,GAAK,eAAlC,CACInT,KAAKrI,KAAOqL,EAAKrL,KAKrBqI,KAAKrI,KAAK4c,MAAMU,WAGXjV,KAAKmX,iBAINnX,KAAKrI,KAAa,UAAI,EAHtBqI,KAAKrI,KAAkB,eAAI,EAK/BqI,KAAKqmB,gBACLrmB,KAAKsmB,YAAYtmB,KAAKrI,KAAKL,SAC3B0I,KAAKumB,iBAEA7uB,oBAAkBsI,KAAKwmB,kBACxBxmB,KAAKrI,KAAKwS,GAAG,mBAAoBnK,KAAKwmB,gBAA8B,eAAGxmB,KAAKwmB,iBAEhF,IAAK,IAAInvB,EAAI,EAAGA,EAAI2I,KAAK1I,QAAQC,OAAQF,IACrC2I,KAAK1I,QAAQD,GAAG2U,IAAMhM,KAAKrI,KAAKL,QAAQD,GAAG2U,IAE/ChM,KAAKqjB,aACLrjB,KAAKmmB,kBAELnmB,KAAKrI,KAAiB,eACtBuuB,eAAaxb,IAAI,qBAAsB1K,KAAKimB,gBAEhDpI,EAAS5c,UAAUqlB,YAAc,SAAU7D,EAAagE,QACxC,IAARA,IAAkBA,EAAM,GAC5B,IAAK,IAAIpvB,EAAI,EAAGe,EAAMqqB,EAAYlrB,OAAQF,EAAIe,EAAKf,IAC3CorB,EAAYprB,GAAGC,SACfmrB,EAAYprB,GAAG6C,MAAQxC,oBAAkB+qB,EAAYprB,GAAG6C,OAASusB,EAC7DhE,EAAYprB,GAAG6C,MACnBusB,IACAA,EAAMzmB,KAAKsmB,YAAY7D,EAAYprB,GAAGC,QAASmvB,KAG/ChE,EAAYprB,GAAG6C,MAAQxC,oBAAkB+qB,EAAYprB,GAAG6C,OAASusB,EAC7DhE,EAAYprB,GAAG6C,MACnBusB,KAGR,OAAOA,GAEX5I,EAAS5c,UAAUolB,cAAgB,WAE3BrmB,KAAKnE,eACLmE,KAAKrI,KAAKkE,aAAiB,KAAImE,KAAKnE,aAAiB,KACrDmE,KAAKrI,KAAKkE,aAAa+W,SAAW5S,KAAKnE,aAAa+W,UAExD,IAAK,IAAIvb,EAAI,EAAGA,EAAI2I,KAAKqY,WAAW9gB,OAAQF,IACxC,IAAK,IAAI0C,EAAI,EAAGA,EAAIiG,KAAKqY,WAAWhhB,GAAGC,QAAQC,OAAQwC,IACnDiG,KAAKrI,KAAK0gB,WAAWhhB,GAAGC,QAAQyC,GAAO,KAAIiG,KAAKqY,WAAWhhB,GAAGC,QAAQyC,GAAO,KAGrF,IAAS1C,EAAI,EAAGA,EAAI2I,KAAK1I,QAAQC,OAAQF,IACrC2I,KAAKrI,KAAKL,QAAQD,GAAO,KAAI2I,KAAK1I,QAAQD,GAAO,MAIzDwmB,EAAS5c,UAAUokB,gBAAkB,SAAU5mB,GAC3C,IAAI4I,EAAQrH,KACZ,GAAIvB,aAAgB/B,OAAS+B,EAAKlH,OAAS,GAAKkH,EAAK,GAAG5B,eAAe,SACnEmD,KAAKxC,SAAWrG,EAAgB6I,MAAQ3B,WAAS,SAAUI,GAAQA,EACnEuB,KAAKxC,SAASC,OAAO,SAAUC,GAC3B8X,WAAS,sBAAwB9X,EAAE1E,SAAU0E,EAAG2J,GAChC,IAAZ3J,EAAEvD,OACFkN,EAAM9J,WAAW/E,KAAKkF,UAK9B,GAAIvG,EAAgB6I,MAAO,CACvB,IAAI0mB,EAAWroB,WAAS,SAAU2B,KAAKrJ,YACvCqJ,KAAKmlB,WAAW7Q,kBAAkBoS,QAGlC1mB,KAAKmlB,WAAW7Q,kBAAkB7V,IAa9Cof,EAAS5c,UAAU0lB,mBAAqB,WACpC3mB,KACK4mB,mBACL5mB,KAAKrI,KAAKkvB,UAAY7mB,KAAK6mB,UAC3B7mB,KAAKrI,KAAK0pB,cAAgBrhB,KAAKqhB,cAC/BrhB,KAAKrI,KAAKL,QAAU0I,KAAK8mB,eAAe9mB,KAAK1I,SAC7C0I,KAAKrI,KAAKusB,iBAAmBlkB,KAAKkkB,iBAClClkB,KAAKrI,KAAKysB,eAAiBpkB,KAAKokB,eAChCpkB,KAAKrI,KAAK4c,MAAQvU,KAAKuU,MACvBvU,KAAKrI,KAAKovB,gBAAkB/mB,KAAK+mB,gBACjC/mB,KAAKrI,KAAKkZ,YAAc7Q,KAAK6Q,YAC7B7Q,KAAKrI,KAAKmZ,aAAekW,sBAAoBhnB,KAAK8Q,cAClD9Q,KAAKrI,KAAKsvB,cAAgBjnB,KAAKinB,cAC/BjnB,KAAKrI,KAAK0I,eAAiBL,KAAKK,eAChCL,KAAKrI,KAAK2I,aAAeN,KAAKM,aAC9BN,KAAKrI,KAAKI,eAAiBiI,KAAKjI,eAChCiI,KAAKrI,KAAKyG,qBAAuB4B,KAAK5B,qBACtC4B,KAAKrI,KAAKiV,MAAQ5M,KAAK4M,MACvB5M,KAAKrI,KAAKguB,OAAS3lB,KAAK2lB,OACxB3lB,KAAKrI,KAAKuvB,aAAelnB,KAAKknB,aAC9BlnB,KAAKrI,KAAKyI,gBAAkBJ,KAAKI,gBACjCJ,KAAKrI,KAAKua,cAAgBlS,KAAKkS,cAC/BlS,KAAKrI,KAAK4I,cAAgBP,KAAKO,cAC/BP,KAAKrI,KAAKwvB,YAAcnnB,KAAKmnB,YAC7BnnB,KAAKrI,KAAKyvB,eAAiBpnB,KAAKonB,eAChCpnB,KAAKrI,KAAK2H,oBAAsBU,KAAKV,oBACrCU,KAAKrI,KAAK0H,oBAAsBW,KAAKX,oBACrCW,KAAKrI,KAAK4tB,gBAAkByB,sBAAoBhnB,KAAKulB,iBACrDvlB,KAAKrI,KAAK0vB,UAAYrnB,KAAKqnB,UAC3BrnB,KAAKrI,KAAK2vB,UAAYtnB,KAAKsnB,UAC3BtnB,KAAKrI,KAAK+sB,eAAiB1kB,KAAK0kB,eAChC1kB,KAAKrI,KAAKqsB,QAAUgD,sBAAoBhnB,KAAKunB,kBAC7CvnB,KAAKrI,KAAK6vB,gBAAkBxnB,KAAKwnB,gBACjCxnB,KAAKrI,KAAK0sB,kBAAoBrkB,KAAKqkB,kBACnCrkB,KAAKrI,KAAKK,eAAiBgvB,sBAAoBhnB,KAAKhI,gBACpDgI,KAAKrI,KAAKqQ,kBAAoBgf,sBAAoBhnB,KAAKgI,mBACvDhI,KAAKrI,KAAK4G,aAAeyoB,sBAAoBhnB,KAAKzB,cAClDyB,KAAKrI,KAAKC,eAAiBovB,sBAAoBhnB,KAAKpI,gBACpDoI,KAAKrI,KAAK0gB,WAAa2O,sBAAoBhnB,KAAKqY,YAChDrY,KAAKrI,KAAK8vB,iBAAmBT,sBAAoBhnB,KAAKynB,kBACtDznB,KAAKrI,KAAK4jB,UAAYyL,sBAAoBhnB,KAAKub,WAC/Cvb,KAAKrI,KAAKooB,OAASiH,sBAAoBhnB,KAAK+f,QAC5C/f,KAAKrI,KAAK+vB,iBAAmB1nB,KAAK0nB,iBAClC1nB,KAAKrI,KAAKssB,iBAAmB+C,sBAAoBhnB,KAAK2nB,kBACtD3nB,KAAKrI,KAAKiwB,gBAAkBZ,sBAAoBhnB,KAAK4nB,iBACrD5nB,KAAKrI,KAAKkE,aAAemE,KAAK6nB,sBAC9B7nB,KAAKrI,KAAK6a,YAAcwU,sBAAoBhnB,KAAKwS,aACjDxS,KAAKrI,KAAKwsB,eAAiB6C,sBAAoBhnB,KAAKmkB,gBACpDnkB,KAAKrI,KAAKqH,WAAagB,KAAKhB,WAC5BgB,KAAKrI,KAAK8Z,cAAgBzR,KAAKyR,cAC/B,IAAIqW,EAAmB,yBACvB9nB,KAAKrI,KAAKmwB,GAAoB9nB,KAAK8nB,GAEnC9nB,KAAKrI,KAAkB,eAAI,GAE/BkmB,EAAS5c,UAAU8mB,cAAgB,SAAU/kB,GACzChD,KAAKkJ,QAAQ3Q,YAAU,OAAQyK,GAAOA,IAE1C6a,EAAS5c,UAAUslB,eAAiB,WAChC,IAAIlf,EAAQrH,KACRiE,EAAWjE,KACfA,KAAKrI,KAAKqwB,aAAe,SAAUhlB,GAC1BtL,oBAAkBsL,EAAK3B,WAAY2B,EAAK3B,OAAOgH,UAAUC,SAAS,qBAChEtF,EAAK3B,OAAOgH,UAAUC,SAAS,uBAAyBtF,EAAK3B,OAAOgH,UAAUC,SAAS,kBAI9FjB,EAAM6B,QbtsBQ,eassBqBlG,GAH/BA,EAAKiG,QAAS,GAKtBjJ,KAAKrI,KAAKiN,YAAc,SAAU5B,GACzBjG,aAGIA,cAAcsK,EAAM8P,mBACzB9P,EAAM4gB,wBAAyB,EAC/B5gB,EAAMmW,eAAgBkK,iBAAkBrgB,EAAM1P,KAAK+vB,mBAAoB,GACvErgB,EAAM4gB,wBAAyB,GAL/B5gB,EAAMqgB,iBAAmBrgB,EAAM1P,KAAK+vB,iBAOxCzjB,EAASmO,OAAO8V,EAAoBllB,GACpCqE,EAAM6B,QAAQgf,EAAoBllB,IAEtChD,KAAKrI,KAAKmN,cAAgB,SAAU9B,GAChCqE,EAAMqgB,iBAAmBrgB,EAAM1P,KAAK+vB,iBACpCrgB,EAAM6B,QAAQif,EAAsBnlB,IAExChD,KAAKrI,KAAKywB,WAAa,SAAUplB,GAC7BqE,EAAMsZ,oBACNtZ,EAAM6B,Qb5sBM,aa4sBqBlG,IAErChD,KAAKrI,KAAK0wB,mBAAqB,SAAUrlB,GACrCqE,EAAM+K,OAAO,gBAAiBpP,GAC9BA,EAAOqE,EAAMyM,aAEjB9T,KAAKrI,KAAK2wB,iBAAmB,SAAUtlB,GACnCqE,EAAM+K,OAAO,cAAepP,GAC5BA,EAAOqE,EAAMyM,aAEjB9T,KAAKrI,KAAK4wB,eAAiB,SAAUvlB,GACjCqE,EAAM6B,QAAQyC,EAAuB3I,IAEzChD,KAAKrI,KAAK6wB,kBAAoBxoB,KAAK+nB,cAAc9M,KAAKjb,MACtDA,KAAKrI,KAAK8wB,oBAAsBzoB,KAAK+nB,cAAc9M,KAAKjb,MACxDA,KAAKrI,KAAK+wB,yBAA2B1oB,KAAK+nB,cAAc9M,KAAKjb,MAC7DA,KAAKrI,KAAKgxB,uBAAyB3oB,KAAK+nB,cAAc9M,KAAKjb,MAC3DA,KAAKrI,KAAKixB,kBAAoB5oB,KAAK+nB,cAAc9M,KAAKjb,MACtDA,KAAKrI,KAAKiO,kBAAoB5F,KAAK+nB,cAAc9M,KAAKjb,MACtDA,KAAKrI,KAAKkxB,eAAiB7oB,KAAK+nB,cAAc9M,KAAKjb,MACnDA,KAAKrI,KAAKmxB,eAAiB9oB,KAAK+nB,cAAc9M,KAAKjb,MACnDA,KAAKrI,KAAKoxB,gBAAkB/oB,KAAK+nB,cAAc9M,KAAKjb,MACpDA,KAAKrI,KAAKqxB,eAAiBhpB,KAAK+nB,cAAc9M,KAAKjb,MACnDA,KAAKrI,KAAKsxB,gBAAkBjpB,KAAK+nB,cAAc9M,KAAKjb,MACpDA,KAAKrI,KAAKuxB,aAAelpB,KAAK+nB,cAAc9M,KAAKjb,MACjDA,KAAKrI,KAAKwxB,eAAiBnpB,KAAK+nB,cAAc9M,KAAKjb,MACnDA,KAAKrI,KAAKyxB,YAAcppB,KAAK+nB,cAAc9M,KAAKjb,MAChDA,KAAKrI,KAAK0xB,SAAWrpB,KAAK+nB,cAAc9M,KAAKjb,MAC7CA,KAAKrI,KAAK2xB,WAAatpB,KAAK+nB,cAAc9M,KAAKjb,MAC/CA,KAAKrI,KAAK4xB,gBAAkBvpB,KAAK+nB,cAAc9M,KAAKjb,MACpDA,KAAKrI,KAAK6xB,WAAaxpB,KAAK+nB,cAAc9M,KAAKjb,MAC/CA,KAAKrI,KAAK8xB,YAAczpB,KAAK+nB,cAAc9M,KAAKjb,MAChDA,KAAKrI,KAAK+xB,WAAa1pB,KAAK+nB,cAAc9M,KAAKjb,MAC/CA,KAAKrI,KAAKgyB,YAAc,SAAU3mB,GAG9B,IAFA,IAAI+E,EAAOV,EAAMxI,UAEVkJ,EAAK/E,EAAa,UAAGqF,UAAUC,SAAS,iBAC3CtF,EAAa,WAEjBqE,EAAM6B,Qb3tBO,ca2tBqBlG,IAEtChD,KAAKrI,KAAKupB,KAAO,WAEb,GADAjd,EAAStM,KAAKwS,GAAG,cAAelG,EAASkiB,gBAAiBliB,IACrDvM,oBAAkB2P,EAAM2d,cAAe,CAExC3d,EAAM2d,aAAe3d,EAAM1P,KAAiB,aAAI,IAAIiyB,EAAWviB,EAAM1P,QAG7EqI,KAAKrI,KAAKkyB,cAAgB7pB,KAAK+nB,cAAc9M,KAAKjb,MAClDA,KAAKrI,KAAKmyB,cAAgB9pB,KAAK+nB,cAAc9M,KAAKjb,MAClDA,KAAK+pB,6BACL/pB,KAAKgqB,qBACLhqB,KAAKiqB,2BACLjqB,KAAKkqB,yBACLlqB,KAAKmqB,qBACLnqB,KAAKoqB,sBAETvM,EAAS5c,UAAUopB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,IAAIxwB,EAAI,EAAGA,EAAIuwB,EAAW5qB,MAAMnI,OAAQwC,IACzCwwB,EAAcna,YAAUka,EAAW5qB,MAAM3F,IAAK,iBAAmBqT,eAAakd,EAAW5qB,MAAM3F,IAAK,kBAI5G8jB,EAAS5c,UAAUupB,cAAgB,WAC/B,MAAoB,SAAhBxqB,KAAK2lB,SAA8D,IAAzC3lB,KAAK2lB,OAAO9d,WAAWrJ,QAAQ,MAQjEqf,EAAS5c,UAAU8oB,2BAA6B,WAC5C,IAAI1iB,EAAQrH,KACRiE,EAAWjE,KACfA,KAAKrI,KAAK8yB,UAAY,SAAUznB,GAK5B,GAJAqE,EAAMqjB,kBAAkB1nB,GACxBqE,EAAMsZ,oBACNtZ,EAAMsjB,aAAatjB,EAAMxI,WACzBwI,EAAM+K,OAAO,eAAgBpP,GACzBvM,EAAa4Q,KAAW7N,EAAU6N,KAAWA,EAAMyN,gBAAiB,CACpE,IAAI8V,EAAMryB,YAAU,sBAAuB8O,GAAO5J,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE4X,YAAYC,aACtBhe,OACHie,WAAS,gCAAiCoV,EAAM,GAAIvjB,GAExD,GAAIA,EAAMmjB,iBAAmBnjB,EAAMpO,cAI/B,IAAK,IAHD4xB,OAAY,EACZ9iB,EAAOV,EAAM6P,kBAAkBnP,KAE1B1Q,GADTwzB,KAAetiB,MAAM3F,KAAKmF,IACHxQ,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAASuwB,EAAUxzB,IAAK,CACrBwzB,EAAUxzB,GAAG6T,oBACb7D,EAAMgjB,cAAcQ,EAAUxzB,IAAI,GAEtC,MAIZgQ,EAAM6B,Qbz0BK,Yay0BqBlG,GAChCqE,EAAMpO,eAAgB,GAE1B+G,KAAKrI,KAAK8M,gBAAkB,SAAUzB,GAClC,IACInD,EAActH,YAAU,SAAUyK,GACtC,GAAIvM,EAAawN,KAAczK,EAAUyK,IAA6B,SAAhBpE,EAClDoE,EAASmO,OAAO,oBAAqBpP,GACrCA,EAAQiB,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASzG,SAASjG,QAAgBiC,EAAUyK,IAAaA,EAAStN,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAKwK,EAAStN,WAClBsN,EAASkhB,WAAW7Q,kBAAkB7a,EAAG9C,WAAW8E,MACpDuH,EAAKqQ,OAASpP,EAAStM,KAAKhB,WAAqB,WAAE8E,KAAOwI,EAASzG,SAcvE,GAZK/G,EAAawN,IAAc9M,EAAgB6I,OAAUtI,oBAAkBuM,EAAStN,cAC7EqJ,KAAK8Z,YACLtE,WAAS,cAAc,EAAMxS,GAEjCiB,EAASmO,OAAO,gBAAiBpP,IAGrC5G,SAAO4G,EAAMiB,EAAS6P,aAClB7P,EAAS3E,sBACT0D,EAAKqQ,OAASrQ,EAAKqQ,OAAO9K,UAGzBvI,KAAK8Z,WAAY,CAClB,IAAIgR,EAAoB,IAAIC,WAI5B,OAHA9mB,EAASiF,QAAQiH,EAAwBnN,EAAM,SAAUgoB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf9qB,KAAKrI,KAAKmL,IAAM,SAAUG,EAAMD,GAC5BqE,EAAM2d,cAAe3d,EAAM2d,aAAaliB,IAAIG,EAAMD,KAG1D6a,EAAS5c,UAAUmpB,mBAAqB,WACpC,IACI1kB,EADA2B,EAAQrH,KAERjD,cAAciD,KAAKmX,mBACdzf,oBAAkBsI,KAAKrI,KAAK+N,aAC7BA,EAAY1F,KAAKrI,KAAK+N,YAG9B1F,KAAKrI,KAAKoN,aAAe,SAAU/B,GAC/B,IAAIkoB,EAAkB,IAAIH,WAO1B,OANA1jB,EAAM6B,QAAQiiB,EAAqBnoB,EAAM,SAAUooB,GAC1CA,EAAYniB,QACb5B,EAAM+K,OAAO+Y,EAAqBnoB,GAEtCkoB,EAAgBD,QAAQG,KAErBF,GAEXlrB,KAAKrI,KAAK0zB,cAAgB,SAAUroB,GAChC,IAAIkoB,EAAkB,IAAIH,WAI1B,OAHA1jB,EAAM6B,QAAQ3Q,YAAU,OAAQyK,GAAOA,EAAM,SAAUsoB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEXlrB,KAAKrI,KAAK+N,UAAY,SAAU1C,GACxBjG,cAAcsK,EAAM8P,kBAChBzR,GAAkC,mBAAdA,GACpBA,EAAU1D,MAAMqF,GAAQrE,IAGhC,CAAA,GAAKtL,oBAAkBsL,EAAKrE,OAAQqE,EAAKrE,IAAI0J,UAAUC,SAAS,gBAAhE,CAIA,IAAI4iB,EAAkB,IAAIH,WAI1B,OAHA1jB,EAAM6B,QAAQqiB,GAAkBvoB,EAAM,SAAUwoB,GAC5CN,EAAgBD,QAAQO,KAErBN,EAPHloB,EAAKiG,QAAS,KAU1B4U,EAAS5c,UAAUipB,uBAAyB,WACxC,IAIInkB,EACAF,EALAwB,EAAQrH,KAcZ,GARIjD,cAAciD,KAAKmX,mBACdzf,oBAAkBsI,KAAKrI,KAAKoO,YAC7BA,EAAW/F,KAAKrI,KAAKoO,UAEpBrO,oBAAkBsI,KAAKrI,KAAKkO,YAC7BA,EAAW7F,KAAKrI,KAAKkO,WAGzB7F,KAAKjE,YAAcgB,cAAciD,KAAKmX,iBAAkB,CACxDnX,KAAKrI,KAAKwS,GAdG,cAcYnK,KAAKjE,WAAuB,WAAGiE,KAAKjE,YAC7D,IAAI0vB,EAAWzrB,KAAKrI,KAAkB,cAAE+zB,cAAc,eACtDD,EAAStuB,OAAO,EAAG,EAAGsuB,EAASE,OAEnC3rB,KAAKrI,KAAKkM,gBAAkB,SAAUb,GAC9BqE,EAAMukB,iBACNvkB,EAAMukB,iBAAkB,EACxBvkB,EAAM1P,KAAKhB,YAAe0c,OAAQhM,EAAM7J,SAAU4Q,MAAO/P,WAAS,QAASgJ,EAAM1P,KAAKhB,cAGtF0Q,EAAM6B,QAAQ2iB,EAAwB7oB,IAG9ChD,KAAKrI,KAAKkO,SAAW,SAAU7C,GAM3B,GALIjG,cAAcsK,EAAM8P,kBAChBtR,GAAgC,mBAAbA,GACnBA,EAAS7D,MAAMqF,GAAQrE,IAG3BqE,EAAM1P,KAAKm0B,oBAAqB,CAChC,IAAIC,OAAe,EACnBA,EAAe1kB,EAAM1P,KAAKq0B,kBAAkBC,YAAY/Y,QAAQmE,uBAAuB,cAAc,IAChG3f,oBAAkBq0B,IAAiBA,EAAa5Y,KAAO9L,EAAM6L,QAAQC,GAAK,6BAC3EnQ,EAAKiG,QAAS,GAGtB,IAAIiiB,EAAkB,IAAIH,WAU1B,OATA1jB,EAAM6B,QAAQgjB,GAAiBlpB,EAAM,SAAUmpB,GACvCpvB,eAAesK,EAAM8P,mBACrBgV,EAAa1sB,KAAO2sB,aAAWD,EAAa1sB,OAE3C0sB,EAAaljB,QACd5B,EAAM+K,OAAO8Z,GAAiBC,GAElCjB,EAAgBD,QAAQkB,KAErBjB,GAEXlrB,KAAKrI,KAAKmO,UAAY,SAAU9C,GAC5BqE,EAAM6B,QAAQmjB,GAAkBrpB,GAChCqE,EAAM+K,OAAOia,GAAkBrpB,IAEnChD,KAAKrI,KAAKoO,SAAW,SAAU/C,GACvBjG,cAAcsK,EAAM8P,kBAChBpR,GAAgC,mBAAbA,GACnBA,EAAS/D,MAAMqF,GAAQrE,IAG/B,IACIspB,EAAU,IAAIvB,WAGlB,OAFA/nB,EAAS,QAAIspB,EACbjlB,EAAM+K,OAAOma,GAAiBvpB,GACvBspB,GAEXtsB,KAAKrI,KAAKuO,SAAW,SAAUlD,GAC3BqE,EAAM6B,QAAQsjB,GAAiBxpB,GAC/BqE,EAAM+K,OAAOoa,GAAiBxpB,IAElChD,KAAKrI,KAAK0O,gBAAkB,SAAUrD,GAClCqE,EAAM6B,QAAQujB,GAAwBzpB,GACtCqE,EAAM+K,OAAOqa,GAAwBzpB,IAEzChD,KAAKrI,KAAKyO,eAAiB,SAAUpD,GACjCqE,EAAM6B,QAAQwjB,GAAuB1pB,GACrCqE,EAAM+K,OAAOsa,GAAuB1pB,IAExChD,KAAKrI,KAAKqO,YAAc,SAAUhD,GAC9BqE,EAAM6B,QAAQyjB,GAAoB3pB,GAClCqE,EAAM+K,OAAOua,GAAoB3pB,IAErChD,KAAKrI,KAAKwO,kBAAoB,SAAUnD,GACpCqE,EAAM6B,QAAQ0jB,GAA0B5pB,GACxCqE,EAAM+K,OAAOwa,GAA0B5pB,IAE3ChD,KAAKrI,KAAKsO,YAAc,SAAUjD,GACE,SAA5BqE,EAAMxL,aAAaC,MACnBuL,EAAM6B,QAAQ2jB,GAAoB7pB,GAEtCqE,EAAM+K,OAAOya,GAAoB7pB,KAGzC6a,EAAS5c,UAAUypB,kBAAoB,SAAU1nB,GAC7C,IAAIqE,EAAQrH,KACRjD,eAAeiD,KAAKmX,iBACpB2V,WAAW,WACPzlB,EAAM0lB,sBAAsB/pB,IAC7B,KAGHhD,KAAK+sB,sBAAsB/pB,IAGnC6a,EAAS5c,UAAU2lB,iBAAmB,WAClC,IAAIjwB,EAAa,aAOjB,GAAIqJ,KAAKrJ,YAAcQ,EAAgB6I,MAAO,CAC1C,IAAIvB,EAAOuB,KAAKxC,SACZwvB,EAAY3uB,WAAS,QAAS2B,KAAKrJ,YACvCqJ,KAAKrI,KAAKhB,YAAe0c,OAAQ5U,EAAM2P,MAAO4e,QAG9ChtB,KAAKrI,KAAKhB,WAAeqJ,KAAKrJ,sBAAsBC,cAChC,IAAIA,cAAYoJ,KAAKrJ,WAAWA,WAAYqJ,KAAKrJ,WAAWs2B,aAAcjtB,KAAKrJ,WAAWE,SAA1GmJ,KAAKxC,SAOb,GALIT,cAAciD,KAAKrJ,sBAAsBC,gBACzCoJ,KAAKrI,KAAKhB,WAAsB,YAAIqJ,KAAKrJ,WAAsB,YAC/DqJ,KAAKrI,KAAKhB,WAAyB,eAAIqJ,KAAKrJ,WAAyB,eACrEqJ,KAAKrI,KAAKhB,WAAc,IAAIqJ,KAAKrJ,WAAc,KAE/CqJ,KAAKrJ,sBAAsBC,gBAAgBoJ,KAAKrJ,WAAWA,WAAWwsB,SAAWnjB,KAAKrJ,WAAW+C,OAAQ,CACzGsG,KAAKrI,KAAKhB,WAAWA,GAAY8E,KAAO9B,EAAYqG,KAAKrJ,WAAWA,GAAY8E,MAChFuE,KAAKrI,KAAKhB,WAAgB,MAAIqJ,KAAKrJ,WAAW+C,MAC9C,IAAIwzB,EAAOltB,KAAKrI,KAAKhB,WAChBe,oBAAkBsI,KAAKrI,KAAKhB,WAAgB,QAC7CqJ,KAAKrI,KAAKhB,WAAgB,MAAEwe,KAAK,SAAUzX,GACvCwvB,EAAKv2B,GAAYwsB,SAAU,EAC3B+J,EAAoB,iBAAI,EACxBA,EAAKv2B,GAAY8E,KAAOiC,EAAE2V,OAC1B6Z,EAAY,QAAI,IAAIC,kBAKpCtP,EAAS5c,UAAUgpB,yBAA2B,WAC1C,IACItlB,EADA0C,EAAQrH,KAERjD,cAAciD,KAAKmX,mBACdzf,oBAAkBsI,KAAKrI,KAAKgN,kBAC7BA,EAAiB3E,KAAKrI,KAAKgN,iBAGnC3E,KAAKrI,KAAK+M,YAAc,SAAU1B,GACL,YAArBA,EAAKnD,aAA6BmD,EAAK3B,QAAU2B,EAAK3B,OAAOwgB,eAC7D7e,EAAK3B,OAAOwgB,cAAcxZ,UAAUC,SAAS,yBAC7CtF,EAAKiG,QAAS,GAGE,YADF1Q,YAAU,cAAeyK,IAEvCqE,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,eAAiBvX,WAAYmI,IACrCvM,EAAa4Q,IAAW3P,oBAAkB2P,EAAM4G,eAAkB9W,EAAgBkQ,IAClC,IAA7CA,EAAM1P,KAAKK,eAAeV,QAAQC,QAAyD,IAAzC8P,EAAM1P,KAAKC,eAAeC,IAAIN,SACpF8P,EAAM+K,OAAO,gBAAkB5U,SAAU6J,EAAM1P,KAAKhB,aACpD0Q,EAAM1P,KAAKhB,WAAa0Q,EAAMyM,YAAYT,QAE9C,IAAI6X,EAAkB,IAAIH,WAC1B,GAAIhuB,cAAmC,WAArBiG,EAAKnD,cAA6BwH,EAAM8P,iBAAkB,CAExEnU,EAAS,KAAIA,EAAS,KAAE,GAe5B,OAbAqE,EAAM6B,QAAQkkB,EAAoBpqB,EAAM,SAAU+W,GAC9C,GAAIhd,cAAyC,WAA3Bgd,EAAWla,cAA6BwH,EAAM8P,iBAAkB,CAE9E4C,EAAe,MAAKA,EAAe,MAElCA,EAAW9Q,QACZ5B,EAAM+K,OAAOmZ,GAAkBxR,GAE/Bhd,cAAyC,cAA3Bgd,EAAWla,cAAgCwH,EAAM8P,mBAC/D4C,EAAWpb,IAAMytB,aAAWrS,EAAWpb,MAE3CusB,EAAgBD,QAAQlR,KAErBmR,GAEXlrB,KAAKrI,KAAKgN,eAAiB,SAAU3B,GACjC,GAAIjG,cAAcsK,EAAM8P,kBAAyC,oBAArBnU,EAAKnD,YAAmC,CAEhF,IAAK,IADDkI,EAAOV,EAAMxI,UACRxH,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAAK,EAC9B0Q,EAAK1Q,GAAGgR,UAAUC,SAAS,uBAAyBP,EAAK1Q,GAAGgR,UAAUC,SAAS,wBAC9EjB,EAAM2J,mBAA0C,WAArBhO,EAAKnD,YAA4BuN,eAAarF,EAAK1Q,IAAK,qBAChF+V,eAAarF,EAAK1Q,IAAK,sBAC1BgQ,EAAM2J,mBAA0C,WAArBhO,EAAKnD,YAA4BuQ,YAAUrI,EAAK1Q,IAAK,sBAC7E+Y,YAAUrI,EAAK1Q,IAAK,sBAE5B,IAAIqI,EAAQqI,EAAK1Q,GAAGmR,iBAAiB,cACjC6kB,EAAa3tB,EAAM2H,EAAMjI,iBAAiBiY,uBAAuB,sBAAsB,IACvF3X,EAAM2H,EAAMjI,iBAAiBiY,uBAAuB,oBAAoB,GACxEgW,IACChmB,EAAM2J,mBAA0C,WAArBhO,EAAKnD,YAA4BuN,eAAaigB,GAAa,oBACnFjgB,eAAaigB,GAAa,sBAC7BhmB,EAAM2J,mBAA0C,WAArBhO,EAAKnD,YAA4BuQ,YAAUid,GAAa,sBAChFjd,YAAUid,GAAa,qBAG/B1oB,GAA4C,mBAAnBA,GACzBA,EAAe3C,MAAMqF,GAAQrE,IAiBrC,GAdAqE,EAAM+K,OAAO,iBAAkBpP,GAC/BqE,EAAMsZ,oBACNtZ,EAAMimB,sBACmB,YAArBtqB,EAAKnD,aACLwH,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,kBAAoBvX,WAAYmI,IACpB,QAArBA,EAAKnD,aAAgE,QAAtCwH,EAAMxL,aAAaQ,gBAAkE,WAAtCgL,EAAMxL,aAAaQ,gBACjGgL,EAAM+K,OAAOmb,GAAiBvqB,GAET,cAArBA,EAAKnD,aACLwH,EAAM+K,OAAOwJ,GAAkB5Y,GAEnCqE,EAAM+K,OAAO,oBAAqBpP,GAC9BjG,cAAmC,WAArBiG,EAAKnD,cAA6BwH,EAAM8P,iBAAkB,CAExEnU,EAAS,KAAIA,EAAS,KAAE,GAE5BqE,EAAM6B,QAAQkP,EAAuBpV,KAG7C6a,EAAS5c,UAAU+oB,mBAAqB,WACpC,IAAI3iB,EAAQrH,KACRiE,EAAWjE,KACfA,KAAKrI,KAAKiO,kBAAoB,SAAU5C,GACpCqE,EAAM6B,QAAQskB,GAA0BxqB,GACxCqE,EAAM+K,OAAOob,GAA0BxqB,IAE3ChD,KAAKrI,KAAKmP,gBAAkB,SAAU9D,GAClCqE,EAAM+K,OAAO,kBAAmBpP,GAChCqE,EAAM6B,QAAQukB,GAAwBzqB,IAE1ChD,KAAKrI,KAAK4M,aAAe,SAAUvB,GAC3BtL,oBAAkBsI,KAAK8Z,YACvBtE,WAAS,cAAc,EAAOxS,GAG9BwS,WAAS,aAAcxV,KAAK8Z,WAAY9W,GAE5CiB,EAAS1E,aAAaqR,YAAY5N,IAEtChD,KAAKrI,KAAK6M,cAAgB,SAAUxB,GAC5BtL,oBAAkBsI,KAAK8Z,YACvBtE,WAAS,cAAc,EAAOxS,GAG9BwS,WAAS,aAAcxV,KAAK8Z,WAAY9W,GAE5CiB,EAAS1E,aAAaC,WAAWwD,IAErChD,KAAKrI,KAAK6N,iBAAmB,SAAUxC,GACnCqE,EAAM+K,OAAOsb,EAAyB1qB,GACtCqE,EAAM6B,QAAQwkB,EAAyB1qB,IAE3ChD,KAAKrI,KAAK4N,gBAAkB,SAAUvC,GAClCqE,EAAM+K,OAAOub,EAAwB3qB,GACrCqE,EAAM6B,QAAQykB,EAAwB3qB,IAE1ChD,KAAKrI,KAAK6M,cAAgB,SAAUxB,GAChCqE,EAAM9H,aAAaC,WAAWwD,KAGtC6a,EAAS5c,UAAUkpB,mBAAqB,WACpC,IAAI9iB,EAAQrH,KACRiE,EAAWjE,KACfA,KAAKrI,KAAKoP,mBAAqB,SAAU/D,GACrCiB,EAASiF,QAAQ0kB,GAA2B5qB,IAEhDhD,KAAKrI,KAAKk2B,aAAe,SAAU7qB,GAC/BiB,EAASiF,QbpkCK,eaokCwBlG,IAE1ChD,KAAKrI,KAAKm2B,QAAU,SAAU9qB,GACtBqE,EAAM1P,KAAKo2B,OACX/qB,EAAKiG,QAAS,GAGlBhF,EAASmO,OAAO4b,GAAmBhrB,GACnCiB,EAASiF,QbllCA,UaklCwBlG,KAErChD,KAAKrI,KAAKs2B,QAAU,SAAUjrB,GACtBqE,EAAM1P,KAAKo2B,OACX/qB,EAAKiG,QAAS,GAGlBhF,EAASmO,OAAO8b,GAAmBlrB,GACnCA,EAAKiG,QAAS,KAOtB4U,EAAS5c,UAAUqkB,SAAW,WAC1BtlB,KAAK2mB,qBACL3mB,KAAKumB,iBACL/Q,WAAS,qBAAsBxV,KAAKmuB,mBAAoBnuB,KAAKrI,MAE7D6d,WAAS,mBAAoBxV,KAAQ,iBAAGA,KAAKrI,OAMjDkmB,EAAS5c,UAAUmkB,oBAAsB,WACrC,IAAKplB,KAAK1I,QAAQC,SAAYyI,KAAKmlB,WAAW9Q,YAAchc,OAAOC,KAAK0H,KAAKrJ,YAAYY,OAAS,CAC9FyI,KAAK1I,WACL,IAAIoB,OAAS,EAIbA,EAASsH,KAAKrJ,WAAW,GAGzB,IAAK,IADD2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D2I,KAAK5C,aAAc4C,KAAK/C,iBAAiBuB,QAAQlG,EAAKjB,KACvD2I,KAAK1I,QAAQkB,KAAKF,EAAKjB,MAKvCwmB,EAAS5c,UAAU4mB,oBAAsB,WACrC,IAAI3nB,KAYJ,OAVAA,EAAKqkB,YAAcvkB,KAAKnE,aAAa0oB,YACrCrkB,EAAKD,aAAeD,KAAKnE,aAAaoE,aACtCC,EAAKskB,cAAgBxkB,KAAKnE,aAAa2oB,cACvCtkB,EAAK7D,eAAsD,WAArC2D,KAAKnE,aAAaQ,eAA8B,SAAW,MACjF6D,EAAKkuB,oBAAsBpuB,KAAKnE,aAAauyB,oBAC7CluB,EAAKmuB,kBAAoBruB,KAAKnE,aAAawyB,kBAC3CnuB,EAAK0S,SAAW5S,KAAKnE,aAAa+W,SAClC1S,EAAKouB,wBAA0BtuB,KAAKnE,aAAayyB,wBACjDpuB,EAAS,KAAIF,KAAKnE,aAAiB,KACnCqE,EAAKquB,OAASvuB,KAAKnE,aAAa0yB,OACxBvuB,KAAKnE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDoE,EAAKpE,KAAOkE,KAAKnE,aAAaC,KAC9B,MACJ,IAAK,MACDoE,EAAKpE,KAAO,SACZ,MACJ,IAAK,OACDoE,EAAKpE,KAAO,SACZoE,EAAKmuB,mBAAoB,EAGjC,OAAOnuB,GAMX2d,EAAS5c,UAAU0mB,eAAiB,WAChC,GAAI3nB,KAAKikB,iBAAkB,CAEvB,IAAK,IADD9N,KACK9e,EAAI,EAAGA,EAAI2I,KAAKikB,iBAAiB1sB,OAAQF,IAC9C,OACQ2I,KAAKikB,iBAAiB5sB,IAC1B,IAAK,SACL,KAAKykB,mBAAiB0D,OAClBrJ,EAAM3d,MAAOg2B,KAAMxuB,KAAK6f,KAAK4O,YAAY,UACrCptB,OAAQ,aAAc8R,GAAInT,KAAKkT,QAAQC,GAAK,4BAC5CgD,QAAUqY,KAAMxuB,KAAK6f,KAAK4O,YAAY,SAAUtb,GAAI,UAAaqb,KAAMxuB,KAAK6f,KAAK4O,YAAY,SAAUtb,GAAI,YAC/G,MACJ,QACIgD,EAAM3d,KAAKwH,KAAKikB,iBAAiB5sB,IAG7C,OAAO8e,EAGP,OAAO,MAOf0H,EAAS5c,UAAUsmB,eAAiB,WAChC,GAAIvnB,KAAKgkB,QAAS,CAEd,IAAK,IADD7N,KACK9e,EAAI,EAAGA,EAAI2I,KAAKgkB,QAAQzsB,OAAQF,IACrC,OACQ2I,KAAKgkB,QAAQ3sB,IACjB,IAAK,SACL,KAAKwkB,cAAY6S,OACbvY,EAAM3d,KAAK,UACX,MACJ,IAAK,QACL,KAAKqjB,cAAYlM,MACbwG,EAAM3d,KAAK,SACX,MACJ,IAAK,YACL,KAAKqjB,cAAY4D,UACb,IAAIkP,EAAc3uB,KAAK6f,KAAK4O,YAAY,aACxCtY,EAAM3d,MAAOg2B,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAYzb,GAAInT,KAAKkT,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAK0I,cAAY6D,YACb,IAAImP,EAAU7uB,KAAK6f,KAAK4O,YAAY,eACpCtY,EAAM3d,MAAOg2B,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAczb,GAAInT,KAAKkT,QAAQC,GAAK,6BAE1E,MACJ,IAAK,SACL,KAAK0I,cAAY8D,UACb,IAAImP,EAAgB9uB,KAAK6f,KAAK4O,YAAY,aAC1CtY,EAAM3d,MACFg2B,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAYzb,GAAInT,KAAKkT,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAK0I,cAAY+D,WACb,IAAImP,EAAiB/uB,KAAK6f,KAAK4O,YAAY,cAC3CtY,EAAM3d,MACFg2B,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAazb,GAAInT,KAAKkT,QAAQC,GAAK,yBAEnD,MACJ,QACIgD,EAAM3d,KAAKwH,KAAKgkB,QAAQ3sB,IAGpC,OAAO8e,EAGP,OAAO,MAOf0H,EAAS5c,UAAU6lB,eAAiB,SAAUxvB,GAC1C,IAAIqI,EAASrI,EACb0I,KAAKyiB,eAIL,IAAK,IAHDuM,EACAC,EACAC,KACK73B,EAAI,EAAGA,EAAIsI,EAAOpI,OAAQF,IAAK,CACpC,IAAIob,EAAazS,KAAKrI,KAAK4Z,eAAe5R,EAAOtI,GAAG2U,KAGpD,GAFAijB,EAAaxc,MACbuc,KAC+B,iBAApBhvB,KAAK1I,QAAQD,GACpB43B,EAAW5qB,MAAQ2qB,EAAe3qB,MAAQrE,KAAK1I,QAAQD,QAGvD,IAAK,IAAI83B,EAAK,EAAGC,EAAK/2B,OAAOC,KAAKqH,EAAOtI,IAAK83B,EAAKC,EAAG73B,OAAQ43B,IAAM,CAChE,IAAI5R,EAAO6R,EAAGD,GACV93B,IAAM2I,KAAKZ,iBAA4B,aAATme,GAAwBxgB,aAItDkyB,EAAW1R,GAAQyR,EAAezR,GAAQ5d,EAAOtI,GAAGkmB,GAHpDyR,EAAezR,GAAQ5d,EAAOtI,GAAGkmB,GAOzC5d,EAAOtI,GAAGC,QACV0I,KAAK8mB,eAAexvB,EAAQD,GAAGC,SAG/B0I,KAAKyiB,YAAYjqB,KAAK,IAAIsH,EAAOkvB,IAErCE,EAAqB12B,KAAKy2B,GAE9B,OAAOC,GAQXrR,EAAS5c,UAAUouB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,IAFDC,GAAiB,EAEZL,EAAK,EAAGM,EAHAp3B,OAAOC,KAAKg3B,GAGeH,EAAKM,EAAal4B,OAAQ43B,IAAM,CACxE,IAAI5R,EAAOkS,EAAaN,GACxB,OAAQ5R,GACJ,IAAK,UACKxgB,cAAciD,KAAKmX,kBAAoBnX,KAAkB,gBAC3DA,KAAKrI,KAAKL,QAAU0I,KAAK8mB,eAAe9mB,KAAK1I,UAEjD,MACJ,IAAK,kBACD0I,KAAKrI,KAAK+3B,iBACV,MACJ,IAAK,cACD1vB,KAAKrI,KAAKkZ,YAAc7Q,KAAK6Q,YAC7B,MACJ,IAAK,eACD7Q,KAAKrI,KAAKmZ,aAAekW,sBAAoBhnB,KAAK8Q,cAClD0e,GAAiB,EACjB,MACJ,IAAK,uBACDxvB,KAAKrI,KAAKyG,qBAAuB4B,KAAK5B,qBACtC,MACJ,IAAK,UACD4B,KAAKrI,KAAKqsB,QAAUhkB,KAAKunB,iBACzB,MACJ,IAAK,iBACDvnB,KAAKrI,KAAK+sB,eAAiB1kB,KAAK0kB,eAChC,MACJ,IAAK,oBACD1kB,KAAKrI,KAAKqQ,kBAAoBgf,sBAAoBhnB,KAAKgI,mBACvD,MACJ,IAAK,eACDhI,KAAKrI,KAAK2I,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKrI,KAAKg4B,kBAAoB3vB,KAAK2vB,kBACnC,MACJ,IAAK,eACD3vB,KAAKrI,KAAK4G,aAAeyoB,sBAAoBhnB,KAAKzB,cAClD,MACJ,IAAK,iBACDyB,KAAKrI,KAAKC,eAAiBovB,sBAAoBhnB,KAAKpI,gBACpD,MACJ,IAAK,iBACDoI,KAAKrI,KAAKI,eAAiBiI,KAAKjI,eAChC,MACJ,IAAK,iBACDiI,KAAKrI,KAAKK,eAAiBgvB,sBAAoBhnB,KAAKhI,gBACpD,MACJ,IAAK,iBACDgI,KAAKrI,KAAK0I,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKrI,KAAK0H,oBAAsBW,KAAKX,oBACrC,MACJ,IAAK,aACDW,KAAKrI,KAAK0gB,WAAa2O,sBAAoBhnB,KAAKqY,YAChD,MACJ,IAAK,aAID,GAHArY,KAAKoa,cAAiBpa,KAAKrJ,sBAAsBC,iBAAkBc,oBAAkBsI,KAAKrJ,WAAW+C,QAC9FsG,KAAKrJ,WAAWE,mBAAmBusB,oBAC1CpjB,KAAKqlB,gBAAgBrlB,KAAKrJ,YACtBqJ,KAAKoa,YAAa,CAClB,GAAIjjB,EAAgB6I,MAAO,CACvB,IAAIoO,EAAQ/P,WAAS,QAAS2B,KAAKrJ,YACnCqJ,KAAKrI,KAAKhB,YAAe0c,OAAQrT,KAAKxC,SAAU4Q,MAAOA,QAGvDpO,KAAKrI,KAAKhB,WAAeqJ,KAAKrJ,sBAAsBC,cAChC,IAAIA,cAAYoJ,KAAKrJ,WAAWA,WAAYqJ,KAAKrJ,WAAWs2B,aAAcjtB,KAAKrJ,WAAWE,SAA1GmJ,KAAKxC,SAETwC,KAAK5B,uBACL4B,KAAKrI,KAAKqhB,cAAc4W,qBAAsB,QAIlD5vB,KAAK4mB,mBACD5mB,KAAK5B,uBACL4B,KAAKrI,KAAKqhB,cAAcxO,sBACxBxK,KAAKrI,KAAKqhB,cAAc6W,cAAc,MACtC7vB,KAAKrI,KAAKqhB,cAAc8W,eAGhC,MACJ,IAAK,QACD9vB,KAAKrI,KAAK4c,MAAQvU,KAAKuU,MACvB,MACJ,IAAK,oBACG+a,EAAQ/R,GACRvd,KAAKuhB,cAGLvhB,KAAKshB,YAET,MACJ,IAAK,qBACDthB,KAAKrI,KAAKo4B,UACV,MACJ,IAAK,YACD/vB,KAAKrI,KAAK2vB,UAAYtnB,KAAKsnB,UAC3B,MACJ,IAAK,cACDtnB,KAAKrI,KAAK6a,YAAcwU,sBAAoBhnB,KAAKwS,aACjD,MACJ,IAAK,aACDxS,KAAKrI,KAAKqH,WAAagB,KAAKhB,WAC5B,MACJ,IAAK,gBACDgB,KAAKrI,KAAK8Z,cAAgBzR,KAAKyR,cAC/B,MACJ,IAAK,YACDzR,KAAKrI,KAAK0vB,UAAYrnB,KAAKqnB,UAC3B,MACJ,IAAK,SACI3vB,oBAAkBsI,KAAK2lB,SAAoC,iBAAjB3lB,KAAW,SAAgD,IAA9BA,KAAK2lB,OAAOnnB,QAAQ,OAC5FwB,KAAKkT,QAAQ1Y,MAAMmrB,OAAS3lB,KAAK2lB,QAErC3lB,KAAKrI,KAAKguB,OAAS3lB,KAAK2lB,OACxB,MACJ,IAAK,QACIjuB,oBAAkBsI,KAAK4M,QAAkC,iBAAhB5M,KAAU,QAA+C,IAA7BA,KAAK4M,MAAMpO,QAAQ,OACzFwB,KAAKkT,QAAQ1Y,MAAMoS,MAAQ5M,KAAK4M,OAEpC5M,KAAKrI,KAAKiV,MAAQ5M,KAAK4M,MACvB,MACJ,IAAK,SACD5M,KAAKrI,KAAKooB,OAAS/f,KAAK+f,OACxB,MACJ,IAAK,mBACD/f,KAAKrI,KAAK+vB,iBAAmB1nB,KAAK0nB,iBAClC,MACJ,IAAK,eACD1nB,KAAKrI,KAAKuvB,aAAelnB,KAAKknB,aAC9B,MACJ,IAAK,cACDlnB,KAAKrI,KAAKwvB,YAAcnnB,KAAKmnB,YAC7B,MACJ,IAAK,iBACDnnB,KAAKrI,KAAKyvB,eAAiBpnB,KAAKonB,eAChC,MACJ,IAAK,sBACDpnB,KAAKrI,KAAK2H,oBAAsBU,KAAKV,oBACrC,MACJ,IAAK,mBACDU,KAAKrI,KAAKusB,iBAAmBlkB,KAAKkkB,iBAClC,MACJ,IAAK,iBACDlkB,KAAKrI,KAAKysB,eAAiBpkB,KAAKokB,eAChC,MACJ,IAAK,YACDpkB,KAAKrI,KAAKkvB,UAAY7mB,KAAK6mB,UAC3B,MACJ,IAAK,kBACD7mB,KAAKrI,KAAKyI,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKrI,KAAK4I,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKrI,KAAK8vB,iBAAmBT,sBAAoBhnB,KAAKynB,kBACtD,MACJ,IAAK,gBACDznB,KAAKrI,KAAKua,cAAgB8U,sBAAoBhnB,KAAKkS,eACnDlS,KAAKrI,KAAKo4B,UACV,MACJ,IAAK,mBACD/vB,KAAKrI,KAAKssB,iBAAmBjkB,KAAK2nB,iBAClC,MACJ,IAAK,oBACD3nB,KAAKrI,KAAK0sB,kBAAoBrkB,KAAKqkB,kBACnC,MACJ,IAAK,iBACDrkB,KAAKrI,KAAKwsB,eAAiB6C,sBAAoBhnB,KAAKmkB,gBACpD,MACJ,IAAK,kBACDnkB,KAAKrI,KAAKiwB,gBAAkBZ,sBAAoBhnB,KAAK4nB,iBACrD,MACJ,IAAK,eACG5nB,KAAKrI,KAAKo2B,QAA0C,WAAhC/tB,KAAKrI,KAAKkE,aAAaC,MAAqBwzB,EAAQ/R,GAAMzhB,OACtD,SAAvBwzB,EAAQ/R,GAAMzhB,MAA0C,QAAvBwzB,EAAQ/R,GAAMzhB,OAChDkE,KAAKrI,KAAKq4B,YAEdhwB,KAAKrI,KAAKkE,aAAemE,KAAK6nB,sBAGlC2H,GACAxvB,KAAKrI,KAAKo4B,YAStBlS,EAAS5c,UAAU4I,QAAU,WACzB7J,KAAKiwB,iBACLjwB,KAAK8kB,eACL/iB,EAAOd,UAAU4I,QAAQjH,KAAK5C,MAC1BA,KAAKrI,MACLqI,KAAKrI,KAAKkS,UAEV7J,KAAKmlB,YACLnlB,KAAKmlB,WAAWtb,UAMpB,IAAK,IAJDia,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDzsB,EAAI,EAAGA,EAAIysB,EAAQvsB,OAAQF,IAC5B2I,KAAK8jB,EAAQzsB,MACb2I,KAAK8jB,EAAQzsB,IAAM,MAG3B2I,KAAKkT,QAAQ1F,UAAY,GACzBxN,KAAKrI,KAAO,MAQhBkmB,EAAS5c,UAAUivB,SAAW,WAC1BnuB,EAAOd,UAAUivB,SAASttB,KAAK5C,MACzBjD,cAAciD,KAAKmX,oBAAqB9Y,WAAS,aAAc2B,KAAKrI,OAAUqI,KAAK/G,gBACrF+G,KAAKrI,KAAKu4B,YAQlBrS,EAAS5c,UAAUkvB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACAvf,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG9Y,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC2G,gBAAkBjH,WAAaowB,qBAI1BrwB,EAAI,EAAGA,EAAI+4B,EAAU74B,OAAQF,IAElC,IAAK,IADDi5B,EAAgBtwB,KAAKowB,EAAU/4B,IAC1B83B,EAAK,EAAGC,EAAKiB,EAAgBD,EAAU/4B,IAAK83B,EAAKC,EAAG73B,OAAQ43B,IAAM,QAEhEmB,EADGlB,EAAGD,IAKrB,OADAnvB,KAAKuwB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQCvwB,KAAK1I,SAClC0I,KAAKwwB,aAAaJ,IAE7BvS,EAAS5c,UAAUsvB,eAAiB,SAAUE,EAAgBn5B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACX0I,KAAK0wB,eAAeD,EAAgBn5B,EAAQD,IAC5C2I,KAAKuwB,eAAeE,EAAgBn5B,EAAQD,GAAGC,UAG/C0I,KAAK0wB,eAAeD,EAAgBn5B,EAAQD,KAIxDwmB,EAAS5c,UAAUyvB,eAAiB,SAAUD,EAAgB9wB,GAC1D,IAAK,IAAItI,EAAI,EAAGA,EAAIo5B,EAAel5B,OAAQF,WAChCsI,EAAO8wB,EAAep5B,IAC7BsI,EAAOlC,WAGfogB,EAAS5c,UAAUsiB,kBAAoB,SAAU7lB,GAC7C,GAAKhG,oBAAkBgG,EAAEizB,SAAzB,CAGA,IAAItvB,EAAS3D,EAAE2D,QACVA,EAAOgH,UAAUC,SAAS,sBAC3BjH,EAAOgH,UAAUC,SAAS,uBAA4BtI,KAAK4wB,gBAAmB5wB,KAAKrI,KAAKo2B,QACxF/tB,KAAK0hB,sBAAsBrgB,GAE/BrB,KAAK4wB,gBAAiB,EACtB5wB,KAAKoS,OAAO,qBAAuB/Q,OAAQA,MAM/Cwc,EAAS5c,UAAUpC,QAAU,WACzB,OAAOmB,KAAKrI,KAAKkH,WAMrBgf,EAAS5c,UAAU4vB,SAAW,WAC1B,OAAO7wB,KAAKrI,KAAKk5B,YASrBhT,EAAS5c,UAAU6vB,UAAY,SAAUryB,EAAMvE,EAAO62B,GAC9C/wB,KAAKjE,YACLiE,KAAKjE,WAAW+0B,UAAUryB,EAAMvE,EAAO62B,IAM/ClT,EAAS5c,UAAU+uB,UAAY,WACvBhwB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWi0B,aAM7BnS,EAAS5c,UAAU+vB,SAAW,WACtBhxB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWi1B,YAS7BnT,EAAS5c,UAAUgwB,WAAa,SAAUtnB,EAAUtF,EAAOpK,GACnD+F,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWk1B,WAAWtnB,EAAUtF,EAAOpK,IAQzD4jB,EAAS5c,UAAUiwB,UAAY,SAAUh3B,EAAOuE,GAC5C,GAAIuB,KAAKrI,KAAKoE,WACV,GAAKrE,oBAAkBwC,GAMnB8F,KAAKrI,KAAKoE,WAAWm1B,UAAUh3B,EAAOuE,OANX,CAC3B,IAAIioB,EAAW1mB,KAAKrI,KAAKwE,wBAAwBjC,GACjDkC,SAAOsqB,EAAUjoB,GACjBuB,KAAKrI,KAAKoE,WAAWm1B,UAAUh3B,EAAOwsB,KAalD7I,EAAS5c,UAAUkwB,aAAe,SAAUC,EAAW3yB,GAC/CuB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWo1B,aAAaC,EAAW3yB,IAOrDof,EAAS5c,UAAUowB,UAAY,SAAU1yB,GACjCqB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWs1B,UAAU1yB,IAQvCkf,EAAS5c,UAAUqwB,SAAW,SAAU3nB,EAAUtF,GAC1CrE,KAAKjE,YACLiE,KAAKjE,WAAWu1B,SAAS3nB,EAAUtF,IAQ3CwZ,EAAS5c,UAAUswB,mBAAqB,SAAUpb,EAAOqb,GACjDxxB,KAAKrI,KAAK85B,eACVzxB,KAAKrI,KAAK85B,cAAcC,YAAYvb,EAAOqb,IAMnD3T,EAAS5c,UAAU0wB,QAAU,WACrB3xB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAW41B,WAS7B9T,EAAS5c,UAAU2wB,kBAAoB,SAAUC,EAAGC,GAC5C9xB,KAAK+xB,qBACL/xB,KAAK+xB,oBAAoBH,kBAAkBC,EAAGC,IAOtDjU,EAAS5c,UAAU+wB,UAAY,SAAU/iB,GACjCjP,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWi2B,UAAU/iB,IAOvC4O,EAAS5c,UAAU1F,wBAA0B,WACzC,OAAOyE,KAAKrI,KAAK4D,2BASrBsiB,EAAS5c,UAAUgxB,aAAe,SAAUp6B,EAAKwM,EAAOpK,GACpD+F,KAAKrI,KAAKs6B,aAAap6B,EAAKwM,EAAOpK,GACnC,IAAI0P,EAAW3J,KAAKrI,KAAKmH,wBAAwBjH,GAC7Ca,EAASsH,KAAK7D,wBAAwBwN,GACrCjS,oBAAkBgB,IACnBmC,GAAaZ,MAAOvB,EAAQ4C,OAAQ,QAAU0E,KAAMA,KAAKhF,gBAAiBtC,EAAOwB,MAAO8F,KAAKrI,KAAK+vB,iBAAkBrjB,IAS5HwZ,EAAS5c,UAAUvC,WAAa,SAAU7G,EAAK4T,GAC3C,IAAIvN,EAAiB8B,KAAK7D,wBACtB+1B,EAAalyB,KAAKrI,KAAK4D,0BAA0B,GACjDpB,EAAQ,EACRzB,KACJwF,EAAeymB,KAAK,SAAU1qB,EAAO5C,EAAGqG,GACpC,OAAIzD,EAAMi4B,KAAgBr6B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfsR,EAAQtR,MAAQA,EAChBsR,EAAQvR,MAAQxB,EAAOwB,MACvBuR,EAAQnS,aAAeZ,EAAOY,aAC9BmS,EAAQrR,SAAW1B,EAAO0B,SAC1BqR,EAAQzS,SAAWN,EAAOM,SAC1ByS,EAAQ3S,WAAaJ,EAAOI,WAC5B2S,EAAQyB,cAAgBxU,EAAOwU,cAC/BzB,EAAQpS,gBAAkBX,EAAOW,gBACjCoS,EAAQnN,eAAiB5F,EAAO4F,eAChCmN,EAAQtS,SAAWT,EAAOS,SAC1B6G,KAAKrI,KAAK+G,WAAW7G,EAAK4T,IAO9BoS,EAAS5c,UAAUkxB,SAAW,SAAUC,GAChCpyB,KAAKrI,KAAK06B,aACVryB,KAAKrI,KAAK06B,YAAYF,SAASC,IAQvCvU,EAAS5c,UAAUqxB,sBAAwB,SAAU/uB,GAC7CvD,KAAKqyB,aACLryB,KAAKrI,KAAK06B,YAAYC,sBAAsB/uB,IASpDsa,EAAS5c,UAAUsxB,iBAAmB,SAAU5oB,EAAUmC,GACtD,OAAO9L,KAAKrI,KAAK46B,iBAAiB5oB,EAAUmC,IAOhD+R,EAAS5c,UAAU6Z,iBAAmB,SAAUzW,GAC5C,OAAItH,cAAciD,KAAKmX,iBACZqb,uBAAqBxyB,KAAKrI,KAAKL,QAAS,SAAU4L,EAAMhJ,GAC3D,GAAIgJ,EAAKmB,QAAUA,EACf,OAAOnB,IAGZ,GAGIsvB,uBAAqBxyB,KAAKyiB,YAAa,SAAUvf,EAAMhJ,GAC1D,GAAIgJ,EAAKmB,QAAUA,EACf,OAAOnB,IAGZ,IAQX2a,EAAS5c,UAAUsQ,eAAiB,SAAUvF,GAC1C,OAAOwmB,uBAAqBxyB,KAAKrI,KAAKL,QAAS,SAAU4L,EAAMhJ,GAC3D,GAAIgJ,EAAK8I,MAAQA,EACb,OAAO9I,IAGZ,IAMP2a,EAAS5c,UAAUwxB,oBAAsB,WACrC,OAAOzyB,KAAKrI,KAAK86B,uBAMrB5U,EAAS5c,UAAUyxB,iBAAmB,WAClC,OAAO1yB,KAAKrI,KAAK+6B,oBAMrB7U,EAAS5c,UAAU0xB,sBAAwB,WACvC,OAAO3yB,KAAKrI,KAAKg7B,yBAQrB9U,EAAS5c,UAAU2xB,YAAc,SAAUt6B,EAAMu6B,GAC7C7yB,KAAKrI,KAAKi7B,YAAYt6B,EAAMu6B,GAC5B7yB,KAAK2gB,qBAQT9C,EAAS5c,UAAU6xB,YAAc,SAAUx6B,EAAMy6B,GAC7C/yB,KAAKrI,KAAKm7B,YAAYx6B,EAAMy6B,GAC5B/yB,KAAK2gB,qBAOT9C,EAAS5c,UAAU+xB,uBAAyB,SAAU3uB,GAClD,OAAOrE,KAAKrI,KAAKq7B,uBAAuB3uB,IAO5CwZ,EAAS5c,UAAUgyB,uBAAyB,SAAU/4B,GAClD,OAAO8F,KAAKrI,KAAKs7B,uBAAuB/4B,IAO5C2jB,EAAS5c,UAAUiyB,qBAAuB,SAAUlnB,GAChD,OAAOhM,KAAKrI,KAAKu7B,qBAAqBlnB,IAO1C6R,EAAS5c,UAAUkyB,sBAAwB,SAAU9uB,GACjD,OAAOrE,KAAKrI,KAAKw7B,sBAAsB9uB,IAO3CwZ,EAAS5c,UAAUyQ,oBAAsB,SAAU1F,GAC/C,OAAOhM,KAAKrI,KAAK+Z,oBAAoB1F,IAMzC6R,EAAS5c,UAAUrB,WAAa,SAAUwzB,GACtC,OAAIr2B,cAAciD,KAAKmX,iBACZnX,KAAKrI,KAAKL,SAGjB0I,KAAK2gB,kBAAkB3gB,KAAKrI,KAAKiI,WAAWwzB,IACrCpzB,KAAKyiB,cAGpB5E,EAAS5c,UAAU0f,kBAAoB,SAAUhhB,GAC7C,IAAI0b,EACAhX,EACAgvB,EAAc37B,oBAAkBiI,GAAUK,KAAKrI,KAAKiI,aAAeD,GACzC,IAA1BK,KAAKZ,iBAA0BY,KAAK1I,QAAQ0I,KAAKZ,mBAChD1H,oBAAkBsI,KAAK1I,QAAQ0I,KAAKZ,iBAAiBwT,YACtDyI,EAAOrb,KAAK1I,QAAQ0I,KAAKZ,iBAAiBwT,SAC1CvO,EAAQrE,KAAK1I,QAAQ0I,KAAKZ,iBAAiBiF,OAE/CrE,KAAKyiB,eAGL,IAAK,IADDwM,EADAqE,GAAgB,EAEXj8B,EAAI,EAAGA,EAAIg8B,EAAY97B,OAAQF,IAAK,CACzC43B,KACA,IAAK,IAAIE,EAAK,EAAGC,EAAK/2B,OAAOC,KAAK+6B,EAAYh8B,IAAK83B,EAAKC,EAAG73B,OAAQ43B,IAAM,CACrE,IAAI5R,EAAO6R,EAAGD,GACTpyB,cAAuB,SAATwgB,IACf0R,EAAW1R,GAAQ8V,EAAYh8B,GAAGkmB,IAG1Cvd,KAAKyiB,YAAYjqB,KAAK,IAAIsH,EAAOmvB,IAC7B5qB,IAAUrE,KAAKyiB,YAAYprB,GAAGgN,OAAW3M,oBAAkB2jB,IAAkB,KAATA,IACpErb,KAAKyiB,YAAYprB,GAAGub,SAAWyI,GAGvC,IAAKte,eAAeiD,KAAKmX,iBAAkB,CAEvCnX,KAAU,WAAK,WACXA,KAAKrI,KAAKL,QAAQC,SAAWyI,KAAKyiB,YAAYlrB,SAC9C+7B,GAAgB,GAEfA,GACDtzB,KAAKwd,eAAgBlmB,QAAS0I,KAAKyiB,cAAe,GAEtDziB,KAAU,eAAI8c,EAElB,OAAO9c,KAAKyiB,aAMhB5E,EAAS5c,UAAUsyB,WAAa,WAC5B,OAAOvzB,KAAKrI,KAAK47B,cAErB1V,EAAS5c,UAAUmd,yBAA2B,WAE1Cpe,KAAKrI,KAAa,qBAAEqK,MAAMhC,OAE9B6d,EAAS5c,UAAUuyB,aAAe,SAAUC,EAAcn8B,GAEtD0I,KAAKrI,KAAa,aAAEqK,MAAMhC,MAAOyzB,EAAcn8B,KAEnDumB,EAAS5c,UAAUqsB,oBAAsB,WACrCttB,KAAKwd,eAAgBxlB,eAAgBO,YAAU,aAAcyH,KAAKrI,KAAKK,kBAAmB,GAC1FgI,KAAKwd,eAAgB1M,aAAcvY,YAAU,aAAcyH,KAAKrI,KAAKmZ,gBAAiB,GACtF9Q,KAAKwd,eAAgB5lB,eAAgBW,YAAU,aAAcyH,KAAKrI,KAAKC,kBAAmB,GAC1FoI,KAAKwd,eAAgBjf,aAAchG,YAAU,aAAcyH,KAAKrI,KAAK4G,gBAAiB,IAM1Fsf,EAAS5c,UAAUiW,gBAAkB,WACjC,OAAOlX,KAAKrI,KAAKuf,mBAMrB2G,EAAS5c,UAAUyyB,YAAc,WAG7B,IAAK,IAFDC,KACA5rB,EAAO/H,KAAKrI,KAAK+7B,cACZr8B,EAAI,EAAGe,EAAM2P,EAAKxQ,OAAQF,EAAIe,EAAKf,IACnC0Q,EAAK1Q,GAAGgR,UAAUC,SAAS,iBAC5BqrB,EAAMn7B,KAAKuP,EAAK1Q,IAGxB,OAAOs8B,GAOX9V,EAAS5c,UAAU9E,sBAAwB,WACvC,OAAO6D,KAAKrI,KAAKqF,iBAMrB6gB,EAAS5c,UAAUjF,gBAAkB,WACjC,OAAOgE,KAAKrI,KAAKoE,WAAWC,mBAMhC6hB,EAAS5c,UAAUiL,iBAAmB,WAClC,OAAOlM,KAAKrI,KAAKuU,oBAMrB2R,EAAS5c,UAAU2yB,eAAiB,WAChC,OAAO5zB,KAAKrI,KAAKi8B,kBAOrB/V,EAAS5c,UAAUrC,cAAgB,SAAU1E,GACzC,OAAO8F,KAAKrI,KAAKiH,cAAc1E,IAOnC2jB,EAAS5c,UAAU4yB,WAAa,SAAUxyB,GACtC,OAAOrB,KAAKrI,KAAKk8B,WAAWxyB,IAOhCwc,EAAS5c,UAAU6yB,oBAAsB,SAAUzvB,GAC/C,OAAOrE,KAAKrI,KAAKm8B,oBAAoBzvB,IAMzCwZ,EAAS5c,UAAU8H,kBAAoB,WAEnC,IAAK,IADDgrB,KACK5E,EAAK,EAAGC,EAAKpvB,KAAKyiB,YAAa0M,EAAKC,EAAG73B,OAAQ43B,IAAM,CAC1D,IAAIpjB,EAAMqjB,EAAGD,GACTpjB,EAAIioB,SACJD,EAAKv7B,KAAKuT,GAGlB,OAAOgoB,GAKXlW,EAAS5c,UAAU+W,YAAc,WAC7BA,cAAYhY,KAAKkT,UAKrB2K,EAAS5c,UAAU0U,YAAc,WAC7BA,cAAY3V,KAAKkT,UAKrB2K,EAAS5c,UAAU8uB,QAAU,WACzB/vB,KAAKqlB,gBAAgBrlB,KAAKrJ,YAC1BqJ,KAAKrI,KAAKhB,WAAeqJ,KAAKrJ,sBAAsBC,cAChC,IAAIA,cAAYoJ,KAAKrJ,WAAWA,WAAYqJ,KAAKrJ,WAAWs2B,aAAcjtB,KAAKrJ,WAAWE,SAA1GmJ,KAAKxC,SACTwC,KAAKrI,KAAKo4B,WAOdlS,EAAS5c,UAAUyK,kBAAoB,WACnC,OAAO1L,KAAKwmB,gBAAgB/W,qBAOhCoO,EAAS5c,UAAUgzB,kBAAoB,WACnC,IAAIC,KACAh4B,EAAqB8D,KAAK7D,wBAC9B,GAAK6D,KAAK6Q,YASNqjB,EAAiBh4B,OARjB,IAAK,IAAI7E,EAAI,EAAGA,EAAI6E,EAAmB3E,OAAQF,IAC3C68B,EAAe17B,KAAK0D,EAAmB7E,IAClC6E,EAAmB7E,GAAG8B,WACvB9B,GAAK+B,EAAoB8C,EAAmB7E,IAAIE,QAO5D,OAAO28B,GAMXrW,EAAS5c,UAAUyO,qBAAuB,WACtC,OAAO1P,KAAKwmB,gBAAgB9W,wBAKhCmO,EAAS5c,UAAU+J,iBAAmB,SAAUmpB,GAC5Cn0B,KAAKwmB,gBAAgBxb,iBAAiBmpB,IAK1CtW,EAAS5c,UAAUyuB,eAAiB,SAAU0E,GACtC18B,oBAAkB08B,IAAcA,GAChCp0B,KAAKrI,KAAKL,QAAU0I,KAAK8mB,eAAe9mB,KAAK1I,SAC7C0I,KAAKrI,KAAK+3B,kBAGV1vB,KAAKrI,KAAK6lB,eAAgBlmB,QAAS0I,KAAK8mB,eAAe9mB,KAAK1I,WAAY,IAMhFumB,EAAS5c,UAAUozB,cAAgB,WAC/Br0B,KAAKrI,KAAK08B,iBAOdxW,EAAS5c,UAAUygB,sBAAwB,SAAUrgB,GACjD,GAA+B,UAA3BrB,KAAKnE,aAAaC,KAAkB,CAGpC,GAAIkE,KAAKhE,kBAAkBgE,KAAKge,gBAAgBzmB,QAC5CyI,KAAKhE,kBAAkBgE,KAAKie,gBAAgB1mB,QAAUyI,KAAKhE,kBAAkBgE,KAAKuT,cAAchc,OAAQ,CACxG,IAAI+8B,EAAYt0B,KAAKrI,KAAKoE,WAAc,UAGxC,OAFAiE,KAAKrI,KAAKoE,WAAqB,WAAE,aAAcu4B,QAC/Ct0B,KAAKu0B,cAAgBlzB,IAI7B,GAAIrB,KAAKwS,YAAa,CAClB,IAAIgiB,EAAUnzB,EAAO0J,QAAQ,kBAAkB8W,cAC3CnpB,EAASsH,KAAK7D,wBAAwBq4B,EAAQ7qB,UAC9CtI,EAAOgH,UAAUC,SAAS,oBAC1BtI,KAAKyhB,YAAY+S,EAAS97B,GAG1BsH,KAAK4hB,UAAU4S,EAAS97B,OAG3B,CAEGA,GADA87B,EAAUx0B,KAAKrI,KAAKk8B,WAAWxyB,IACdoK,QACjBzL,KAAKV,qBAAsD,IAA/BjH,OAAOC,KAAKI,GAAQnB,SAChDmB,EAASsH,KAAK7D,wBAAwBq4B,EAAQ7qB,WAE9CtI,EAAOgH,UAAUC,SAAS,oBAC1BtI,KAAKyhB,YAAY+S,EAAQ71B,IAAKjG,GAG9BsH,KAAK4hB,UAAU4S,EAAQ71B,IAAKjG,KAQxCmlB,EAAS5c,UAAU2gB,UAAY,SAAUjjB,EAAKjG,GAC1C,IAAI2O,EAAQrH,KACZtH,EAASsH,KAAKy0B,yBAAyB91B,EAAKjG,IACvChB,oBAAkBiH,IAAQA,EAAIe,MAAM,GAAG2I,UAAUC,SAAS,kBAC3DtI,KAAKqqB,cAAc1rB,GAAK,GAE5B,IAAIqE,GAASvE,KAAM/F,EAAQiG,IAAKA,EAAKsK,QAAQ,GAC7CjJ,KAAKkJ,Qb3vEU,Ya2vEgBlG,EAAM,SAAU0xB,GAC3C,IAAKA,EAAczrB,SACf5B,EAAMstB,eAAe,SAAUh2B,EAAKjG,KAC9BjC,EAAa4Q,IAAW7N,EAAU6N,MAAYlQ,EAAgBkQ,IAAQ,CACxE,IAAIutB,GAAiBn2B,KAAM/F,EAAQiG,IAAKA,GACxC0I,EAAM6B,QAAQ6P,EAAiB6b,OAK/C/W,EAAS5c,UAAUwzB,yBAA2B,SAAU91B,EAAKjG,GAUzD,OATIsH,KAAK6Q,aAAkD,QAAnC7Q,KAAK8Q,aAAaC,cAA0B/Q,KAAK0iB,aAAehrB,oBAAkBgB,KACrGjC,EAAauJ,MACdtH,EAASsH,KAAKxC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAErE,kBAGR3B,oBAAkBgB,KACvBA,EAASsH,KAAKrI,KAAKwE,wBAAwBwC,EAAIgL,WAE5CjR,GAMXmlB,EAAS5c,UAAUwgB,YAAc,SAAU9iB,EAAKjG,GAC5C,IAAI2O,EAAQrH,KAERgD,GAASvE,KADb/F,EAASsH,KAAKy0B,yBAAyB91B,EAAKjG,GACjBiG,IAAKA,EAAKsK,QAAQ,GAC7CjJ,KAAKkJ,QbrxEW,aaqxEgBlG,EAAM,SAAU6xB,GAC5C,IAAKA,EAAe5rB,OAAQ,CACxB5B,EAAMstB,eAAe,WAAYh2B,EAAKjG,GACtC,IAAIk8B,GAAiBn2B,KAAM/F,EAAQiG,IAAKA,GACnClI,EAAa4Q,IACdA,EAAM6B,QAAQ4rB,EAAkBF,OAShD/W,EAAS5c,UAAU8zB,cAAgB,SAAU56B,GACzC,IAAM6F,KAAK6Q,aAAkD,QAAnC7Q,KAAK8Q,aAAaC,cAA2B/Q,KAAK5B,wBAA0B3H,EAAauJ,MAAO,CACtH,IAAI6O,EAAM7O,KAAKrI,KAAKhB,WAAW8G,OAAO,SAAUC,GAI5C,OAHIA,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IACjCuD,EAAEvE,UAAW,GAEVuE,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IAE5C6F,KAAK4hB,UAAU,KAAM/S,OAMhB,CAHDA,EAAM7O,KAAKg1B,iBAAiB76B,GAGhC,IAAK,IAFDwE,EAAMpG,YAAU,OAAQsW,GACxBnW,EAASH,YAAU,UAAWsW,GACzBxX,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2I,KAAK4hB,UAAUjjB,EAAItH,GAAIqB,EAAOrB,MAI1CwmB,EAAS5c,UAAU+zB,iBAAmB,SAAU76B,GAC5C,IAAI4N,EAAO/H,KAAKnB,UAAUpB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE6O,UAAU/N,QAAQ,QAAUrE,KAC9BuD,EAAEoN,cAAc,wBAA0BpN,EAAEoN,cAAc,wBAItE,OADY5S,QADE8H,KAAK7D,wBAAwBsB,OAAO,SAAUC,GAAK,OAAOA,EAAEvD,QAAUA,GAASuD,EAAErE,kBACjE0O,KAAMA,IAOxC8V,EAAS5c,UAAUg0B,gBAAkB,SAAU96B,GAC3C,IAAM6F,KAAK6Q,aAAkD,QAAnC7Q,KAAK8Q,aAAaC,cAA2B/Q,KAAK5B,wBAA0B3H,EAAauJ,MAAO,CACtH,IAAItH,EAASsH,KAAKrI,KAAKhB,WAAW8G,OAAO,SAAUC,GAI/C,OAHIA,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IACjCuD,EAAEvE,UAAW,GAEVuE,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IAE5C6F,KAAKyhB,YAAY,KAAM/oB,QAMvB,IAAK,IAHDmW,EAAM7O,KAAKg1B,iBAAiB76B,GAC5B4N,EAAOxP,YAAU,OAAQsW,GACzB3W,EAAUK,YAAU,UAAWsW,GAC1BxX,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC2I,KAAKyhB,YAAY1Z,EAAK1Q,GAAIa,EAAQb,IAG1C,IAAK2I,KAAKrI,KAAKqhB,cAAc4W,qBAAuB5vB,KAAK5B,sBAAwB4B,KAAKnB,WAC/EmB,KAAKzC,WAAWhG,SAAWyI,KAAKnB,UAAUtH,OAAQ,CAErDyI,KAAKrI,KAAKqhB,cAAckc,YAAc,EACtCl1B,KAAKrI,KAAKqhB,cAAsB,UAAK,IAO7C6E,EAAS5c,UAAUqgB,UAAY,WAC3BthB,KAAKm1B,kBAAkB,WAM3BtX,EAAS5c,UAAUsgB,YAAc,WAC7BvhB,KAAKm1B,kBAAkB,aAE3BtX,EAAS5c,UAAUk0B,kBAAoB,SAAU75B,GAC7C,IAAIyM,EAAO/H,KAAKnB,UAAUpB,OAAO,SAAUC,GACvC,OAAOA,EAAEoN,cAAc,eAA4B,WAAXxP,EAAsB,WAAa,aAI/E,GAFA0E,KAAK0iB,aAAc,EACnB1iB,KAAK2iB,eAAgB,GACf3iB,KAAK6Q,aAAkD,QAAnC7Q,KAAK8Q,aAAaC,cAA2B/Q,KAAK5B,wBAA0B3H,EAAauJ,OAM/G,GALAA,KAAKxC,SAASC,OAAO,SAAUC,GACvBA,EAAErE,kBACFqE,EAAEvE,SAAsB,aAAXmC,KAGjByM,EAAKxQ,OACM,aAAX+D,EAAwB0E,KAAKyhB,YAAY1Z,EAAK,IAAM/H,KAAK4hB,UAAU7Z,EAAK,SAEvE,GAAI/H,KAAK6Q,YAAa,CACvB,IAAIukB,EAAsBp1B,KAAKgR,kBAC/BhR,KAAKwd,eAAgBxM,mBAAmB,IAAQ,GAChDhR,KAAKrI,KAAK06B,YAAYF,SAAS,GAC/BnyB,KAAKwd,eAAgBxM,kBAAmBokB,IAAuB,SAInE,IAAK,IAAI/9B,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAClB,aAAXiE,EAAwB0E,KAAKyhB,YAAY1Z,EAAK1Q,IAAM2I,KAAK4hB,UAAU7Z,EAAK1Q,IAGhF2I,KAAK0iB,aAAc,EACnB1iB,KAAK2iB,eAAgB,GAEzB9E,EAAS5c,UAAU0zB,eAAiB,SAAUr5B,EAAQqD,EAAKjG,EAAQse,GAC/D,IAIII,EAJAsd,GAAkB/1B,IAAKA,EAAKF,KAAM/F,EAAQoR,aAAejK,YAAavE,GACtEhC,EAAe0G,KAAK7D,wBAAwBsB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB5F,EAAOM,YAGlCvC,EAAauJ,OAAoB,WAAX1E,GAAuB0E,KAAKhF,iBAAmB7D,EAAgB6I,QAAU1G,EAAa/B,QAC7GyI,KAAKq1B,oBAAoBX,GAE7B,IAAIzd,EAAWjX,KAAKnB,UACpB,GAAImB,KAAKwS,YAAa,CAClB,IAAIzK,EAAO/H,KAAKkX,kBAAkBnP,KAClCkP,KAAc1O,MAAM3F,KAAKmF,GAa7B,GAVIrQ,oBAAkBiH,GAElBA,EAAMsY,EADKjX,KAAK7D,wBAAwBqC,QAAQ9F,KAIpCiG,EAAIwN,aAAa,iBAE5BzU,oBAAkBiH,IACnBA,EAAIsO,aAAa,gBAA4B,WAAX3R,EAAsB,OAAS,WAE/D0E,KAAK6Q,aAAkD,QAAnC7Q,KAAK8Q,aAAaC,cAA2B/Q,KAAK5B,uBAA0B3H,EAAauJ,OAC3G7I,EAAgB6I,MAGnB,CACD,IAAIs1B,OAAgB,EACpB,GAAe,WAAXh6B,EAAqB,CAarB,GAZAg6B,EAAgB,YACXte,IACDte,EAAOS,UAAW,EAClB6G,KAAK8d,mBAAmBplB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBiH,KACnByY,EAAYzY,EAAI0Y,uBAAuB,sBAAsB,IAE7DL,IAAYtf,oBAAkBgB,EAAOsH,KAAK9G,sBAC1CR,EAAOsH,KAAK9G,qBAAuBxB,oBAAkB0f,KACrDA,EAAYzY,EAAI0Y,uBAAuB,oBAAoB,IAE3D3f,oBAAkB0f,GAClB,OAECA,EAAU/O,UAAUC,SAAS,qBAC9B8H,YAAUgH,GAAY,oBAE1BhK,eAAagK,GAAY,0BAExB,CAaD,GAZAke,EAAgB,OACXte,IAAW7f,EAAgB6I,QAC5BtH,EAAOS,UAAW,EAClB6G,KAAK8d,mBAAmBplB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBiH,KACnByY,EAAYzY,EAAI0Y,uBAAuB,oBAAoB,IAE3DL,IAAYtf,oBAAkBgB,EAAOsH,KAAK9G,uBACzCR,EAAOsH,KAAK9G,qBAAuBxB,oBAAkB0f,KACtDA,EAAYzY,EAAI0Y,uBAAuB,sBAAsB,IAE7D3f,oBAAkB0f,GAClB,OAECA,EAAU/O,UAAUC,SAAS,uBAC9B8H,YAAUgH,GAAY,sBAE1BhK,eAAagK,GAAY,oBAE7B,IAAIme,EAAate,EAASxZ,OAAO,SAAUgE,GACvC,OAAOA,EAAE4G,UAAUC,SAAS,uBAAyB5P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAUlG,GARI1D,EAAauJ,QAAUxG,EAAUwG,MACjCA,KAAKmF,aAAa7J,EAAQqD,EAAKjG,EAAQse,GAGjC7f,EAAgB6I,QAAS1G,EAAa/B,QAAsB,aAAX+D,GACnD0E,KAAKw1B,YAAYl6B,EAAQqD,EAAKjG,EAAQse,GAG1ChX,KAAKwqB,kBAAoB7rB,EAAIe,MAAM,GAAG2I,UAAUC,SAAS,iBAIzD,IAAK,IAHDuiB,EAAY7qB,KAAKnB,UAGZxH,GAFL0Q,EAAO/H,KAAKkX,kBAAkBnP,MAClC8iB,KAAetiB,MAAM3F,KAAKmF,IACHxQ,OAAS,GAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAASuwB,EAAUxzB,IAAK,CACzB,IACIo+B,EADQz1B,KAAKkX,kBACGwe,aAChBC,EAAe31B,KAAKuzB,aAAaoC,aACrC31B,KAAKqqB,cAAcQ,EAAUxzB,GAAIo+B,GAAWE,GAC5C,MAIZ31B,KAAKoS,OAAO,qBAAuBmjB,WAAYA,EAAYj6B,OAAQg6B,EAAe58B,OAAQA,EAAQiG,IAAKA,IACvGqB,KAAK2qB,aAAa1T,QAxElBjX,KAAKoS,OAAOwjB,GAAmCt6B,OAAQA,EAAQqD,IAAKA,EAAKjG,OAAQA,KA2EzFmlB,EAAS5c,UAAUo0B,oBAAsB,SAAUX,GAC/C,IAAIrtB,EAAQrH,KACR61B,EAAO,IAAI9K,WAEf2J,EAA2B,cAAImB,EAAK5K,QACpC,IAAIvyB,EAASg8B,EAAcj2B,KAC3BuB,KAAKkJ,QAAQ2iB,EAAwB6I,GACrCmB,EAAKvJ,QAAQnX,KAAK,SAAUzX,GACxB,GAAIg3B,EAAc5qB,UAAUvS,OAAQ,CAGhC,IAAK,IAFDkiB,EAAepS,EAAc,SAC7BnN,EAAQ,EACH7C,EAAI,EAAGA,EAAIoiB,EAAYliB,OAAQF,IACpC,GAAIoiB,EAAYpiB,GAAG+C,WAAa1B,EAAO0B,SAAU,CAC7CF,EAAQ7C,EACR,MAOH,IAJDy+B,EAASz3B,WAAS,SAAUgJ,EAAM1Q,YAClCmT,EAAYnQ,EAAY+6B,EAAc5qB,WACtCisB,EAAWr9B,EAAO2O,EAAMjK,eACxB1E,EAAO2O,EAAMjK,cAAc7F,OAASuS,EAAUvS,OAASmB,EAAO2O,EAAMjK,cAAc7F,OAA4BuS,EAAUvS,OAC5H,IAASF,EAAI,EAAGA,EAAI0+B,EAAU1+B,IACtBqB,EAAO2O,EAAMjK,eACb04B,EAAOr4B,OAAO,SAAUC,EAAGrG,GACnBqG,EAAE2J,EAAMpK,mBAAqBvE,EAAO2O,EAAMnK,YAC1C44B,EAAO34B,OAAO9F,EAAG,KAIzByS,EAAUzS,IACVyS,EAAUzS,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpC2P,EAAUzS,GAAG6C,MAAQ0c,KAAKC,KAAqB,IAAhBD,KAAKE,UACpChN,EAAUzS,GAAGyB,WAAasD,YAAW1D,GACrCoR,EAAUzS,GAAG+C,SAAWgC,YAAW0N,EAAUzS,WACtCyS,EAAUzS,GAAGyB,WAAWQ,oBACxBwQ,EAAUzS,GAAG+C,SAAStB,WAC7BgR,EAAUzS,GAAGiH,eAAiB5F,EAAOM,SACrC8Q,EAAUzS,GAAG2B,SAAW2d,SAAOtP,EAAM6L,QAAQC,GAAK,UAClDqC,WAAS,sBAAwB1L,EAAUzS,GAAG2B,SAAU8Q,EAAUzS,GAAIgQ,KACjE3P,oBAAkBoS,EAAUzS,GAAGgQ,EAAMjK,gBACrC0M,EAAUzS,GAAGgQ,EAAMyN,kBAAoB3d,EAAgBkQ,MACxDyC,EAAUzS,GAAGgC,iBAAkB,GAEnCogB,EAAYtc,OAAOjD,EAAQ,EAAI7C,EAAGqB,EAAO2O,EAAMjK,eAAiB1E,EAAO2O,EAAMjK,cAAc/F,GAAK,EAAI,EAAGyS,EAAUzS,KAGjHoiB,EAAYtc,OAAOjD,EAAQ,EAAI7C,EAAG,GAG1CoiB,EAAYvf,GAAOmN,EAAMjK,cAAgB0M,EACzC2P,EAAYvf,GAAOZ,aAAewQ,EAClC2P,EAAYvf,GAAOf,UAAW,EAC9Bqc,WAAS,sBAAwBiE,EAAYvf,GAAOlB,SAAUygB,EAAYvf,GAAQmN,GAClF,IAAK,IAAItN,EAAI,EAAGA,EAAI26B,EAAc5qB,UAAUvS,OAAQwC,IAChD+7B,EAAOt9B,KAAKk8B,EAAc5qB,UAAU/P,IAG5CsN,EAAMukB,iBAAkB,EACxBvkB,EAAM1P,KAAKo4B,UACX1oB,EAAM6B,QAAQ6P,EAAiB2b,MAGvC7W,EAAS5c,UAAUkE,aAAe,SAAU7J,EAAQqD,EAAKjG,EAAQse,GAC7D,IAAIC,EAAWjX,KAAKnB,UACpB,GAAImB,KAAKwS,YAAa,CAClB,IAAIwjB,EAASh2B,KAAKkX,kBAAkBnP,KACpCkP,KAAc1O,MAAM3F,KAAKozB,GAE7B,IAAIhzB,GAASvE,KAAM/F,EAAQiG,IAAKA,GAC5BoJ,KAIJ,GAHAA,EAAOkP,EAASxZ,OAAO,SAAUgE,GAC7B,OAAOA,EAAEqJ,cAAc,kBAAoBpS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXmB,EAAqB,CACrB0E,KAAKoS,OAAO8B,GAAuBxb,OAAQA,EAAQqP,KAAMA,EAAMyP,UAAW7Y,IAC1E,IAAIs3B,GAAWt3B,IAAKA,EAAKF,KAAM/F,GAC3BqP,EAAKxQ,OAAS,GACdyI,KAAKkJ,QAAQ6P,EAAiBkd,QAIlCj2B,KAAKk2B,qBAAsBx9B,OAAQA,EAAQqP,KAAMA,IACjD/H,KAAKkJ,QAAQ4rB,EAAkB9xB,IAGvC6a,EAAS5c,UAAUu0B,YAAc,SAAUl6B,EAAQqD,EAAKjG,EAAQse,GAC5D,IAAIjP,EACAzO,EAAe0G,KAAK7D,wBAAwBsB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB5F,EAAOM,WAEnCgH,KAAKwqB,iBAAmB7rB,EAAIe,MAAM,GAAG2I,UAAUC,SAAS,kBACxDtI,KAAKqqB,cAAc1rB,GAAK,GAE5B,IAAIw3B,EACAlf,EAAWjX,KAAKnB,UACpB,GAAImB,KAAKwS,YAAa,CAClB,IAAI4jB,EAASp2B,KAAKkX,kBAAkBnP,KACpCkP,KAAc1O,MAAM3F,KAAKwzB,GAE7B,IAAId,EAA4B,WAAXh6B,EAAuB,YAAc,OACtD+6B,EAAkBr2B,KAAKzE,0BAA0B,GAEzCjC,EAAa,GAAGR,WAAWoB,MACvC,GAAI8F,KAAKV,sBAAwBU,KAAK6Q,YAAa,CAC/C,IAAI5S,EAAU+B,KAAK7D,wBAAwBgC,IAAI,SAAUT,GAAK,OAAOA,EAAM,QAAMc,QAAQ9F,EAAOwB,OAC5F8Y,EAAW5Z,EAAoB4G,KAAK7D,wBAAwB8B,IAChE8J,KACAzO,EAAe0Z,EACf,IAAK,IAAI3b,EAAI,EAAGA,EAAI2b,EAASzb,OAAQF,IAAK,CACtC,IAAIsS,EAAW3J,KAAKrI,KAAKmH,wBAAwBkU,EAAS3b,GAAGg/B,IAC7DtuB,EAAKvP,KAAKwH,KAAKnB,UAAU8K,UAI7B5B,EAAOkP,EAASxZ,OAAO,SAAUgE,GAC7B,OAAOA,EAAEqJ,cAAc,kBAAoBpS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAGxF6F,KAAKhB,YAAcgB,KAAKyR,eAAiBzR,KAAKf,sBAC9Ck3B,EAAcn2B,KAAKs2B,iBAAiB74B,OAAO,SAAUgE,GACjD,OAAOA,EAAEqJ,cAAc,kBAAoBpS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAS9C,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IACxBK,oBAAkBqQ,EAAK1Q,MACxB0Q,EAAK1Q,GAAGmD,MAAMG,QAAU26B,GAEvB59B,oBAAkBy+B,KACnBA,EAAY9+B,GAAGmD,MAAMG,QAAU26B,GAEnCt1B,KAAKoS,OAAO,kBAAoBzT,IAAKoJ,EAAK1Q,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXgC,IACrD5D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/D6G,KAAK20B,eAAer5B,EAAQyM,EAAK1Q,GAAIiC,EAAajC,IAAI,GAClD2I,KAAKyR,eAAiBzR,KAAKZ,kBAAoB1H,oBAAkBy+B,IACjEn2B,KAAK20B,eAAer5B,EAAQ66B,EAAY9+B,GAAIiC,EAAajC,IAAI,KAK7EwmB,EAAS5c,UAAU0pB,aAAe,SAAU5iB,GACxC,GAAI/H,KAAKknB,eAAiBlnB,KAAKwS,YAE3B,IAAK,IADD+jB,EAAkB,EACbl/B,EAAI,EAAG0Q,GAAQ1Q,EAAI0Q,EAAKxQ,OAAQF,IAAK,CAC1C,IAAIm/B,EAAUzuB,EAAK1Q,GACW,SAA1Bm/B,EAAQh8B,MAAMG,UACV67B,EAAQnuB,UAAUC,SAAS,aAC3B8E,eAAaopB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQnuB,UAAUC,SAAS,iBAAoBkuB,EAAQnuB,UAAUC,SAAS,gBACxG8H,YAAUomB,GAAU,YAEnBA,EAAQnuB,UAAUC,SAAS,iBAAoBkuB,EAAQnuB,UAAUC,SAAS,gBAC3EiuB,OAMpB1Y,EAAS5c,UAAU8rB,sBAAwB,SAAU/pB,GACjD,GAAIhD,KAAKwS,YAAa,CAClB,IAAIzK,EAAO/H,KAAKkX,kBAAkBnP,KAClCA,KAAUQ,MAAM3F,KAAKmF,GACrB,IAAK,IAAI1Q,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAAK,CAClC,IAAIo/B,EAAQz2B,KAAKrI,KAAKuf,kBAAkBnP,KAAK1Q,GAAGqI,MAAMM,KAAKZ,iBACvDT,EAAMoJ,EAAK1Q,GAEXq/B,GAAQj4B,KADEuB,KAAKrI,KAAKugB,gBAAgB7gB,GAAGoH,KAChBE,IAAKA,EAAKc,KAAMg3B,EAAO92B,OAAQK,KAAKJ,aAAaI,KAAKZ,kBACjFY,KAAKT,aAAaC,WAAWk3B,MAIzC7Y,EAAS5c,UAAUi1B,oBAAsB,SAAUnf,EAAYC,GACtDA,IACDD,EAAWre,OAAOS,UAAW,GAIjC,IAAK,IADDqV,EADAzG,EAAOgP,EAAWhP,KAEb1Q,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAAK,CAC9B0F,cAAciD,KAAKmX,kBACnB/J,eAAarF,EAAK1Q,IAAK,qBACvB+Y,YAAUrI,EAAK1Q,IAAK,uBAGpB0Q,EAAK1Q,GAAGmD,MAAMG,QAAU,OAE5B,IAAIg8B,EAAe5uB,EAAK1Q,GAAGyT,cAAc,sBAIzC,GAHKpT,oBAAkBi/B,IACnB32B,KAAKrI,KAAK+f,gBAAgBkf,SAASD,GAEnC5uB,EAAK1Q,GAAGyT,cAAc,6CAA8C,CACpE,IAAI+rB,EAAgB9uB,EAAK1Q,GAAGyT,cAAc,6CAC1C0D,EAAcxO,KAAKwS,YAAcxS,KAAKrI,KAAKwE,wBAAwB4L,EAAK1Q,GAAGsS,UACvE3J,KAAKrI,KAAK2f,oBAAoBvP,EAAK1Q,GAAG8U,aAAa,aAAa1N,MAC/D/G,oBAAkBm/B,IAAkBroB,EAAYrV,WACjDiU,eAAaypB,GAAgB,oBAC7BzmB,YAAUymB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ/2B,KAAKnB,UACRm4B,EAAM,EAAGA,EAAMD,EAAMx/B,OAAQy/B,IAC9BD,EAAMC,GAAKlsB,cAAc,kBAAoB0D,EAAYtU,MAAQ,SAAWsU,EAAYrU,MAAQ,KAChG28B,EAAKt+B,KAAKu+B,EAAMC,IAGpBF,EAAKv/B,QAAUiX,EAAYrV,UAC3B6G,KAAKk2B,qBAAsBx9B,OAAQ8V,EAAazG,KAAM+uB,IAAQ,MAQ9EjZ,EAAS5c,UAAUwkB,YAAc,WAC7BzlB,KAAKmK,GAAG,gBAAiBnK,KAAKi3B,kBAAmBj3B,MACjDA,KAAKrI,KAAKwS,GAAG,cAAenK,KAAKmmB,gBAAiBnmB,OAEtD6d,EAAS5c,UAAUg2B,kBAAoB,SAAUC,GAC7Cl3B,KAAK8T,YAAcojB,GAKvBrZ,EAAS5c,UAAUgvB,eAAiB,WAC5BjwB,KAAKyK,cAGTzK,KAAK0K,IAAI,gBAAiB1K,KAAKi3B,mBAC/Bj3B,KAAKrI,KAAK+S,IAAI,cAAe1K,KAAKmmB,mBAgBtCtI,EAAS5c,UAAUk2B,eAAiB,SAAU/F,EAAWgG,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzI13B,KAAKrI,KAAKw/B,eAAe/F,EAAWgG,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H7Z,EAAS5c,UAAU02B,eAAiB,WAChC33B,KAAKrI,KAAKggC,kBASd9Z,EAAS5c,UAAU22B,0BAA4B,SAAUvzB,EAAOwzB,GAC5D73B,KAAKrI,KAAKigC,0BAA0BvzB,EAAOwzB,IAQ/Cha,EAAS5c,UAAU+gB,UAAY,SAAU9nB,EAAO49B,GAC5C93B,KAAKrI,KAAKqqB,UAAU9nB,EAAO49B,IAO/Bja,EAAS5c,UAAU82B,WAAa,SAAUpqB,GACtC3N,KAAKrI,KAAKogC,WAAWpqB,IAMzBkQ,EAAS5c,UAAUihB,eAAiB,WAChCliB,KAAKrI,KAAKuqB,kBAMdrE,EAAS5c,UAAUwI,KAAO,SAAU/B,GAChC1H,KAAKomB,gBAAgB3c,KAAK/B,IAQ9BmW,EAAS5c,UAAUyI,MAAQ,SAAUjL,EAAMkL,EAAUC,GACjD5J,KAAKomB,gBAAgB1c,MAAMjL,EAAMkL,EAAUC,IAQ/CiU,EAAS5c,UAAU+2B,WAAa,SAAU/V,EAAW6V,GACjD93B,KAAKrI,KAAKqgC,WAAW/V,EAAW6V,IAMpCja,EAAS5c,UAAUg3B,gBAAkB,WACjC,OAAOj4B,KAAKrI,KAAKsgC,mBAQrBpa,EAAS5c,UAAUi3B,wBAA0B,SAAUvuB,EAAUmC,GAC7D,OAAO9L,KAAKrI,KAAKugC,wBAAwBvuB,EAAUmC,IAMvD+R,EAAS5c,UAAUkO,mBAAqB,WACpC,OAAOnP,KAAKrI,KAAKwX,sBAOrB0O,EAAS5c,UAAU/B,qBAAuB,SAAUhF,GAChD,OAAO8F,KAAKrI,KAAKuH,qBAAqBhF,IAM1C2jB,EAAS5c,UAAUq1B,eAAiB,WAChC,OAAOt2B,KAAKrI,KAAK2+B,kBAKrBzY,EAAS5c,UAAUhC,iBAAmB,WAClC,OAAOe,KAAKm4B,eAAen4B,KAAK1I,QAAS,GAAK0I,KAAKyR,eAEvDoM,EAAS5c,UAAUk3B,eAAiB,SAAUpE,EAAMqE,GAChD,IAAK,IAAIr+B,EAAI,EAAG3B,EAAM27B,EAAKx8B,OAAQwC,EAAI3B,EAAK2B,IACpCg6B,EAAKh6B,GAAGzC,QACR8gC,EAAMp4B,KAAKm4B,eAAepE,EAAKh6B,GAAGzC,QAAS8gC,GAGvCrE,EAAKh6B,GAAGs+B,UACRD,IAIZ,OAAOA,GAMXva,EAAS5c,UAAUiH,sBAAwB,WACvC,OAAOlI,KAAKrI,KAAKuQ,yBAMrB2V,EAAS5c,UAAUq3B,0BAA4B,WAC3C,OAAOt4B,KAAKrI,KAAK2gC,6BAOrBza,EAAS5c,UAAUyH,mBAAqB,WACpC,OAAO1I,KAAKrI,KAAK+Q,sBAMrBmV,EAAS5c,UAAU2W,cAAgB,WAC/B,OAAS2gB,WAAYv4B,KAAKrI,KAAKigB,gBAAiB4gB,WAAYx4B,KAAKmlB,aAKrEtH,EAAS5c,UAAUw3B,YAAc,SAAUC,EAAaC,EAAS5H,GAC7D/wB,KAAK44B,qBAAqBH,YAAYC,EAAaC,EAAS5H,IAEhE,IAAI7S,EAqXJ,OApXA/c,IACIc,WAAS,IACV4b,EAAS5c,UAAW,kBAAc,GACrCE,IACIc,WAAS,IACV4b,EAAS5c,UAAW,qBAAiB,GACxCE,IACIc,WAAS,aACV4b,EAAS5c,UAAW,gBAAY,GACnCE,IACIc,gBACD4b,EAAS5c,UAAW,eAAW,GAClCE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,oBAAgB,GACvCE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,IACV4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,iBAAa,GACpCE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,0BAAsB,GAC7CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,2BAAuB,GAC9CE,IACIc,gBACD4b,EAAS5c,UAAW,kBAAc,GACrCE,IACIc,cACD4b,EAAS5c,UAAW,aAAS,GAChCE,IACIc,cACD4b,EAAS5c,UAAW,kBAAc,GACrCE,IACIc,WAAS,aACV4b,EAAS5c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,qBAAiB,GACxCE,IACI03B,aAAYx2B,IACbwb,EAAS5c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,0BAAsB,GAC7CE,IACI03B,aAAY9c,KACb8B,EAAS5c,UAAW,oBAAgB,GACvCE,IACI03B,aAAYC,oBACbjb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,cACD4b,EAAS5c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,yBAAqB,GAC5CE,IACI03B,aAAYjb,KACbC,EAAS5c,UAAW,oBAAgB,GACvCE,IACIiB,gBAAeqb,KAChBI,EAAS5c,UAAW,kBAAc,GACrCE,IACI03B,aAAYnb,KACbG,EAAS5c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACIc,cACD4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACI03B,aAAY12B,IACb0b,EAAS5c,UAAW,sBAAkB,GACzCE,IACI03B,aAAYvoB,KACbuN,EAAS5c,UAAW,sBAAkB,GACzCE,IACIc,cACD4b,EAAS5c,UAAW,eAAW,GAClCE,IACIc,cACD4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACV4b,EAAS5c,UAAW,iBAAa,GACpCE,IACIc,cACD4b,EAAS5c,UAAW,wBAAoB,GAC3CE,IACIc,cACD4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACIc,cACD4b,EAAS5c,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACV4b,EAAS5c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV4b,EAAS5c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,2BAAuB,GAC9CE,IACIc,WAAS,SACV4b,EAAS5c,UAAW,cAAU,GACjCE,IACIc,WAAS,SACV4b,EAAS5c,UAAW,aAAS,GAChCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACV4b,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,eAAW,GAClCE,IACI43B,WACDlb,EAAS5c,UAAW,YAAQ,GAC/BE,IACI43B,WACDlb,EAAS5c,UAAW,iBAAa,GACpCE,IACI43B,WACDlb,EAAS5c,UAAW,gBAAY,GACnCE,IACI43B,WACDlb,EAAS5c,UAAW,kBAAc,GACrCE,IACI43B,WACDlb,EAAS5c,UAAW,iBAAa,GACpCE,IACI43B,WACDlb,EAAS5c,UAAW,gBAAY,GACnCE,IACI43B,WACDlb,EAAS5c,UAAW,iBAAa,GACpCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,iBAAa,GACpCE,IACI43B,WACDlb,EAAS5c,UAAW,gBAAY,GACnCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,yBAAqB,GAC5CE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,gBAAY,GACnCE,IACI43B,WACDlb,EAAS5c,UAAW,qBAAiB,GACxCE,IACI43B,WACDlb,EAAS5c,UAAW,iBAAa,GACpCE,IACI43B,WACDlb,EAAS5c,UAAW,yBAAqB,GAC5CE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,yBAAqB,GAC5CE,IACI43B,WACDlb,EAAS5c,UAAW,oBAAgB,GACvCE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,oBAAgB,GACvCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,qBAAiB,GACxCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,qBAAiB,GACxCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,oBAAgB,GACvCE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,gBAAY,GACnCE,IACI43B,WACDlb,EAAS5c,UAAW,kBAAc,GACrCE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,kBAAc,GACrCE,IACI43B,WACDlb,EAAS5c,UAAW,kBAAc,GACrCE,IACI43B,WACDlb,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,qBAAiB,GACxCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,oBAAgB,GACvCE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,wBAAoB,GAC3CE,IACI43B,WACDlb,EAAS5c,UAAW,kBAAc,GACrCE,IACI43B,WACDlb,EAAS5c,UAAW,mBAAe,GACtCE,IACI43B,WACDlb,EAAS5c,UAAW,eAAW,GAClCE,IACI43B,WACDlb,EAAS5c,UAAW,oBAAgB,GACvCE,IACI43B,WACDlb,EAAS5c,UAAW,0BAAsB,GAC7CE,IACI43B,WACDlb,EAAS5c,UAAW,eAAW,GAClCE,IACIc,YAAU,IACX4b,EAAS5c,UAAW,wBAAoB,GAC3CE,IACI03B,aAAYtoB,KACbsN,EAAS5c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV4b,EAAS5c,UAAW,sBAAkB,GACzCE,IACI43B,WACDlb,EAAS5c,UAAW,wBAAoB,GAC3CE,IACI43B,WACDlb,EAAS5c,UAAW,8BAA0B,GACjDE,IACI43B,WACDlb,EAAS5c,UAAW,0BAAsB,GAC7CE,IACI43B,WACDlb,EAAS5c,UAAW,gCAA4B,GACnDE,IACI43B,WACDlb,EAAS5c,UAAW,yBAAqB,GAC5CE,IACI43B,WACDlb,EAAS5c,UAAW,2BAAuB,GAC9CE,IACI43B,WACDlb,EAAS5c,UAAW,uBAAmB,GAC1CE,IACI43B,WACDlb,EAAS5c,UAAW,yBAAqB,GAC5C4c,EAAWK,EAAa/c,IACpB63B,yBACDnb,IAELob,aC9xGEC,GAAyB,WAIzB,SAASA,EAAQxiC,EAAQ+b,GACrBhQ,OAAKC,OAAOy2B,WACZn5B,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBA4CT,OAtCAgvB,EAAQj4B,UAAU4B,cAAgB,WAC9B,MAAO,WAKXq2B,EAAQj4B,UAAUiJ,iBAAmB,WACjClK,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKo5B,cAAep5B,OAEzDk5B,EAAQj4B,UAAUuJ,oBAAsB,WAChCxK,KAAKtJ,OAAO+T,aAGhBzK,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKo5B,gBAO3CF,EAAQj4B,UAAU4I,QAAU,WACxB7J,KAAKwK,uBAET0uB,EAAQj4B,UAAUm4B,cAAgB,WAK9B,IAAK,IAFDC,EADA5mB,EAAazS,KAAKtJ,OAAkB,YAAEsJ,KAAKtJ,OAAO0I,iBAElDk6B,EAAct5B,KAAKtJ,OAAOkJ,aACrB25B,EAAI,EAAGA,EAAID,EAAY/hC,OAAQgiC,IAAK,CAGzC,GAFsBhhC,YAAU,QAASka,KACjBla,YAAU,QAAS+gC,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRv5B,KAAKtJ,OAAO8mB,eAAgBpe,gBAAiBi6B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,SAASA,EAAO9iC,GACZ+L,OAAKC,OAAO+2B,UACZz5B,KAAKtJ,OAASA,EA4BlB,OArBA8iC,EAAOv4B,UAAUuf,eAAiB,SAAUkZ,GACxC15B,KAAKtJ,OAAOiB,KAAK6oB,eAAekZ,IAMpCF,EAAOv4B,UAAU4B,cAAgB,WAC7B,MAAO,UAOX22B,EAAOv4B,UAAU4I,QAAU,WACnB7J,KAAKtJ,OAAO+T,aAGhBzK,KAAKtJ,OAAOiB,KAAK+oB,aAAa7W,WAE3B2vB,KC5BPG,GAAuB,WAKvB,SAASA,EAAMjjC,GAEXsJ,KAAK45B,SAAU,EAEf55B,KAAK65B,oBAAqB,EAE1B75B,KAAK85B,eAAgB,EACrBr3B,OAAKC,OAAOq3B,SACZ/5B,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAwhCT,OAthCAyvB,EAAM14B,UAAU+4B,0BAA4B,SAAU7mB,GAYlD,OATInT,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC3CsJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAGvCuE,KAAKtJ,OAAOiB,KAAKhB,YAEV8G,OAAO,SAAUC,GAC7C,OAAOA,EAAE1E,WAAama,KAO9BwmB,EAAM14B,UAAUiJ,iBAAmB,WAC/BlK,KAAKtJ,OAAOyT,GAAG6jB,GAAmBhuB,KAAKi6B,WAAYj6B,MACnDA,KAAKtJ,OAAOyT,GAAG+jB,GAAmBluB,KAAKmH,WAAYnH,MACnDA,KAAKtJ,OAAOyT,GAAG+vB,GAAgBl6B,KAAKm6B,UAAWn6B,MAC/CA,KAAKtJ,OAAOyT,GAAGiwB,GAAmBp6B,KAAKq6B,YAAar6B,OAKxD25B,EAAM14B,UAAUw3B,YAAc,SAAUC,EAAaC,EAAS5H,GAC1D,IAAIuJ,EAAOt6B,KAAKtJ,OACZgiC,EAAY,GACK,UAAb3H,IACA/wB,KAAKu6B,aAAe,cAEP,UAAbxJ,IACA/wB,KAAKu6B,aAAe,iBAEP,UAAbxJ,IACA/wB,KAAKu6B,aAAe,iBAGxB,IAAK,IADD97B,KACKpH,EAAI,EAAGA,EAAIqhC,EAAYnhC,OAAQF,IACpCoH,EAAKpH,GAAK2I,KAAKtJ,OAAOyF,wBAAwBu8B,EAAYrhC,IAE9D,IACI2L,GACAvE,KAAMA,EACN+7B,UAAW7B,GAEVxhC,EAAgB6I,KAAKtJ,SACtBsJ,KAAKy6B,SAASz3B,GAND,GASbs3B,EAAKlgB,cACLkgB,EAAK98B,SAAWwC,KAAK06B,aAAaJ,EAAK98B,WAE3CwC,KAAKtJ,OAAOiB,KAAKo4B,WAMzB4J,EAAM14B,UAAUy5B,aAAe,SAAUjhB,GAUrC,IAAK,IATD7c,EAAU,SAAUvF,GAEpB,GADAoiB,EAAYpiB,GAAG6C,MAAQ7C,GAClBK,oBAAkB+hB,EAAYpiB,GAAGyB,YAAa,CAC/C,IAAI6hC,EAAgBlhB,EAAYhc,OAAO,SAAUgB,GAC7C,OAAOA,EAAKzF,WAAaygB,EAAYpiB,GAAGiH,iBACzC,GACHmb,EAAYpiB,GAAGyB,WAAWoB,MAAQygC,EAAczgC,QAG/C7C,EAAI,EAAGA,EAAIoiB,EAAYliB,OAAQF,IACpCuF,EAAQvF,GAEZ,OAAOoiB,GAEXkgB,EAAM14B,UAAUk5B,UAAY,SAAUz8B,GAGlC,IAAK,IAFDk9B,EACAC,EAAcn9B,EAAExF,QACXb,EAAIqG,EAAExF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAujC,EAAgBC,EAAYxjC,IACViH,eAAgB,CAC9B,IAAI5F,EAASmiC,EAAYp9B,OAAO,SAAUgB,GACtC,OAAOA,EAAKzF,WAAa4hC,EAAct8B,iBAE3C,GAAI5F,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAakF,QAAQo8B,GACvC/hC,EAAeH,EAAO,IACX,IAAXwB,IACIxC,oBAAkBsI,KAAKtJ,OAAOwG,aAC9BrE,EAAaS,aAAa6D,OAAOjD,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAakZ,yBAA0B,IAG/C/R,KAAK65B,oBAAqB,IAK1C,GAAIniC,oBAAkBsI,KAAKtJ,OAAOC,cAAgBqJ,KAAKtJ,OAAOC,WAAWY,OAAQ,CAKxE,IAHDujC,EADAR,EAAOt6B,KAAKtJ,OAEZqkC,EAAgBr9B,EAAExF,QAEtB,IAASb,EADQqG,EAAExF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtCyjC,EAAkBC,EAAc1jC,GAShC,GAPKK,oBAAkB4iC,EAAKr9B,mBACxBq9B,EAAKl9B,aAAe,MAEnB1F,oBAAkBojC,EAAgB1gC,WAClC0gC,EAAgB1gC,SAASyC,eAAey9B,EAAKl9B,gBAC9C09B,EAAgB1gC,SAASkgC,EAAKl9B,kBAE9B09B,EAAgBj+B,eAAey9B,EAAKl9B,eACnC09B,EAAgBR,EAAKl9B,cAAe7F,SAAWyI,KAAK65B,qBACpDniC,oBAAkB4iC,EAAKr9B,iBAExB,IAAK,IADD6M,EAAagxB,EAAgBR,EAAKl9B,cAC7BrD,EAAI,EAAGA,EAAI+P,EAAUvS,OAAQwC,KACW,IAAzCghC,EAAcv8B,QAAQsL,EAAU/P,MAChCghC,EAAc59B,OAAOpD,EAAG,EAAG+P,EAAU/P,IACrC+P,EAAU/P,GAAGK,SAAWgC,YAAW0N,EAAU/P,IAC7C1C,GAAK,GAIbyjC,EAAgBj+B,eAAey9B,EAAKr9B,kBAA6D,MAAzC69B,EAAgBR,EAAKr9B,mBACzE+C,KAAK65B,qBACTiB,EAAgB1gC,SAASkgC,EAAKr9B,iBAAmB,YAC1C69B,EAAgBhiC,kBAChBgiC,EAAgBx8B,gBAEvB5G,oBAAkB4iC,EAAK3jC,cACvB2jC,EAAK3jC,eAET2jC,EAAK3jC,WAAWwG,OA7BG,EA6BkB,EAAG29B,EAAgB1gC,UAE5DkgC,EAAK9c,eAAgB7mB,WAAY2jC,EAAK3jC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIwjC,EAAYtjC,OAAQF,IACpCme,WAAS,sBAAwBqlB,EAAYxjC,GAAG2B,SAAU6hC,EAAYxjC,GAAI2I,KAAKtJ,QAEnF,IAAIsM,GAASvE,KAAMf,EAAExF,QAASsiC,UAAW98B,EAAEi7B,SACvC34B,KAAKtJ,OAAOC,sBAAsBC,eAClCoJ,KAAKwZ,aAAexZ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACtDuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAKwZ,aAAexZ,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAEhCqJ,KAAKy6B,SAASz3B,KAGtB22B,EAAM14B,UAAUo5B,YAAc,SAAU38B,GACpC,IAAK,IAAIrG,EAAI,EAAGA,EAAIqG,EAAExF,QAAQX,OAAQF,IAClC2I,KAAK46B,cAAgBl9B,EAAExF,QAAQb,IAC3B2I,KAAK46B,cAAcvhC,iBAAmB2G,KAAK46B,cAAc9hC,aAE8B,IADvFkH,KAAKtJ,OAAOiB,KAAKhB,WACb6H,QAAQwB,KAAKg6B,0BAA0Bh6B,KAAK46B,cAAct8B,gBAAgB,KACjD,IAA7B0B,KAAK46B,cAAczgC,QACnB6F,KAAKg7B,iBAIjBrB,EAAM14B,UAAUg6B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgB56B,KAAK46B,cACrBQ,EAAgBp7B,KAAKo7B,cACrBC,EAAQr7B,KAAKtJ,OASjB,KALIwkC,EADAl7B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC/C2kC,EAAM1kC,WAAWA,WAAW8E,KAG5B4/B,EAAM1kC,aAEHe,oBAAkB0jC,IAAmBA,EAActiC,YAiBtE,IAAKkH,KAAKtJ,OAAOuG,kBAAqBvF,oBAAkB0jC,IAAkBA,EAActiC,aAC/D,eAAtBkH,KAAKu6B,cAAuD,kBAAtBv6B,KAAKu6B,cAGtC,CAAA,IADDjhC,EADS0G,KAAKg6B,0BAA0BoB,EAAc98B,gBAAgB,GAChDhF,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrC+jC,EAActiC,WAAWsB,SAAS4F,KAAKtJ,OAAO0G,cAAc/F,GAAKiC,EAAajC,GAAG+C,cAtBL,CACpF,IAAK,IAAI/C,EAAI,EAAGA,EAAIgB,OAAOC,KAAK4iC,GAAgB3jC,OAAQF,IAChD6jC,EAAe7jC,GAAG2I,KAAKtJ,OAAO0G,gBAAkBg+B,EAAchhC,SAAS4F,KAAKtJ,OAAO0G,gBACnF+9B,EAAM9jC,GAGY,eAAtB2I,KAAKu6B,aACAv6B,KAAKtJ,OAAOwG,WACbg+B,EAAe/9B,OAAOg+B,EAAK,EAAGP,EAAcxgC,UAGrB,kBAAtB4F,KAAKu6B,eACLv6B,KAAKtJ,OAAOwG,WACbg+B,EAAe/9B,OAAOg+B,EAAM,EAAG,EAAGP,EAAcxgC,WAaxD4F,KAAKtJ,OAAOuG,kBACR29B,EAAc9hC,WACY,eAAtBkH,KAAKu6B,cAAuD,kBAAtBv6B,KAAKu6B,cAC3CK,EAAc56B,KAAKtJ,OAAOuG,iBAAmBm+B,EAAcp7B,KAAKtJ,OAAOuG,iBACvE29B,EAAcxgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBm+B,EAAcp7B,KAAKtJ,OAAOuG,mBAGhF29B,EAAc56B,KAAKtJ,OAAOuG,iBAAmBm+B,EAAcp7B,KAAKtJ,OAAOwG,WACvE09B,EAAcxgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBm+B,EAAcp7B,KAAKtJ,OAAOwG,aAIpF09B,EAAcxgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmB,KACtD29B,EAAc56B,KAAKtJ,OAAOuG,iBAAmB,QAIzD08B,EAAM14B,UAAUq6B,qBAAuB,SAAUpoB,EAASqoB,GACtD,IAAIC,EAAkC,kBAAtBx7B,KAAKu6B,aACjBv6B,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,qBAAqB9f,OAAS,GAAK2b,IACxD,IAArBA,EAAQvJ,UAAkB6xB,IAC3Bx7B,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,qBAAqB,GAAG0N,UAG3E4U,EAAM14B,UAAUw6B,oBAAsB,SAAUvoB,EAASqoB,GACrD,IAAIG,EAAaxoB,IAAYA,EAAQ7K,UAAUC,SAAS,eAAiB4K,EAAQ7K,UAAUC,SAAS,mBAChGqzB,EAAiBzoB,IAAYwoB,GAC7B17B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOmI,UAAUtH,OAAS,GAAG4U,aAAa,cACrE+G,EAAQ/G,aAAa,YACzBqvB,EAAYG,GAAwC,eAAtB37B,KAAKu6B,aACnCv6B,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,oBAAoB9f,OAAS,GAAK2b,IAAYyoB,GAAkBH,IAC3Gx7B,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,oBAAoB,GAAG0N,UAG1E4U,EAAM14B,UAAU26B,WAAa,SAAUj9B,EAAKzE,EAAO8I,GAC/C,IAAI64B,EAAS74B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACxDrB,KAAKu6B,kBAAezd,EACpB,IAAIgf,EAAoB,EACxB97B,KAAKs7B,qBAAqBO,GAC1B77B,KAAKy7B,oBAAoBI,GACzB,IAAK,IAAIxkC,EAAI,EAAGA,EAAI2L,EAAK+E,KAAKxQ,OAAQF,KAC7BK,oBAAkBmkC,IAAWA,EAAO1vB,aAAa,cAAgBnJ,EAAK+E,KAAK1Q,GAAG8U,aAAa,cACxFtB,eAAa7H,EAAK3B,OAAQ,mBAC9BrB,KAAKu6B,aAAe,UACpBv6B,KAAK+7B,gBAIb,IAAIzB,EAAOt6B,KAAKtJ,OACZslC,EAAS,EAETC,EAAa3B,EAAKtW,SAAWsW,EAAKtW,QAAQzsB,OAC1C2kC,SAASC,eAAe7B,EAAKpnB,QAAQC,GAAK,6BAA6BipB,aAAe,EAEtFC,EAAiBr8B,KAAKs8B,UAAUhC,EAAKpnB,SAErCqpB,EAAgBjC,EAAKpuB,mBAAmBkwB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAK/G,aAAamJ,kBAAkBD,UAC/C/kC,oBAAkBmkC,KACnBC,EAAoBD,EAAOc,UAAYF,GAI3C,IAEIG,IAHJZ,EAASF,EAAoBS,EAZd,GAaU59B,EAAI,GAAGy9B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACT1kC,YAAU,sBAAuByK,GAC5Bk6B,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,EAC7D,GAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBn9B,KAAKu6B,eACrBv6B,KAAKs9B,oBACLt9B,KAAKu6B,aAAe,aACpBv6B,KAAKu9B,0BACLv9B,KAAKw9B,kBAAkB3B,GACvB77B,KAAKy9B,kBACLz9B,KAAKy7B,oBAAoBI,GACzB77B,KAAK09B,kBAAkB16B,EAAK3B,SAE5B+7B,GAA4C,YAAtBp9B,KAAKu6B,aAA4B,CACvDv6B,KAAKu9B,0BACL,IAAIrqB,OAAU,EACV3H,KACJ2H,EAAUnI,UAAQ/H,EAAK3B,OAAQ,OAC/BkK,KAAgBhD,MAAM3F,KAAKsQ,EAAQ1K,iBAAiB,oDACrCjR,OAAS,GACpByI,KAAK29B,iBAAiBpyB,GAAY,EAAM,iBAE5CvL,KAAK49B,iBAAiB/B,GACtB77B,KAAKw9B,kBAAkB3B,GACvB77B,KAAKu6B,aAAe,gBAEpB8C,GAA4C,YAAtBr9B,KAAKu6B,eAC3Bv6B,KAAKy9B,kBACLz9B,KAAKu9B,0BACLv9B,KAAKs9B,oBACLt9B,KAAKu6B,aAAe,gBACpBv6B,KAAK49B,iBAAiB/B,GACtB77B,KAAKs7B,qBAAqBO,GAC1B77B,KAAK09B,kBAAkB16B,EAAK3B,SAGpC,OAAOrB,KAAKu6B,cAEhBZ,EAAM14B,UAAUq8B,kBAAoB,WAChC,IAAIO,MACJA,KAAgBt1B,MAAM3F,KAAK5C,KAAKtJ,OAAOwc,QAAQ1K,iBAAiB,oBACjDjR,OAAS,GACpByI,KAAK29B,iBAAiBE,GAAY,EAAO,kBAGjDlE,EAAM14B,UAAUu8B,kBAAoB,SAAUrb,GAC1C,IAAI2b,EAAO99B,KAAKtJ,OAAOwc,QACnBonB,EAAOt6B,KAAKtJ,OAChB,GAAIyrB,GAAoC,IAAvBA,EAAUxY,WAAmBwY,EAAU9Z,UAAUC,SAAS,cAAe,CACtF,IAAIy1B,EAAM/9B,KAAKtJ,OAAO4V,cAAc,OAASC,UAAW,sBACpDyxB,EAAgBh+B,KAAKtJ,OAAOwV,mBAC5B+xB,EAAgB,EAChB3D,EAAKtW,UACLia,EAAgB3D,EAAK7I,cAAcyM,aAAa9B,cAEpD,IAAI+B,GAAgBzmC,oBAAkBsI,KAAKtJ,OAAO6uB,gBAAgBC,UAC9D2Y,IACAJ,EAAIvjC,MAAMgiC,IAAMx8B,KAAKtJ,OAAOiB,KAAKub,QAAQmE,uBAAuB,gBAAgB,GAAG+kB,aAC7E6B,EAAgB,MAE1BF,EAAIvjC,MAAMoS,MAAQuxB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAcp+B,KAAKq+B,iBAAmB,KAC1CL,EAAcx1B,iBAAiB,sBAAsBjR,QACtDymC,EAActwB,YAAYqwB,KAItCpE,EAAM14B,UAAU28B,iBAAmB,SAAUU,GACzC,IAAI5C,EAAa4C,IAAcA,EAAUj2B,UAAUC,SAAS,eACxDg2B,EAAUj2B,UAAUC,SAAS,mBACjC,GAAIg2B,IAAc5C,GAAc17B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOmI,UAAUtH,OAAS,GAAG4U,aAAa,cACrGmyB,EAAUnyB,aAAa,YAAa,CACpC,IAAIoyB,EAAev+B,KAAKtJ,OAAO4V,cAAc,OAASC,UAAW,qBAC7DiyB,EAAiBx+B,KAAKtJ,OAAO68B,aACjCgL,EAAa/jC,MAAMoS,MAAQ5M,KAAKtJ,OAAOwc,QAAQkrB,YAAcp+B,KAAKq+B,iBAAmB,KAChFG,EAAeh2B,iBAAiB,qBAAqBjR,SACtDinC,EAAen2B,UAAUsE,IAAI,uBAC7B6xB,EAAe9wB,YAAY6wB,GAC3BA,EAAa/jC,MAAMikC,OAASz+B,KAAKq+B,iBAAmB,QAIhE1E,EAAM14B,UAAUo9B,eAAiB,WAC7B,IAAIK,EAAa1+B,KAAKtJ,OAAO68B,aAAamJ,kBAC1C,OAAOgC,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAM14B,UAAU86B,aAAe,WAC3B,IAAI+C,EAAW5C,SAAS7kB,uBAAuB,qBAAqB,GAEpE,IADgBynB,EAASt2B,iBAAiB,gBAAgBjR,SACvCyI,KAAKtJ,OAAO6uB,gBAAgBC,SAAU,CACrD,IAAIuZ,EAAM7C,SAAS5vB,cAAc,OACjCjE,YAAU02B,GAAM,wBAChB12B,YAAU02B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAASh0B,cAAc,eAClCm0B,EAAUH,EAASh0B,cAAc,cAAc0C,UAC/CwxB,IACAC,EAAUD,EAASxxB,UACnBwxB,EAASE,WAAWC,YAAYH,IAEpCF,EAASh0B,cAAc,cAAc0C,UAAY,GACjD,IAAI4xB,EAAclD,SAAS5vB,cAAc,QACzC8yB,EAAY7yB,UAAY,aACxB6yB,EAAY5kC,MAAM6kC,YAAc,OAChCD,EAAY5xB,UAAYyxB,EACxBH,EAASh0B,cAAc,cAAc4C,YAAYqxB,GACjDD,EAASh0B,cAAc,cAAc4C,YAAY0xB,KAGzDzF,EAAM14B,UAAUw8B,gBAAkB,WAC9B,IAAI6B,EAAYpD,SAASpxB,cAAc,gBACnCw0B,GACAA,EAAUva,UAGlB4U,EAAM14B,UAAUy8B,kBAAoB,SAAUr8B,GAEtB3J,oBAAkBsI,KAAKtJ,OAAO6uB,gBAAgBC,UADlE,IAAItS,EAEA3H,MAEJA,GADA2H,EAAUnI,UAAQ1J,EAAQ,UACAkH,MAAM3F,KAAKsQ,EAAQ1K,iBAAiB,uDAC/CjR,SACe,eAAtByI,KAAKu6B,eACLv6B,KAAK29B,iBAAiBpyB,GAAY,EAAM,aACpCvL,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,wBAAwB9f,OAAS,GAC5EyI,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,wBAAwB,GAAG0N,UAGpD,kBAAtB/kB,KAAKu6B,cACLv6B,KAAK29B,iBAAiBpyB,GAAY,EAAM,kBAIpDouB,EAAM14B,UAAUs8B,wBAA0B,WACtC,IAAIgC,MACJA,KAAYh3B,MAAM3F,KAAK5C,KAAKtJ,OAAOwc,QAAQ1K,iBAAiB,+BACjDjR,SACPyI,KAAK29B,iBAAiB4B,GAAQ,EAAO,gBACrCv/B,KAAK29B,iBAAiB4B,GAAQ,EAAO,eAG7C5F,EAAM14B,UAAU08B,iBAAmB,SAAUj+B,EAAOiN,EAAKJ,GACrD,IAAK,IAAIlV,EAAI,EAAGe,EAAMsH,EAAMnI,OAAQF,EAAIe,EAAKf,IACrCsV,EACAjN,EAAMrI,GAAGgR,UAAUsE,IAAIJ,GAGvB7M,EAAMrI,GAAGgR,UAAU0c,OAAOxY,IAItCotB,EAAM14B,UAAUq7B,UAAY,SAAUppB,GAClC,IAAIssB,EAAMtsB,EAAQusB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAYhiC,OAAOolC,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAarlC,OAAOslC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,EACnC,OAASzD,IAAK5lB,KAAKspB,MAAM1D,GAAMS,KAAMrmB,KAAKspB,MAAMjD,KAEpDtD,EAAM14B,UAAUg5B,WAAa,SAAUj3B,GACnC,IAAIs3B,EAAOt6B,KAAKtJ,OACZypC,EAAengC,KAAKtJ,OAAOwc,QAAQpI,cAAc,sBACrDq1B,EAAa3lC,MAAM4lC,OAAS,GAC5B,IAAIvE,EAAS74B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACpDg/B,EAASxE,EAASA,EAAOlyB,UAAY,EACrCkxB,KACAO,EAAgBd,EAAKn+B,wBAAwBkkC,GAmBjD,GAlBArgC,KAAKy9B,kBACLz9B,KAAK45B,SAAU,EACV52B,EAAKvE,KAAK,GAIXo8B,EAAc73B,EAAKvE,KAHnBo8B,EAAYriC,KAAKwK,EAAKvE,OAKV,IAAZ4hC,EACArgC,KAAKsgC,mBAAmBzF,EAAaO,IAGrCp7B,KAAK45B,SAAU,EACf55B,KAAK+7B,iBAEJzB,EAAK/U,gBAAgBC,UAAYxlB,KAAK45B,SACvCU,EAAK1B,qBAAqBgD,WAAW54B,EAAK+E,KAAMs4B,EAAQr9B,GAExDs3B,EAAK/U,gBAAgBC,SAAU,CAE/B,IADI+a,EAAc11B,eAAa7H,EAAK3B,OAAQ,gBACzBk/B,EAAYptB,KAAOnT,KAAKtJ,OAAO6uB,gBAAgBC,SAAU,CACvD+a,EAAYC,cAAc,GAChC5H,qBAAqBgD,WAAW54B,EAAK+E,KAAMs4B,EAAQr9B,IAGtE,GAAIA,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAMi5B,EAAK/U,gBAAgBC,UAAW,CAC1E,IAAI+a,GAAAA,EAAc11B,eAAa7H,EAAK3B,OAAQ,iBAExC8+B,EAAa3lC,MAAM4lC,OAAS,aAIxCzG,EAAM14B,UAAUkG,WAAa,SAAUnE,GACnC,IAAIs3B,EAAOt6B,KAAKtJ,OA6ChB,GA3CK4jC,EAAK/U,gBAAgBC,UAuBlBxiB,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAMi5B,EAAK/U,gBAAgBC,WAAa3a,eAAa7H,EAAK3B,OAAQ,eACtGwJ,eAAa7H,EAAK3B,OAAQ,cAAc8R,KAAOmnB,EAAK/U,gBAAgBC,YACpEhQ,WAAS,eAAgBxV,KAAKu6B,aAAcv3B,GAC5Cs3B,EAAKpxB,QhBpaA,UgBoawBlG,IACxBA,EAAKiG,QAAUqxB,EAAK/U,gBAAgBC,WACrCxlB,KAAKygC,aAAaz9B,GACds3B,EAAKlgB,cACLkgB,EAAK98B,SAAWwC,KAAK06B,aAAaJ,EAAK98B,aA7B/CqN,eAAa7H,EAAK3B,OAAQ,eACtBrB,KAAKtJ,OAAOwc,QAAQpI,cAAc,kBAClC9K,KAAKu6B,aAAe,WAExB/kB,WAAS,eAAgBxV,KAAKu6B,aAAcv3B,GAC5CA,EAAKw3B,UAAYx3B,EAAKw3B,YAAcx3B,EAAK09B,UAAY1gC,KAAK2gC,aAAa39B,EAAK3B,OAAOwgB,eAAiB7e,EAAKw3B,UACzGF,EAAKpxB,QhBjZA,UgBiZwBlG,GACxBA,EAAKiG,SACD9R,EAAgB6I,KAAKtJ,SACtBsJ,KAAKy6B,SAASz3B,GAEds3B,EAAKlgB,cACLkgB,EAAK98B,SAAWwC,KAAK06B,aAAaJ,EAAK98B,WAE3C88B,EAAK3iC,KAAKo4B,UACLr4B,oBAAkB4iC,EAAKpuB,mBAAmBpB,cAAc,wBACzDwvB,EAAKpuB,mBAAmBpB,cAAc,sBAAsBia,WAkB5E/kB,KAAKu9B,0BACLv9B,KAAKs9B,oBACA5lC,oBAAkBsI,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,qBAAqB,IAG7E3f,oBAAkBsI,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,oBAAoB,KACvFrX,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,oBAAoB,GAAG0N,SAHlE/kB,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,qBAAqB,GAAG0N,SAKnE/kB,KAAKtJ,OAAO4I,sBAAwBU,KAAKtJ,OAAOma,cAAgBnZ,oBAAkBsL,EAAKvE,KAAK,GAAa,YAAI,CAC7G,IAAIvE,EAAQ8F,KAAKtJ,OAAO0I,gBACxBlF,GAAgB,EAChB,IAAIm8B,EAAkBr2B,KAAKtJ,OAAO6E,0BAA0B,GACxDoO,EAAW3J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBkE,EAAKvE,KAAK,GAAG43B,IACjE13B,EAAMqB,KAAKtJ,OAAOmI,UAAU8K,GAC5BlL,EAAOuE,EAAKvE,KAAK,GACrB,GAA0B,kBAAtBuB,KAAKu6B,aAAkC,CACvC,IAAI7hC,KACAqP,KACJrP,EAAOF,KAAKiG,GACZsJ,EAAKvP,KAAKmG,GACVF,EAAOuE,EAAKvE,KAAK,GAAa,WAC9BkL,EAAW3J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBL,EAAK43B,IACzD,IAAIuK,EAAY5gC,KAAKtJ,OAAOmI,UAAU8K,GACtCjR,EAAOF,KAAKiG,GACZsJ,EAAKvP,KAAKooC,GACV,IAAK,IAAIvpC,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2I,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM/F,EAAOrB,GAAIoI,KAAMsI,EAAK1Q,GAAGqI,MAAMxF,GACrCyF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,mBAGrB,IAAIuX,EAAYwpB,EAAUvpB,uBAAuB,sBAAsB,GAClE3f,oBAAkB0f,KACnBhK,eAAagK,GAAY,sBACzBhH,YAAUgH,GAAY,0BAI1BpX,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAMA,EAAMgB,KAAMd,EAAIe,MAAMxF,GAC5ByF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,qBAK7B85B,EAAM14B,UAAUw/B,aAAe,SAAUz9B,GACrC,IAKI69B,EALAvG,EAAOt6B,KAAKtJ,OAEZyrB,EAAYpX,UAAQ/H,EAAK3B,OAAQ,MACjCy/B,EAAcC,MAAM/gC,KAAK2gC,aAAaxe,IAAc,EAAIniB,KAAK2gC,aAAaxe,GAC1Eoe,EAAc11B,eAAa7H,EAAK3B,OAAQ,cAE5C,GAAIk/B,GAAeA,EAAYptB,KAAOnT,KAAKtJ,OAAO6uB,gBAAgBC,WAAa/uB,EAAauJ,KAAKtJ,UACzFS,EAAgB6I,KAAKtJ,QAAS,CAClCmqC,EAAaN,EAAYC,cAAc,GAGvC,IAAK,IAFDtoC,EAAUoiC,EAAK5xB,qBACfyrB,KACK98B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC88B,EAAQ98B,GAAKa,EAAQb,GAAG6C,MAE5B,GAA6B,MAAzB8F,KAAKtJ,OAAOwG,YAAsBxF,oBAAkBsI,KAAKu6B,eAAuC,kBAAtBv6B,KAAKu6B,cAE1E,CAAA,IADDyG,KACJ,IAAS3pC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC,GAAIa,EAAQb,GAAGgC,gBAAiB,CAC5B2nC,EAAWxoC,KAAKN,EAAQb,IAExB,IAAK,IADD2G,EAAQ9F,EAAQb,GAAGiC,aACd09B,EAAM,EAAGA,EAAMh5B,EAAMzG,OAAQy/B,IAClCgK,EAAWxoC,KAAKwF,EAAMg5B,IAE1B9+B,EAAU8oC,GAItB1G,EAAKloB,OAAOgoB,IAAqBjG,QAASA,EAASj8B,QAASA,IAC5D2oC,EAAWzuB,OAAO8nB,IAAkBvB,QAASmI,EAAa5oC,QAASA,IACnE,IAAI+oC,EAAqBJ,EAAWjI,qBAAqBpf,aACzD,IAAK9hB,oBAAkBupC,GACnB,IAAS5pC,EAAI,EAAGA,EAAI4pC,EAAmB1pC,OAAQF,IAE3C,GADA4pC,EAAmB5pC,GAAG6C,MAAQ7C,GACzBK,oBAAkBupC,EAAmB5pC,GAAGyB,YAAa,CACtD,IAAIooC,EAAc7iC,WAAS,sBAAwB4iC,EAAmB5pC,GAAGiH,eAAiB,SAAUuiC,GACpGI,EAAmB5pC,GAAGyB,WAAWoB,MAAQgnC,EAIrD5G,EAAK3iC,KAAKo4B,UACV8Q,EAAWlpC,KAAKo4B,UACZ8Q,EAAWlpC,KAAKhB,WAAWY,OAAS,IACpCspC,EAAWlpC,KAAKo4B,UACXr4B,oBAAkBmpC,EAAW30B,mBAAmBpB,cAAc,wBAC/D+1B,EAAW30B,mBAAmBpB,cAAc,sBAAsBia,SAEjErtB,oBAAkBmpC,EAAWtN,aAAazoB,cAAc,uBACzD+1B,EAAWtN,aAAazoB,cAAc,qBAAqBia,UAInE5tB,EAAgB6I,KAAKtJ,UACrBmqC,EAAaN,EAAYC,cAAc,GACvClG,EAAK3iC,KAAKo4B,UACV8Q,EAAWlpC,KAAKo4B,YAGxB4J,EAAM14B,UAAU0/B,aAAe,SAAUxe,GACrC,OAAOA,EAAY7P,SAAS6P,EAAUhW,aAAa,iBAAkB,IAAM,GAE/EwtB,EAAM14B,UAAUlI,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtBkH,KAAKu6B,aAAkC,CACvC,IAAI4G,EAAiBnhC,KAAKtJ,OAAOgS,qBAAqB,GACtD1I,KAAKo7B,cAAgBriC,EAAciH,KAAKtJ,OAAQyqC,EAAeroC,WAAWE,UAE9E,GAA0B,kBAAtBgH,KAAKu6B,aAAkC,CAC3Bv6B,KAAKtJ,OAAOgS,qBAAqB,GAAGvO,QAClCrB,EAAWqB,MACrB6F,KAAKo7B,cAAgBriC,EAAciH,KAAKtJ,OAAQoC,EAAWE,UAG3DgH,KAAKjH,cAAcD,KAI/B6gC,EAAM14B,UAAUw5B,SAAW,SAAUz3B,EAAMo+B,GACvC,GAA0B,YAAtBphC,KAAKu6B,eAA+B9jC,EAAauJ,KAAKtJ,QAAS,CAC/D,IAAI4jC,EAAOt6B,KAAKtJ,OACZkkC,OAAgB,EAChBQ,OAAgB,EACpB,GAAI1jC,oBAAkBsL,EAAKw3B,WAAY,CACnC,IAAI7wB,EAAW2wB,EAAKpyB,wBAAwB,GAAK,EAC7CxP,EAAS4hC,EAAKn+B,wBAAwBwN,GAC1C3J,KAAKjH,cAAcL,QAGnBsK,EAAKw3B,UAAYx3B,EAAKw3B,YAAcx3B,EAAK09B,UAAY1gC,KAAK2gC,aAAa39B,EAAK3B,OAAOwgB,eAAiB7e,EAAKw3B,UACzGx6B,KAAKo7B,cAAgBd,EAAKn+B,wBAAwB6G,EAAKw3B,WAE3D,IAAIK,KACJO,EAAgBp7B,KAAKo7B,cAChBp4B,EAAKvE,KAAK,GAIXo8B,EAAc73B,EAAKvE,KAHnBo8B,EAAYriC,KAAKwK,EAAKvE,MAK1B,IAAI2P,EAAQ,EACR+vB,EAAen+B,KAAKtJ,OAAO6uB,gBAAgBC,SAC/CxlB,KAAKqhC,eAAiBlD,EAEjBA,EAIDn+B,KAAK85B,cAA8BqE,GAAgBn+B,KAAK65B,mBAHxD75B,KAAKsgC,mBAAmBzF,EAAaO,GAKzC,IAAIkG,EAAazG,EAAYtjC,OACxBG,oBAAkBsI,KAAKtJ,OAAOwG,YAC/B29B,EAAY0G,UAEhB,IAAK,IAAIlqC,EAAI,EAAGA,EAAIiqC,EAAYjqC,IAAK,CACjCujC,EAAgBC,EAAYxjC,GAC5B2I,KAAK46B,cAAgBA,EACrB,IAAI7rB,EAAc/L,EAAKw3B,UACnBx/B,GAAmBtD,oBAAkB4iC,EAAKr9B,iBAC9C,GAA0B,YAAtB+C,KAAKu6B,aAA4B,CAIjC,GAHKD,EAAK/U,gBAAgBC,WAAY4b,GAClCphC,KAAKg7B,gBAELh7B,KAAK46B,gBAAkB56B,KAAKo7B,cAAe,CAC3C,IAAIoG,EAAexhC,KAAK2gC,aAAa39B,EAAK3B,OAAOogC,aAAa5f,eAC1Dkf,MAAMS,KACNA,EAAexhC,KAAK2gC,aAAa39B,EAAK3B,OAAOwgB,gBAEjD9S,EAAc/L,EAAKw3B,UAAYgH,EAC/BpG,EAAgBp7B,KAAKo7B,cAAgBp7B,KAAKtJ,OAAOyF,wBAAwB6G,EAAKw3B,WAElF,IAAIkH,EAAe1hC,KAAKwZ,aAAahb,QAAQ48B,GAE7C,GADAp7B,KAAK2hC,UAAUD,EAAc1mC,EAAiB3D,GACpB,kBAAtB2I,KAAKu6B,aAAkC,CAcvC,GAbKa,EAAc/hC,iBAOf+U,EAAQpO,KAAK4hC,cAAcxG,EAAe,GACtCp7B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOukC,EAAetzB,EAAQ,EAAG,EAAGpO,KAAK46B,cAAcxgC,UAEzE4F,KAAKwZ,aAAarc,OAAOukC,EAAetzB,EAAQ,EAAG,EAAGpO,KAAK46B,iBAVvD56B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOukC,EAAe,EAAG,EAAG1hC,KAAK46B,cAAcxgC,UAEjE4F,KAAKwZ,aAAarc,OAAOukC,EAAe,EAAG,EAAG1hC,KAAK46B,gBASnDA,EAAcvhC,iBAAmB3B,oBAAkBsI,KAAKtJ,OAAOwG,WAAY,CAE3E8C,KAAK6hC,uBAAuBjH,EADhB,GAEZ56B,KAAK8hC,kBAAkBlH,EAAe8G,EAAetzB,EAAQ,GAEjE,GAAIgtB,EAActiC,WAAY,CAC1B,IACIQ,EADM0G,KAAKg6B,0BAA0BoB,EAAc98B,gBAChC,GAAGhF,aACtByoC,EAAqBzoC,EAAakF,QAAQ48B,GAAiB,EAC/D9hC,EAAa6D,OAAO4kC,EAAoB,EAAGnH,IAGnD56B,KAAKgiC,WAAWjzB,EAAa2yB,EAAc1+B,EAAMo+B,EAAYpmC,EAAiB3D,GAElF,GAAIK,oBAAkBkjC,EAAc9hC,YAAa,CAC7C,IAAIygB,EAAgB+gB,EAAK/8B,WACrB0kC,EAAiB1oB,EAAc/a,QAAQwB,KAAKo7B,eACtB,kBAAtBp7B,KAAKu6B,aACLhhB,EAAcpc,OAAO8kC,EAAiB,EAAG,EAAGrH,GAEjB,eAAtB56B,KAAKu6B,cACVhhB,EAAcpc,OAAO8kC,EAAgB,EAAGrH,GAGhDN,EAAK1B,qBAAqBqC,2BAItCtB,EAAM14B,UAAU+gC,WAAa,SAAUjzB,EAAa2yB,EAAc1+B,EAAMhI,EAAiBomC,EAAY/pC,GACjG,IAAIijC,EAAOt6B,KAAKtJ,OACZ4C,EAAeF,EAAoB4G,KAAKo7B,eACxC8G,EAAsBxqC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBmqC,EAAe,EAC5CpoC,EAAa/B,OAASmqC,EAAe,EACf,kBAAtB1hC,KAAKu6B,eACDD,EAAKr9B,iBACL+C,KAAKxE,SAAS2B,OAAO+kC,EAAoB,EAAGliC,KAAK46B,cAAcxgC,UAC/D4F,KAAKwZ,aAAarc,OAAO+kC,EAAoB,EAAGliC,KAAK46B,gBAGrD56B,KAAKwZ,aAAarc,OAAO+kC,EAAoB,EAAGliC,KAAK46B,eAEzD56B,KAAKmiC,cACDniC,KAAK46B,cAAcvhC,iBACnB2G,KAAK8hC,kBAAkB9hC,KAAK46B,cAAesH,EAAoBliC,KAAKo7B,cAAcjiC,YAI9FwgC,EAAM14B,UAAU0gC,UAAY,SAAUD,EAAc1mC,EAAiB3D,GACjE,IAAIijC,EAAOt6B,KAAKtJ,OAChB,GAA0B,eAAtBsJ,KAAKu6B,aAA+B,CAQpC,GAPID,EAAKr9B,iBACL+C,KAAKxE,SAAS2B,OAAOukC,EAAc,EAAG1hC,KAAK46B,cAAcxgC,UAE7D4F,KAAK46B,cAAc9hC,WAAakH,KAAKwZ,aAAakoB,GAAc5oC,WAChEkH,KAAK46B,cAAct8B,eAAiB0B,KAAKwZ,aAAakoB,GAAcpjC,eACpE0B,KAAK46B,cAAczgC,MAAQ6F,KAAKwZ,aAAakoB,GAAcvnC,MAC3D6F,KAAKwZ,aAAarc,OAAOukC,EAAc,EAAG1hC,KAAK46B,eAC3C56B,KAAK46B,cAAcvhC,gBAAiB,CAEpC2G,KAAK8hC,kBAAkB9hC,KAAK46B,cAAe8G,GAC3C1hC,KAAK6hC,uBAAuB7hC,KAAK46B,cAFrB,GAIhB,GAAI56B,KAAKo7B,cAActiC,WAAY,CAC/B,IACIQ,EADM0G,KAAKg6B,0BAA0Bh6B,KAAKo7B,cAAc98B,gBACrC,GAAGhF,aACtByoC,EAAqBzoC,EAAakF,QAAQwB,KAAKo7B,eACnD9hC,EAAa6D,OAAO4kC,EAAoB,EAAG/hC,KAAK46B,kBAI5DjB,EAAM14B,UAAUkhC,YAAc,WAC1B,IAAI7H,EAAOt6B,KAAKtJ,OACZkkC,EAAgB56B,KAAK46B,cACrBQ,EAAgBp7B,KAAKo7B,cACrBgH,EAAY9H,EAAKl9B,aAWrB,GAVKg+B,EAAc/hC,kBACf+hC,EAAc/hC,iBAAkB,EAChC+hC,EAAcrpB,yBAA0B,GACpCra,oBAAkB0jC,EAAc9hC,eAAuD,IAAtC8hC,EAAc9hC,aAAa/B,UAC5E6jC,EAAc9hC,iBACTghC,EAAKr9B,iBAAmBvF,oBAAkB0jC,EAAchhC,SAASgoC,MAClEhH,EAAchhC,SAASgoC,SAIT,kBAAtBpiC,KAAKu6B,aAAkC,CACvC,IAAIzhC,EAAasD,YAAWg/B,GAQ5B,UAPOtiC,EAAWQ,aAClBshC,EAAc9hC,WAAaA,EAC3B8hC,EAAct8B,eAAiB88B,EAAcpiC,SAC7CoiC,EAAc9hC,aAAa6D,OAAOi+B,EAAc9hC,aAAa/B,OAAQ,EAAGqjC,GACnEljC,oBAAkBkjC,IAAmBN,EAAKr9B,iBAAoBvF,oBAAkB0jC,EAAchhC,SAASgoC,KACxGhH,EAAchhC,SAASkgC,EAAKl9B,cAAcD,OAAOi+B,EAAc9hC,aAAa/B,OAAQ,EAAGqjC,EAAcxgC,UAEpGwgC,EAAcvhC,gBAGd,CAEDuhC,EAAczgC,MAAQihC,EAAcjhC,MAAQ,EAC5C6F,KAAK6hC,uBAAuBjH,EAFhB,QAHZA,EAAczgC,MAAQihC,EAAcjhC,MAAQ,EAOhDihC,EAAcjiC,UAAW,IAGjCwgC,EAAM14B,UAAU+5B,cAAgB,WACxBh7B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,SAChEsJ,KAAKwZ,aAAexZ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAC3DuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAKwZ,aAAexZ,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAEhC,IAAI0rC,EACJA,EAAatpC,EAAciH,KAAKtJ,OAAQsJ,KAAK46B,cAAc5hC,UAC3DgH,KAAKsiC,cAAcD,IAEvB1I,EAAM14B,UAAU6gC,kBAAoB,SAAUppC,EAAQ0V,EAAOjV,GACzD,IAAIuV,EACA4rB,EAAOt6B,KAAKtJ,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBqX,EAAgBhW,EAAOY,aAAajC,GACpC+W,IACAksB,EAAK98B,SAASL,OAAOiR,EAAO,EAAGM,GAC/B8G,WAAS,sBAAwB9G,EAAc1V,SAAU0V,EAAe1O,KAAKtJ,QACzE4jC,EAAKr9B,iBACL+C,KAAKxE,SAAS2B,OAAOiR,EAAO,EAAGM,EAActU,UAE7CsU,EAAcrV,kBACd+U,EAAQpO,KAAK8hC,kBAAkBpzB,EAAeN,IAGtD,OAAOA,GAEXurB,EAAM14B,UAAU4gC,uBAAyB,SAAUnpC,EAAQyB,GACvD,IACIuU,EADAnX,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BqX,EAAgBhW,EAAOY,aAAajC,GACpC,IAAIkG,OAAa,EACb7E,EAAOI,aACPyE,EAAaxE,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,WAE9D0V,EAAcvU,MAAQzB,EAAOI,WAAayE,EAAWpD,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFuU,EAAcrV,kBACdc,IACAA,EAAQ6F,KAAK6hC,uBAAuBnzB,EAAevU,IAG3D,OAAOA,GAEXw/B,EAAM14B,UAAUqhC,cAAgB,SAAU5pC,GACtC,IACI/B,EADA2jC,EAAOt6B,KAAKtJ,OAGZC,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAI0rC,EAAa3pC,EAGbsC,GAAmBtD,oBAAkB4iC,EAAKr9B,iBAC1CslC,EAAiBviC,KAAKg6B,0BAA0BqI,EAAW/jC,gBAAgB,GAC/E,GAAI+jC,EAAY,CACZ,GAAIA,EAAWvpC,WAAY,CACvB,IAAIQ,EAAeipC,EAAiBA,EAAejpC,gBAC/CkpC,EAAa,EACblpC,GAAgBA,EAAa/B,OAAS,IACtCirC,EAAalpC,EAAakF,QAAQ6jC,GAClCE,EAAejpC,aAAa6D,OAAOqlC,EAAY,GAC1CxiC,KAAKtJ,OAAOuG,iBACbpC,GAAaZ,MAAOooC,EAAY/mC,OAAQ,UAAY0E,KAAKtJ,OAAQsE,EAAiBqnC,EAAWnoC,MAAOmoC,EAAWnoC,QAI3H,GAAIogC,EAAKr9B,gBAAiB,CAClBolC,EAAWhpC,iBAAmBgpC,EAAW/oC,aAAa/B,OAAS,GAC/DyI,KAAKyiC,gBAAgBJ,GAKzB,IAAK,IAHDlH,OAAM,EACNuH,OAAM,EACNlpB,EAAe7iB,EACVU,EAAI,EAAGA,EAAImiB,EAAajiB,OAAQF,IACjCmiB,EAAaniB,GAAG2I,KAAKtJ,OAAOwG,aAAemlC,EAAWjoC,SAAS4F,KAAKtJ,OAAOwG,aAC3Ei+B,EAAM9jC,GAGd,IAASA,EAAI,EAAGA,EAAI2I,KAAKwZ,aAAajiB,OAAQF,IACtC2I,KAAKwZ,aAAaniB,GAAG2I,KAAKtJ,OAAOwG,aAAemlC,EAAWjoC,SAAS4F,KAAKtJ,OAAOwG,aAChFwlC,EAAMrrC,IAGD,IAAT8jC,IAAuB,IAATuH,IACd/rC,EAAWwG,OAAOg+B,EAAK,GACvBn7B,KAAKwZ,aAAarc,OAAOulC,EAAK,IAGtC,IAAIC,EAAgB3iC,KAAKwZ,aAAahb,QAAQ6jC,GAC9C,IAAK/H,EAAKr9B,gBAAiB,CACvB,IAAI2lC,EAAc5iC,KAAKtJ,OAAO6G,WAAWiB,QAAQ6jC,IAC5B,IAAjBO,IACAtI,EAAK/8B,WAAWJ,OAAOylC,EAAa,GACpCjsC,EAAWwG,OAAOylC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyBrI,EAAKr9B,gBAE9B,IAAK,IADDo5B,EAAkBiE,EAAK/+B,0BAA0B,GAC5CxB,EAAI,EAAGA,EAAIiG,KAAKwZ,aAAajiB,OAAQwC,IACtCiG,KAAKwZ,aAAazf,GAAGs8B,KAAqBgM,EAAWhM,KACrDsM,EAAgB5oC,GAI5B,IAAKugC,EAAKr9B,gBAAiB,CACvB,IAAI4lC,EAAqB7iC,KAAK4hC,cAAcS,EAAY,GACxDriC,KAAKwZ,aAAarc,OAAOwlC,EAAeE,EAAqB,GAE7DR,EAAWvpC,YAAcypC,GAAkBA,EAAejpC,eAAiBipC,EAAejpC,aAAa/B,SACvGgrC,EAAeppC,UAAW,EAC1BopC,EAAelpC,iBAAkB,EACjCkpC,EAAexwB,yBAA0B,KAIrD4nB,EAAM14B,UAAUwhC,gBAAkB,SAAU/pC,GACxC,IACIgW,EACAysB,EACAuH,EACA/rC,EAJOqJ,KAAKtJ,OAMZC,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDqX,EAAgBhW,EAAOY,aAAajC,GACpC,IAAImiB,OAAe,EAEfA,EADAxZ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACjDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE/B,IAAK,IAAImsC,EAAM,EAAGA,EAAMtpB,EAAajiB,OAAQurC,IACrCtpB,EAAaspB,GAAK9iC,KAAKtJ,OAAOwG,aAAewR,EAActU,SAAS4F,KAAKtJ,OAAOwG,aAChFi+B,EAAM2H,GAGd,IAAK,IAAIC,EAAM,EAAGA,EAAM/iC,KAAKwZ,aAAajiB,OAAQwrC,IAC9C,GAAI/iC,KAAKwZ,aAAaupB,GAAK/iC,KAAKtJ,OAAOwG,aAAewR,EAActU,SAAS4F,KAAKtJ,OAAOwG,WAAY,CACjGwlC,EAAMK,EACN,OAGK,IAAT5H,IAAuB,IAATuH,IACd/rC,EAAWwG,OAAOg+B,EAAK,GACvBn7B,KAAKwZ,aAAarc,OAAOulC,EAAK,IAE9Bh0B,EAAcrV,iBACd2G,KAAKyiC,gBAAgB/zB,KAIjCirB,EAAM14B,UAAU2gC,cAAgB,SAAUlpC,EAAQ0V,GAC9C,IAAIM,EACJ,IAAKhW,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C+W,KADAM,EAAgBhW,EAAOY,aAAajC,IAElBgC,kBACd+U,EAAQpO,KAAK4hC,cAAclzB,EAAeN,IAGlD,OAAOA,GAEXurB,EAAM14B,UAAUq/B,mBAAqB,SAAU0C,EAAgBt0B,GAChD1O,KAAKtJ,OAAhB,IACIusC,EAAiBjjC,KACrBgjC,EAAevlC,OAAO,SAAUC,GAC5B,GAAIA,EAAErE,kBAAoB3B,oBAAkBgG,EAAEpE,cAAe,CAEzD,IAAe,IADHoE,EAAEpE,aAAakF,QAAQkQ,GAQ/B,OAHAu0B,EAAe1I,aAAe,UAC9B0I,EAAelH,oBACfkH,EAAerJ,SAAU,GALzBqJ,EAAe3C,mBAAmB5iC,EAAEpE,aAAcoV,OAWlEirB,EAAM14B,UAAU4I,QAAU,WACtB7J,KAAKwK,uBAKTmvB,EAAM14B,UAAUuJ,oBAAsB,WAC9BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIsjB,GAAmBhuB,KAAKi6B,YACxCj6B,KAAKtJ,OAAOgU,IAAIwjB,GAAmBluB,KAAKmH,YACxCnH,KAAKtJ,OAAOgU,IAAIwvB,GAAgBl6B,KAAKm6B,WACrCn6B,KAAKtJ,OAAOgU,IAAI0vB,GAAmBp6B,KAAKq6B,eAS5CV,EAAM14B,UAAU4B,cAAgB,WAC5B,MAAO,kBAEJ82B,KCjjCPl5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQxJ,EAAKyJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUjK,OAAQkK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjJ,OAAOqJ,yBAAyBL,EAAQxJ,GAAOyJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxJ,EAAKyJ,QACpH,IAAK,IAAIjK,EAAI+J,EAAW7J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIS,EAAW/J,MAAIoK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxJ,EAAK4J,GAAKd,EAAEU,EAAQxJ,KAAS4J,GAChJ,OAAOF,EAAI,GAAKE,GAAKpJ,OAAOwJ,eAAeR,EAAQxJ,EAAK4J,GAAIA,GAM5Dq3B,GAAiC,SAAU/2B,GAE3C,SAAS+2B,IACL,OAAkB,OAAX/2B,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,GAAUq4B,EAAiB/2B,GAI3BZ,IACIc,cACD62B,EAAgB73B,UAAW,gBAAY,GACnC63B,GACT52B,iBChCEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAsBxCmiC,GAA8C,SAAUnhC,GAExD,SAASmhC,EAA6BxsC,GAClC,IAAI2Q,EAAQtF,EAAOa,KAAK5C,KAAMtJ,IAAWsJ,KAEzC,OADAqH,EAAM6C,mBACC7C,EAkDX,OAtDA5G,GAAUyiC,EAA8BnhC,GAMxCmhC,EAA6BjiC,UAAUiJ,iBAAmB,WACtDlK,KAAKtJ,OAAOyT,GAAGg5B,GAAqBnjC,KAAKojC,SAAUpjC,OAEvDkjC,EAA6BjiC,UAAUmiC,SAAW,SAAUpgC,GACxDhD,KAAKqjC,WAAargC,EAAKvE,MAE3BykC,EAA6BjiC,UAAUqiC,aAAe,SAAU7kC,EAAM8kC,GAClE,GAAKvjC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACvC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAersC,EAAgB6I,KAAKtJ,QACzE,OAAOqL,EAAOd,UAAUqiC,aAAa1gC,KAAK5C,KAAMvB,EAAM8kC,GAGjD7rC,oBAAkB6rC,EAAW1jC,cAAsD,gBAAtC0jC,EAAW1jC,YAAYgI,aACrE07B,EAAW1jC,YAAc,WAG7B,IAAK,IADDkI,EAAOhG,EAAOd,UAAUqiC,aAAa1gC,KAAK5C,KAAMvB,EAAM8kC,GACjD9hC,EAAI,EAAGA,EAAIsG,EAAKxQ,OAAQkK,IAC7BsG,EAAKtG,GAAGvH,MAAS8F,KAAe,WAAExB,QAAQuJ,EAAKtG,GAAGhD,MAEtD,OAAOsJ,GAGfm7B,EAA6BjiC,UAAUwiC,mBAAqB,SAAUnoC,GAClE,IAAIooC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAU/e,KAAK,SAAU1qB,GAAS,OAAOqB,IAAWrB,IAChE,GAAK+F,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACvC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAersC,EAAgB6I,KAAKtJ,QAAS,CAClF,IACI0iB,EAAcpZ,KAAU,MAAEoZ,YAC1BsqB,GACA1jC,KAAK2jC,SACL3jC,KAAKvB,QACLuB,KAAK4jC,WAEW,kBAAXtoC,GAA8B0E,KAAK2jC,MAAMvqB,IAC9CpZ,KAAK2jC,MAAMvqB,GAAa7hB,OAAUyI,KAAKtJ,OAAoB,cAAEmtC,uBACtD7jC,KAAK2jC,MAAMvqB,QAIlBsqB,GAAoB,kBAAXpoC,KACT0E,KAAK2jC,SACL3jC,KAAKvB,QACLuB,KAAK4jC,WAGb,OAAOF,GAEJR,GACTY,4BCvEEC,GAAwB,WAIxB,SAASA,EAAOrtC,GACZ+L,OAAKC,OAAOshC,UACZhkC,KAAKtJ,OAASA,EACdsJ,KAAKikC,mBAAoB,EACzBjkC,KAAKkO,kBACLlO,KAAKkkC,oBACLlkC,KAAKmkC,sBACLnkC,KAAKkK,mBAyMT,OAnMA65B,EAAO9iC,UAAU4B,cAAgB,WAC7B,MAAO,UAOXkhC,EAAO9iC,UAAU4I,QAAU,WACvB7J,KAAKwK,uBAKTu5B,EAAO9iC,UAAUiJ,iBAAmB,WAChClK,KAAKtJ,OAAOyT,GAAG,mBAAoBnK,KAAKokC,sBAAuBpkC,MAC/DA,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKqkC,iBAAkBrkC,OAK1D+jC,EAAO9iC,UAAUuJ,oBAAsB,WAC/BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAKokC,uBACzCpkC,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKqkC,oBAMzCN,EAAO9iC,UAAUmjC,sBAAwB,SAAUE,GAC/C9uB,WAAS,8BAAgCxV,KAAKtJ,QAC9CsJ,KAAKkkC,iBAAmBI,EAAY7lC,KACpCuB,KAAKmkC,sBACLnkC,KAAKkO,kBACLlO,KAAKikC,mBAAoB,EACzB,IAAK,IAAI1K,EAAI,EAAGA,EAAIv5B,KAAKkkC,iBAAiB3sC,OAAQgiC,IAAK,CACnD,IAAI1qB,EAAM7O,KAAKkkC,iBAAiB3K,GAChCv5B,KAAKukC,gBAAgB11B,GACrB,IAAI/W,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,MACzFmI,KAAKikC,mBAAoB,GAE7B,IAAIO,EAAUjsC,YAAU,eAAgBsW,IACnCnX,oBAAkB8sC,IAAYA,EAAQjtC,QACvCie,WAAS,0BAA2BxV,KAAKykC,iBAAiB51B,GAAMA,GAEpE,IAAI61B,EAAWnsC,YAAU,aAAcsW,GACvC,IAAKnX,oBAAkBgtC,GAAW,CAC9B,IAAIC,EAAY5rC,EAAciH,KAAKtJ,OAAQmY,EAAI/V,WAAWE,UAAU,GAGpEwc,WAAS,2BAA2B,EAAMmvB,GACtCA,GAAaA,EAAU7rC,YACvBkH,KAAK4kC,2BAA2BD,IAIxC3kC,KAAKkkC,iBAAiB3sC,OAAS,GAAKyI,KAAKikC,mBACzCjkC,KAAK6kC,oBAET7kC,KAAKtJ,OAAO0b,OAAO,gBAAkBiB,OAAQrT,KAAKkO,kBAEtD61B,EAAO9iC,UAAU2jC,2BAA6B,SAAUlsC,GACpD,IAAIisC,EAAY5rC,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnE8rC,EAAgBzmC,WAAS,2BAA4B2B,KAAKtJ,QAC1DiuC,GAAaG,EAAcjoC,eAAe8nC,EAAU3rC,WACpDwc,WAAS,2BAA2B,EAAMmvB,GAE1CA,GAAaA,EAAU7rC,YACvBkH,KAAK4kC,2BAA2BD,IAIxCZ,EAAO9iC,UAAUsjC,gBAAkB,SAAU7rC,GACzC,IAAIhC,EAASqC,EAAciH,KAAKtJ,OAAQgC,EAAO4F,gBAI/C,GAAsB,UAFsC,KAAxC0B,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,gBACmD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCsJ,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAClDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,gBACa,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAMnCmI,KAAKukC,gBAAgB7tC,IAL0B,IAA3CsJ,KAAKkkC,iBAAiB1lC,QAAQ9H,IAC9BsJ,KAAKukC,gBAAgB7tC,IAOY,IAAzCsJ,KAAKkO,eAAe1P,QAAQ9F,KAC5BsH,KAAKkO,eAAe1V,KAAKE,GACzB8c,WAAS,4BAA8B9c,EAAOM,SAAUN,EAAQsH,KAAKtJ,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CsJ,KAAKkkC,iBAAiB1lC,QAAQ9F,GAM9B,aAL6C,IAAzCsH,KAAKkO,eAAe1P,QAAQ9F,KAC5BsH,KAAKkO,eAAe1V,KAAKE,GACzB8c,WAAS,4BAA8B9c,EAAOM,SAAUN,EAAQsH,KAAKtJ,QACrEgC,EAAOqZ,yBAA0B,SAMzC/R,KAAKukC,gBAAgB7tC,IAC0B,IAA3CsJ,KAAKkkC,iBAAiB1lC,QAAQ9H,KAA2D,IAAzCsJ,KAAKkO,eAAe1P,QAAQ9H,IAC/B,IAAzCsJ,KAAKkO,eAAe1P,QAAQ9F,KAC5BsH,KAAKkO,eAAe1V,KAAKE,GACzB8c,WAAS,4BAA8B9c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAI5B,IAAzCsJ,KAAKkO,eAAe1P,QAAQ9F,KAA6D,IAA3CsH,KAAKkkC,iBAAiB1lC,QAAQ9F,KAC5EsH,KAAKkO,eAAe1V,KAAKE,GACzB8c,WAAS,4BAA8B9c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAyBzFqtC,EAAO9iC,UAAUwjC,iBAAmB,SAAUvsC,GAG1C,IAAK,IAFD6sC,EAAWxsC,YAAU,eAAgBL,GACrC8sC,GAAU,EACL52B,EAAQ,EAAGA,EAAQ22B,EAASxtC,OAAQ6W,IAAS,CAClD,IAAIo2B,EAAUO,EAAS32B,GAAO9U,aAC1BxB,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAChDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAAc,CAC7BwG,WAAS,2BAA4B2B,KAAKtJ,QAC3CmG,eAAekoC,EAAS32B,GAAOpV,YAC9CgH,KAAKkO,eAAe1V,KAAKusC,EAAS32B,IAClCoH,WAAS,4BAA8BuvB,EAAS32B,GAAOpV,SAAU+rC,EAAS32B,GAAQpO,KAAKtJ,QACvFsuC,GAAU,GAGlB,GAAuB,SAAlBltC,IACsD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApDmI,KAAKkkC,iBAAiB1lC,QAAQumC,EAAS32B,IAAgB,CACvD42B,GAAU,EACV,OAGHttC,oBAAkB8sC,IAAYA,EAAQjtC,SACvCytC,EAAUhlC,KAAKykC,iBAAiBM,EAAS32B,KAEtB,UAAlBtW,GAA+C,SAAlBA,IAA6BitC,EAASxtC,SACpEytC,GAAU,GAGlB,OAAOA,GAEXjB,EAAO9iC,UAAU4jC,kBAAoB,WAGjC,IAAK,IAFDnsC,EAASsH,KAAKkO,eACd9V,EAAM4H,KAAKkO,eAAe3W,OACrBgK,EAAI,EAAGA,EAAInJ,EAAKmJ,IAAK,CAC1B,IAAI0jC,EAAWlsC,EAAciH,KAAKtJ,OAAQgC,EAAO6I,GAAGjD,gBAEpD,IAD2C,IAA9B5F,EAAO8F,QAAQymC,GAChB,CACR,IAAIC,EAAWnsC,EAAciH,KAAKtJ,OAAQgC,EAAO6I,GAAGjD,gBAAgB,GACpE5F,EAAO6I,GAAG8P,YAAc6zB,EAAS7zB,YAAc,OAG/C3Y,EAAO6I,GAAG8P,YAAc,EACxBrR,KAAKmkC,mBAAmB3rC,KAAKE,EAAO6I,MAIhDwiC,EAAO9iC,UAAUojC,iBAAmB,SAAU5lC,GAK1C,IAJA,IAGIiQ,EAHAN,EAAQ,EACR5Q,EAAWiB,EAAKjB,SAChBpF,EAAMoF,EAASjG,OAEP6W,EAAQhW,EAAKgW,IAAS,CAE9B,IAAI+2B,GADJz2B,EAAgBlR,EAAS4Q,IACEiD,aACvB8zB,GAAqB,IAAXA,GAAiBztC,oBAAkBgX,EAAcqD,2BAC3DrD,EAAcqD,wBAA0B,KACxCrD,EAAc2C,YAAc,MAGpCrR,KAAKkO,kBACLlO,KAAKtJ,OAAO0b,OAAO,iBAAmBiB,OAAQ7V,EAAU4Q,MAAO5Q,EAASjG,UAErEwsC,KClNPqB,GAA6B,WAI7B,SAASA,EAAY1uC,GACjBsJ,KAAKqlC,yBAA0B,EAC/B5iC,OAAKC,OAAO4iC,eACZtlC,KAAKtJ,OAASA,EACdsJ,KAAK8T,eACL9T,KAAKkK,mBAyKT,OAnKAk7B,EAAYnkC,UAAU4B,cAAgB,WAClC,MAAO,eAKXuiC,EAAYnkC,UAAUiJ,iBAAmB,WACrClK,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAKulC,uBAAwBvlC,MAC7DA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAKqoB,mBAAoBroB,MACzDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,sBAAuBnK,KAAKwlC,mBAAoBxlC,MACpEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,iBAAkBnK,KAAKylC,eAAgBzlC,OAO/DolC,EAAYnkC,UAAU4I,QAAU,WAC5B7J,KAAKwK,uBAKT46B,EAAYnkC,UAAUuJ,oBAAsB,WACpCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAKulC,wBACtCvlC,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAKqoB,oBACtCroB,KAAKtJ,OAAOiB,KAAK+S,IAAI,sBAAuB1K,KAAKwlC,oBACjDxlC,KAAKtJ,OAAOiB,KAAK+S,IAAI,iBAAkB1K,KAAKylC,kBAEhDL,EAAYnkC,UAAUskC,uBAAyB,SAAUrO,GACrDl3B,KAAK8T,YAAcojB,GAEvBkO,EAAYnkC,UAAU2d,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQgnB,GAChC,IAAIr+B,EAAQrH,KACRrJ,EAAaqJ,KAAKtJ,OAAOC,WACzBymB,EAAW/kB,SAMf,OALAmd,WAAS,QAASkwB,EAAOtoB,GACzB5H,WAAS,UAAU,EAAO4H,GACrB1lB,oBAAkB6mB,KACnBve,KAAKqlC,wBAA0B9mB,EAAsB8mB,yBAElD,IAAIM,QAAQ,SAAU1a,EAAS2a,GAClC,IAAInsC,GAAK4N,EAAMw+B,WAAelvC,aAAsBC,cAC9CyQ,EAAM3Q,OAAOC,WADgD,IAAIC,cAAYD,GAE/E4d,EAAQ,IAAIC,QAMhB,GALKnN,EAAMw+B,YACPtxB,EAAQlN,EAAMwQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAO6I,IAE7B/V,EAAM3Q,OAAOwS,QAAQ48B,EAAyB1pC,SAAOghB,EAAUmB,IAC3DhmB,YAAU,SAAU6kB,GACpB,OAAO,KAEX3jB,EAAGyb,aAAaX,GAAOY,KAAK,SAAUzX,GAClC,IAAIqoC,EAAa,KAKjB,OAJKruC,oBAAkB6mB,IAA2B7mB,oBAAkB6mB,EAAsB5nB,cACtFovC,EAAaxnB,EAAsB5nB,YAEvC4nB,EAAwBlX,EAAM2+B,2BAA2BznB,EAAuB5nB,EAAY+G,GACrF2J,EAAM3Q,OAAOiB,KAAKgnB,kBAAkBC,IAAIvX,EAAM3Q,OAAOiB,KAAM4mB,EAAuBC,EAAkBC,EAAUinB,EAAOhnB,GAAQvJ,KAAK,SAAU8wB,GAC7H,MAAdF,EACAxnB,EAAsB5nB,WAAaovC,SAG5BxnB,EAAsB5nB,WAEjCs0B,EAAQgb,UAKxBb,EAAYnkC,UAAU4W,cAAgB,SAAUtD,EAAO6I,GAQnD,OAPK1lB,oBAAkB0lB,IAAqC,gBAAxBA,EAASvD,YACtC7Z,KAAKtJ,OAAOma,cACfuM,EAASvD,WAAa,WACtBtF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM5U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDsX,EAAQhc,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2Dgc,IAEhEA,GAEX6wB,EAAYnkC,UAAU+kC,2BAA6B,SAAU5oB,EAAU8oB,EAAOC,GAE1E,IAAInjC,EAAO3K,SAkBX,GAjBAmd,WAAS,QAASxV,KAAKtJ,OAAOiB,KAAKigB,gBAAgBC,eAAc,GAAO7U,GACxEwS,WAAS,YAAY,EAAMxS,GACtBtL,oBAAkB0lB,IAAc1lB,oBAAkB0lB,EAASvD,aAC5DrE,WAAS,aAAc4H,EAASvD,WAAY7W,GAE3ChD,KAAK6lC,YACN7lC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAOyuB,WAAW7Q,kBAAkB/b,YAAU,SAAU4tC,IAC7D3wB,WAAS,aAAcxV,KAAKtJ,OAAO8G,SAAUwF,IAEjDhD,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,GAEpCA,EAAOhD,KAAK8T,YACZoyB,EAAQxuC,oBAAkBsL,EAAKqQ,QAAUrT,KAAKtJ,OAAO8G,SAAS+K,MAAM,GAAKvF,EAAKqQ,OACzErT,KAAK6lC,YACN7lC,KAAKtJ,OAAO8G,aAEZ4f,GAAYA,EAASzmB,YAAcqJ,KAAK6lC,UAAW,CACnD,IAAIO,EAAYpmC,KAAKtJ,OAAO8G,SACxB6oC,EAAUjpB,EAASzmB,sBAAsBC,cAAcwmB,EAASzmB,WAAWA,WAAW8E,KAAO2hB,EAASzmB,WAC1GqJ,KAAKtJ,OAAOyuB,WAAW7Q,kBAAkB+xB,GACzCH,EAAQlmC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAW4oC,EAI3B,OAFAhpB,EAAW1lB,oBAAkB0lB,GAAY/kB,SAAW+kB,EACpDA,EAASzmB,WAAa,IAAIC,eAAc6E,KAAMyqC,IACvC9oB,GAMXgoB,EAAYnkC,UAAUonB,mBAAqB,SAAUrlB,GACjD,GAAIhD,KAAKtJ,OAAOiB,KAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOuE,EAAKvE,KAEZ2S,EADc1Z,oBAAkB+G,EAAK4S,aACjB5S,EAAKtE,MAAQsE,EAAK4S,YAC1C7W,EAAM8rC,OAASl1B,EACfpO,EAAKxI,MAAQA,EAEjBwF,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,GACpChD,KAAKtJ,OAAOwS,QAAQ,qBAAsBlG,IAE9CoiC,EAAYnkC,UAAUukC,mBAAqB,SAAUe,GACjD,GAAsB,UAAlBA,EAAStjC,KAAkB,CAC3B,IAAIujC,EAAcD,EAASE,OAAOhoC,KAC9BioC,EAAqB1mC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAIivC,EAAY1tC,YAAcC,EAAciH,KAAKtJ,OAAQ8vC,EAAY1tC,WAAWE,SAAU2tC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAUtvC,OAC/BuvC,EAAWN,EAAYrsC,MACvB4sC,GAAiB,EACjBC,GAAgB,EAChBC,EAAQxuC,EAAgBuH,KAAKtJ,OAAQ8vC,EAAaxmC,KAAKtJ,OAAO6G,aAC9DyC,KAAKqlC,yBAA6B4B,GAAUjnC,KAAKtJ,OAAO0jB,cACxD2sB,GAAiB,EACjBC,GAAgBR,EAAYrtC,UAEhCotC,EAASM,UAAUD,EAAY,GAAGM,UAAaC,aAAcL,EAAUM,YAAaJ,EAChF1sC,SAAUysC,MAK1B3B,EAAYnkC,UAAUwkC,eAAiB,SAAgDhnB,GACnF,IAAK,IAAIpnB,EAAI,EAAGA,EAAIonB,EAAS4oB,WAAW9vC,OAAQF,IACxConB,EAAS4oB,WAAWhwC,GAAG0Q,OACvB0W,EAAS4oB,WAAWhwC,GAAGiwC,WAAcC,mBAAmB,KAIpEnC,EAAYnkC,UAAU4kC,QAAU,WAC5B,OAAQpvC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,SAEjD0uC,KClLPoC,GAA2B,WAI3B,SAASA,EAAU9wC,GACf+L,OAAKC,OAAO+kC,aACZznC,KAAKtJ,OAASA,EACdsJ,KAAK8T,eACL9T,KAAKkK,mBAqIT,OA/HAs9B,EAAUvmC,UAAU4B,cAAgB,WAChC,MAAO,aAKX2kC,EAAUvmC,UAAUiJ,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAKsoB,iBAAkBtoB,MACrDA,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAK0nC,qBAAsB1nC,OAK/DwnC,EAAUvmC,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAKsoB,kBACpCtoB,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAK0nC,wBAO1CF,EAAUvmC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAETg9B,EAAUvmC,UAAUymC,qBAAuB,SAAUxQ,GACjDl3B,KAAK8T,YAAcojB,GAEvBsQ,EAAUvmC,UAAU2d,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,IAAIrX,EAAQrH,KACRkmC,EAAQlmC,KAAKtJ,OAAOC,WACpB4mB,EAAOllB,SACPwtC,GAAWpvC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAE3D,OADA8e,WAAS,UAAU,EAAO+H,GACnB,IAAIooB,QAAQ,SAAU1a,EAAS2a,GAClC,IAAInsC,GAAKosC,GAAaK,aAAiBtvC,cAAwCyQ,EAAM3Q,OAAOC,WAAtC,IAAIC,cAAYsvC,GAClE3xB,EAAQ,IAAIC,QAMhB,GALKqxB,IACDtxB,EAAQlN,EAAMwQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAOgJ,IAE7BlW,EAAM3Q,OAAOwS,QAAQy+B,EAAuBvrC,SAAOmhB,EAAMwB,IACrDxmB,YAAU,SAAUglB,GACpB,OAAO,KAEX9jB,EAAGyb,aAAaX,GAAOY,KAAK,SAAUzX,GAClC,IAAIkqC,EAAc,KAKlB,OAJKlwC,oBAAkBqnB,IAAyBrnB,oBAAkBqnB,EAAoBpoB,cAClFixC,EAAc7oB,EAAoBpoB,YAEtCooB,EAAsB1X,EAAMwgC,wBAAwB9oB,EAAqBmnB,EAAOxoC,GACzE2J,EAAM3Q,OAAOiB,KAAKsnB,gBAAgBL,IAAIvX,EAAM3Q,OAAOiB,KAAMonB,EAAqBP,EAAkBQ,EAAQN,GAAQvJ,KAAK,SAAU+mB,GAC/G,MAAf0L,EACA7oB,EAAoBpoB,WAAaixC,SAG1B7oB,EAAoBpoB,WAE/Bs0B,EAAQiR,UAKxBsL,EAAUvmC,UAAU4W,cAAgB,SAAUtD,EAAOgJ,GAQjD,OAPK7lB,oBAAkB6lB,IAA6B,gBAApBA,EAAK1D,YAC9B7Z,KAAKtJ,OAAOma,cACf0M,EAAK1D,WAAa,WAClBtF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM5U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDsX,EAAQhc,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2Dgc,IAEhEA,GAEXizB,EAAUvmC,UAAU4mC,wBAA0B,SAAUtqB,EAAM2oB,EAAOC,GACjE,IAAInjC,KAEA6iC,GAAWpvC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAmB3D,GAlBA8e,WAAS,QAASxV,KAAKtJ,OAAOiB,KAAKigB,gBAAgBC,eAAc,GAAO7U,GACxEwS,WAAS,YAAY,EAAMxS,GAC3BwS,WAAS,eAAe,EAAMxS,GACzBtL,oBAAkB6lB,IAAU7lB,oBAAkB6lB,EAAK1D,aACpDrE,WAAS,aAAc+H,EAAK1D,WAAY7W,GAEvC6iC,IACD7lC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAOyuB,WAAW7Q,kBAAkBjW,WAAS,SAAU8nC,IAC5D3wB,WAAS,aAAcxV,KAAKtJ,OAAO8G,SAAUwF,IAEjDhD,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,GAEpCA,EAAOhD,KAAK8T,YACZoyB,EAAQxuC,oBAAkBsL,EAAKqQ,QAAUrT,KAAKtJ,OAAO8G,SAAS+K,MAAM,GAAKvF,EAAKqQ,OACzEwyB,IACD7lC,KAAKtJ,OAAO8G,aAEZ+f,GAAQA,EAAK5mB,YAAckvC,EAAS,CACpC,IAAIiC,EAAY9nC,KAAKtJ,OAAO8G,SACxB6oC,EAAU9oB,EAAK5mB,sBAAsBC,cAAc2mB,EAAK5mB,WAAWA,WAAW8E,KAAO8hB,EAAK5mB,WAC9FqJ,KAAKtJ,OAAOyuB,WAAW7Q,kBAAkB+xB,GACzCH,EAAQlmC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAWsqC,EAI3B,OAFAvqB,EAAO7lB,oBAAkB6lB,MAAaA,EACtCA,EAAK5mB,WAAa,IAAIC,eAAc6E,KAAMyqC,IACnC3oB,GAMXiqB,EAAUvmC,UAAUqnB,iBAAmB,SAAUtlB,GAC7C,GAAIhD,KAAKtJ,OAAOiB,KAAK+Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOlG,YAAU,OAAQyK,GAEzBoO,EADc1Z,oBAAkB+G,EAAK4S,aACjB5S,EAAKtE,MAAQsE,EAAK4S,YAC1C7W,EAAMutC,gBAAwB,EAAN32B,EACxBpO,EAAKxI,MAAQA,EAEjBwF,KAAKtJ,OAAO0b,OAAO,gBAAiBpP,GACpChD,KAAKtJ,OAAOwS,QAAQ,mBAAoBlG,IAErCwkC,KC5IPQ,GAAsB,WACtB,SAASA,EAAKtxC,GACV+L,OAAKC,OAAOulC,QACZjoC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAkKT,OA7JA89B,EAAK/mC,UAAUiJ,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAGyrB,EAAiC51B,KAAKkoC,0BAA2BloC,MAChFA,KAAKtJ,OAAOyT,GAAGqR,EAAsBxb,KAAKmoC,WAAYnoC,OAK1DgoC,EAAK/mC,UAAUuJ,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIkrB,EAAiC51B,KAAKkoC,2BACtDloC,KAAKtJ,OAAOgU,IAAI8Q,EAAsBxb,KAAKmoC,cAM/CH,EAAK/mC,UAAU4B,cAAgB,WAC3B,MAAO,SAMXmlC,EAAK/mC,UAAU8uB,QAAU,WACrB/vB,KAAKtJ,OAAOiB,KAAK06B,YAAYtC,WAOjCiY,EAAK/mC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAOTw9B,EAAK/mC,UAAUkxB,SAAW,SAAUC,GAChCpyB,KAAKtJ,OAAOiB,KAAK06B,YAAYF,SAASC,IAO1C4V,EAAK/mC,UAAUqxB,sBAAwB,SAAU/uB,GAC7CvD,KAAKtJ,OAAOiB,KAAK06B,YAAYC,sBAAsB/uB,IAKvDykC,EAAK/mC,UAAUinC,0BAA4B,SAAUnxB,GACjDA,EAAWre,OAAOS,SAAiC,aAAtB4d,EAAWzb,OACpCyB,eACAiD,KAAKtJ,OAAO8G,SAASC,OAAO,SAAUC,GAClC,OAAOA,EAAE1E,WAAa+d,EAAWre,OAAOM,WACzC,GAAGG,SAAiC,aAAtB4d,EAAWzb,QAEhC,IAAI8sC,GACA/0B,OAAQrT,KAAKtJ,OAAO8G,SACpBmB,IAAKoY,EAAWpY,IAChBrD,OAAQyb,EAAWzb,OACnB5C,OAAQqe,EAAWre,OACnB0V,MAAOpO,KAAKtJ,OAAO8G,SAASjG,QAGhC,GADA8G,WAAS,oBAAqB2B,KAAKtJ,QAAQgf,mBAAmB0yB,GAC1DpoC,KAAKtJ,OAAO4I,oBAAqB,CACjC,IAEI8X,OAAY,EACI,aAAhBgxB,EAAU,QACVhxB,EAAYgxB,EAAO,IAAE/wB,uBAAuB,oBAAoB,GAC3D3f,oBAAkB0f,KACnBhK,eAAagK,GAAY,oBACzBhH,YAAUgH,GAAY,wBAGL,WAAhBgxB,EAAU,SACfhxB,EAAYgxB,EAAO,IAAE/wB,uBAAuB,sBAAsB,GAC7D3f,oBAAkB0f,KACnBhK,eAAagK,GAAY,sBACzBhH,YAAUgH,GAAY,wBAKtC4wB,EAAK/mC,UAAUonC,SAAW,SAAUC,EAAcjtB,EAAMhI,GAapD,IAAK,IAZDk1B,EAAa7wC,oBAAkB2b,MAAeA,EAC9CzW,EAAU,SAAU4rC,GACpBD,EAAW/vC,KAAK6iB,EAAKmtB,IACrB,IAAIC,KACAptB,EAAKmtB,GAAGnvC,kBACRovC,EAAMH,EAAa7qC,OAAO,SAAUC,GAChC,OAAO2d,EAAKmtB,GAAGxvC,WAAa0E,EAAEY,iBAElCiqC,EAAa95B,EAAO45B,SAASC,EAAcG,EAAKF,KAGpD95B,EAASzO,KACJwoC,EAAI,EAAGA,EAAIntB,EAAK9jB,OAAQixC,IAC7B5rC,EAAQ4rC,GAEZ,OAAOD,GAEXP,EAAK/mC,UAAUknC,WAAa,SAAUO,GAClC,IAAIrhC,EAAQrH,KACRvG,EAAK,IAAI7C,cAAY8xC,EAAer1B,QACxC,GAA8C,SAA1CrT,KAAKtJ,OAAOoa,aAAaC,aAAyB,CAClD,IAAIsK,KACAstB,EAAY3oC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CyI,KAAKtJ,OAAOsB,eAAeF,eAA0E,SAA7CkI,KAAKtJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChByc,GAAQ,IAAIC,SAAQI,MAAM+zB,EAAU,QAAS,GACjDttB,EAAO5hB,EAAGuc,aAAazB,GACvBm0B,EAAet6B,MAAQiN,EAAK9jB,OAC5B,IAEIqxC,GAFAC,EAAO7oC,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,YACrCC,EAAU/oC,KAAKtJ,OAAOiB,KAAKmZ,aAAasI,aACf,GAC7B7E,EAAQA,EAAMq0B,KAAKA,GAAMI,KAAKH,GAC9BxtB,EAAO5hB,EAAGuc,aAAazB,GACvB,IAAIg0B,EAAavoC,KAAKqoC,SAASK,EAAer1B,OAAQgI,GACtDqtB,EAAer1B,OAASk1B,MAEvB,CACD,IAAIrb,EAAO,IAAIt2B,cAAY8xC,EAAer1B,QACtCla,EAAW,IAAI2I,YAAU,WAAY,WAAY,MAAMmnC,GAAG,WAAY,gBAAYnsB,GAClFosB,EAAYhc,EAAKlX,cAAa,IAAIxB,SAAQI,MAAMzb,IAChDkqC,OAAa,EAMbA,GALA5rC,EAAuBuI,KAAKtJ,SAAasJ,KAAKtJ,OAAOkB,eAAeC,MAAQmI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAC3GmI,KAAKtJ,OAAOsB,eAAeV,QAAQC,SAAWyI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAI1E2xC,EAAUzrC,OAAO,SAAUC,GACpC,OAAOjF,EAAgB4O,EAAM3Q,OAAQgH,EAAGwrC,KAJ/BA,EAOjBR,EAAet6B,MAAQi1B,EAAW9rC,OAC9Bgd,EAAQ,IAAIC,QAAhB,IACIq0B,EAAO7oC,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,SACrCC,EAAU/oC,KAAKtJ,OAAOiB,KAAKmZ,aAAasI,YACxCiqB,EAAW9rC,OAAUwxC,EAAUF,IAE/BE,GADAA,EAAWnyB,KAAKuyB,MAAM9F,EAAW9rC,OAASsxC,IAAWxF,EAAW9rC,OAASsxC,EAAQ,EAAI,KACvD,EAC9B7oC,KAAKtJ,OAAOiB,KAAK6lB,eAAgB1M,cAAgBsI,YAAa2vB,KAAa,IAE3EH,EAAOC,GAAQE,EAAU,GAC7Bx0B,EAAQA,EAAMq0B,KAAKA,GAAMI,KAAKH,GAC9B3b,EAAKv2B,WAAW8E,KAAO4nC,EACvBqF,EAAer1B,OAAS6Z,EAAKlX,aAAazB,GAE9CvU,KAAKtJ,OAAO0b,OAAO,eAAgBs2B,IAEhCV,KCzKPoB,GAAyB,WACzB,SAASA,EAAQ1yC,GACb+L,OAAKC,OAAO2mC,WACZrpC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBA4HT,OAtHAk/B,EAAQnoC,UAAU4B,cAAgB,WAC9B,MAAO,WAKXumC,EAAQnoC,UAAUiJ,iBAAmB,WACjClK,KAAKtJ,OAAOyT,GAAG+d,EAAoBloB,KAAKspC,eAAgBtpC,MACxDA,KAAKtJ,OAAOyT,GAAGghB,EAAqBnrB,KAAKupC,oBAAqBvpC,OAKlEopC,EAAQnoC,UAAUuJ,oBAAsB,WAChCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIwd,EAAoBloB,KAAKspC,gBACzCtpC,KAAKtJ,OAAOgU,IAAIygB,EAAqBnrB,KAAKupC,uBAE9CH,EAAQnoC,UAAUqoC,eAAiB,SAAUtmC,GACzC,IAAIs3B,EAAOt6B,KAAKtJ,OAEU,IAAtBsM,EAAKrE,IAAIgL,UAAkB2wB,EAAK5xB,qBAAqBnR,OAAS,EAC9DyI,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,sBAAuBmnB,EAAKpnB,QAAQC,GAAK,yBAAyB,GAGjGzb,oBAAkB4iC,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,cACpDjS,oBAAkB4iC,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,YACxD2wB,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,UAAUxP,MAC7CmgC,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,SAAW,GAAGxP,MACxD6F,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,wBAAwB,GAG5DnT,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,wBAAwB,GAE5DmnB,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,UAAUxP,QAChDmgC,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,SAAW,GAAGxP,OACpD6F,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DmnB,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,UAAUxP,OAChD6F,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DmnB,EAAKn+B,wBAAwB6G,EAAKrE,IAAIgL,UAAUxP,OAChD6F,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBnQ,EAAKrE,IAAIgL,UAAmBjS,oBAAkBsL,EAAKvE,KAAK3F,aACxDkH,KAAK0xB,aAAa4I,EAAKpnB,QAAQC,GAAK,yBAAyB,IAGrEi2B,EAAQnoC,UAAUsoC,oBAAsB,SAAUvmC,GAC9C,IAAIs3B,EAAOt6B,KAAKtJ,OAYhB,GAXsC,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAA0D,UAAvCkE,KAAKtJ,OAAOiB,KAAKkE,aAAaC,MAC1EkH,EAAKE,KAAKiQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,YAC/CnQ,EAAKiG,QAAS,EACdjJ,KAAKtJ,OAAOiB,KAAKoE,WAAWi1B,YAE5BhuB,EAAKE,KAAKiQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,cAC/CnT,KAAKtJ,OAAO4qB,YAEZte,EAAKE,KAAKiQ,KAAOnT,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK,gBAC/CnT,KAAKtJ,OAAO6qB,cAEZve,EAAKE,KAAKiQ,KAAOmnB,EAAK3iC,KAAKub,QAAQC,GAAK,WAAamnB,EAAK5xB,qBAAqBnR,OAAQ,CACvF,IAAImB,EAAS4hC,EAAKn+B,wBAAwBm+B,EAAKpyB,wBAAwB,GAAK,GACxEsyB,OAAY,EAChB,GAAI9hC,EAAOyB,MAAQmgC,EAAK5xB,qBAAqB,GAAGvO,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAIijC,EAAKn+B,wBAAwB5E,OAAQF,IACjDijC,EAAKn+B,wBAAwB9E,GAAG+C,WAAa1B,EAAOI,WAAWsB,WAC/DogC,EAAYnjC,QAKpBmjC,EAAYF,EAAKpyB,wBAAwB,GAAK,EAElDoyB,EAAK7B,aAAa6B,EAAKpyB,wBAAwB,IAAKsyB,EAAW,SAEnE,GAAIx3B,EAAKE,KAAKiQ,KAAOmnB,EAAK3iC,KAAKub,QAAQC,GAAK,YAAcmnB,EAAK5xB,qBAAqBnR,OAAQ,CAInF,IAHD2C,EAAQogC,EAAKpyB,wBAAwB,GAErCpP,GADA0hC,OAAY,EACCF,EAAK5xB,qBAAqB,GAAG5P,YAC9C,IAASzB,EAAI,EAAGA,EAAIijC,EAAKn+B,wBAAwB5E,OAAQF,IACjDijC,EAAKn+B,wBAAwB9E,GAAG+C,WAAatB,EAAWsB,WACxDogC,EAAYnjC,GAGpBijC,EAAK7B,aAAav+B,GAAQsgC,EAAW,WAQ7C4O,EAAQnoC,UAAUi9B,WAAa,WAC3B,OAAOl+B,KAAKtJ,OAAOiB,KAAK85B,cAAcyM,cAS1CkL,EAAQnoC,UAAUywB,YAAc,SAAUvb,EAAOqb,GAC7CxxB,KAAKtJ,OAAOiB,KAAK85B,cAAcC,YAAYvb,EAAOqb,IAOtD4X,EAAQnoC,UAAU4I,QAAU,WACxB7J,KAAKwK,uBAEF4+B,KC/HPI,GAA2B,WAI3B,SAASA,EAAU9yC,GACf+L,OAAKC,OAAO+mC,aACZzpC,KAAKtJ,OAASA,EACdsJ,KAAK0pC,oBACL1pC,KAAKwY,gBAiOT,OA3NAgxB,EAAUvoC,UAAU4B,cAAgB,WAChC,MAAO,WAEX2mC,EAAUvoC,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,aAQpB++B,EAAUvoC,UAAU0X,sBAAwB,SAAUH,EAAcmC,EAAcgvB,GAC9E3pC,KAAKwY,aAAeA,EACpB,IAAI3f,EAEA0E,EACJA,KACA,IAAK,IAAII,EAAI,EAAGvF,EAHOC,OAAOC,KAAKqiB,GAAcpjB,OAGToG,EAAIvF,EAAKuF,IAAK,CACjCpF,YAAU,eAAgBoiB,EAAahd,KAEpDJ,EAAW/E,KAAKmiB,EAAahd,IAGrC,IACIisC,EADArwB,EAAgBthB,EAAkBsF,GAEtCqsC,EAAcrsC,EAAWgL,QACzB,IAGI25B,EAHA2H,EAAexxC,OAAOC,KAAK0H,KAAKtJ,OAAOY,SAASC,OAChDuyC,EAAgBzxC,OAAOC,KAAK0H,KAAKtJ,OAAO2hB,YAAY9gB,OACpDwyC,EAAa1xC,OAAOC,KAAKihB,GAAehiB,OAE5C,GAAIyI,KAAKtJ,OAAO2hB,WAAW5a,OAAO,SAAUo0B,GAAK,OAAOA,EAAEmY,mBAAqBzyC,OACtE,CAAA,IAAIF,EAAI,EAAb,IAAgBe,EAAM2xC,EAAY1yC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAe0gB,EAAcliB,GAC7B6qC,EAAqBliC,KAAKiqC,sBAAsBpxC,EAAc+wC,GACtC,CAyCpB,IAAK,IAxCDhtC,EAAU,SAAUstC,EAAiBC,GACrC,IAAIjnC,OAAO,EACXA,KACA,IAAK,IAAI4I,EAAc,EAAGs+B,EAAQP,EAAc/9B,EAAcs+B,EAAOt+B,IAAe,CAGhF5I,EAFYxL,oBAAkBa,YAAU,QAASkW,EAAO/X,OAAOY,QAAQwU,KACnE2C,EAAO/X,OAAOY,QAAQwU,GAAevT,YAAU,QAASkW,EAAO/X,OAAOY,QAAQwU,KACpE,KAGlB,GADA5I,EAAOuL,EAAO47B,kBAAkBnnC,EAAMuL,EAAO/X,OAAO2hB,WAAW6xB,EAAkB,KAC7Ez7B,EAAO/X,OAAO2hB,WAAW6xB,EAAkB,GAAGF,iBA2B9C,MAAO,WA1BP,IAAIM,EACJV,EAAYzrC,IAAI,SAAUT,EAAGrG,GACrBqG,EAAE1E,WAAaH,EAAaG,WAC5BsxC,EAAQjzC,KAIhB,IAAIkzC,EAAeD,EAAQpI,EAAqBgI,EAC5CM,EAAgBpuC,YAAWvD,UACxB2xC,EAAclxC,oBACdkxC,EAAc/7B,EAAO/X,OAAO0G,cACnCoY,WAAS,aAAcg1B,EAAetnC,GACtC,IAAI/I,EAAQ5B,YAAU,QAASiyC,GAC/Bh1B,WAAS,QAASrb,EAAQ,EAAG+I,GACjB3K,YAAU,QAASiyC,GAG/B,GAFAh1B,WAAS,gBAAgB,EAAMtS,GAC/BsS,WAAS,iBAAkBg1B,EAAcxxC,SAAUkK,GAC/CymC,EAAQ,CACR,IAAIrwC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAK0K,GAG1B0mC,EAAYzsC,OAAOotC,EAAc,EAAGrnC,IAMxCuL,EAASzO,KACJkqC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,IAC3EttC,EAAQstC,GAEZlqC,KAAK0pC,yBAIZ,CACD,IAAIvzB,OAAQ,EACZA,KACA,IAAK,IAAIrK,EAAc,EAAGiqB,EAAW8T,EAAc/9B,EAAciqB,EAAUjqB,IAAe,CAGtFqK,EAFaze,oBAAkBa,YAAU,QAASyH,KAAKtJ,OAAOY,QAAQwU,KAClE9L,KAAKtJ,OAAOY,QAAQwU,GAAevT,YAAU,QAASyH,KAAKtJ,OAAOY,QAAQwU,KAC9D,KAEXo+B,EAAkB,EAA3B,IAAK,IAAyBO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjFlqC,KAAKqqC,kBAAkBl0B,EAAOnW,KAAKtJ,OAAO2hB,WAAW6xB,EAAkB,IAG/E,OAAON,GAEXJ,EAAUvoC,UAAUgpC,sBAAwB,SAAU1sC,EAAYC,GAG9D,IAAK,IADD9E,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKkF,GAAUjG,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAAS8E,EAASnG,GAGlB,GAAIkG,KAFW7F,oBAAkBgB,EAAOI,YAAc,KAClD0E,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAE1E,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzBgH,KAAK0pC,iBAAiBlxC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAsH,KAAKiqC,sBAAsBvxC,EAAQ8E,IAO/C,OAAOwC,KAAK0pC,iBAAiBnyC,QAEjCiyC,EAAUvoC,UAAUopC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,IAAItzC,EAAI,EAAGe,EADUC,OAAOC,KAAKqyC,EAAQrzC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHDuzC,EAAgBlzC,oBAAkBizC,EAAQrzC,QAAQD,GAAG8D,YAAcwvC,EAAQrzC,QAAQD,GAAGgN,MACtFsmC,EAAQrzC,QAAQD,GAAG8D,WAEdg0B,EAAK,EAAG0b,EADNxyC,OAAOC,KAAKoyC,GACSvb,EAAK0b,EAAOtzC,OAAQ43B,IAAM,CACtD,IAAIt3B,EAAMgzC,EAAO1b,GACjB,GAAIt3B,IAAQ+yC,EACR,GAAI5qC,KAAK0pC,iBAAiBnyC,OACtBmzC,EAAS7yC,GAAOmI,KAAK8qC,iBAAiBH,EAAQrzC,QAAQD,GAAI2I,KAAK0pC,uBAE9D,GAAI1pC,KAAKtJ,OAAO0jB,YAAa,CAC9B,IAAI3b,EAAOuB,KAAKtJ,OAAOC,sBAAsBC,cAAcoJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACvFuE,KAAKtJ,OAAO8G,SAClBktC,EAAS7yC,GAAOmI,KAAK8qC,iBAAiBH,EAAQrzC,QAAQD,GAAIoH,IAQ1E,OAAOisC,GAEXlB,EAAUvoC,UAAU6pC,iBAAmB,SAAUC,EAAex4B,GAC5D,IACIy4B,EADAj2B,EAAM,IAAIP,QAEdw2B,KACA,IAAInuB,KACA5Z,EAAQvL,oBAAkBqzC,EAAc1mC,YACiByY,EAAzD9c,KAAKtJ,OAAOokB,iBAAiBiwB,EAAc1mC,OAAOpB,KACtD8nC,EAAcztB,qBAAsBjB,OAAQrc,KAAKirC,kBAAkBF,EAAc1uB,OAAQpZ,KACzF8nC,EAAc5uB,aAAanc,KAAKtJ,OAAOiB,KAAKooB,QAC5C,IAAIxD,EAAWwuB,EAAcpuB,gBAAwC,SAAUvU,GAAK,OAAOA,GAC3F2iC,EAAcnuB,YAAYC,GAC1B,IAAIquB,EAAUH,EAAc1tB,YAAY,GACxCtI,EAAIE,QAAUjV,KAAKwY,aACnBzD,EAAIo2B,gBACJ,IAEIC,EAFAC,EAAU,IAAIz0C,cAAY2b,GAAayD,aAAajB,GACpDhS,EAAQgoC,EAAc9nC,KAE1BF,GAASgoC,EAAc9nC,MACvB,IAAK,IAAI5L,EAAI,EAAGA,EAAI0L,EAAMxL,OAAQF,IAAK,CACnC+zC,EAAaroC,EAAM1L,GACnB,IAAIQ,EAAMkzC,EAAc1mC,MAAQ,MAAQtB,EAAM1L,GAAGi0C,cAC7CC,EAAmB,WAAbxoC,EAAM1L,GAAkBkB,YAAU,aAAc8yC,GACtDG,qBAAmBzoC,EAAM1L,GAAIg0C,EAASN,EAAe/qC,KAAKtJ,QAC1D+0C,EAAOV,EAAc5vC,WACrBuwC,EAAuB,WAAb3oC,EAAM1L,GAAkBk0C,EAAI1zC,GAAO0zC,EACjDP,EAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAM5zC,GAAO6zC,EACpBV,EAAOS,GAAM1oC,EAAM1L,IAAOK,oBAAkB6zC,GAA2B,IAApBhvB,EAASmvB,GAEhE7uB,EAAOR,OAAS0uB,EAAcpuB,eAC9B,IAAIxL,EAAc7E,gBAAc,MAC5BC,UAAW,cAEf,GAAIvM,KAAKtJ,OAAO0c,QAAS,CAErB83B,EAAQnzB,GAAGizB,EAAOD,EAAc5vC,YAAa6E,KAAKtJ,OAAQw0C,EAAQ9tB,SAAU,GAAI,KAAM,KAAMjM,GAC5FnR,KAAKtJ,OAA2B,4BAGhCqc,iBAAe5B,EAAa+5B,EAAQnzB,GAAGizB,EAAOD,EAAc5vC,YAAa6E,KAAKtJ,OAAQw0C,EAAQ9tB,WAElG,IAAInjB,EAAQ+wC,EAAOD,EAAc5vC,YAAYiwC,GAE7C,OAA8C,IAA1Cj6B,EAAY3D,UAAUhP,QAAQvE,GACfkX,EAAY3D,UAAYvT,EAIhCkX,EAAY3D,WAG3Bg8B,EAAUvoC,UAAUgqC,kBAAoB,SAAUU,EAAe1oC,GAC7D,GAAIvL,oBAAkBuL,IAAkC,iBAAlB0oC,EAClC,OAAOA,EAEX,IAAI9xC,EACJ,OAAQoJ,GACJ,IAAK,SACDpJ,GAAQwiB,OAAQsvB,GAChB,MACJ,IAAK,WACD9xC,GAAQoJ,KAAM,WAAYqZ,SAAUqvB,GACpC,MACJ,IAAK,OACD9xC,GAAQoJ,KAAMA,EAAMqZ,SAAUqvB,GAGtC,OAAO9xC,GAOX2vC,EAAUvoC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAEFg/B,KCzOPoC,GAAsB,WACtB,SAASA,EAAKj0C,GACV8K,OAAKC,OAAOmpC,QACZ7rC,KAAKtJ,OAASiB,EACdqI,KAAKyT,WACLzT,KAAK8rC,kBACL9rC,KAAK2T,aAAe,EACpB3T,KAAKhF,iBAAmBtD,oBAAkBsI,KAAKtJ,OAAOuG,iBACtD+C,KAAKkK,mBAyFT,OAnFA0hC,EAAK3qC,UAAU4B,cAAgB,WAC3B,MAAO,QAKX+oC,EAAK3qC,UAAUiJ,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAK+rC,YAAa/rC,MAChDA,KAAKtJ,OAAOyT,GAAG,aAAcnK,KAAKgsC,qBAAsBhsC,OAK5D4rC,EAAK3qC,UAAUuJ,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAK+rC,aACpC/rC,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAKgsC,wBAEvCJ,EAAK3qC,UAAU+qC,qBAAuB,SAAUC,GAC5C,IAAIxtC,EAAOwtC,EAAWvwC,aAClBkf,EAASqxB,EAAWrxB,OACxB5a,KAAKksC,YAAYztC,EAAMmc,GACvB5a,KAAK2T,aAAe,EACpBs4B,EAAWvwC,aAAesE,KAAK8rC,eAC/B9rC,KAAK8rC,mBAETF,EAAK3qC,UAAUirC,YAAc,SAAUztC,EAAMmc,GACzC,IAAK,IAAIja,EAAI,EAAGA,EAAIlC,EAAKlH,OAAQoJ,IAW7B,GAVIX,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAciH,KAAKtJ,OAAQ+H,EAAKkC,GAAG3H,UAAU,MAChEgH,KAAK2T,cACL3T,KAAK8rC,eAAe9rC,KAAK2T,aAAelV,EAAKkC,KAIjDX,KAAK2T,cACL3T,KAAK8rC,eAAe9rC,KAAK2T,aAAelV,EAAKkC,IAE7ClC,EAAKkC,GAAGtH,gBAAiB,CACzB,IAAI8yC,EAAa,IAAIv1C,cAAY6H,EAAKkC,GAAGrH,cAAc0c,aAAa4E,GACpE5a,KAAKksC,YAAYC,EAAWvxB,KAWxCgxB,EAAK3qC,UAAUkf,WAAa,SAAUhlB,EAAY+f,EAAW+E,GACzDjgB,KAAKtJ,OAAOiB,KAAKwoB,WAAWhlB,EAAY+f,EAAW+E,IAEvD2rB,EAAK3qC,UAAUof,iBAAmB,SAAUhc,GACxCrE,KAAKtJ,OAAOiB,KAAK0oB,iBAAiBhc,IAOtCunC,EAAK3qC,UAAU8qC,YAAc,WACzB/rC,KAAKtJ,OAAO8mB,eAAgBjf,aAAcyoB,sBAAoBhnB,KAAKtJ,OAAOiB,KAAK4G,gBAAiB,IAMpGqtC,EAAK3qC,UAAUmf,aAAe,WAC1BpgB,KAAKtJ,OAAOiB,KAAKyoB,eACjBpgB,KAAK+rC,eAOTH,EAAK3qC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAEFohC,KCpGPQ,GAA4B,WAI5B,SAASA,EAAW11C,GAChB+L,OAAKC,OAAO2pC,cACZrsC,KAAKtJ,OAASA,EAelB,OAbA01C,EAAWnrC,UAAUqrC,cAAgB,WACjC,OAAOtsC,KAAKtJ,OAAOiB,KAAK40C,iBAAiBD,iBAE7CF,EAAWnrC,UAAU4I,QAAU,aAO/BuiC,EAAWnrC,UAAU4B,cAAgB,WACjC,MAAO,cAEJupC,KCpBPI,GAA6B,WAC7B,SAASA,EAAY91C,GACjB+L,OAAKC,OAAO+pC,eACZzsC,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAgET,OA3DAsiC,EAAYvrC,UAAUiJ,iBAAmB,WACrClK,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKuF,gBAAiBvF,MACxDA,KAAKtJ,OAAOyT,GAAG,mBAAoBnK,KAAKwF,iBAAkBxF,OAK9DwsC,EAAYvrC,UAAUuJ,oBAAsB,WACpCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKuF,iBACxCvF,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAKwF,oBAE7CgnC,EAAYvrC,UAAUsE,gBAAkB,SAAUvC,GAC9C,IAAI0pC,EAASnjC,SAAO,IAAMvJ,KAAKtJ,OAAOwc,QAAQC,GAAK,4BAA6BnQ,EAAKkQ,SACjFy5B,EAAapjC,SAAO,IAAMvJ,KAAKtJ,OAAOwc,QAAQC,GAAK,0BAA2BnQ,EAAKkQ,SACnFw5B,KACkD,IAA9C1sC,KAAKtJ,OAAOiB,KAAKkE,aAAa0oB,YAC9BmoB,EAAOlyC,MAAMG,QAAU,OAGvB+xC,EAAOlyC,MAAMG,QAAU,SAGQ,SAAlCqF,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,MACjEpE,oBAAkBi1C,IAAkBA,EAAWtkC,UAAUC,SAAS,iBACvEqkC,EAAWnyC,MAAMG,QAAU,SAGnC6xC,EAAYvrC,UAAUuE,iBAAmB,SAAUxC,GAC1B,UAAjBA,EAAKE,KAAKiQ,IAAmC,UAAjBnQ,EAAKE,KAAKiQ,KACtCnT,KAAKtJ,OAAO0b,OAAO,0BAA2BpP,GAC9ChD,KAAKtJ,OAAO8mB,eAAgB3hB,cAAgBQ,eAAgB2G,EAAKE,KAAKiQ,MAAQ,GAC9EnT,KAAKtJ,OAAOo6B,cAOpB0b,EAAYvrC,UAAU4B,cAAgB,WAClC,MAAO,eAOX2pC,EAAYvrC,UAAU4I,QAAU,WAC5B7J,KAAKwK,uBAMTgiC,EAAYvrC,UAAU0mB,eAAiB,WACnC,OAAO3nB,KAAKtJ,OAAOiB,KAAKq0B,kBAAkBrE,kBAEvC6kB,KChEPI,GAA2B,WAC3B,SAASA,EAAUl2C,GACfsJ,KAAK6sC,gBAAkB,EACvB7sC,KAAKuT,aAAe,eACpBvT,KAAKie,eAAiB,iBACtBje,KAAK8sC,qBACL9sC,KAAK+sC,uBACL/sC,KAAKgtC,qBACLhtC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAKitC,gBACLjtC,KAAK9D,sBACL8D,KAAKktC,OAAQ,EACbltC,KAAKkK,mBA4hBT,OA1hBA0iC,EAAU3rC,UAAUiJ,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAGkiB,GAAkBrsB,KAAK8F,UAAW9F,MACjDA,KAAKtJ,OAAOyT,GAAGqiB,GAAiBxsB,KAAKkG,SAAUlG,MAC/CA,KAAKtJ,OAAOyT,GAAGuiB,GAAuB1sB,KAAKoG,eAAgBpG,MAC3DA,KAAKtJ,OAAOyT,GAAGyR,GAAkB5b,KAAKsG,UAAWtG,MACjDA,KAAKtJ,OAAOyT,GAAGyiB,GAA0B5sB,KAAKmG,kBAAmBnG,MACjEA,KAAKtJ,OAAOyT,GAAGsiB,GAAwBzsB,KAAKqG,gBAAiBrG,MAC7DA,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKmtC,gBAAiBntC,MACxDA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAKotC,kBAAmBptC,MAC5DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,yBAA0BnK,KAAKqtC,qBAAsBrtC,MACzEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,kBAAmBnK,KAAKstC,cAAettC,OAK/D4sC,EAAU3rC,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI2hB,GAAkBrsB,KAAK8F,WACvC9F,KAAKtJ,OAAOgU,IAAI8hB,GAAiBxsB,KAAKkG,UACtClG,KAAKtJ,OAAOgU,IAAIkR,GAAkB5b,KAAKsG,WACvCtG,KAAKtJ,OAAOgU,IAAIgiB,GAAuB1sB,KAAKoG,gBAC5CpG,KAAKtJ,OAAOgU,IAAIkiB,GAA0B5sB,KAAKmG,mBAC/CnG,KAAKtJ,OAAOgU,IAAI+hB,GAAwBzsB,KAAKqG,iBAC7CrG,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKmtC,iBACxCntC,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAKotC,mBAC1CptC,KAAKtJ,OAAOiB,KAAK+S,IAAI,yBAA0B1K,KAAKqtC,sBACpDrtC,KAAKtJ,OAAOiB,KAAK+S,IAAI,kBAAmB1K,KAAKstC,iBAOjDV,EAAU3rC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAKToiC,EAAU3rC,UAAUssC,gBAAkB,WAClC,OAAOvtC,KAAKitC,cAKhBL,EAAU3rC,UAAUusC,eAAiB,WACjC,OAAOxtC,KAAK/E,aAKhB2xC,EAAU3rC,UAAUwsC,iBAAmB,WACnC,OAAOztC,KAAK9E,eAKhB0xC,EAAU3rC,UAAUysC,mBAAqB,WACrC,OAAO1tC,KAAK6sC,iBAEhBD,EAAU3rC,UAAUksC,gBAAkB,WAClC,IAGIjzC,EAHAuE,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/Du7B,EAAalyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE5D,IAAK7D,oBAAkBsI,KAAK8sC,oBAAsB9sC,KAAK8sC,kBAAkBv1C,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAI2I,KAAK8sC,kBAAkBv1C,OAAQF,IAC/C6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEw0B,KAAgB1zB,QAAQwB,KAAK8sC,kBAAkBz1C,GAAG66B,IAC3FzzB,EAAKtB,OAAOjD,EAAO,GAG3B8F,KAAK8sC,kBAAoB9sC,KAAKitC,aAAejtC,KAAKgtC,kBAAoBhtC,KAAK+sC,oBAAsB/sC,KAAK9D,uBAE1G0wC,EAAU3rC,UAAU6E,UAAY,SAAU9C,GACtC,IAAI2qC,EAAkB3qC,EAAKvD,KAAKwiB,UAC5B2rB,EAAa5tC,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,mBAS1D,GARI2uC,GAAc5qC,EAAK6qC,aAAa3zC,MAAQ0zC,IACxCD,GAAoCC,GAEpCD,IAAoB3tC,KAAKtJ,OAAO0I,iBAChCY,KAAKtJ,OAAO6I,aAAaC,YAAaf,KAAMuE,EAAKyI,QAAShM,KAAMuD,EAAKvD,KACjEE,OAAQK,KAAKtJ,OAAOiB,KAAKm2C,iBAAiB9qC,EAAKvD,KAAKwiB,aAGxDjiB,KAAKktC,OAA2C,UAAlCltC,KAAKtJ,OAAOmF,aAAaC,MAAgE,WAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACjH,IAAIoC,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/Do3C,OAAQ,EAGRC,EAAehuC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC1D0yC,OAAmB,EACnBp1C,OAAe,EACfq1C,OAAa,EAEbp1C,EAAa,aAEjBD,EAAemH,KAAK9E,eAAiB,EAAI8E,KAAKitC,aAAajtC,KAAK/E,aAAanC,GAAc,KAC3F,IAAIoE,OAAY,EACZoB,OAAiB,EACjBrB,OAAkB,EAClBkxC,EAA6D,QAA5CnuC,KAAKtJ,OAAOmF,aAAaQ,iBAAoD,IAAxB2D,KAAK9E,cAAuB,EACtD,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAK/E,YACrD+E,KAAK/E,YAAc,EAE7B,GADAkzC,EAAiBnuC,KAAKouC,wBAAwBD,GAC1CnuC,KAAKquC,iBAAkB,CAcvB,GAbIruC,KAAKitC,aAAa11C,SAClB2F,EAAY8C,KAAKitC,aAAajtC,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WAC5DD,EAAkB+C,KAAKitC,aAAajtC,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBAC9D+C,KAAKitC,aAAajtC,KAAK/E,aAAanC,KACpCwF,EAAiB0B,KAAKitC,aAAajtC,KAAK/E,aAAanC,GAAoB,WAGjFkH,KAAK8sC,kBAAoBnzC,EAAYqG,KAAK8sC,mBAC1C9sC,KAAKgtC,kBAAoBrzC,EAAYqG,KAAKgtC,mBAC1ChtC,KAAKgtC,kBAAkBx0C,KAAKwH,KAAKitC,aAAajtC,KAAK/E,cACnD8yC,EAAQ/tC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBi2B,GAAgBG,QACzDP,EAAM/0C,SAAW2d,SAAO3W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBu4B,EAAM/0C,SAAU+0C,EAAO/tC,KAAKtJ,SACxDq3C,EAAMlxC,eAAe,SAAU,CAEhC,GADAmD,KAAKuuC,YAAqC,IAAxBvuC,KAAK9E,cAAuB,EAAI8E,KAAKuuC,WACP,UAA5CvuC,KAAKtJ,OAAOmF,aAAaQ,gBAEzB,GADA0xC,EAAMS,cAAgB31C,EAClBmH,KAAK9E,eAAiB,EAAG,CACzB6yC,EAAMj1C,WAAasD,YAAW4D,KAAKitC,aAAajtC,KAAK/E,cACrD8yC,EAAMzvC,eAAiByvC,EAAMj1C,WAAWE,gBACjC+0C,EAAMj1C,WAAWQ,oBACjBy0C,EAAMj1C,WAAWkH,KAAKtJ,OAAO0G,cACpC2wC,EAAM5zC,MAAQ4zC,EAAMj1C,WAAWqB,MAAQ,EACvC4zC,EAAM7zC,MAAQ8F,KAAKuuC,WACnB,IAAIE,EAAmBr1C,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAcwzC,EAAmB,GACzF/1C,EAAShB,oBAAkBgB,GAAUsH,KAAKitC,aAAajtC,KAAK/E,aAAevC,EAC3Eu1C,EAAmBxvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEswC,KAAkBxvC,QAAQ9F,EAAOs1C,IACjFhuC,KAAKhF,kBACL+yC,EAAM/tC,KAAKtJ,OAAOuG,iBAAmBC,GAEzCG,EAAgB2wC,EAAcD,EAAMj1C,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiB+yC,SAG7F,IAAiD,UAA5C/tC,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF3E,oBAAkBsI,KAAKitC,aAAajtC,KAAK/E,cAAe,CAS5D,GARA8yC,EAAM5zC,MAAQ6F,KAAKitC,aAAajtC,KAAK/E,aAAkB,MACnD8yC,EAAM5zC,OAAS6F,KAAK9E,eAAiB,IACrC6yC,EAAMj1C,WAAaD,EACnBk1C,EAAMzvC,eAAiBA,SAChByvC,EAAMj1C,WAAWQ,oBACjBy0C,EAAMj1C,WAAWkH,KAAKtJ,OAAO0G,eAExC2wC,EAAM7zC,MAAoD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAKuuC,WAAavuC,KAAKuuC,WAAa,EACxD,UAA5CvuC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5EuzC,EAAmBr1C,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAcwzC,EAAmB,GACzF/1C,EAAShB,oBAAkBgB,GAAUsH,KAAKitC,aAAajtC,KAAK/E,aAAevC,EAC3Eu1C,EAAmBxvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEswC,KAAkBxvC,QAAQ9F,EAAOs1C,IAEzF,GAAgD,UAA5ChuC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5ExC,EAASsH,KAAKitC,aAAajtC,KAAK/E,aACpCgzC,EAAmBxvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEswC,KAAkBxvC,QAAQ9F,EAAOs1C,IAErFhuC,KAAKhF,kBACL+yC,EAAM/tC,KAAKtJ,OAAOuG,iBAAmBA,GAG7C8wC,EAAM7zC,OAAyB,IAAjB6zC,EAAM7zC,MAAe,EAAI6zC,EAAM7zC,MAC7C6zC,EAAM10C,iBAAkB,EACxB00C,EAAMz0C,gBACN0G,KAAKitC,aAAa9vC,OAAO4wC,EAAM7zC,MAAO,EAAG6zC,GACzC/tC,KAAK9D,mBAAmBiB,OAAO4wC,EAAM7zC,MAAO,EAAG6zC,GAE3CG,EADAD,GAIaF,EAAM7zC,MAEyB,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzB6xC,EAA6B,IAAhBH,EAAM7zC,MAAcg0C,EAAaA,EAAa,GAE/DzvC,EAAKtB,OAAO+wC,EAAY,EAAGH,GAC3B/tC,KAAK8sC,kBAAkBt0C,KAAKu1C,GAEhC/tC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBi2B,GAAgB1vC,KAAOsvC,EACxD/tC,KAAKquC,kBAAmB,GAExBruC,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,oBACoB,QAA1De,KAAKtJ,OAAOiB,KAAKugB,gBAAgBi2B,GAAgBjuC,OACpDM,QAAMR,KAAK9D,mBAAmBiyC,GAAiBnuC,KAAKtJ,OAAOiB,KAAKugB,gBAAgBi2B,GAAgBG,WAI5G1B,EAAU3rC,UAAUmF,eAAiB,SAAU1I,GAE3C,GAAsC,SAAlCsC,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOqF,WAAuB,aAG/E,OAFA2B,EAAEuL,QAAS,OACXjJ,KAAKtJ,OAAOqF,WAAuB,cAAI,GAG3CiE,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAK+vB,iBACtC1nB,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAK+vB,kBAAoB,EAAI1nB,KAAKtJ,OAAOiB,KAAK+vB,iBAAmB,EAChG1nB,KAAK5E,aAAe4E,KAAKtJ,OAAOgS,qBAAqB,IAEzDkkC,EAAU3rC,UAAUiF,SAAW,SAAUxI,GACrC,GAAgD,WAA5CsC,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD2D,KAAKktC,OAAQ,EACbltC,KAAKquC,kBAAmB,EACxB,IAAInN,EAAc,EAMlB,GALKlhC,KAAKitC,aAAa11C,SACnByI,KAAK8sC,qBACL9sC,KAAKitC,aAAetzC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAEX,QAA5C6D,KAAKtJ,OAAOmF,aAAaQ,eAA0B,CACnD,IAAInE,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKuT,cAAchc,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKie,gBAAgB1mB,UACtDW,EAAU8H,KAAKitC,cAEnBjtC,KAAK0uC,iBAAiBx2C,GACtB8H,KAAKtJ,OAAO0b,OAAOmb,OACnBvtB,KAAK6sC,gBAAkB,EAE3B7sC,KAAK2uC,iBAEL,IAAIC,EAAcvwC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MAClDk3C,EAAQ7uC,KAAKtJ,OAAOwgB,kBACpBlX,KAAKtJ,OAAOsF,kBAAkBgE,KAAKie,gBAAgB1mB,QAAsD,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBACtF6kC,EAAcxjC,EAAEiB,IAAIgL,SACpBilC,EAAYrb,aAAaub,OAAOA,OAAS9uC,KAAK8uC,QAG9C5N,EAAc2N,EAAMx3B,uBAAuB,cAAc,GAAG1N,SAKhEilC,EAAYrb,aAAaub,OAAO/F,SAAW7H,EAAa0N,EAAYrb,aAAaub,OAAO/F,QAAQ,MAGxG6D,EAAU3rC,UAAUkF,kBAAoB,SAAUzI,GACzCsC,KAAKitC,aAAa11C,SACnByI,KAAKitC,aAAetzC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAE3D,IAAIyyC,EAAcvwC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MACtDqI,KAAK8uC,OAASF,EAAYrb,aAAaub,OAAOA,OAC9C9uC,KAAKtJ,OAASsJ,KAAKtJ,OACnB,IACIwB,EACAuG,EAFAE,KAGAowC,EAAa/uC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAExDyzC,EAAS51C,EADbqF,EAAOuB,KAAKtJ,OAAOiB,KAAK+Q,qBAAqB1I,KAAKtJ,OAAOiB,KAAK+Q,qBAAqBnR,OAAS,IAE5F,GAAIy3C,EAAOz3C,OACP,IAAK,IAAIF,EAAI,EAAGA,EAAI23C,EAAOz3C,OAAQF,IAAK,CACpC,IAAI6C,EAAQ8F,KAAKtJ,OAAOiB,KAAKmH,wBAAwBkwC,EAAO33C,GAAG03C,IAC/DpwC,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAKkH,UAAU3E,KAChC8F,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAO+a,eAAiBzR,KAAKtJ,OAAOuI,qBACnEN,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAK2+B,iBAAiBp8B,IAIvD,IAAKxC,oBAAkB+G,EAAK3F,YAAa,CACrC,IAAIA,EAAaC,EAAciH,KAAKtJ,OAAQ+H,EAAK3F,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAImpC,EAAa1pC,EAAWQ,aAAakF,QAAQC,GACjD3F,EAAWQ,aAAa6D,OAAOqlC,EAAY,GAE/CxiC,KAAK+sC,oBAAsBpzC,EAAYqG,KAAK+sC,qBAC5C/sC,KAAK+sC,oBAAoBv0C,KAAKiG,GAElCuwC,EAAOx2C,KAAKiG,GACZvG,EAAU82C,EACV,IAAS33C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAI62C,EAAaluC,KAAKitC,aAAa9uC,IAAI,SAAUT,GAAK,OAAOA,EAAEqxC,KAAgBvwC,QAAQtG,EAAQb,GAAG03C,KAC9E,IAAhBb,GACAluC,KAAKitC,aAAa9vC,OAAO+wC,EAAY,GAG7C,IAAS72C,EAAI,EAAGA,EAAIsH,EAAIpH,OAAQF,IACvBK,oBAAkBiH,EAAItH,KACvB2I,KAAKtJ,OAAOiB,KAAK6uB,gBAAgByoB,gBAAgBz2C,KAAKmG,EAAItH,KAItEu1C,EAAU3rC,UAAU0tC,eAAiB,WAEjC,IAAK,IADD5mC,EAAO/H,KAAKtJ,OAAOiB,KAAK+7B,cACnBr8B,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAC7B0Q,EAAK1Q,GAAG4V,aAAa,gBAAiB5V,EAAEwQ,YAE5C,GAAI7H,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,cAEnE,CAAA,IADDy9B,EAAQlvC,KAAKtJ,OAAOiB,KAAKwX,qBAC7B,IAAS9X,EAAI,EAAGA,EAAI63C,EAAM33C,OAAQF,IAC9B63C,EAAM73C,GAAG4V,aAAa,gBAAiB5V,EAAEwQ,cAIrD+kC,EAAU3rC,UAAUytC,iBAAmB,SAAUx2C,GAK7C,IAAK,IAJDg6B,EAAalyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACxDgY,EAAe,eAEfza,EAAyD,UAA5CkH,KAAKtJ,OAAOmF,aAAaQ,eAA6B,gBAAkB,aAChFhF,EAAI,EAAGA,EAAI2I,KAAKtJ,OAAOsF,kBAAkBuX,GAAchc,OAAQF,IAC/DK,oBAAkBsI,KAAKtJ,OAAOsF,kBAAkBuX,GAAclc,GAAGyB,KAC9DkH,KAAKtJ,OAAOsF,kBAAkBuX,GAAclc,GAAGyB,GAAYo5B,KAAgBh6B,EAAQ8H,KAAK/E,aAAai3B,KACrGlyB,KAAK6sC,gBAAkB7sC,KAAK6sC,gBAAkB,IAK9DD,EAAU3rC,UAAUoF,gBAAkB,SAAU3I,GAC5C,IACIyxC,EAAgB,iBAChBnxB,EAAiBtgB,EAAErC,aAA0B,eACjD,GAAIqC,EAAErC,aAA0B,eAAE9D,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAI2mB,EAAezmB,OAAQF,IACvCwD,GAAaZ,MAAO+jB,EAAe3mB,GAAIiE,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,mBAFtG,GAKrB,GAAIwC,EAAErC,aAAa8zC,GAAe53C,OAGzB,CAAA,IADDmB,EADiBgF,EAAErC,aAAa8zC,GAEpC,IAAS93C,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC2I,KAAKovC,eAAe12C,EAAOrB,GAAG2B,UAE9B,IAAK,IADDg2C,EAAS51C,EAAoBV,EAAOrB,IAC/BkK,EAAI,EAAGA,EAAIytC,EAAOz3C,OAAQgK,IAC/BvB,KAAKovC,eAAeJ,EAAOztC,GAAGvI,UAElC0E,EAAErC,aAAa8zC,GAAiBzxC,EAAErC,aAAa8zC,GAAe51C,OAAOy1C,IAG7EhvC,KAAKktC,OAAQ,GAEjBN,EAAU3rC,UAAUmuC,eAAiB,SAAUn1C,UAEpC+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3B2yC,EAAU3rC,UAAUmsC,kBAAoB,WACpC,IACIlzC,EADAq6B,EAAgB,gBAEhBz7B,EAAa,aAEboD,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtC7C,EAAe,eACfmF,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/Du7B,EAAalyB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC5D,IAAK7D,oBAAkBsI,KAAKtJ,OAAO69B,IAAiB,CAChD,IAAI51B,EAAMqB,KAAKtJ,OAAO69B,GAAexpB,QAAQ,MAC7C/K,KAAKtJ,OAAO+qB,YAAY9iB,GACxBqB,KAAKtJ,OAAO69B,GAAiB,KAEjC,IAAK78B,oBAAkBsI,KAAK8sC,mBACxB,IAAK,IAAIz1C,EAAI,EAAGA,EAAI2I,KAAK8sC,kBAAkBv1C,OAAQF,IAG/C,GAFA6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEw0B,KAAgB1zB,QAAQwB,KAAK8sC,kBAAkBz1C,GAAG66B,IAC3FzzB,EAAKtB,OAAOjD,EAAO,GAC6B,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzBnC,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEw0B,KAClD1zB,QAAQwB,KAAK8sC,kBAAkBz1C,GAAGyB,GAAckH,KAAK8sC,kBAAkBz1C,GAAGyB,GAAYo5B,GACrFlyB,KAAK8sC,kBAAkBz1C,GAAG66B,KAC3Bx6B,oBAAkBwE,EAAmBhC,KAEtC,IAAK,IADD8Y,EAAW9W,EAAmBhC,GAAOZ,GAChCS,EAAI,EAAGiZ,GAAYjZ,EAAIiZ,EAASzb,OAAQwC,IACzCiZ,EAASjZ,GAAGm4B,KAAgBlyB,KAAK8sC,kBAAkBz1C,GAAG66B,IACtDh2B,EAAmBhC,GAAOZ,GAAc6D,OAAOpD,EAAG,GAO1E,IAAKrC,oBAAkBsI,KAAK+sC,qBACxB,IAAS11C,EAAI,EAAGA,EAAI2I,KAAK+sC,oBAAoBx1C,OAAQF,IACjD,IAAKK,oBAAkBsI,KAAK+sC,oBAAoB11C,GAAGyB,IAAc,CAC7DoB,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEw0B,KAClD1zB,QAAQwB,KAAK+sC,oBAAoB11C,GAAGyB,GAAYo5B,IACrD,IAAImd,EAA4D,IAA5CrvC,KAAK+sC,oBAAoB11C,GAAa,MAAU2I,KAAK+sC,oBAAoB11C,GAAa,MACtG2I,KAAK+sC,oBAAoB11C,GAAa,MAAI,EACzCK,oBAAkBwE,EAAmBhC,KACtCgC,EAAmBhC,GAAOZ,GAAc6D,OAAOkyC,EAAe,EAAGrvC,KAAK+sC,oBAAoB11C,IAK1G2I,KAAK8sC,kBAAoB9sC,KAAKitC,aAAejtC,KAAKgtC,kBAAoBhtC,KAAK9D,sBAC3E8D,KAAKitC,aAAetzC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAKuuC,WAAa,EAClBvuC,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACvD6D,KAAK+sC,uBACL/sC,KAAKtJ,OAAOiB,KAAK4H,aAAawwB,WAElC6c,EAAU3rC,UAAUqF,UAAY,SAAUtD,GACtC,GAAsC,UAAlChD,KAAKtJ,OAAOmF,aAAaC,KAAkB,CAC3C,IAAIzE,OAAI,EACJgE,EAAe2E,KAAKtJ,OAAOsF,kBAC3BiiB,EAAiB,iBAIjBxf,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/DuF,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtCmzC,EAAetvC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE1Dg0C,EAAal0C,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHIm0C,EAAWh4C,OAAS,GAAiD,WAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBAClDkzC,EAAWhO,UAEiC,WAA5CvhC,KAAKtJ,OAAOmF,aAAaQ,eAEzB,GADAoC,EAAKtB,OAAOsB,EAAKlH,OAASg4C,EAAWh4C,OAAQg4C,EAAWh4C,QACnDyI,KAAKtJ,OAAOma,YAKZ,CACD,IAAI2+B,EAAe71C,EAAY8E,GAC3By2B,EAAasa,EAAarxC,IAAI,SAAUT,GAAK,OAAOA,EAAE4xC,KACrD9wC,QAAQtC,EAAmB,GAAGozC,IAC/BG,EAAWva,EAAal1B,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,SAC1D5sC,EAAqBszC,EAAaryC,OAAO+3B,EAAYua,QATjDvzC,EAAmB3E,OAASg4C,EAAWh4C,QACvC2E,EAAmBiB,OAAOjB,EAAmB3E,OAASg4C,EAAWh4C,OAAQg4C,EAAWh4C,QAWhG,IAAKF,EAAI,EAAGA,EAAIk4C,EAAWh4C,OAAQF,IAAK,CACpC,IAAI+C,EAAWgC,YAAWmzC,EAAWl4C,IAgCrC,UA/BO+C,EAAStB,kBACTsB,EAASpB,gBACToB,EAASF,aACTE,EAASD,aACTC,EAASf,uBACTe,EAASd,oBACTc,EAASkE,eACX5G,oBAAkB0C,EAASo0C,uBACrBp0C,EAASo0C,cAEpBe,EAAWl4C,GAAG+C,SAAWA,EACzBgB,EAAe4E,KAAKgtC,kBAAkB31C,GAClCK,oBAAkB0D,KAClBA,EAAe4E,KAAKgtC,kBAAkB31C,EAAI,IAE1C2I,KAAKhF,kBACAtD,oBAAkB63C,EAAWl4C,GAAGyB,aACjCuE,EAAgBiyC,EAAcC,EAAWl4C,GAAGyB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBu0C,EAAWl4C,KAGhHK,oBAAkB0D,KACnBH,EAAcG,EAAalB,OAEiB,QAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBAAwE,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAC1E3E,oBAAkB63C,EAAWl4C,GAAGyB,cAAuC,IAAxBkH,KAAK9E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaZ,MAAOs1C,EAAWl4C,GAAIiE,OAAQ,OAAS0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OApDvF,EAoDkHE,GAC/HF,EAAgB,KACgC,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,iBAA+B3E,oBAAkB63C,EAAWl4C,GAAa,YAIlG,IAAK,IAHDq4C,EAAaxzC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAE4xC,KAC3D9wC,QAAQ+wC,EAAWl4C,GAAa,WAAEi4C,IACnCt8B,EAAW9W,EAAmBwzC,GAAwB,aACjD31C,EAAI,EAAGA,EAAIiZ,EAASzb,OAAQwC,IAC7BiZ,EAASjZ,GAAGu1C,KAAkBC,EAAWl4C,GAAGi4C,IAC5CpzC,EAAmBwzC,GAAwB,aAAEvyC,OAAOpD,EAAG,GAKvE,GAAIsB,EAAa4iB,GAAgB1mB,OAC7B,IAAKF,EAAI,EAAGA,EAAIgE,EAAa4iB,GAAgB1mB,OAAQF,IACjDwD,GAAaZ,MAAOoB,EAAa4iB,GAAgB5mB,GAAIiE,OAAQ,UAAY0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OAnEhH,EAmE2IE,GAG5J4E,KAAKtJ,OAAO6G,cACZ,IAAK,IAAIy5B,EAAM,EAAGA,EAAMv4B,EAAKlH,OAAQy/B,IACjCv4B,EAAKu4B,GAAU,MAAIA,EACnBxhB,WAAS,sBAAwB/W,EAAKu4B,GAAa,SAAI,SAAUA,EAAKh3B,KAAKtJ,QACtE+H,EAAKu4B,GAAU,OAChBh3B,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKu4B,IAI7Ch3B,KAAKgtC,kBAAoBhtC,KAAK8sC,kBAAoB9sC,KAAKitC,aAAejtC,KAAK+sC,oBAAsB/sC,KAAK9D,uBAE1G0wC,EAAU3rC,UAAUmtC,wBAA0B,SAAUl0C,GACpD,IAAI6N,EAAO/H,KAAKtJ,OAAOiB,KAAK+7B,cAC5B,IAAiD,UAA5C1zB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,iBAC9E2D,KAAK9E,eAAiB,EAAG,CAC5B,IAAKxD,oBAAkBsI,KAAKitC,aAAajtC,KAAK/E,eAAiB+E,KAAKitC,aAAajtC,KAAK/E,aAAa9B,SAC/F,GAAI6G,KAAKtJ,OAAOsF,kBAAkBgE,KAAKuT,cAAchc,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKie,gBAAgB1mB,QAEtD,GADA2C,GAASd,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAc1D,OAClB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAK0tC,2BAK/BxzC,GAASd,EAAoB4G,KAAKitC,aAAajtC,KAAK/E,cAAc1D,OAGtE2C,GAAS6N,EAAKxQ,SACd2C,EAAQ6N,EAAKxQ,OAAS,GAE1ByI,KAAK0uC,iBAAiB1uC,KAAKtJ,OAAOiB,KAAKwE,yBACnC6D,KAAK6sC,kBACL3yC,GAAS8F,KAAK6sC,iBAElB7sC,KAAK6sC,gBAAkB,EAE3B,OAAO3yC,GAEX0yC,EAAU3rC,UAAUosC,qBAAuB,SAAU3vC,GACjDA,EAAEsF,KAAKiG,QAAS,EAChB,IAAIqlC,EAAUtuC,KAAKtJ,OAAOiB,KAAKqE,kBAC3BuX,KAEAlb,OAAOC,KAAKg2C,GAAS/2C,SACrBgc,EAAe+6B,EAAQ/6B,cAE3B,IAAK,IAAIlc,EAAI,EAAGA,EAAIkc,EAAahc,OAAQF,IACrCqG,EAAEqK,KAAK5K,OAAOoW,EAAalc,GAAQ,MAAG,IAG9Cu1C,EAAU3rC,UAAUqsC,cAAgB,SAAUtqC,GAG1CA,EAAU,MAAIhD,KAAKtJ,OAAOuhC,kBAAkB,GAAW,UAEpD2U,KCtiBP+C,GAAsB,WAItB,SAASA,EAAKj5C,GACVsJ,KAAKuT,aAAe,eACpBvT,KAAKie,eAAiB,iBACtBje,KAAK4vC,iBAAmB,KACxBntC,OAAKC,OAAOmtC,QACZ7vC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAK8vC,uBAAyB,KAC9B9vC,KAAK+vC,sBACL/vC,KAAKgwC,gBAAkB,IAAIpD,GAAU5sC,KAAKtJ,QAC1CsJ,KAAKkK,mBAmxBT,OA7wBAylC,EAAK1uC,UAAU4B,cAAgB,WAC3B,MAAO,QAKX8sC,EAAK1uC,UAAUiJ,iBAAmB,WAC9BlK,KAAKtJ,OAAOyT,GAAGwR,GAAmB3b,KAAKyF,WAAYzF,MACnDA,KAAKtJ,OAAOyT,GAAGohB,GAAkBvrB,KAAK0F,UAAW1F,MACjDA,KAAKtJ,OAAOyT,GAAGojB,GAAiBvtB,KAAK2F,SAAU3F,MAC/CA,KAAKtJ,OAAOyT,GAAGqjB,GAA0BxtB,KAAK4F,kBAAmB5F,MACjEA,KAAKtJ,OAAOyT,GAAG+hB,GAAiBlsB,KAAK6F,SAAU7F,MAC/CA,KAAKtJ,OAAOyT,GAAG0iB,GAAoB7sB,KAAKiG,YAAajG,MACrDA,KAAKtJ,OAAOiB,KAAKwS,GAAG8lC,GAAmBjwC,KAAKuG,WAAYvG,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,iBAAkBnK,KAAKkwC,YAAalwC,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,gBAAiBnK,KAAKmwC,aAAcnwC,MACxDA,KAAKtJ,OAAOyT,GAAGoiB,GAAiBvsB,KAAK+F,SAAU/F,MAC/CA,KAAKtJ,OAAOyT,GAAG,cAAenK,KAAKowC,iBAAkBpwC,MACrDA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKowC,iBAAkBpwC,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAGkmC,GAAkBrwC,KAAK4F,kBAAmB5F,MAC9DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,WAAYnK,KAAKswC,aAActwC,MACnDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,cAAenK,KAAKuwC,eAAgBvwC,MACxDA,KAAKtJ,OAAOyT,GAAG,0BAA2BnK,KAAKwwC,wBAAyBxwC,MAExEA,KAAKtJ,OAAOiB,KAAKwS,GAAGsmC,GAAwBzwC,KAAK4G,gBAAiB5G,MAClEA,KAAKtJ,OAAOiB,KAAKwS,GAAGumC,GAA0B1wC,KAAK6G,kBAAmB7G,MACtEA,KAAKtJ,OAAOiB,KAAKwS,GAAG,mBAAoBnK,KAAK2wC,eAAgB3wC,MAC7DA,KAAKtJ,OAAOiB,KAAKwS,GAAG,mBAAoBnK,KAAK4wC,eAAgB5wC,OAEjE2vC,EAAK1uC,UAAUqvC,aAAe,SAAU5yC,GACpCsC,KAAK6wC,kBAAoBnzC,EAAE2D,QAE/BsuC,EAAK1uC,UAAU2vC,eAAiB,SAAUE,GACtCA,EAAQz0C,eAAiB2D,KAAKtJ,OAAOmF,aAAaQ,eAClDy0C,EAAQ71C,YAAc+E,KAAK/E,YAC3B61C,EAAQC,cAAgB/wC,KAAK4vC,kBAEjCD,EAAK1uC,UAAU2F,gBAAkB,SAAU5D,GACvChD,KAAKtJ,OAAOwS,QAAQkkB,EAAoBpqB,IAE5C2sC,EAAK1uC,UAAU4F,kBAAoB,SAAU7D,GACH,SAAlChD,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAOwS,QAAQkP,EAAuBpV,IAMnD2sC,EAAK1uC,UAAUuJ,oBAAsB,WAC7BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIiR,GAAmB3b,KAAKyF,YACxCzF,KAAKtJ,OAAOgU,IAAI6gB,GAAkBvrB,KAAK0F,WACvC1F,KAAKtJ,OAAOgU,IAAI6iB,GAAiBvtB,KAAK2F,UACtC3F,KAAKtJ,OAAOgU,IAAI8iB,GAA0BxtB,KAAK4F,mBAC/C5F,KAAKtJ,OAAOgU,IAAImiB,GAAoB7sB,KAAKiG,aACzCjG,KAAKtJ,OAAOiB,KAAK+S,IAAIulC,GAAmBjwC,KAAKuG,YAC7CvG,KAAKtJ,OAAOiB,KAAK+S,IAAI,iBAAkB1K,KAAKkwC,aAC5ClwC,KAAKtJ,OAAOiB,KAAK+S,IAAI,gBAAiB1K,KAAKmwC,cAC3CnwC,KAAKtJ,OAAOgU,IAAI6hB,GAAiBvsB,KAAK+F,UACtC/F,KAAKtJ,OAAOgU,IAAI,cAAe1K,KAAKowC,kBACpCpwC,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKowC,kBACvCpwC,KAAKtJ,OAAOiB,KAAK+S,IAAI,cAAe1K,KAAKuwC,gBACzCvwC,KAAKtJ,OAAOiB,KAAK+S,IAAI2lC,GAAkBrwC,KAAK4F,mBAC5C5F,KAAKtJ,OAAOgU,IAAI,0BAA2B1K,KAAKwwC,yBAChDxwC,KAAKtJ,OAAOiB,KAAK+S,IAAI+lC,GAAwBzwC,KAAK4G,iBAClD5G,KAAKtJ,OAAOiB,KAAK+S,IAAIgmC,GAA0B1wC,KAAK6G,mBACpD7G,KAAKtJ,OAAOiB,KAAK+S,IAAI,WAAY1K,KAAKswC,cACtCtwC,KAAKtJ,OAAOiB,KAAK+S,IAAI,mBAAoB1K,KAAK2wC,gBAC9C3wC,KAAKtJ,OAAOiB,KAAK+S,IAAI,mBAAoB1K,KAAK4wC,kBAQlDjB,EAAK1uC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAKTmlC,EAAK1uC,UAAU+vC,oBAAsB,SAAUjd,GAC3C/zB,KAAKtJ,OAAOiB,KAAKoE,WAAWi1C,oBAAoBjd,IAEpD4b,EAAK1uC,UAAUmvC,iBAAmB,SAAUptC,GACxC,IAAIiuC,EAAY14C,YAAU,aAAcyK,GACpC2gB,EAAYprB,YAAU,OAAQ04C,GAC9BC,EAAUlxC,KAAKtJ,OACfG,EAAUq6C,EAAQv6C,WAAWE,QACjC,IAAKJ,EAAay6C,IAAYr6C,aAAmBusB,sBAClB,SAA1B6tB,EAAUpxC,aAA+C,QAArBoxC,EAAU31C,SACN,UAAxC41C,EAAQr1C,aAAaQ,gBAAsE,UAAxC60C,EAAQr1C,aAAaQ,gBAC1B,UAAxC60C,EAAQr1C,aAAaQ,gBAC5B,GAAkB,gBAAdsnB,EAA6B,CAC7B,IAAIha,EAAWjS,oBAAkBu5C,EAAUtyC,OAAStG,OAAOC,KAAK24C,EAAUtyC,KAAKpH,OAASyI,KAAK9E,cACzF+1C,EAAUtyC,IAAIgL,SAAW,EACzBwnC,EAAYz5C,oBAAkBiS,KAA2B,IAAdA,GACwC,EAAnFunC,EAAQ/0C,wBAAwBwN,GAAUunC,EAAQ31C,0BAA0B,IAChF21C,EAAQv5C,KAAK4c,MAAMM,UAAU,gBAAiBs8B,QAE7C,GAAkB,mBAAdxtB,EAEL,IAAK,IADDytB,EAAeF,EAAQv5C,KAAK4c,MAAMG,OAAOnd,OACpCF,EAAI,EAAGA,EAAI+5C,EAAc/5C,IACW,kBAArC65C,EAAQv5C,KAAK4c,MAAMG,OAAOrd,GAAGQ,KAC7Bq5C,EAAQv5C,KAAK4c,MAAMG,OAAOvX,OAAO9F,GAKX,UAAlC2I,KAAKtJ,OAAOmF,aAAaC,MAA8C,WAA1Bm1C,EAAUpxC,aACvDG,KAAKtJ,OAAO0b,OAAO,uBAG3Bu9B,EAAK1uC,UAAU2E,kBAAoB,SAAU5C,GACzC,IAAI3B,EAAS2B,EAAK3B,OAClB,IAAI3J,oBAAkB2J,EAAO0J,QAAQ,iBAArC,CAGA,IAAIpL,EAASK,KAAKtJ,OAAOiB,KAAKm2C,kBAAkBzsC,EAAO0J,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlCnM,KAAKtJ,OAAOmF,aAAaC,OAAoBkE,KAAKqxC,WAAa1xC,IAAWA,EAAO2xC,cACjFtxC,KAAKtJ,OAAOmF,aAAaoE,cAAgBN,EAAOM,eAAkBoB,EAAOgH,UAAUC,SAAS,sBAC5FjH,EAAOgH,UAAUC,SAAS,uBAA0BtI,KAAKtJ,OAAOmF,aAAauyB,oBAAqB,CAGlG,GAFApuB,KAAKqxC,WAAY,EACjBrxC,KAAKtJ,OAAOiB,KAAK6lB,eAAgBkK,iBAAkB1kB,EAAK2G,WAAY,GAChE3J,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAI6Q,EAAKpE,eAAa7H,EAAK3B,OAAQ,SACnCrB,KAAK4vC,iBAAmB3gC,EAAG9C,aAAa,iBACxC8C,EAAGhC,aAAa,gBAAiBgC,EAAGtF,SAAW,IAEnD3J,KAAKuxC,mBAAmB,YAGhC5B,EAAK1uC,UAAUswC,mBAAqB,SAAUz1C,GAC1CkE,KAAKtJ,OAAOiB,KAAK6lB,eAAgB3hB,cAAgBC,KAAMA,KAAU,GAC9CvD,YAAU,gBAAiByH,KAAKtJ,OAAOiB,KAAKoE,YAClDiG,MAAMhC,KAAKtJ,OAAOiB,KAAKoE,YACpCiE,KAAKtJ,OAAOiB,KAAKo2B,QAAS,GAE9B4hB,EAAK1uC,UAAU0vC,eAAiB,WACxB3wC,KAAKtJ,OAAO0H,sBAA0D,SAAlC4B,KAAKtJ,OAAOmF,aAAaC,OAC7DkE,KAAKqxC,WAAY,EACjBrxC,KAAKuxC,mBAAmB,YAGhC5B,EAAK1uC,UAAUsF,WAAa,SAAUvD,IAC9BhD,KAAKqxC,WAAgD,SAAlCrxC,KAAKtJ,OAAOmF,aAAaC,MAAmBiB,cAAciD,KAAKtJ,OAAOygB,oBACzFnX,KAAKwxC,SAAWxuC,EAAK1H,QAEL,OAAhB0H,EAAK1H,QACL0E,KAAK4F,kBAAkB5C,IAG/B2sC,EAAK1uC,UAAUmuC,eAAiB,SAAUn1C,UAE/B+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3B01C,EAAK1uC,UAAU8E,SAAW,SAAU/C,GAChC,IAAIqE,EAAQrH,KAERyxC,EAAOzuC,EAAY,QAoBvB,UAnBOA,EAAY,QACfhD,KAAKtJ,OAAO0H,uBAAyB1G,oBAAkBsI,KAAK4vC,oBAC5D5sC,EAAKrE,IAAIsO,aAAa,gBAAiBjN,KAAK4vC,kBAC5C5vC,KAAK4vC,sBAAmB9yB,GAEN,UAAlB9c,KAAKwxC,UACLxxC,KAAKtJ,OAAOwS,QAAQqjB,GAAiBvpB,EAAM,SAAU0uC,GAC5CA,EAAazoC,QAA6C,SAAnC5B,EAAM3Q,OAAOmF,aAAaC,KAG7C41C,EAAazoC,QAA6C,SAAnC5B,EAAM3Q,OAAOmF,aAAaC,OACtDuL,EAAMgqC,WAAY,EAClBhqC,EAAMkqC,mBAAmB,WAJzBlqC,EAAMkqB,mBAAmB,QAMxB75B,oBAAkB+5C,IACnBA,EAAKxmB,QAAQymB,KAIrB1xC,KAAK6wC,oBAAsB7wC,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,qBACrEtI,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,uBAAyBtI,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,kBAG7G,OAFAtF,EAAKiG,QAAS,OACdjJ,KAAK6wC,kBAAoB,MAGS,SAAlC7wC,KAAKtJ,OAAOmF,aAAaC,OACH,QAAlBkE,KAAKwxC,UAAwC,aAAlBxxC,KAAKwxC,SAChCxxC,KAAKwxC,SAAW,KAEO,UAAlBxxC,KAAKwxC,WACVxuC,EAAKiG,QAAS,EACdjJ,KAAKwxC,SAAW,QAO5B7B,EAAK1uC,UAAUswB,mBAAqB,SAAUogB,GAC1C,IAAKj6C,oBAAkBsI,KAAKtJ,OAAOiB,KAAK85B,eAAgB,CACpD,IAAImgB,EAAY5xC,KAAKtJ,OAAOwc,QAAQC,GAAK,gBACzCnT,KAAKtJ,OAAOiB,KAAK85B,cAAcC,aAAakgB,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1G3xC,KAAKtJ,OAAOiB,KAAK85B,cAAcC,aAAakgB,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGhC,EAAK1uC,UAAUgF,YAAc,SAAUvI,GACnC,GAAsC,SAAlCsC,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAC1C,IAAI+1C,EAAcxzC,WAAS,yBAA0B2B,KAAKtJ,OAAOiB,KAAKoE,YAClE+1C,EAAW9xC,KAAKtJ,OAAO67B,iBAAiBsf,EAAYloC,SAAU3J,KAAKtJ,OAAO0I,iBAC9EY,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAMozC,EAAYpmC,QAClBhM,KAAMqyC,EACNnyC,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,mBAEtDY,KAAKuxC,mBAAmB,UACxBvxC,KAAKqxC,WAAY,EAEiB,UAAlCrxC,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAO0b,OAAO,yBAG3Bu9B,EAAK1uC,UAAUsvC,eAAiB,SAAUvtC,GAClC7L,EAAgB6I,KAAKtJ,SAA6C,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAAmC,SAAhBkH,EAAK1H,SACjF0E,KAAKixB,WAAWjuB,EAAMA,EAAK2G,UAC3B3J,KAAK+xC,cAAc/uC,EAAMA,EAAKrE,IAAKqE,EAAK2G,YAGhDgmC,EAAK1uC,UAAU4E,SAAW,SAAU7C,GAChC,IAAIqE,EAAQrH,KACZ,GAAsC,SAAlCA,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOwc,QAAQpI,cAAc,QAAS,CACvF9H,EAAKiG,QAAS,EAEduM,WAAS,UAAU,EAAOxV,KAAKtJ,OAAOiB,MACtC6d,WAAS,kBAAkB,EAAMxV,KAAKtJ,QACtCsM,EAAKyI,QAAQzI,EAAK7H,YAAc6H,EAAK/I,MACrC,IAAI+3C,EAEAA,EADAt6C,oBAAkBsL,EAAKvD,MACfO,KAAKtJ,OAAOiB,KAAKoE,WAAqB,WAAEk2C,KAAKpwB,cAAcqd,WAG3Dl8B,EAAKvD,KAAKy/B,WAEtB,IAAIgT,EACAC,EAAgBnyC,KAAKtJ,OAAO6E,0BAC5B7D,oBAAkBs6C,GAClBhyC,KAAKtJ,OAAOiB,KAAKwE,wBAAwBsB,OAAO,SAAUC,EAAGrG,GACrDqG,EAAEy0C,EAAc,MAAQnvC,EAAKyI,QAAQ0mC,EAAc,MACnDD,EAAa76C,KAMrB66C,GAAwD,IAA1ClyC,KAAKtJ,OAAOmI,UAAUL,QAAQwzC,IAAkBhyC,KAAKtJ,OAAOuI,mBAAqB,EAC3Fe,KAAKtJ,OAAOiB,KAAK2+B,iBAAiB93B,QAAQwzC,GAAShyC,KAAKtJ,OAAOmI,UAAUL,QAAQwzC,GAEzF,IAAItb,KAMJ,GALAt6B,SAAOs6B,EAAK1zB,GACZ0zB,EAAIztB,QAAS,EACbytB,EAAIzzB,KAAO,OACX+uC,EAAQhyC,KAAKtJ,OAAOiB,KAAKkH,UAAUmzC,EAAMroC,UACzC3J,KAAKtJ,OAAOwS,QAAQkkB,EAAoBsJ,GACnCA,EAAIztB,OAiCLjJ,KAAKtJ,OAAOiB,KAAKo2B,QAAS,OA5B1B,GAJKikB,EAAMroC,WAAa3J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,QAAlByI,KAAKwxC,WAC5ExxC,KAAKoyC,cAAe,GAExBpyC,KAAKqyC,gBAAgBrvC,GAChBvM,EAAauJ,KAAKtJ,SACjBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmBusB,qBAa5F,GAAI3sB,EAAauJ,KAAKtJ,SACtBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmBusB,oBAAoB,CAChH,IAAI7O,EAAQvU,KAAKtJ,OAAOiB,KAAK4c,MAClBvU,KAAKtJ,OAAOiB,KAAKhB,WAAW27C,OAAOH,EAAc,GAAInvC,EAAKyI,QAAS8I,EAAMg+B,UAAWh+B,EAAOvR,EAAKwvC,eACtGr9B,KAAK,SAAUzX,GACXhG,oBAAkBgG,KACnBsF,EAAKyI,QAAQzI,EAAK7H,YAAcuC,EAAEsF,EAAK7H,aAE3CkM,EAAM4pB,WAAWjuB,EAAMkvC,GACvB7qC,EAAM0qC,cAAc/uC,EAAMgvC,EAAOE,WArBrC,GAAI/6C,EAAgB6I,KAAKtJ,QAAS,CAC9B,IACI+7C,GAAa5yC,YAAa,OAAQpB,KAAMuE,EAAKyI,QAASnQ,OAAQ,OAAQqD,IAAKqzC,EAC3EroC,SAAUuoC,EAAYzmC,QAASzI,EAAKyI,QAAStQ,WAAY6H,EAAK7H,WAC9Du3C,kBAAmB,KAAMC,oBAAqB,MAClD3yC,KAAKtJ,OAAOiB,KAAKigB,gBAA4B,aAAE66B,EAAUzyC,KAAKtJ,OAAOiB,KAAK4c,YAG1EvU,KAAKixB,WAAWjuB,EAAMkvC,GACtBlyC,KAAK+xC,cAAc/uC,EAAMgvC,EAAOE,KAqBpDvC,EAAK1uC,UAAU8wC,cAAgB,SAAU/uC,EAAMrE,EAAKgL,GAChD,IAAIipC,EACA5yC,KAAKtJ,OAAOiB,KAAKk7C,iBACjB7yC,KAAKtJ,OAAOiB,KAAKk7C,gBAAgB9iB,QAAQ/sB,EAAKyI,SAElDzL,KAAKtJ,OAAOiB,KAAKoE,WAAW+2C,gBAAgB9yC,KAAKtJ,OAAOiB,KAAKmjB,iBAAiB9X,EAAK7H,cACnF6E,KAAKtJ,OAAOiB,KAAKoE,WAAWg3C,QAAQlpC,UACd,QAAlB7J,KAAKwxC,UAAwC,aAAlBxxC,KAAKwxC,WAChCxxC,KAAKuxC,mBAAmB,UACxBvxC,KAAKqxC,WAAY,GAErBrxC,KAAKuxB,mBAAmB,QACpBvxB,KAAKtJ,OAAOuI,mBAAqB,IACjC2zC,EAAO5yC,KAAKtJ,OAAOiB,KAAK2+B,iBAAiB3sB,GACzCyD,eAAawlC,IAAQ,cAAe,eACpCxlC,cAAYwlC,EAAKpqC,iBAAiB,eAAgB,oBAAqB,iBAE3E4E,eAAazO,IAAO,cAAe,eACnCyO,cAAYzO,EAAI6J,iBAAiB,eAAgB,oBAAqB,gBACtExI,KAAKtJ,OAAOiB,KAAKi3C,YAAYoE,eAC7Bn4C,GAAaZ,MAAO+I,EAAKyI,QAASnQ,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAe8H,EAAK7H,YAC7HwD,EAAIgL,WAAa3J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,UAAlByI,KAAKwxC,WAC1ExxC,KAAKwxC,SAAW,MAEpB,IAAIyB,GACAhwC,KAAM,OAAQtD,OAAQK,KAAKtJ,OAAOokB,iBAAiB9X,EAAK7H,YAAasD,KAAMuE,EAAKyI,QAChFynC,aAAclwC,EAAKwvC,cAAe7zC,IAAKA,EAAK0C,OAAQ2B,EAAKvD,MAE7DO,KAAKtJ,OAAOwS,QAAQkP,EAAuB66B,IAE/CtD,EAAK1uC,UAAUivC,YAAc,SAAU6C,IAC9B/yC,KAAKtJ,OAAOiB,KAAKo2B,QAAU/tB,KAAKqxC,WAA+B,QAAlBrxC,KAAKwxC,UAAwD,SAAlCxxC,KAAKtJ,OAAOmF,aAAaC,OAClGkE,KAAKuxC,mBAAmB,UACxBvxC,KAAKqxC,WAAY,EACjBrxC,KAAKwxC,SAAW,OAGxB7B,EAAK1uC,UAAUoxC,gBAAkB,SAAUrvC,GACvC,GAAIjG,cAAciD,KAAKtJ,OAAOygB,iBAK1B,IAAK,IAJD4c,EAAO/zB,KAAKtJ,OAAOiB,KAAKiI,aAExB6iB,EAAcziB,KAAKtJ,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAI08B,EAAKx8B,OAAQF,IAAK,CAClC,GAAIorB,EAAYprB,GAAGub,SAAU,CACzB,IAAIugC,EAAanzC,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK4gB,EAAK18B,GAAG2U,IACvDyW,EAAYprB,GAAG+7C,mBAAf3wB,CAAmCrmB,UAASlC,OAAU7C,IAAM2L,EAAKyI,SAAUzL,KAAKtJ,OAAOiB,KAAM,WAAYw7C,EAAYnzC,KAAKtJ,OAAOiB,KAAQ,iBAAG,MAE5Io8B,EAAK18B,GAAGg8C,cACRC,uBAAqBtzC,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK4gB,EAAK18B,GAAG2U,IAAM,eAAgB,eAAgB+nB,EAAK18B,IAEtG08B,EAAK18B,GAAGub,UACR0gC,uBAAqBtzC,KAAKtJ,OAAOiB,KAAKub,QAAQC,GAAK4gB,EAAK18B,GAAG2U,IAAK,WAAY+nB,EAAK18B,IAAI,KAKrGs4C,EAAK1uC,UAAUgwB,WAAa,SAAUjuB,EAAM2G,GACxC3J,KAAKtJ,OAAOiB,KAAKoE,WAAWm1B,UAAUvnB,EAAU3G,EAAKyI,SACrDzL,KAAKtJ,OAAOiB,KAAKugB,gBAAgBvO,GAAUlL,KAAOuE,EAAKyI,SAE3DkkC,EAAK1uC,UAAUwE,WAAa,SAAU3K,EAASK,GAC3CN,EAAWC,EAASkF,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAeC,EAAY6E,KAAK5E,cAC9G4E,KAAKtJ,OAAO6G,cAGZ,IAAK,IAFDkB,EAAOuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC9CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClCoH,EAAKpH,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjDT,EAAQb,MAAMpC,KAAS4G,EAAKpH,GAAGQ,IACR,QAAnBiD,EAAQQ,SACRmD,EAAKpH,GAAG8C,MAAQ6F,KAAK+vC,mBAAmB51C,MACxCsE,EAAKpH,GAAG+C,SAAW4F,KAAK+vC,mBAAmB31C,SAC3CqE,EAAKpH,GAAG2B,SAAWgH,KAAK+vC,mBAAmB/2C,SACtCtB,oBAAkBsI,KAAK+vC,mBAAmBj3C,cAC3C2F,EAAKpH,GAAGyB,WAAakH,KAAK+vC,mBAAmBj3C,WAC7C2F,EAAKpH,GAAGiH,eAAiB0B,KAAK+vC,mBAAmBzxC,gBAErDG,EAAKpH,GAAGiC,aAAe0G,KAAK+vC,mBAAmBz2C,cAGvDkc,WAAS,sBAAwB/W,EAAKpH,GAAG2B,SAAW,SAAU3B,EAAG2I,KAAKtJ,QACjE+H,EAAKpH,GAAG8C,OACT6F,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKpH,IAGlB,QAAnByD,EAAQQ,QAAmD,MAA/B0E,KAAK8vC,yBACjC9vC,KAAKtJ,OAAO8mB,eAAgB3hB,cAAgBQ,eAAgB2D,KAAK8vC,0BAA4B,GAC7F9vC,KAAK8vC,uBAAyB,OAGtCH,EAAK1uC,UAAUsyC,YAAc,SAAU90C,EAAMsJ,EAAM7P,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAIiG,KAAKtJ,OAAOg9B,cAAcn8B,OAAQwC,IAAK,CACvD,IAAIy5C,EAAQt7C,EAAQ6B,GAChBG,EAAQmE,WAAS,sBAAwBm1C,EAAMx6C,SAAW,SAAUgH,KAAKtJ,QAE7E,GADA88C,EAAMt5C,MAAQA,GACTxC,oBAAkB87C,EAAM16C,YAAa,CACtC,IAAI8pC,EAAcvkC,WAAS,sBAAwBm1C,EAAM16C,WAAWE,SAAW,SAAUgH,KAAKtJ,QAC9F88C,EAAM16C,WAAWoB,MAAQ0oC,GAIjC,IAAK,IADDx0B,GAAS,EACJzR,EAAI,EAAGA,EAAIqD,KAAKtJ,OAAOmI,UAAUtH,OAAQoF,IAAK,CAC9CoL,EAAKpL,GAAG0L,UAAUC,SAAS,gBAC5B8F,IAEJ,IAAIqlC,EAAQv7C,EAAQkW,GAEhBjU,GADAD,EAAQu5C,EAAMv5C,MACNu5C,EAAMt5C,OACdwE,EAAMoJ,EAAKpL,GACVjF,oBAAkB+7C,EAAM36C,cACzBoB,EAAQmE,WAAS,sBAAwBo1C,EAAM36C,WAAWE,SAAW,SAAUgH,KAAKtJ,SAExF,IAAIg9C,EAAW/0C,EAAIe,MAAMM,KAAKtJ,OAAO0I,iBACrC,IAAK1H,oBAAkBg8C,GAAW,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASrrC,UAAU9Q,OAAQo8C,IAAK,CAChD,IAAI15C,EAAQy5C,EAASrrC,UAAUsrC,GAG3BtgC,EAASpZ,EAAMoP,MAFN,mBAGTiR,EAAUrgB,EAAMoP,MAFN,yBAGA,MAAVgK,GACAjG,eAAasmC,GAAWz5C,GAEb,MAAXqgB,GACAlN,eAAasmC,GAAWz5C,GAG3B8N,EAAKpL,GAAG0L,UAAUC,SAAS,eAI5B8H,YAAUsjC,GAAW,uBAAyBx5C,EAAQ,QAAUC,GAHhEiW,YAAUsjC,GAAW,iBAAmBx5C,EAAQ,QAAUC,MAQ1Ew1C,EAAK1uC,UAAU0E,SAAW,SAAU3C,GAChC,IAAI+tB,EACA72B,EAAQ8F,KAAK/E,YACb/C,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OACzB5B,EAAQ8F,KAAKgwC,gBAAgBxC,iBAC7BxtC,KAAK9E,cAAgB8E,KAAKgwC,gBAAgBvC,oBACtCztC,KAAKtJ,OAAOsF,kBAAkBgE,KAAKuT,cAAchc,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKie,gBAAgB1mB,UACtDW,EAAU8H,KAAKgwC,gBAAgBzC,oBAGvC,IAAIxlC,EAAO/H,KAAKtJ,OAAOiB,KAAK+7B,cACxBkgB,EAAiB7rC,EAAKxQ,QAAUwQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE0nC,EAAgB9rC,EAAKxQ,QAAUwQ,EAAKA,EAAKxQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrF2nC,EAAc9zC,KAAK9E,eAAiB04C,GAAkB5zC,KAAK9E,eAAiB24C,EAC5EE,EAAmB/zC,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAK4vC,iBACzF,GAAsC,WAAlC5vC,KAAKtJ,OAAOmF,aAAaC,KAAmB,CAC5C,GAAgD,UAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eACzB00B,EAAW,cAEV,IAAiD,UAA5C/wB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF2D,KAAK9E,eAAiB,GAAK64C,IAAqBD,IACpD/iB,EAAW,SACNr5B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlC6G,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKuT,cAAchc,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKie,gBAAgB1mB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAKgwC,gBAAgBtC,2BAK/CxzC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAKyI,KAAK9E,eAAiB,GAAK64C,IAAqBD,IAC7C55C,GAAsD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBACY,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAA8B,CAC1DnC,GAAS6N,EAAKxQ,SACd2C,EAAQ6N,EAAKxQ,OAAS,GAE1B,IACIy8C,EAAeh0C,KAAKtJ,OAAOiB,KAAKqhB,cAAe,KAAE,GACjDi7B,EAAkB/X,SAASgY,cAC/BnsC,EAAK7N,EAAQ,GAAG62B,GAAUhpB,EAAK,IAC/ByN,WAAS,aAActb,EAAQ,EAAG8F,KAAKgwC,iBACvC,IAAI7B,EAA6D,UAA5CnuC,KAAKtJ,OAAOmF,aAAaQ,eAA6BnC,EAAQA,EAAQ,EAK3F,GAJsC,UAAlC8F,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKqhB,cAAe,KAAE7b,OAAO,EAAG,GAC5C6C,KAAKtJ,OAAOiB,KAAKqhB,cAAe,KAAE7b,OAAOgxC,EAAgB,EAAG6F,IAE5Dh0C,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,cAAe,CACvF,IAAI0kB,EAAcn2B,KAAKtJ,OAAOyY,qBAE1BglC,EAAqBn0C,KAAKtJ,OAAOiB,KAAKugB,gBAAgB,GAC1Die,EAAYj8B,EAAQ,GAAG62B,GAAUoF,EAAY,IACP,UAAlCn2B,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKqhB,cAAmB,WAAE7b,OAAO,EAAG,GAChD6C,KAAKtJ,OAAOiB,KAAKqhB,cAAmB,WAAE7b,OAAOgxC,EAAgB,EAAGgG,IAEpE3+B,WAAS,aAActb,EAAQ,EAAG8F,KAAKgwC,iBAE3C,GAAsC,QAAlChwC,KAAKtJ,OAAOmF,aAAaC,MAAoD,SAAlCkE,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAErF,IAAK,IADDs4C,EAASp0C,KAAKtJ,OAAOiB,KAAKuf,kBAAkB1O,iBAAiB,gBACxDnR,EAAI,EAAGA,EAAI+8C,EAAO78C,OAAQF,IAC/B+8C,EAAO/8C,GAAG0tB,SAEdvP,WAAS,gBAAkBxV,KAAKtJ,OAAOiB,KAAKoE,WAAWg3C,SAEvDgB,IACA/zC,KAAK4vC,iBAAmB,MAE5BqE,EAAgBI,WAsB5B1E,EAAK1uC,UAAUyE,UAAY,SAAU1C,GACjC,GAAyB,YAArBA,EAAKnD,aAA6BG,KAAKqxC,UACvCruC,EAAKiG,QAAS,OAGlB,GAAsC,SAAlCjJ,KAAKtJ,OAAOmF,aAAaC,MAAwC,cAArBkH,EAAKnD,YAArD,CAIA,GAAIG,KAAK6wC,oBAAsB7wC,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,qBACrEtI,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,uBAAyBtI,KAAK6wC,kBAAkBxoC,UAAUC,SAAS,YAG7G,OAFAtF,EAAKiG,QAAS,OACdjJ,KAAK6wC,kBAAoB,MAG7B,GAAyB,WAArB7tC,EAAKnD,YAEL,IAAK,IADDpB,EAAOuE,EAAKvE,KACPpH,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClC2I,KAAKovC,eAAe3wC,EAAKpH,GAAG2B,UAE5B,IAAK,IADDg2C,EAAS51C,EAAoBqF,EAAKpH,IAC7BkK,EAAI,EAAGA,EAAIytC,EAAOz3C,OAAQgK,IAC/BvB,KAAKovC,eAAeJ,EAAOztC,GAAGvI,UAElCgK,EAAKvE,KAAOA,EAAKlF,OAAOy1C,GAGhC,GAAyB,QAArBhsC,EAAKnD,YAAuB,CAE5B,GADAG,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAK+vB,iBAClC1nB,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAIk2C,EAAW,yBAA2Bt0C,KAAK9E,cAAgB,KAC3DyD,OAAM,EACNqB,KAAK9E,eAAiB,GAAiD,QAA5C8E,KAAKtJ,OAAOmF,aAAaQ,gBACR,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBACzB2D,KAAK4vC,iBAAmB5vC,KAAK9E,cAAc2M,WAC3ClJ,EAAMqB,KAAKtJ,OAAO68B,aAAazoB,cAAcwpC,GAC7Ct0C,KAAK/E,YAAc0D,EAAMA,EAAIgL,SAAW,GAGpC3J,KAAK4vC,kBAA8C,OAA1B5vC,KAAK4vC,kBAC9B0E,EAAW,yBAA2Bt0C,KAAK4vC,iBAAmB,KAC9DjxC,EAAMqB,KAAKtJ,OAAO68B,aAAazoB,cAAcwpC,GAC7Ct0C,KAAK/E,YAAc0D,EAAMA,EAAIgL,SAAW,GAGxC3J,KAAK/E,YAAc,OAK3B+E,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAK+vB,kBAAoB,EAAI1nB,KAAKtJ,OAAOiB,KAAK+vB,iBAAmB,EAEpG1nB,KAAK5E,aAAe4E,KAAKtJ,OAAOgS,qBAAqB,GAEzD1F,EAAOhD,KAAKu0C,aAAavxC,QA/CrBA,EAAKiG,QAAS,GAyDtB0mC,EAAK1uC,UAAUuvC,wBAA0B,SAAUxtC,GACX,OAAhChD,KAAK8vC,yBACL9vC,KAAK8vC,uBAAyB9vC,KAAKtJ,OAAOmF,aAAaQ,iBAG/DszC,EAAK1uC,UAAUszC,aAAe,SAAUvxC,GACpC,IAAI/I,EAAQ+I,EAAKvE,KACjB,GAAoB,QAAhBuE,EAAK1H,OAAkB,CACvB,IAAIzD,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjDw1B,EAAW,KACf92B,EAAMG,SAAW1C,oBAAkBuC,EAAMG,UAAYgC,YAAW4G,EAAKvE,MAAQxE,EAAMG,SACnF,IAAIqf,EAAczZ,KAAKtJ,OAAOiB,KAAKwE,wBAC/BjC,EAAQ8F,KAAK/E,YACjBhB,EAAMjB,SAAW2d,SAAO3W,KAAKtJ,OAAOwc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBvb,EAAMjB,SAAUiB,EAAO+F,KAAKtJ,QAC7D,IAAIyD,EAAQ,EAER+C,OAAY,EACZoB,OAAiB,EACjBxF,OAAa,EACbmE,OAAkB,EAClB82C,EAAmB/zC,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAK4vC,iBACrF7nC,EAAO/H,KAAKtJ,OAAOmI,UACnB+0C,EAAiB7rC,EAAKxQ,QAAUwQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE0nC,EAAgB9rC,EAAKxQ,QAAUwQ,EAAKA,EAAKxQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrF2nC,EAAc9zC,KAAK9E,eAAiB04C,GAAkB5zC,KAAK9E,eAAiB24C,EAUhF,GATIp6B,EAAYliB,SACAkiB,EAAYzZ,KAAK/E,aAAaf,MAC1CgD,EAAYuc,EAAYzZ,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WACtDD,EAAkBwc,EAAYzZ,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBACxDwc,EAAYzZ,KAAK/E,aAAanC,aAC9BwF,EAAiBmb,EAAYzZ,KAAK/E,aAAanC,WAAWE,UAE9DF,EAAa2gB,EAAYzZ,KAAK/E,aAAanC,YAEC,QAA5CkH,KAAKtJ,OAAOmF,aAAaQ,gBAA4Bod,EAAYliB,OAAQ,CAEzE,GADA4C,EAAQsf,EAAYzZ,KAAK/E,aAAad,MACU,UAA5C6F,KAAKtJ,OAAOmF,aAAaQ,eACzB00B,EAAW,SACX72B,EAAQuf,EAAYzZ,KAAK/E,aAAaf,WAErC,GAAgD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D00B,EAAW,QACX,IAAI0d,EAAmBr1C,EAAoBqgB,EAAYzZ,KAAK/E,cAAc1D,OACtE02C,EAAmBx0B,EAAYzZ,KAAK/E,aAAaf,MACrDA,EAASu0C,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5CzuC,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D00B,EAAW,SACN/wB,KAAK9E,eAAiB,GAAK64C,IAAqBD,IACjD75C,EAAMnB,WAAasD,YAAWqd,EAAYzZ,KAAK/E,cAC/ChB,EAAMqE,eAAiBrE,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExC,IAAIo3C,EAAoBp7C,EAAoBqgB,EAAYzZ,KAAK/E,cAAc1D,OACvEk9C,EAAoBh7B,EAAYzZ,KAAK/E,aAAaf,MAClD8F,KAAKtJ,OAAOiB,KAAK+vB,kBAAoB,IACrCztB,EAAME,MAAQA,EAAQ,GAE1BD,EAASs6C,EAAoB,EAAMC,EAAoBD,IACnDx0C,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBC,EAC9ExF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,IAsB7F,GAlBgD,UAA5C+F,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAC3E2D,KAAK9E,eAAiB,GAAK64C,IAAqB55C,GAAS25C,IAC1D75C,EAAMqE,eAAiBA,EACvBrE,EAAMnB,WAAasD,YAAWtD,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExCnD,EAAME,MAAQA,EACV6F,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBA,EAC9EvF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,KAI7E,MAAZ82B,IAAqB/wB,KAAK9E,eAAiB,GAAK64C,IAAqBD,IACrE9wC,EAAK9I,MAAqB,WAAb62B,EAAwB72B,EAAQA,EAAQ,GAET,WAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD,IAAI1F,EAAcqJ,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cACrDoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WACnEqM,EAAK9I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAElBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB8I,EAAK1H,SACL0E,KAAK+vC,oBAAuB51C,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoB,SAAUH,EAAMG,SAAUkE,eAAgB5G,oBAAkBuC,EAAMnB,iBAAcgkB,EAAY7iB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArB0J,EAAKnD,YAEL,IAAK,IADD60C,EAAgB1xC,EAAKvE,KAChBpH,EAAI,EAAGA,EAAIq9C,EAAcn9C,OAAQF,IACtC,GAAIq9C,EAAcr9C,GAAGyB,WAAY,CACzBA,EAAaC,EAAciH,KAAKtJ,OAAQg+C,EAAcr9C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAImpC,EAAa1pC,EAAWQ,aAAakF,QAAQk2C,EAAcr9C,IAC/DyB,EAAWQ,aAAa6D,OAAOqlC,EAAY,IAK3D,OAAOx/B,GAMX2sC,EAAK1uC,UAAU6vB,UAAY,SAAUryB,EAAMvE,EAAO62B,GAC9C/wB,KAAK8vC,uBAAyB9vC,KAAKtJ,OAAOmF,aAAaQ,eACnDoC,GACIvE,GAAS,GACT8F,KAAK9E,cAAgBhB,EACrB8F,KAAK/E,YAAcf,IAGnB8F,KAAK9E,cAAgB8E,KAAKtJ,OAAOgxB,iBACjC1nB,KAAK/E,YAAc+E,KAAKtJ,OAAOgxB,kBAE/BqJ,GACA/wB,KAAKtJ,OAAO8mB,eAAgB3hB,cAAgBQ,eAAgB00B,KAAc,GAE9E/wB,KAAKtJ,OAAOiB,KAAKoE,WAAW+0B,UAAUryB,EAAMvE,IAG5C8F,KAAKtJ,OAAOiB,KAAKoE,WAAW+0B,UAAUryB,EAAMvE,IAOpDy1C,EAAK1uC,UAAU0zC,iBAAmB,WAC9B,OAAO30C,KAAKtJ,OAAOiB,KAAKoE,WAAW44C,oBAKvChF,EAAK1uC,UAAU2zC,YAAc,WACzB50C,KAAKtJ,OAAOiB,KAAKoE,WAAW64C,eAEhCjF,EAAK1uC,UAAUkvC,aAAe,SAAUzyC,GAC/BhG,oBAAkBgG,EAAEsF,KAAKnD,cACY,WAAlCnC,EAAEsF,KAAKnD,YAAYgI,YAA6D,SAAlCnK,EAAEsF,KAAKnD,YAAYgI,aAC3B,UAAlC7H,KAAKtJ,OAAOmF,aAAaC,MAAsD,cAAlC4B,EAAEsF,KAAKnD,YAAYgI,cACxE7H,KAAKuzC,YAAYvzC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,0BAC7E6D,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO+a,gBACpEzR,KAAKtJ,OAAOiB,KAAKhB,WAAWY,SAAWyI,KAAKtJ,OAAOyY,qBAAqB5X,QACxEyI,KAAKuzC,YAAYvzC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOyY,qBAAsBnP,KAAKtJ,OAAOyF,2BAS5GwzC,EAAK1uC,UAAUqwB,SAAW,SAAU3nB,EAAUtF,GACJ,SAAlCrE,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OAC/B,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKqxC,WAAY,EACjBrxC,KAAKuxC,mBAAmB,UAE5BvxC,KAAKtJ,OAAOiB,KAAKoE,WAAWu1B,SAAS3nB,EAAUtF,KAGhDsrC,KCzyBPkF,GAA+B,WAC/B,SAASA,EAAcn+C,GACnB+L,OAAKC,OAAOoyC,iBACZ90C,KAAKtJ,OAASA,EAiBlB,OAXAm+C,EAAc5zC,UAAU4B,cAAgB,WACpC,MAAO,iBAOXgyC,EAAc5zC,UAAU4I,QAAU,aAG3BgrC,KCjBPE,GAA2B,WAC3B,SAASA,EAAUr+C,GACf+L,OAAKC,OAAOsyC,aACZh1C,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAwGT,OA/FA6qC,EAAU9zC,UAAU4B,cAAgB,WAChC,MAAO,aAEXkyC,EAAU9zC,UAAUiJ,iBAAmB,WACnClK,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKi1C,aAAcj1C,MAClDA,KAAKtJ,OAAOyT,GAAG,kBAAmBnK,KAAKk1C,gBAAiBl1C,MACxDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,yBAA0BnK,KAAKm1C,oBAAqBn1C,MACxEA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKo1C,eAAgBp1C,MACtDA,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAKq1C,kBAAmBr1C,MAC5DA,KAAKtJ,OAAOyT,GAAG,iBAAkBnK,KAAKs1C,eAAgBt1C,OAK1D+0C,EAAU9zC,UAAUuJ,oBAAsB,WAClCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKi1C,cACrCj1C,KAAKtJ,OAAOgU,IAAI,kBAAmB1K,KAAKk1C,iBACxCl1C,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKo1C,gBACvCp1C,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAKq1C,mBAC1Cr1C,KAAKtJ,OAAOgU,IAAI,iBAAkB1K,KAAKs1C,gBACvCt1C,KAAKtJ,OAAOiB,KAAK+S,IAAI,yBAA0B1K,KAAKm1C,uBAExDJ,EAAU9zC,UAAUk0C,oBAAsB,SAAUnyC,GAEhDA,EAAY,SAAI,GAEpB+xC,EAAU9zC,UAAUg0C,aAAe,WAI/B,IAAK,IAHDM,EAAYv1C,KAAKtJ,OAAOmI,UAAUpB,OAAO,SAAUC,GACnD,OAAQA,EAAE2K,UAAUC,SAAS,iBAExBjR,EAAI,EAAGA,EAAIk+C,EAAUh+C,OAAQF,IAAK,CACvC,IAAIm+C,EAAWD,EAAUl+C,GAAGggB,uBAAuB,uBAC/Co+B,EAAaz1C,KAAKtJ,OAAOiB,KAAK2f,oBAAoBi+B,EAAUl+C,GAAG8U,aAAa,aAC5ErT,EAAaP,YAAU,aAAcyH,KAAKtJ,OAAOiB,KAAKwE,wBAAwB9E,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBuH,KAAKtJ,OAAQ++C,EAAWh3C,KAAMuB,KAAKtJ,OAAOiB,KAAKwE,2BAC/D6D,KAAKtJ,OAAOiB,KAAK+f,gBAAgBzF,OAAOujC,EAAS,MAI7DT,EAAU9zC,UAAUm0C,eAAiB,SAAUpyC,GAC3C,IAAI0yC,EAAmB1yC,EAAKrE,IAAI0Y,uBAAuB,uBAClD3f,oBAAkBg+C,EAAiB,KACpC11C,KAAKtJ,OAAOiB,KAAK+f,gBAAgBzF,OAAOyjC,EAAiB,KAGjEX,EAAU9zC,UAAUo0C,kBAAoB,SAAUryC,GAC9C,IAAIvM,EAAauJ,KAAKtJ,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAI2L,EAAKuyB,WAAWh+B,OAAQF,IACxC2L,EAAKuyB,WAAWl+B,GAAGmD,MAAMG,QAAUqI,EAAK1H,QAGhDy5C,EAAU9zC,UAAUi0C,gBAAkB,SAAUlyC,GAC5C,IAAKjG,eAAeiD,KAAKtJ,OAAOygB,iBAAkB,CAC9C,IAAI1Y,EAAOuE,EAAKvE,KACZE,EAAMqE,EAAK2yC,cAAc9zB,cAAc+zB,gBAEvCC,EAAgB,kBADPn+C,oBAAkB+G,EAAK3F,YAAsC2F,EAAKvE,MAA7BuE,EAAK3F,WAAWoB,OACnB,QAAUuE,EAAKtE,MAC1D27C,EAAYn3C,EAAImM,cAAc,IAAM+qC,GAAextC,UACnD0tC,KAAcxtC,MAAM3F,KAAKkzC,GAAWr4C,OAAO,SAAUu4C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAGx+C,OAEpB2+C,EAAc,eADDH,EAASluC,WAAWU,MAAM,EAAG0tC,GAE9C7lC,YAAUpN,EAAK2yC,cAAc9zB,eAAgBq0B,KAIrDnB,EAAU9zC,UAAUq0C,eAAiB,SAAUtyC,GAC3C,GAAyB,cAArBA,EAAKnD,aAAoD,QAArBmD,EAAKnD,YAAuB,CAChE,IAAIs2C,EAASnzC,EAAKrE,IAAI6J,iBAAiB,eAAe,GAAG2D,aAAa,WAElEiqC,GADQ9jC,SAAS6jC,EAAO,IAAM,GACXtuC,WACvB7E,EAAKrE,IAAI6J,iBAAiB,eAAe,GAAGyE,aAAa,UAAWmpC,GAGxE,IAAK,IADDC,EAAer2C,KAAKtJ,OAAOiB,KAAKqhB,cAAcna,UACzCxH,EAAI,EAAGA,EAAIg/C,EAAa9+C,OAAQF,IACrCg/C,EAAah/C,GAAGqI,MAAM,GAAGs0B,SAAU,EAErBz7B,YAAU,cAAeyH,KAAKtJ,OAAOiB,MAErC,eAAE,EAApBi3C,EAA4B7mC,KAAM/H,KAAKtJ,OAAOiB,KAAKqhB,cAAcna,aAOrEk2C,EAAU9zC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAEFuqC,KCpHPt0C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAoBxCu1C,GAA4C,SAAUv0C,GAEtD,SAASu0C,EAA2B5/C,EAAQ6/C,GACxC,IAAIlvC,EAAQtF,EAAOa,KAAK5C,KAAMtJ,EAAQ6/C,IAAYv2C,KAalD,OAZAqH,EAAMmvC,kBAAmB,EACzBnvC,EAAMovC,WAAa,EACnBpvC,EAAMqvC,SAAW,EACjBrvC,EAAMsvC,aAAc,EAEpBtvC,EAAM6tB,YAAc,EACpB7tB,EAAMooC,UAAY,EAClBpoC,EAAMuvC,aAAe,EACrBvvC,EAAMwvC,gBAAiB,EAEvBxvC,EAAMuoB,qBAAsB,EAC5BvoB,EAAM6C,mBACC7C,EAqTX,OApUA5G,GAAU61C,EAA4Bv0C,GAiBtCu0C,EAA2Br1C,UAAU61C,kBAAoB,WACrD,OAAO,IAAI5T,GAA6BljC,KAAKtJ,SAEjD4/C,EAA2Br1C,UAAUrC,cAAgB,SAAU1E,GAC3D,OAAO8F,KAAKtJ,OAAOg9B,cAAcj2B,OAAO,SAAUC,GAAK,OAAO4U,SAAS5U,EAAEyO,aAAa,iBAAkB,KAAOjS,IAAU,IAE7Ho8C,EAA2Br1C,UAAUiJ,iBAAmB,WACpDlK,KAAKtJ,OAAOyT,GAAG4sC,GAA0B/2C,KAAKg3C,mBAAoBh3C,MAClEA,KAAKtJ,OAAOyT,GAAG8sC,GAAsBj3C,KAAK2G,cAAe3G,OAE7Ds2C,EAA2Br1C,UAAU+1C,mBAAqB,SAAUh0C,GAC5DA,EAAKk0C,QACLl3C,KAAKy2C,WAAa,EAClBz2C,KAAKk1B,WAAa,EAClBl1B,KAAKyvC,SAAWzvC,KAAKtJ,OAAOoa,aAAag4B,SAAW,GAE/C9lC,EAAKwzC,mBACVx2C,KAAKw2C,kBAAmB,IAGhCF,EAA2Br1C,UAAU0F,cAAgB,SAAU3D,GAC3D,IAAIi8B,EAAUj/B,KAAKtJ,OAAO68B,aAAazoB,cAAc,cACrD,GAAI9K,KAAK22C,aAAe32C,KAAKk1B,YAAc,GAAKl1B,KAAKyvC,UAAY,EAAG,CAChE,GAAIzvC,KAAKyvC,SAAWzsC,EAAKoL,MAAQpO,KAAKtJ,OAAOoa,aAAag4B,SAAU,CAChE,IAAIqO,KAAqBlY,EAAQxC,UAAYz8B,KAAKtJ,OAAO0gD,gBACrDC,EAAYF,EAAkBn3C,KAAKtJ,OAAOmI,UAAUtH,OACpD8/C,EAAYr0C,EAAKoL,QACjBipC,EAAYF,GACPn0C,EAAKoL,MAAQ+oC,IAEtBn3C,KAAKk1B,WAAamiB,EAAYr3C,KAAKtJ,OAAOmI,UAAUtH,OACpDyI,KAAKyvC,SAAW4H,OAGhBr3C,KAAKk1B,YAAc,EACnBl1B,KAAKyvC,UAAY,EAErBzvC,KAAK22C,aAAc,EAEnB32C,KAAK4vB,sBACL5vB,KAAKk1B,WAAa,EAClBl1B,KAAKyvC,SAAWzvC,KAAKtJ,OAAOoa,aAAag4B,SAAW,GAExD9lC,EAAKkyB,WAAal1B,KAAKk1B,WACvBlyB,EAAKysC,SAAWzvC,KAAKyvC,UAEzB6G,EAA2Br1C,UAAU4uB,cAAgB,SAAUv0B,GAC3D,IAAI+L,EAAQrH,KACNA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACxC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAgBrsC,EAAgB6I,KAAKtJ,QAiB1EqL,EAAOd,UAAU4uB,cAAcjtB,KAAK5C,KAAM,OAhB1CA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAKs3C,YAAat3C,MAEpDA,KAAK+X,GAAK,WACN1Q,EAAMkwC,UAAUC,SAAS,SAAUC,GAAc,OAAOpwC,EAAMqwC,gBAAgBD,KAC9EpwC,EAAM3Q,OAAOgU,IAAI,gBAAiBrD,EAAM0Q,KAE5C/X,KAAKtJ,OAAOyT,GAAG,gBAAiBnK,KAAK+X,GAAI/X,MACzCA,KAAKtJ,OAAOwT,iBAAiBkO,EAAuBpY,KAAK23C,iBAAiB18B,KAAKjb,OAC/EA,KAAKtJ,OAAO4E,GAAQ,mCAAoC0E,KAAK0F,UAAW1F,MACxEA,KAAKtJ,OAAO4E,GAAQ,kCAAmC0E,KAAK2F,SAAU3F,MACtEA,KAAKtJ,OAAO4E,GAAQ,8BAA+B0E,KAAK43C,mBAAoB53C,MAC5EA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAK63C,iBAAkB73C,MACzDA,KAAKtJ,OAAO4E,GAAQ,mBAAoB0E,KAAK83C,QAAS93C,MACtDA,KAAKtJ,OAAO4E,GAAQ,6BAA8B0E,KAAK+3C,WAAY/3C,QAM3Es2C,EAA2Br1C,UAAUq2C,YAAc,SAAU55C,GACzDqE,EAAOd,UAAUq2C,YAAY10C,KAAK5C,KAAMtC,GAClCsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACxC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAgBrsC,EAAgB6I,KAAKtJ,UACrEgB,oBAAkBgG,EAAE0Q,SACrBpO,KAAKwvC,aAAe9xC,EAAE0Q,MACtB/P,WAAS,aAAc2B,MAAMg4C,iBAAiBh4C,KAAKtJ,OAAO0gD,eAAiB15C,EAAE0Q,MAAO,WAGlF1W,oBAAkBgG,EAAEmC,cAA6C,gBAA7BnC,EAAEmC,YAAYgI,YAAiC7H,KAAK4vB,uBAC1F5vB,KAAKi4C,SAASxb,UAAY,EAC1Bz8B,KAAK4vB,qBAAsB,KAIvC0mB,EAA2Br1C,UAAU6uB,YAAc,WAC/C/tB,EAAOd,UAAU6uB,YAAYltB,KAAK5C,MAC5BA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACxC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAgBrsC,EAAgB6I,KAAKtJ,UAC1E2H,WAAS,WAAY2B,MAAMD,QAAQm4C,eAAgB,EACnDl4C,KAAKu3C,UAAY,IAAIY,GAAyB95C,WAAS,WAAY2B,MAAMkT,QAAS7U,WAAS,WAAY2B,MAAMD,SAC7GC,KAAKi4C,SAAWj4C,KAAKo4C,WAAWrrC,aAGxCupC,EAA2Br1C,UAAUo3C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAKz4C,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACvC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAersC,EAAgB6I,KAAKtJ,QACrEsJ,KAAK62C,gBACL72C,KAAK62C,gBAAiB,EACf72C,KAAK42C,eAGZ52C,KAAK42C,aAAe70C,EAAOd,UAAUo3C,cAAcz1C,KAAK5C,KAAMs4C,EAAMC,EAASC,EAAMC,GAC5E12C,EAAOd,UAAUo3C,cAAcz1C,KAAK5C,KAAMs4C,EAAMC,EAASC,EAAMC,IAInE12C,EAAOd,UAAUo3C,cAAcz1C,KAAK5C,KAAMs4C,EAAMC,EAASC,EAAMC,IAG9EnC,EAA2Br1C,UAAUyE,UAAY,SAAUhI,GACvD,IAAI42C,EAAW,yBAA2B52C,EAAExD,MAAQ,KAChDA,EAAQ8F,KAAKtJ,OAAO68B,aAAazoB,cAAcwpC,GAAU3qC,SACzD8B,EAAUzL,KAAKtJ,OAAOyF,wBAAwBjC,GAClDwD,EAAEe,KAAOgN,GAEb6qC,EAA2Br1C,UAAU0E,SAAW,SAAU3C,GACtD,IAEI8tC,GAAYz0C,eAAgB2D,KAAK04C,YAAaz9C,YAAa+E,KAAK/E,YAAa81C,aAAc/wC,KAAK+wC,cACpG/wC,KAAKtJ,OAAO0b,OAAO,mBAAoB0+B,GACvC9wC,KAAK04C,YAAc5H,EAAQz0C,eAC3B2D,KAAK/E,YAAc61C,EAAQ71C,YAC3B+E,KAAK+wC,aAAeD,EAAQC,aAC5B,IAAIhpC,EAAO/H,KAAKtJ,OAAOmI,UACnB+0C,EAAiB7rC,EAAKxQ,QAAUwQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE0nC,EAAgB9rC,EAAKxQ,QAAUwQ,EAAKA,EAAKxQ,OAAS,GAAG4U,aAAa,iBAAmB,EACrFwsC,EAAc34C,KAAKtJ,OAAOgxB,kBAAoBksB,GAAkB5zC,KAAKtJ,OAAOgxB,kBAAoBmsB,EACzE,QAArB7zC,KAAK04C,aAA8C,WAArB14C,KAAK04C,cACrC14C,KAAU,OAAI,GAEO,QAArBA,KAAK04C,aAA8C,WAArB14C,KAAK04C,cAChC14C,KAAK/E,cAAqC,IAAtB+E,KAAK/E,cAA0D,IAAlC+E,KAAKtJ,OAAOgxB,kBAA4BixB,IAC5F52C,EAAOd,UAAmB,eAAE2B,KAAK5C,KAAMgD,IAG/CszC,EAA2Br1C,UAAU23C,iBAAmB,WAEpD72C,EAAOd,UAAqB,YAAE2B,KAAK5C,OAEvCs2C,EAA2Br1C,UAAU42C,iBAAmB,WAGpD73C,KAAKtJ,OAAO0b,OAAO,uBACO,QAArBpS,KAAK04C,aAA8C,WAArB14C,KAAK04C,cAA6B14C,KAAU,OAC3E+B,EAAOd,UAAqB,YAAE2B,KAAK5C,OAG3Cs2C,EAA2Br1C,UAAU22C,mBAAqB,SAAU50C,GAChE,IACIi8B,EAAUj/B,KAAKtJ,OAAO68B,aAAazoB,cAAc,cACjD9K,KAAU,OAAKi/B,EAAQn0B,cAAc,iBACrC9K,KAAK22C,aAAc,IAG3BL,EAA2Br1C,UAAU82C,WAAa,SAAU/0C,GAExDjB,EAAOd,UAAoB,WAAE2B,KAAK5C,KAAMgD,IAE5CszC,EAA2Br1C,UAAU43C,cAAgB,WACjD,IACI5Z,EAAUj/B,KAAKtJ,OAAO68B,aAAazoB,cAAc,cACjD9K,KAAU,QAAMi/B,EAAQn0B,cAAc,iBACtC9K,KAAKtJ,OAAOq3B,QAAS,EACrB/tB,KAAKtJ,OAAOo6B,cAGpBwlB,EAA2Br1C,UAAU62C,QAAU,SAAUr5C,GAErDsD,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMvB,IAEhD63C,EAA2Br1C,UAAU02C,iBAAmB,SAAU30C,GAC9D,GAAyB,QAArBA,EAAKnD,YAAuB,CAC5B,IAAIixC,GAAYz0C,eAAgB2D,KAAK04C,YAAaz9C,YAAa+E,KAAK/E,YAAa81C,aAAc/wC,KAAK+wC,cACpG/wC,KAAKtJ,OAAO0b,OAAO,mBAAoB0+B,GACvC9wC,KAAK04C,YAAc5H,EAAQz0C,eAC3B2D,KAAK/E,YAAc61C,EAAQ71C,YAC3B+E,KAAK+wC,aAAeD,EAAQC,aAGhChvC,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMgD,IAEhDszC,EAA2Br1C,UAAUy2C,gBAAkB,SAAUD,GAC7D,IAAIe,EAAOf,EAAWqB,SAElB7Z,EAAUj/B,KAAKtJ,OAAO68B,aAAazoB,cAAc,cACjD4qB,EAFY,GAEe11B,KAAKtJ,OAAO0gD,eACvC2B,EAAYtB,EAAWuB,OAAOxc,IAAMx8B,KAAKy2C,WAAc,EACvDwC,EAAcxB,EAAWuB,OAAOxc,IAAMx8B,KAAKy2C,WAAc/gB,EAC7D,GAAIqjB,EAAU,CACV,IAAIG,IAAYl5C,KAAKtJ,OAAOivB,OAAO9d,WAAWrJ,QAAQ,KAAO,EAAIwB,KAAKtJ,OAAOivB,OACzE3lB,KAAKtJ,OAAOwc,QAAQusB,wBAAwB9Z,QAC5CzrB,KAAY+kC,EAAQxC,UAAYz8B,KAAKtJ,OAAO0gD,gBAC1CxgC,KAAKC,KAAKqiC,EAAUl5C,KAAKtJ,OAAO0gD,gBAChCp3C,KAAKtJ,OAAOmI,UAAUtH,OAI5B,GAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9B8F,KAAKk1B,WAAah7B,EAClB8F,KAAKyvC,SAAWv1C,EAAQ8F,KAAKtJ,OAAOmI,UAAUtH,OAC1CyI,KAAKyvC,SAAWzvC,KAAKwvC,aAAc,CACnC,IAAI2J,EAAUn5C,KAAKwvC,aAAe,EAC9B4J,EAAUp5C,KAAKyvC,SAAW0J,EAC9Bn5C,KAAKyvC,SAAW0J,EAChBn5C,KAAKk1B,WAAal1B,KAAKk1B,WAAakkB,EAGxC,IAAIC,EAAQziC,KAAKC,KAAK4gC,EAAWuB,OAAOxc,IAAMx8B,KAAKtJ,OAAO0gD,gBAC1DiC,GAAgBr5C,KAAKtJ,OAAOoa,aAAag4B,SACzC,IAAIwQ,EAAa,EACjB,IAAK5hD,oBAAkBsI,KAAKtJ,OAAOmI,UAAUw6C,IAAS,CAGlDC,GAFWt5C,KAAKtJ,OAAO68B,aAAa/qB,iBAAiB,iBAAiB6wC,GACjEvuC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAfmtC,EACAt5C,KAAKy2C,WAAagB,EAAWuB,OAAOxc,QAEnC,CACD,IAAI7W,EAAS3lB,KAAKtJ,OAAO0gD,eACzBp3C,KAAKy2C,WAAcgB,EAAWuB,OAAOxc,IAlC7B,GAkCgD7W,EAAU,EAC9D8xB,EAAWuB,OAAOxc,IAnCd,GAmCiC7W,EAAU,GAAK,QAG3D,GAAIszB,EAAY,CACjB,IAAI9B,KAAqBlY,EAAQxC,UAAYz8B,KAAKtJ,OAAO0gD,gBACrDC,EAAYF,EAAkBn3C,KAAKtJ,OAAOmI,UAAUtH,OACpD8/C,EAAYr3C,KAAKwvC,eACjB6H,EAAYF,GACPn3C,KAAKwvC,aAAe2H,IAE7Bn3C,KAAKk1B,WAAamiB,EAAYr3C,KAAKtJ,OAAOmI,UAAUtH,OACpDyI,KAAKyvC,SAAW4H,EACZI,EAAWuB,OAAOxc,IAAOx8B,KAAKtJ,OAAO0gD,eAAiBp3C,KAAKwvC,aAC3DxvC,KAAKy2C,WAAaz2C,KAAKq4C,cAAcZ,EAAWuB,OAAOxc,IAAKyC,EAAQQ,wBAAwB9Z,QAG5F3lB,KAAKy2C,WAAagB,EAAWuB,OAAOxc,IAG5C,GAAKyc,GAAexB,EAAWuB,OAAOxc,IAAOx8B,KAAKtJ,OAAO0gD,eAAiBp3C,KAAKwvC,gBAC5D,CACf,IAAI+J,EAAWl7C,WAAS,kBAAmB2B,MAAMgC,MAAMhC,MAAOy3C,EAAWv8B,UAAWs9B,EAAMf,EAAWuB,SACrGh5C,KAAKw5C,aAAeD,EACpB,IAAIjgC,EAAOigC,EAASpgC,WAAaogC,EAASE,SAAWF,EAASlgC,SAASC,KAAOigC,EAASjgC,KACvFtZ,KAAKtJ,OAAO8mB,eAAgB1M,cAAgBsI,YAAaE,KAAU,GACnEigC,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzF15C,KAAKtJ,OAAO0b,OAAOmnC,EAASG,OAAS75C,YAAa,gBAAiBw2C,aAAcoB,EAAWpB,iBAGpGC,EAA2Br1C,UAAU04C,cAAgB,SAAUt4C,EAAQu4C,EAAUl8C,GAC7E,GAAKsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDkmB,IAA1C9c,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KACvC,KAA1CxjC,KAAKtJ,OAAOC,WAAWA,WAAW6sC,KAAersC,EAAgB6I,KAAKtJ,QACrE2H,WAAS,mBAAoBX,KAC7BsC,KAAK62C,gBAAiB,GAE1B90C,EAAOd,UAAU04C,cAAc/2C,KAAK5C,KAAMqB,EAAQu4C,EAAUl8C,OAE3D,CACD,IAAI86C,EAAO96C,EAAEm8C,YAAYC,cAAoD,MAApCp8C,EAAEm8C,YAAYC,aAAaC,MAChE17C,WAAS,cAAe2B,MAAMsZ,MAAQjb,WAAS,cAAe2B,MAAMsZ,OAAS5b,EAAEm8C,YAAYvgC,KAC3Fjb,WAAS,cAAe2B,MAAQtC,EAAEm8C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAUl6C,KAAKm6C,gBAAgBH,GACnCh6C,KAAKo6C,WAAWC,gBAAgB,KAAOlxC,UAAQmxC,MAA8B,SAAtBnxC,UAAQqvC,KAAK+B,OACpEl5C,EAASrB,KAAKtJ,OAAO4V,cAAc,UAC5BoB,YAAYksC,GAEnB55C,KAAKw6C,WAAW1vC,cAAc,SAAgB,YAAEzJ,GAC3CrB,KAAKw2C,kBAAwC,IAApBx2C,KAAKy2C,WAI/Bz2C,KAAKw2C,kBAAmB,EAHxBn4C,WAAS,aAAc2B,MAAMy6C,YAAYP,EAASl6C,KAAKy2C,YAK3DjhC,WAAS,WAAYxV,KAAKw5C,aAAex5C,KAAKw5C,aAAehB,EAAMx4C,MAGnE+B,EAAOd,UAAmB,UAAE2B,KAAK5C,KAAMtC,GAEnCsC,KAAU,QAAMA,KAAKtJ,OAAO68B,aAAazoB,cAAc,cAAcA,cAAc,gBACxD,QAArB9K,KAAK04C,aAA8C,WAArB14C,KAAK04C,cACjC14C,KAAK+wC,cAAgB/wC,KAAKk1B,WAC1Bl1B,KAAK64C,gBAEA74C,KAAK/E,aAAe+E,KAAK/E,aAAe,IAC7C+E,KAAU,OAAI,EACdA,KAAKtJ,OAAOq3B,QAAS,IAIjC/tB,KAAK44C,mBACL72C,EAAOd,UAAoB,WAAE2B,KAAK5C,QAG1Cs2C,EAA2Br1C,UAAUuJ,oBAAsB,WACnDxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAKs3C,aACnCt3C,KAAKtJ,OAAOgU,IAAI,gBAAiB1K,KAAK+X,IACtC/X,KAAKtJ,OAAOgU,IAAIqsC,GAA0B/2C,KAAKg3C,oBAC/Ch3C,KAAKtJ,OAAOgU,IAAIusC,GAAsBj3C,KAAK2G,eAC3C3G,KAAKtJ,OAAOgU,IAAI,mCAAoC1K,KAAK0F,WACzD1F,KAAKtJ,OAAOgU,IAAI,kCAAmC1K,KAAK2F,UACxD3F,KAAKtJ,OAAOgU,IAAI,8BAA+B1K,KAAK43C,oBACpD53C,KAAKtJ,OAAOgU,IAAI,aAAc1K,KAAK63C,kBACnC73C,KAAKtJ,OAAOgU,IAAI,mBAAoB1K,KAAK83C,SACzC93C,KAAKtJ,OAAOgU,IAAI,6BAA8B1K,KAAK+3C,cAEhDzB,GACToE,0BAEEvC,GAA0C,SAAUp2C,GAEpD,SAASo2C,IACL,IAAI9wC,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAKhE,OAJAqH,EAAMszC,YAAa,EACnBtzC,EAAMuzC,OAAS,EACfvzC,EAAMwzC,QAAU,EAChBxzC,EAAMyzC,MAAQ,EACPzzC,EA8CX,OArDA5G,GAAU03C,EAA0Bp2C,GASpCo2C,EAAyBl3C,UAAUu2C,SAAW,SAAUuD,GACpDvlC,WAAS,gBAAiBnX,WAAS,UAAW2B,MAAMqN,UAAUoyB,wBAAyBz/B,MACvFsjB,eAAa3W,IAAItO,WAAS,UAAW2B,MAAMqN,UAAW,SAAUrN,KAAKg7C,sBAAsBD,GAAW/6C,OAE1Gm4C,EAAyBl3C,UAAUyiC,MAAQ,WACvC1jC,KAAK66C,QAAU,MAEnB1C,EAAyBl3C,UAAU+5C,sBAAwB,SAAUD,GACjE,IAAI1zC,EAAQrH,KACRi7C,EAAU,EACVC,EAAW,EACf,OAAO,SAAUx9C,GACb,IAAI++B,EAAY/+B,EAAE2D,OAAOo7B,UACrBqD,EAAapiC,EAAE2D,OAAOy+B,WACtB5kB,EAAY+/B,EAAUxe,EAAY,OAAS,KAC/CvhB,EAAYggC,IAAapb,EAAa5kB,EAAYggC,EAAWpb,EAAa,QAAU,OACpFmb,EAAUxe,EACVye,EAAWpb,EACX,IAAIiJ,EAAU1qC,WAAS,eAAgBgJ,GAAO6T,GAC1CigC,EAAQ,EACZ9zC,EAAMuzC,OAASne,EACM,MAAjBp1B,EAAMwzC,UACNM,EAAQ9zC,EAAMuzC,OAASvzC,EAAMwzC,SAEjCxzC,EAAMwzC,QAAUxzC,EAAMuzC,OAClBvzC,EAAMyzC,OACNM,aAAa/zC,EAAMyzC,OAEvBzzC,EAAMyzC,MAAQhuB,WAAWzlB,EAAMq8B,MAAO,IAOjCyX,EAAQ,KAAOA,GAAS,MAASz9C,GAAKA,EAAE29C,iBACzC39C,EAAE49C,aAAc,EAChB59C,EAAE29C,kBAENN,GAAW7/B,UAAWA,EAAWqgC,QAASl0C,EAAMszC,WAC5C7B,SAAU/P,EAASiQ,QAAUxc,IAAKC,EAAWQ,KAAM6C,GACnDuW,aAAcna,SAASgY,kBAG5BiE,GACTqD,wBCnZE/6C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE/D,eAAec,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavI,OAAO6I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAwBxC06C,GAA+B,WAI/B,SAASA,EAAc/kD,GACnBsJ,KAAK07C,gBAAkB,EACvB17C,KAAK27C,cAAgB,EACrB37C,KAAKtJ,OAASA,EAId,IAAK,IADDotB,EAAUrhB,OAAKxB,UAAyB,gBACnC5J,EAAI,EAAGA,EAAIysB,EAAQvsB,OAAQF,IAChC,GAAIysB,EAAQzsB,KAAOukD,gBAAmB,CAClC93B,EAAQ3mB,OAAO9F,EAAG,GAClB,MAGRoL,OAAKC,OAAOm5C,IACZ77C,KAAKkK,mBA6GT,OA3GAuxC,EAAcx6C,UAAU66C,iBAAmB,SAAU94C,GACjDA,EAAKvE,KAAOuB,KAAKqjC,YAMrBoY,EAAcx6C,UAAU4B,cAAgB,WACpC,MAAO,iBAKX44C,EAAcx6C,UAAUiJ,iBAAmB,WACvClK,KAAKtJ,OAAOyT,GAAGyrB,EAAiC51B,KAAK+7C,4BAA6B/7C,MAClFA,KAAKtJ,OAAOyT,GAAGqR,EAAsBxb,KAAKg8C,kBAAmBh8C,OAKjEy7C,EAAcx6C,UAAUuJ,oBAAsB,WACtCxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAIkrB,EAAiC51B,KAAK+7C,6BACtD/7C,KAAKtJ,OAAOgU,IAAI8Q,EAAsBxb,KAAKg8C,qBAE/CP,EAAcx6C,UAAU86C,4BAA8B,SAAUp9C,GAC5DqB,KAAKtJ,OAAOiB,KAAKya,OAAO2kC,IAA4BP,kBAAkB,IACtEx2C,KAAKi8C,kBAAoBt9C,EAAIjG,OAC7BiG,EAAIjG,OAAOS,SAA0B,aAAfwF,EAAIrD,OAC1B,IAAI8sC,GACA/0B,OAAQrT,KAAKtJ,OAAO8G,SACpBmB,IAAKA,EAAIA,IACTrD,OAAQqD,EAAIrD,OACZ5C,OAAQiG,EAAIjG,OACZ0V,MAAOpO,KAAKtJ,OAAO8G,SAASjG,QAEhCyI,KAAKtJ,OAAOiB,KAAKuqB,iBACjB,IAAIriB,EAAcxB,WAAS,gBAAiB2B,KAAKtJ,QAAU,cAAgB,UAC3E2H,WAAS,oBAAqB2B,KAAKtJ,QAAQgf,mBAAmB0yB,GAAOvoC,YAAaA,KAEtF47C,EAAcx6C,UAAU+6C,kBAAoB,SAAUtT,GAClD,IAAIrhC,EAAQrH,KACRvG,EAAK,IAAI7C,cAAY8xC,EAAer1B,QACpCla,EAAW,IAAI2I,YAAU,WAAY,WAAY,MAAMmnC,GAAG,WAAY,gBAAYnsB,GAClFnkB,EAAUc,EAAGuc,cAAa,IAAIxB,SAAQI,MAAMzb,IAC5CkqC,EAAa1qC,EAAQ8E,OAAO,SAAUC,GACtC,OAAOjF,EAAgB4O,EAAM3Q,OAAQgH,EAAG/E,KAE5CqH,KAAKqjC,WAAaA,EAClBrjC,KAAKtJ,OAAOiB,KAAKya,OAAO+wB,IAAuB1kC,KAAM4kC,IACrD,IAAI6Y,GAAWhnB,YAAa,EAAGua,UAAW,EAAGrhC,MAAOs6B,EAAet6B,OACnEpO,KAAKtJ,OAAOiB,KAAKya,OAAO6kC,GAAsBiF,GAC9C,IAAIhnB,EAAagnB,EAAOhnB,WACpBua,EAAWyM,EAAOzM,SAEtB,GADA/G,EAAet6B,MAAQi1B,EAAW9rC,QACd,IAAhB29B,IAAmC,IAAdua,EAAiB,CACtC,IAAIl7B,EAAQ,IAAIC,QACZq0B,EAAO7oC,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,SAErCF,EAAOC,GADG7oC,KAAKtJ,OAAOiB,KAAKmZ,aAAasI,YACf,GAC7B7E,EAAQA,EAAMq0B,KAAKA,GAAMI,KAAKH,GAC9BpvC,EAAG9C,WAAW8E,KAAO4nC,EACrBqF,EAAer1B,OAAS5Z,EAAGuc,aAAazB,OAEvC,CASD,GAPoB,cADFm0B,EAAe3uB,WAAWla,cAExCq1B,EAAa,EACbua,EAAWzvC,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,SAAW,EACpD9oC,KAAKtJ,OAAOiB,KAAKya,OAAO2kC,IAA4BG,QAAQ,MAI3Dx/C,oBAAkBsI,KAAKi8C,mBAAoB,CAC5C,IAAIE,EAAgBn8C,KAAKtJ,OAAOmI,UAC5Bu9C,EAAS/Y,EAAW7kC,QAAQwB,KAAKi8C,mBACtB5Y,EAAW96B,MAAM6zC,EAAQA,EAASD,EAAc5kD,QAClDA,OAAS4kD,EAAc5kD,QAAU6kD,GAAU,GAGpDlnB,EADAknB,GADAA,EAAS/Y,EAAW9rC,OAAS4kD,EAAc5kD,QACzB,EAAI6kD,EAAS,EAE/B3M,EAAWpM,EAAW9rC,QAEjB8G,WAAS,gBAAiB2B,KAAKtJ,UACpCw+B,EAAa,EACbua,EAAWzvC,KAAKtJ,OAAOiB,KAAKmZ,aAAag4B,SAAW,EACpD9oC,KAAKtJ,OAAOiB,KAAKya,OAAO2kC,IAA4BG,QAAQ,KAEhEl3C,KAAKi8C,kBAAoB,KAG7BvT,EAAer1B,OAASgwB,EAAW96B,MAAM2sB,EAAYua,GACrDzvC,KAAK07C,eAAiBxmB,EACtBl1B,KAAK27C,aAAelM,EAExBzvC,KAAKtJ,OAAO0b,OAAO,eAAgBs2B,IAOvC+S,EAAcx6C,UAAU4I,QAAU,WAC9B7J,KAAKwK,uBAEFixC,KAGPI,GAA6B,SAAU95C,GAEvC,SAAS85C,EAAYnlD,EAAQ6/C,GACzB,IAAIlvC,EAAQtF,EAAOa,KAAK5C,KAAMtJ,EAAQ6/C,IAAYv2C,KAGlD,OAFA3B,WAAS,SAAUgJ,GAAOqD,IAAI,eAAgBrM,WAAS,sBAAuBgJ,GAAQA,GACtFhJ,WAAS,SAAUgJ,GAAO8C,GAAG,eAAgB9C,EAAMg1C,qBAAsBh1C,GAClEA,EAuBX,OA5BA5G,GAAUo7C,EAAa95C,GAOvB85C,EAAY56C,UAAUo7C,qBAAuB,WACzCh+C,WAAS,SAAU2B,MAAM8C,KAAK,aAAc,kBAAmB,kBAC/D,IAAIw5C,EAAWj+C,WAAS,UAAW2B,MAAMu8C,WAAW,mBACpDl+C,WAAS,cAAei+C,GACnBt6C,MAAMs6C,GAAWE,aAAWC,QAAS,IAAInG,GAA2Bj4C,WAAS,SAAU2B,MAAO3B,WAAS,UAAW2B,SAEvHA,KAAK08C,kBAETb,EAAY56C,UAAUy7C,eAAiB,WACnC,IAAIC,EAAat+C,WAAS,SAAU2B,MAChCqnB,EAAYs1B,EAAWvF,eACtB1/C,oBAAkBilD,EAAWh3B,SAA0C,iBAAvBg3B,EAAiB,SAAsD,IAApCA,EAAWh3B,OAAOnnB,QAAQ,OAC9Gm+C,EAAWzpC,QAAQ1Y,MAAMmrB,OAASg3B,EAAWh3B,QAEjD,IAGIA,EAAqB,MAHXg3B,EAAWh3B,OAAO9d,WAAWrJ,QAAQ,KAAO,EAAIm+C,EAAWh3B,OACrEg3B,EAAWzpC,QAAQusB,wBAAwB9Z,QAClB0B,GAEzBwhB,EAAO8T,EAAW7rC,aAAag4B,SACnC6T,EAAWn/B,eAAgB1M,cAAgBg4B,SAAUD,EAAOljB,EAASA,EAASkjB,KAAU,IAErFgT,GACTD,iBCjLEgB,GAAwB,WAIxB,SAASA,EAAOlmD,GACZ+L,OAAKC,OAAOm6C,UACZ78C,KAAKtJ,OAASA,EACdsJ,KAAKkK,mBAqET,OAnEA0yC,EAAO37C,UAAUiJ,iBAAmB,WAChClK,KAAKtJ,OAAOyT,GAAG,oBAAqBnK,KAAKq1C,kBAAmBr1C,MAC5DA,KAAKtJ,OAAOyT,GAAG,eAAgBnK,KAAKi1C,aAAcj1C,MAClDA,KAAKtJ,OAAOiB,KAAKwS,GAAG,WAAYnK,KAAK88C,gBAAiB98C,OAE1D48C,EAAO37C,UAAUuJ,oBAAsB,WAC/BxK,KAAKtJ,OAAO+T,cAGhBzK,KAAKtJ,OAAOgU,IAAI,oBAAqB1K,KAAKq1C,mBAC1Cr1C,KAAKtJ,OAAOgU,IAAI,eAAgB1K,KAAKi1C,cACrCj1C,KAAKtJ,OAAOiB,KAAK+S,IAAI,WAAY1K,KAAK88C,mBAE1CF,EAAO37C,UAAUo0C,kBAAoB,SAAUryC,GAC3C,IAEI+E,EAFAouB,EAAcn2B,KAAKtJ,OAAOyY,qBAC1B4tC,EAAa/8C,KAAKtJ,OAAOmI,UAQzBkJ,EANC/E,EAAKuyB,WAAWh+B,OAMVyL,EAAKuyB,WALLY,EAAY14B,OAAO,SAAUC,GAChC,OAAOA,EAAEoN,cAAc,kBAAoB9H,EAAKtK,OAAOwB,MAAQ,SAAW8I,EAAKtK,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAI0Q,EAAKxQ,OAAQF,IAAK,CAClC,IAAI2lD,EAAQh9C,KAAKtJ,OAAOiB,KAAK2f,oBAAoBvP,EAAK1Q,GAAG8U,aAAa,aAAa1N,KACnFsJ,EAAK1Q,GAAGmD,MAAMG,QAAUqI,EAAK1H,OAC7B,IAAI2hD,EAAgC,SAAhBj6C,EAAK1H,OAAoB,8CACvC,4CACN,GAAIyhD,EAAWh1C,EAAK1Q,GAAGsS,UAAUmB,cAAcmyC,GAAgB,CAE3D,IAAK,IADDnmB,KACKE,EAAM,EAAGA,EAAMb,EAAY5+B,OAAQy/B,IACpCb,EAAYa,GAAKlsB,cAAc,kBAAoBkyC,EAAM9iD,MAAQ,SAAW8iD,EAAM7iD,MAAQ,KAC1F28B,EAAKt+B,KAAK29B,EAAYa,IAG1BF,EAAKv/B,QACLyI,KAAKq1C,mBAAoB9f,WAAYuB,EAAMx7B,OAAQ0H,EAAK1H,YAKxEshD,EAAO37C,UAAU67C,gBAAkB,SAAUp/C,GACrCmN,eAAanN,EAAE2D,OAAQ,cACvBrB,KAAKtJ,OAAOiB,KAAKkE,aAAauyB,qBAAyD,SAAlCpuB,KAAKtJ,OAAOmF,aAAaC,MAC9EkE,KAAKtJ,OAAOiB,KAAKoE,WAAWs1B,UAAUxmB,eAAanN,EAAE2D,OAAQ,WAGrEu7C,EAAO37C,UAAUg0C,aAAe,SAAUjyC,GACjBhD,KAAKtJ,OAAOkJ,aAAanC,OAAO,SAAUC,GAC3D,OAAOA,EAAElG,eAEMD,QAAUyI,KAAKtJ,OAAOwmD,cAAgBl9C,KAAKtJ,OAAOuC,eACjEmX,YAAUpQ,KAAKtJ,OAAOwc,QAAQmE,uBAAuB,UAAU,IAAK,qBAG5EulC,EAAO37C,UAAU4I,QAAU,WACvB7J,KAAKwK,uBAMToyC,EAAO37C,UAAU4B,cAAgB,WAC7B,MAAO,UAEJ+5C,KC9EPO,GAA+B,WAI/B,SAASA,EAAczmD,GACnB+L,OAAKC,OAAO06C,iBACZp9C,KAAKtJ,OAASA,EA0BlB,OAlBAymD,EAAcl8C,UAAU2wB,kBAAoB,SAAUyrB,EAAGC,GACrD,OAAOt9C,KAAKtJ,OAAOiB,KAAKo6B,oBAAoBH,kBAAkByrB,EAAGC,IAOrEH,EAAcl8C,UAAU4I,QAAU,aAOlCszC,EAAcl8C,UAAU4B,cAAgB,WACpC,MAAO,iBAEJs6C,0BnClCO,oCAIK,wHAYG,4IAcF,sCAID,uCAIC,qJAcA,2BAEC,wCAEY,qSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}