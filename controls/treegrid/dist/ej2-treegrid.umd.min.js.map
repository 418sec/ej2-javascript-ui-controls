{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName) {\n    var value = details.value;\n    var action = details.action;\n    if (action === 'save') {\n        action = 'edit';\n    }\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            value = currentViewRecords[addRowIndex + 1];\n            break;\n        case 'Below':\n        case 'Child':\n            value = currentViewRecords[addRowIndex];\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        var childRecords = child ? child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('headerCheckbox', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('renderHeaderCheckbox', this.headerCheckbox);\n        this.parent.off('renderCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateCheckboxes', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            var checkBoxargs = this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n            if (!checkBoxargs.cancel) {\n                this.selectCheckboxes(rowIndex);\n            }\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args);\n        return args;\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        this.parent.notify('updateAction', { result: this.flatSortedData });\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0) {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var dataObj = this.parent.grid.dataSource;\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            this.parent.notify('createSort', { modifiedData: modifiedData, filteredData: results, srtQry: srtQry });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.notify('headerCheckbox', {});\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            var target = getObject('target', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            if (!isNullOrUndefined(target) && requestType === 'sorting' && target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                setValue('cancel', true, args);\n                return;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n                _this.notify('updateGridActions', args);\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData.slice();\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule',\n            'selectionModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return (e.parentUniqueID === record.uniqueID) || e.isSummaryRow;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        args.type = 'cancel';\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index].hasChildRecords) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","child","currentRecords","map","indexOf","setRowData","row","getRowByIndex","renderModule","cellRender","data","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","beforeStartEdit","beforeBatchCancel","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","triggerChkChangeEvent","nextElementSibling","classList","contains","cancel","selectCheckboxes","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","columns","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","style","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","width","allowTextWrap","textContent","notify","checkboxElement","parseInt","summaryData","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","result","filterSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","events.expanded","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","events.actionComplete","totalRecordsCount","parentRecords","currentData","getUid","id","parentUniqueID","dataObj","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.toolbarClick","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","req","isPrinting","extendedGridEvents","extendedGridEditEvents","events.cellSave","events.cellEdit","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","events.crudAction","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","events.collapsing","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","events.localPagedExpandCollapse","displayAction","targetEle","getElementsByClassName","collapseRemoteChild","rData","this_1","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageRoot","pagedResults","temp","newResults","t","res","pageingDetails","propname","skip","size","pageSize","currentPage","take","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","previousNewRowPosition","events.keyPressed","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","rowIndex_1","parentNode","primaryKeys_1","arg","updateRow","aggregateModule","formObj","saveArgs","previousData","previousValue","position","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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,aACViU,EAASnV,UAAW,iBAAa,GACpCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,mBAAe,GACtCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,qBAAiB,GACxCE,IACIooB,aAAYC,qBACbpT,EAASnV,UAAW,wBAAoB,GAC3CE,IACIgB,YAAS,IACViU,EAASnV,UAAW,uBAAmB,GAC1CE,IACIgB,YAAS,IACViU,EAASnV,UAAW,qBAAiB,GACxCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,0BAAsB,GAC7CE,IACIooB,aAAYlV,KACb+B,EAASnV,UAAW,oBAAgB,GACvCE,IACIgB,cACDiU,EAASnV,UAAW,qBAAiB,GACxCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,sBAAkB,GACzCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,oBAAgB,GACvCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,yBAAqB,GAC5CE,IACIooB,aAAYpT,KACbC,EAASnV,UAAW,oBAAgB,GACvCE,IACIc,gBAAe+T,KAChBI,EAASnV,UAAW,kBAAc,GACrCE,IACIooB,aAAYtT,KACbG,EAASnV,UAAW,oBAAgB,GACvCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,sBAAkB,GACzCE,IACIooB,aAAYznB,IACbsU,EAASnV,UAAW,sBAAkB,GACzCE,IACIooB,aAAYne,KACbgL,EAASnV,UAAW,sBAAkB,GACzCE,IACIgB,cACDiU,EAASnV,UAAW,eAAW,GAClCE,IACIgB,cACDiU,EAASnV,UAAW,uBAAmB,GAC1CE,IACIgB,WAAS,YACViU,EAASnV,UAAW,iBAAa,GACpCE,IACIgB,cACDiU,EAASnV,UAAW,wBAAoB,GAC3CE,IACIgB,cACDiU,EAASnV,UAAW,uBAAmB,GAC1CE,IACIgB,WAAS,OACViU,EAASnV,UAAW,iBAAa,GACpCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,oBAAgB,GACvCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,qBAAiB,GACxCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,mBAAe,GACtCE,IACIgB,WAAS,SACViU,EAASnV,UAAW,cAAU,GACjCE,IACIgB,WAAS,SACViU,EAASnV,UAAW,aAAS,GAChCE,IACIgB,WAAS,QACViU,EAASnV,UAAW,uBAAmB,GAC1CE,IACIsoB,WACDrT,EAASnV,UAAW,eAAW,GAClCE,IACIsoB,WACDrT,EAASnV,UAAW,YAAQ,GAC/BE,IACIsoB,WACDrT,EAASnV,UAAW,iBAAa,GACpCE,IACIsoB,WACDrT,EAASnV,UAAW,gBAAY,GACnCE,IACIsoB,WACDrT,EAASnV,UAAW,kBAAc,GACrCE,IACIsoB,WACDrT,EAASnV,UAAW,iBAAa,GACpCE,IACIsoB,WACDrT,EAASnV,UAAW,mBAAe,GACtCE,IACIsoB,WACDrT,EAASnV,UAAW,sBAAkB,GACzCE,IACIsoB,WACDrT,EAASnV,UAAW,iBAAa,GACpCE,IACIsoB,WACDrT,EAASnV,UAAW,gBAAY,GACnCE,IACIsoB,WACDrT,EAASnV,UAAW,qBAAiB,GACxCE,IACIsoB,WACDrT,EAASnV,UAAW,iBAAa,GACpCE,IACIsoB,WACDrT,EAASnV,UAAW,yBAAqB,GAC5CE,IACIsoB,WACDrT,EAASnV,UAAW,uBAAmB,GAC1CE,IACIsoB,WACDrT,EAASnV,UAAW,yBAAqB,GAC5CE,IACIsoB,WACDrT,EAASnV,UAAW,oBAAgB,GACvCE,IACIsoB,WACDrT,EAASnV,UAAW,qBAAiB,GACxCE,IACIgB,YAAS,IACViU,EAASnV,UAAW,sBAAkB,GACzCE,IACIsoB,WACDrT,EAASnV,UAAW,oBAAgB,GACvCE,IACIsoB,WACDrT,EAASnV,UAAW,mBAAe,GACtCE,IACIsoB,WACDrT,EAASnV,UAAW,sBAAkB,GACzCE,IACIsoB,WACDrT,EAASnV,UAAW,qBAAiB,GACxCE,IACIsoB,WACDrT,EAASnV,UAAW,sBAAkB,GACzCE,IACIsoB,WACDrT,EAASnV,UAAW,qBAAiB,GACxCE,IACIsoB,WACDrT,EAASnV,UAAW,sBAAkB,GACzCE,IACIsoB,WACDrT,EAASnV,UAAW,uBAAmB,GAC1CE,IACIsoB,WACDrT,EAASnV,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"}