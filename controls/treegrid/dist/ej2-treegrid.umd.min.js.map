{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]]\n                                                = control.grid.currentViewData[i][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns < this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns === this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, findChildrenRecords } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        if (isPrinting === true && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                actualResults.push(results[i]);\n                if (results[i].expanded === false) {\n                    i += findChildrenRecords(results[i]).length;\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"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"}