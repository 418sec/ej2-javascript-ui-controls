{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && (!isRemoteData(this.parent))) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof RemoteSaveAdaptor\n            || this.parent.dataSource instanceof JsonAdaptor) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && treeObj.getSelectedRowIndexes().length &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]];\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = movableRows.filter(function (e) {\n            return e.classList.contains('e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n        });\n        for (var i = 0; i < frozenrows.length; i++) {\n            frozenrows[i].style.display = args.action;\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","parentRow","rows","isBlazor","this_1","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","datacount","defaultQuery","dm_1","JsonAdaptor","events.recordDoubleClick","events.detailDataBound","events.actionBegin","getSelectedRecords","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","mergeColumns","storedColumn","getContentTable","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","slice","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","freezeModule"],"mappings":"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"}