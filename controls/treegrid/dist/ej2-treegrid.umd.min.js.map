{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns < this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns === this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    if (this.grid.editSettings.allowEditing) {\n                        var isOnBatch = 'isOnBatch';\n                        this.editModule[isOnBatch] = false;\n                    }\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","allowRowDragAndDrop","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"shBAIO,SAASA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAEX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAKhD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAEX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,SAAgBG,EAAkBC,GAC9B,IAAIC,EACJA,KAEA,IAAK,IAAId,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EAKX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAEX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAEX,SAAgBE,EAAaC,GAMzB,cALOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,MACNF,EAEX,SAAgBlB,EAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,OAAO1D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GAG1B,SAAgBI,EAASC,GACrB,IAAIC,EAAQC,OAAOC,iBAAiBH,GACpC,MAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCrJ1C,SAASC,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGI9D,EACA0C,EAEAqB,EANAnB,EAAQY,EAAQZ,MAChBoB,EAASR,EAAQQ,OAMjBxD,EAAMiD,EAAQnD,KAAK2D,0BAA0B,GAC7CC,EAAWT,EAAQnE,sBAAsBC,cACzCkE,EAAQnE,WAAWA,WAAW6E,KAAOV,EAAQnE,WAC7C8E,KACAC,EAAezB,EACf0B,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQnD,KAAKmE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE7D,OAAU,CACxC,IAAIyE,EAuGZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAIlB,EACA0B,GAAS,EACTM,EAAqBnB,EAAQnD,KAAKuE,wBAGtC,OAFAjC,EAAQkC,YAAWtB,EAAQZ,OAC3BA,EAAQD,EAAaC,GACba,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQpC,GACjB0B,GAAS,EACT,MACJ,IAAK,SACDJ,EAAS/C,KAAKyB,GACd0B,GAAS,EACT,MACJ,IAAK,QAOG1B,EANCvC,oBAAkByD,GAMXnB,EADRC,EAAQkC,YAAWF,EAAmBjB,EAAc,KAH5ChB,EADRC,EAAQkC,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAKzD,oBAAkByD,GAIlB,CACD,IAAImB,EAAcxB,EAAQnD,KAAK2D,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrCf,EAAQD,EALJC,GADCvC,oBAAkB6E,IAAgBA,EAAYD,KAAiBzB,EAAQZ,MAAMqC,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQZ,aAT/BA,EAAQD,EADRC,EAAQkC,YAAWhB,KAcA,IAAnBF,IACAM,EAASc,QAAQpC,GACjB0B,GAAS,GAGrB,OAAS1B,MAAOA,EAAO0B,OAAQA,GAtJda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGlB,EAAQ+B,EAAO/B,MACf0B,EAASK,EAAOL,OAQpB,GANI1B,aAAiBwC,MACjBhB,EAAe9B,EAAYM,GAG3BwB,EAAajD,KAAK2D,YAAWlC,KAE5B0B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAalE,OAAQmF,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAG7E,KACxB4D,EAAaiB,GAAKjB,EAAaiB,GAAG7E,IAEtC,IAAIS,EAAOmD,EAAaiB,GAAGC,SAAWtE,OAAOC,KAAKmD,EAAaiB,GAAGC,UAC9DtE,OAAOC,KAAKmD,EAAaiB,IAC7BrF,EAAIkE,EAAShE,OA6Eb,IA5EA,IAAIqF,EAAU,WACV,GAAIrB,EAASlE,GAAGQ,KAAS4D,EAAaiB,GAAG7E,GAAM,CAC3C,GAAe,WAAXwD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKtB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIwB,EAASlE,GAAGwF,eAAevE,EAAKyB,MAAuC,SAA9Be,EAAQc,aAAaC,OACzDnE,oBAAkB0D,IAAyD,IAAxCA,EAA2B,eAAE7D,QAClEe,EAAKyB,KAAOmB,GAAa,CAC5B,IAAI4B,EAAa/D,EAAc+B,EAASW,EAAaiB,GAAG1D,UACxDuC,EAASlE,GAAGiB,EAAKyB,IAAM0B,EAAaiB,GAAGpE,EAAKyB,IACxC+C,GAAcA,EAAWH,WACzBG,EAAWH,SAASrE,EAAKyB,IAAM+C,EAAWxE,EAAKyB,IAAMwB,EAASlE,GAAGiB,EAAKyB,WAKjF,GAAe,QAAXsB,GAA+B,cAAXA,EAAwB,CACjD,IAAInB,OAAQ,EACgC,UAAxCY,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaiB,SAAS7B,EAAQiC,iBAAmBxB,EAASlE,GAAGyD,EAAQkC,WACrEzB,EAAS0B,OAAO5F,EAAI,EAAG,EAAGqE,EAAaiB,YAGlCpB,EAASlE,GAAGwF,eAAe/B,EAAQoC,gBACpC3B,EAASlE,GAAGyD,EAAQoC,kBAExB3B,EAASlE,GAAGyD,EAAQoC,cAAc1E,KAAKkD,EAAaiB,UACpDQ,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAAS0B,OAAO5F,EAAI,EAAG,EAAGqE,EAAaiB,UACvCQ,EAAgBtF,EAAK0D,EAASlE,EAAI,GAAIgE,EAAQP,EAASC,EAAiBW,IAElEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAAS0B,OAAO5F,EAAG,EAAGqE,EAAaiB,UACnCQ,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,KALpExB,EAAQ,EACRqB,EAAS0B,OAAO/C,EAAO,EAAGwB,EAAaiB,WAO/C,MAAO,QAhEP,IAAIS,EAAgB7B,EAASlE,GAE7B,GADAkE,EAAS0B,OAAO5F,EAAG,GACf0D,EAAiB,CACjB,IAAKrD,oBAAkB0F,EAActC,EAAQiC,kBAKzC,IAAK,IAJDM,EAAavC,EAAQwC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAE1C,EAAQkC,aAAeI,EAActC,EAAQiC,mBACvD,GACCzD,EAAe+D,EAAaA,EAAWvC,EAAQoC,iBAC1CO,EAAInE,EAAa/B,OAAS,EAAGkG,GAAK,EAAGA,IAC1C,GAAInE,EAAamE,GAAG3C,EAAQkC,aAAeI,EAActC,EAAQkC,WAAY,CACzE1D,EAAa2D,OAAOQ,EAAG,GAClBnE,EAAa/B,SACd8F,EAAWhE,iBAAkB,EAC7B8D,EAAgBtF,EAAKwF,EAAYhC,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cAgDTrD,oBAAkB6D,EAASlE,GAAGyD,EAAQoC,gBACxCQ,EAAmBnC,EAASlE,GAAGyD,EAAQoC,cAAezB,EAAaiB,GAAIrB,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC5HiC,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,IAIxD1D,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFuF,IAEV,QAsDpB,SAAgBc,EAAmBpE,EAAcmC,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAIyC,GAAa,EACb5D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS4D,EAAa5D,IACrCkD,GAAmBzB,EAAaS,GAAGe,EAAQiC,mBAAqBtB,EAAaX,EAAQkC,WAAa,CACnG,GAAe,SAAX3B,EAAmB,CAGnB,IAAK,IAFD/C,EAAOD,OAAOC,KAAKmD,GACnBqB,EAAa/D,EAAc+B,EAASW,EAAazC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIiC,EAAaS,GAAG8C,eAAevE,EAAKjB,MAAsC,SAA9ByD,EAAQc,aAAaC,MAAmBvD,EAAKjB,KAAO6D,KAChG4B,EAAWxE,EAAKjB,IAAMyF,EAAWH,SAASrE,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMoE,EAAanD,EAAKjB,IAC3D,WAAnCyD,EAAQnD,KAAKiE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQnD,KAAKmE,WAAqB,WAAE8B,aAAenC,EAAavB,MAChEY,EAAQnD,KAAKmE,WAAqB,WAAE+B,sBAAsBpC,GAItE,MAEC,GAAe,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQiC,iBAAmBzD,EAAaS,GAAGe,EAAQkC,WAChE1D,EAAa2D,OAAOlD,EAAI,EAAG,EAAG2B,GAC9ByB,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,KAGnEpC,EAAaS,GAAG8C,eAAe/B,EAAQoC,gBACxC5D,EAAaS,GAAGe,EAAQoC,kBAE5B5D,EAAaS,GAAGe,EAAQoC,cAAc1E,KAAKkD,EAAaiB,UACxDQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B9C,EAAa2D,OAAOlD,EAAG,EAAG2B,EAAaiB,UACvCQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1B9C,EAAa2D,OAAOlD,EAAI,EAAG,EAAG2B,EAAaiB,UAC3CQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,QAG3E,CACgBpC,EAAaS,GAAGjB,WACjCQ,EAAa2D,OAAOlD,EAAG,GAClBT,EAAa/B,SACdoG,GAAa,SAIfjG,oBAAkB4B,EAAaS,GAAGe,EAAQoC,gBAC5CQ,EAAmBpE,EAAaS,GAAGe,EAAQoC,cAAezB,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC7HiC,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,GAInE,OAAO4C,EAEX,SAAgBR,EAAgBtF,EAAKa,EAAQ2C,EAAQP,EAASC,EAAiB+C,GAC3E,GAA6C,UAAxChD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B3D,oBAAkBoG,EAAMhF,YAI7E,CACD,IACIiF,EADAC,EAAiBlD,EAAQnD,KAAKuE,wBAalC,GAXA8B,EAAeC,IAAI,SAAUT,EAAGnG,GAASmG,EAAE3F,KAASa,EAAOb,KACvDkG,EAAU1G,KAGTK,oBAAkBqG,KACnBrF,EAASsF,EAAeD,IAExBjD,EAAQoD,sBAAwBxG,oBAAkBgB,KAAYhB,oBAAkBoG,KAChFpF,EAASyF,WAAS,sBAAwBL,EAAMM,eAAgBtD,IAEpEpC,EAAOW,iBAAkB,EACV,QAAXgC,GAA+B,cAAXA,EAAwB,CAC5C3C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrByB,EAAQuD,aAAa/G,QAAQC,QAAUG,oBAAkBoG,KACzDA,EAAQE,EAAeT,OAAO,SAAUC,GACpC,OAAIA,EAAEY,iBAAmB1F,EAAOM,SACrBwE,EAGA,QAInB,IAAIlE,EAAewE,EAAQA,aAAiBrB,MAAQqB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxCjD,EAAQc,aAAaQ,iBAChB1D,EAAOmE,eAAe,gBAIlBnF,oBAAkBoG,IAAUpF,EAAOb,KAASiG,EAAMjG,IACnDa,EAAOY,aAAad,KAAKsF,GAJ7BpF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAagF,QAAQhF,IAAwBZ,EAAOb,KAASiG,EAAMjG,IAC1Ea,EAAOY,aAAa+C,QAAQ/C,GAE5ByB,IACKrC,EAAOmE,eAAe/B,EAAQoC,gBAC/BxE,EAAOoC,EAAQoC,mBAEyC,IAAxDxE,EAAOoC,EAAQoC,cAAcoB,QAAQhF,IAAwBZ,EAAOb,KAASiG,EAAMjG,IACnFa,EAAOoC,EAAQoC,cAAcb,QAAQ/C,KAQrD,IAAK,IAHDgD,EAAcxB,EAAQnD,KAAK2D,0BAA0B,GACrDiD,EAAOzD,EAAQnD,KAAKhB,sBAAsBC,cAC1CkE,EAAQnD,KAAKhB,WAAWA,WAAW6E,KAAOV,EAAQnD,KAAKhB,WAClDU,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAC7B,GAAIkH,EAAKlH,GAAGiF,KAAiB5D,EAAO4D,GAAc,CAC9CiC,EAAKlH,GAAKqB,EACV,MAGRoC,EAAQnD,KAAK6G,WAAW3G,EAAKa,GAC7B,IAAI+F,EAAM3D,EAAQ4D,cAAcX,GACE,UAA9BjD,EAAQc,aAAaC,OACrB4C,EAAM3D,EAAQ6D,UAAU7D,EAAQnD,KAAKiH,wBAAwBlG,EAAOb,MAExE,IAAIgH,OAAa,GACb/D,EAAQgE,YAAchE,EAAQiE,sBAC9BF,EAAa/D,EAAQkE,qBAAqBjB,KAEzCjD,EAAQoD,sBAAyBxG,oBAAkB+G,KAAS/G,oBAAkBmH,IAC/E/D,EAAQmE,aAAaC,YACjBX,KAAM7F,EAAQyG,KAAMV,EAAIW,MAAMtE,EAAQuE,iBAAmBZ,EAAIW,MAAMtE,EAAQuE,iBACrER,EAAWO,MAAMtE,EAAQuE,gBAAkBvE,EAAQwE,eACzDC,OAAQzE,EAAQnD,KAAK6H,aAAa1E,EAAQuE,iBAC1CI,YAAapE,QA7EsE,CAC1EtC,EAAc+B,EAASgD,EAAMhF,WAAWE,UAC9CM,aAAad,KAAKsF,IC3OrC,IAAI4B,EAAwB,WA6DxB,OA5DA,SAAgBC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAK7H,gBAAiB,EAMtB6H,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKrC,UACL6C,QAAMR,KAAMD,OC/DhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,OAxCAS,EAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAY,GACpCE,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACxCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,gBACDH,EAAUb,UAAW,yBAAqB,GAC7CE,GACIc,gBACDH,EAAUb,UAAW,sBAAkB,GAC1CE,GACIc,cACDH,EAAUb,UAAW,YAAQ,GAChCE,GACIc,cACDH,EAAUb,UAAW,mBAAe,GACvCE,GACIc,cACDH,EAAUb,UAAW,WAAO,GAC/BE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,EAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,eAAW,GACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,cACDE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,2BAAuB,GACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,0BAAsB,GACnDE,GACIc,cACDE,EAAelB,UAAW,iBAAa,GAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,oBAAgB,GAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,qBAAiB,GACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,EAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,gBAAY,GACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCuB,EAAU,oDACVC,EAAe,2CAIfC,EAAwB,SAAUT,GAElC,SAASS,EAAO1L,GAIZ,OAFA2L,OAAKC,OAAOC,UACJZ,EAAOa,KAAK5C,KAAMlJ,IAAWkJ,KAsEzC,OA1EAS,EAAU+B,EAAQT,GAWlBS,EAAOvB,UAAU4B,cAAgB,WAC7B,MAAO,UAEXL,EAAOvB,UAAU6B,IAAM,SAAUC,EAAOC,GAC9BD,aAAiBlG,QACnBkG,GAASA,IAGb,IAAK,IADDE,EAAOF,EACFtL,EAAI,EAAGA,EAAIwL,EAAKtL,OAAQF,IAAK,CAClC,IAAIyL,EAAOC,cAAYF,EAAKxL,IACxB2L,EAAMF,EAAKG,MAAML,EAAMhD,KAAKlJ,QAChC,GAAIsM,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMhD,KAAKlJ,OAAQsM,EAAIrD,SAEtDzF,GADJiJ,EAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,KACtF/E,QAAQ,SACxBgF,EAAUH,EAAQI,UAAUrJ,GAChB,mBAAZ2I,EAAKxL,GACL8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAKxL,IAA+C,0BAAZwL,EAAKxL,GAClD8L,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAKxL,KACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjC,+BAAZW,EAAKxL,GACAK,oBAAkBkI,KAAK4D,cAAiB9L,oBAAkBkI,KAAK4D,YAAYC,kBAC5EC,QAAQZ,EAAKa,SAASR,GAI1BO,QAAQZ,EAAKa,SAASR,MAKtCf,EAAOvB,UAAU+C,QAAU,SAAUjB,EAAOC,EAAMiB,GAC9CjE,KAAK4D,YAAcK,EACblB,aAAiBlG,QACnBkG,GAASA,IAEb,IAAIE,EAAOF,EACPkB,EAASC,qBACTlE,KAAK8C,IAAI,yBAA0BE,GAEvC,IAAK,IAAIvL,EAAI,EAAGA,EAAIwL,EAAKtL,OAAQF,IAAK,CAClC,IAAIyL,EAAOiB,EAAgBlB,EAAKxL,IAC5B2L,EAAMF,EAAKG,MAAML,EAAMiB,GAC3B,GAAIb,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMiB,EAAUb,EAAIrD,SACvD+D,QAAQZ,EAAKa,SAASR,MAI3Bf,GACTG,UAESwB,GACPC,wBACInB,KAAM,yBACNc,QAAS,QACTV,MAAO,SAAUL,EAAMlM,GACnB,IAAIuN,GAAQf,SAAS,GAOrB,OANKxL,oBAAkBhB,EAAOsG,YAActF,oBAAkBhB,EAAOwG,eAC9DxF,oBAAkBhB,EAAOqG,mBAC1BrF,oBAAkBhB,EAAOsG,YAActF,oBAAkBhB,EAAOqG,kBACjErF,oBAAkBhB,EAAOsG,aAAetF,oBAAkBhB,EAAOqG,oBAClEkH,GAAQf,SAAS,IAEde,GAEXb,gBAAiB,SAAUR,EAAMlM,EAAQwN,GACrC,MAAOC,iRAIFhC,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCCtHrBiC,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdd,EAAkB,kBAElBe,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAIlB3L,EAAW,WAIX4L,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,EAAmB,mBAQnBC,GAAa,aAEbC,GAAY,YAEZC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpB3G,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAoBxCsG,GAA+B,SAAUtF,GAEzC,SAASsF,EAAcvQ,GACnB,IAAIwQ,EAAQvF,EAAOa,KAAK5C,KAAMlJ,EAAOiB,OAASiI,KAI9C,OAHAsH,EAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB3Q,EAChBwQ,EAsJX,OA5JA7G,GAAU4G,EAAetF,GAQzBsF,EAAcpG,UAAUyG,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdxJ,EAAiB4B,KAAKyH,eAAenL,wBACzC,GAAyC,KAArC1B,OAAOiN,eAAeC,WAAmB,CACzC9H,KAAK+H,kBAAkB1N,MAAQ2F,KAAK4H,GAAe,GACnD,IAAII,EAAOhI,KAAKyH,eAAe1P,KAAKgH,UACpC,GAAmD,SAA/CiB,KAAKyH,eAAeQ,kBAAkBhM,KAAiB,CAIvD,IAAK,IAHDiM,EAAkBlI,KAAKyH,eAAeU,wBAAwBC,KAAK,SAAUC,EAAGzH,GAChF,OAAOyH,EAAIzH,IAENnJ,EAAI,EAAGA,EAAIyQ,EAAgBvQ,OAAQF,IAIxC,GAHIA,EAAI,IACJuI,KAAKuH,iBAAmB,OAEvBS,EAAKE,EAAgBzQ,IAAI6Q,UAAUC,SAAS,gBAAiB,CAC9D,IAAI/I,KAAWgJ,MAAM5F,KAAKoF,EAAKE,EAAgBzQ,IAAIgR,iBAAiB,eAChEC,EAAW1I,KAAKyH,eAAekB,qBAAqBlR,GAAW,UACV,IAArDuI,KAAKwH,yBAAyB9I,QAAQgK,KACQ,WAA1C1I,KAAKyH,eAAemB,mBAA4E,SAA1C5I,KAAKyH,eAAemB,mBAC1E5I,KAAK6I,kBAAkBzK,EAAgB8J,EAAgBzQ,GAAIuQ,EAAML,EAAYlQ,GAEjFuI,KAAgB,YAAER,GAAO,EAAO,KAAMmI,GACtC3H,KAAKuH,iBAAmBvH,KAAK4H,GAC7B5H,KAAKwH,yBAAyB5O,KAAK8P,GACnC1I,KAAK4H,GAAe,GAC0B,UAA1C5H,KAAKyH,eAAemB,mBAA2E,SAA1C5I,KAAKyH,eAAemB,mBACzE5I,KAAK8I,iBAAiB1K,EAAgB8J,EAAgBzQ,GAAIuQ,EAAML,IAKhF,GAAIA,EAAY,CAEP,IADDoB,KACJ,IAAStR,EAAI,EAAGA,EAAIuI,KAAKyH,eAAeuB,oBAAoBrR,OAAQF,IAChEsR,EAAgBtR,GAAKuI,KAAKyH,eAAeuB,oBAAoBvR,GAAGwR,WAEpEjJ,KAAgB,YAAE+I,GAAiB,EAAO,KAAMpB,GAChD3H,KAAKuH,gBAAkBvH,KAAK4H,GAAe,KAAO5H,KAAKuH,gBAE3D,IAAIvE,GACArE,KAAMqB,KAAKuH,gBACX2B,QAAQ,GAGZ,GADAlJ,KAAKyH,eAAe0B,QDpBZ,aCoBuCnG,GAC3CA,EAAKkG,OACL,OAEJlJ,KAAK+H,kBAAkB1N,MAAQ2F,KAAK4H,GAAe5E,EAAKrE,KACnDyK,UAAQC,UAAUC,MAAM,qBAIzBtJ,KAAK+H,kBAAkBwB,kBAAkB,EAAGvJ,KAAK+H,kBAAkB1N,MAAM1C,QAHzEqI,KAAK+H,kBAAkByB,SAK3BxJ,KAAa,UAAI,EACjBA,KAAKwH,4BACLxH,KAAKuH,gBAAkB,QAGvBxF,EAAOd,UAAUyG,YAAY9E,KAAK5C,KAAM2H,KAIpDN,EAAcpG,UAAU4H,kBAAoB,SAAUzK,EAAgB/C,EAAe2M,EAAML,EAAYrN,GACnG,IACIsN,EAAc,cACd1O,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkBsG,EAAe/C,GAAenC,IAEjD,IAAK,IADDuQ,EAAYrL,EAAe/C,GAAenC,GAAiB,MACtDzB,EAAI,EAAGA,EAAIgS,EAAY,EAAGhS,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAIiE,EAAezG,OAAQwC,IACvC,IAAKrC,oBAAkBsG,EAAe/C,GAAenC,KACjDkF,EAAejE,GAAGf,KAAcgF,EAAe/C,GAAenC,GAAYE,GAAW,CACrFiC,EAAgBlB,EAChB,IAAIqF,KAAWgJ,MAAM5F,KAAKoF,EAAK3M,GAAeoN,iBAAiB,eAC3DC,EAAWtK,EAAejE,GAAGf,GACjC,IAAyD,IAArD4G,KAAKwH,yBAAyB9I,QAAQgK,GAAkB,CACxD1I,KAAgB,YAAER,GAAO,EAAO,KAAMmI,GAElC3H,KAAKuH,gBADLjN,EAAQ,EACe0F,KAAKuH,gBAAkBvH,KAAK4H,GAAe,KAG3C5H,KAAK4H,GAAe,KAAO5H,KAAKuH,gBAE3DvH,KAAKwH,yBAAyB5O,KAAK8P,GACnC1I,KAAK4H,GAAe,GACpB,SAOxBP,EAAcpG,UAAUyI,KAAO,SAAU/B,GACrC5F,EAAOd,UAAUyI,KAAK9G,KAAK5C,KAAM2H,IAErCN,EAAcpG,UAAU0I,MAAQ,SAAUhL,EAAMiL,EAAUC,GACtD9H,EAAOd,UAAU0I,MAAM/G,KAAK5C,KAAMrB,EAAMiL,EAAUC,IAMtDxC,EAAcpG,UAAU4B,cAAgB,WACpC,MAAO,aAQXwE,EAAcpG,UAAU6I,QAAU,WAC9B/H,EAAOd,UAAU6I,QAAQlH,KAAK5C,OAElCqH,EAAcpG,UAAU6H,iBAAmB,SAAU1K,EAAgB/C,EAAe2M,EAAML,GACtF,IAIIvO,EAAW,WACf,GAAIgF,EAAe/C,GAA8B,gBAE7C,IAAK,IADD0O,EAAY3L,EAAe/C,GAA2B,aACjD5D,EAAI,EAAGA,EAAIsS,EAAUpS,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAIiE,EAAezG,OAAQwC,IACvC,IAAKrC,oBAAkBiS,EAAUtS,GAAG2B,KAAcgF,EAAejE,GAAGf,KAAc2Q,EAAUtS,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkBkQ,EAAK7N,MAAS6N,EAAK7N,GAAGmO,UAAUC,SAAS,gBAAiB,CAC9E,IAAI/I,KAAWgJ,MAAM5F,KAAKoF,EAAK7N,GAAGsO,iBAAiB,eAC/CC,EAAWtK,EAAejE,GAAGf,IACwB,IAArD4G,KAAKwH,yBAAyB9I,QAAQgK,KACtC1I,KAAgB,YAAER,GAAO,EAAO,KAAMmI,GACtC3H,KAAKuH,iBAAoB,KAAOvH,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKwH,yBAAyB5O,KAAK8P,GACnC1I,KAAK8I,iBAAiB1K,EAAgBjE,EAAG6N,EAAML,IAGvD,QAMbN,GACT2C,aCzKEC,GAA2B,WAI3B,SAASA,EAAUnT,GACfkJ,KAAKlJ,OAASA,EACdkJ,KAAKkK,iBACLlK,KAAKkI,mBACLlI,KAAKmK,mBA2aT,OAraAF,EAAUhJ,UAAU4B,cAAgB,WAChC,MAAO,aAEXoH,EAAUhJ,UAAUkJ,iBAAmB,WACnCnK,KAAKlJ,OAAOsT,GAAG,eAAgBpK,KAAKqK,eAAgBrK,MACpDA,KAAKlJ,OAAOsT,GAAG,iBAAkBpK,KAAKsK,eAAgBtK,MACtDA,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAKuK,kBAAmBvK,MAC5DA,KAAKlJ,OAAOiB,KAAKqS,GAAG,mBAAoBpK,KAAKqK,eAAgBrK,MAC7DA,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAKwK,kBAAmBxK,OAEhEiK,EAAUhJ,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,eAAgB3K,KAAKqK,gBACrCrK,KAAKlJ,OAAO6T,IAAI,iBAAkB3K,KAAKsK,gBACvCtK,KAAKlJ,OAAOiB,KAAK4S,IAAI,mBAAoB3K,KAAKqK,gBAC9CrK,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAKwK,mBAC1CxK,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAKuK,qBAO9CN,EAAUhJ,UAAU6I,QAAU,WAC1B9J,KAAKyK,uBAETR,EAAUhJ,UAAUuJ,kBAAoB,SAAUxH,GAC9C,IAEI4H,EAFAvJ,EAAS1I,YAAU,SAAUqK,GAC7B6H,EAAYC,eAAazJ,EAAQ,sBAErC,GAAIwJ,GAAaA,EAAUpC,iBAAiB,sBAAsB9Q,OAAS,EAAG,CAC1EiT,EAAWC,EAAUE,cAAc,0BACnC,IAAInB,OAAW,GACfA,MACShR,KAAKyI,EAAO2J,QAAQ,MAAMpB,UACnC5J,KAAKiL,iBAAiBrB,GACtB5J,KAAKkL,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYlH,EAAO2J,QAAQ,YAE9G,GAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoB9Q,OAAS,GAAKqI,KAAKlJ,OAAOsU,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,UAC/DvI,KAAKsL,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnC/K,KAAKkL,sBAAsBN,EAAUS,EAAehK,EAAO2J,QAAQ,SAG3Ef,EAAUhJ,UAAUiK,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAI7M,EAAOqB,KAAKlJ,OAAOwF,wBAAwBkP,EAAW5B,UACtD5G,GAASyI,QAASF,EAAYlK,OAAQuJ,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BvI,KAAKlJ,OAAO6U,oBAAsBhN,GAC5CqB,KAAKlJ,OAAOqS,QAAQyC,EAAuB5I,IAE/CiH,EAAUhJ,UAAU4K,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACArU,EAAWsI,KAAKlJ,OAAc,QACzBkV,EAAM,EAAGA,EAAMtU,EAAQC,OAAQqU,IAChCtU,EAAQsU,GAAKpU,eACbkU,EAAa9L,KAAKlJ,OAAOY,QAAQsU,GAAKC,KAI9C,IAAK,IADDC,EAAmBlM,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,oBAAoB9Q,OAClFwC,EAAI,EAAGA,EAAI+R,EAAkB/R,IAAK,CACtB6F,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,oBAAoBtO,GACtEiS,aAAa,kBAAoBN,IAC5CC,EAAc5R,GAGtB,OAAO4R,GAEX9B,EAAUhJ,UAAUoJ,eAAiB,WAEjC,GADArK,KAAK+L,YAAc/L,KAAK6L,yBACpB7L,KAAK+L,aAAe,GAAoF,IAA/E/L,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,oBAAoB9Q,OAAc,CAC3G,IAAI0U,EAAgBrM,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,oBAAoBzI,KAAK+L,aACzFlB,OAAY,EAEZyB,EAAYtM,KAAKlJ,OAAOyV,cAAc,SAAWC,UAAW,kBAAmBC,OAASxJ,KAAQ,eACpG4H,EAAY6B,iBAAe1M,KAAKlJ,OAAOyV,eAAe,GAASd,SAFnD,EAEmEkB,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYpQ,MAAMkS,MAAQ,OAClDhC,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACnDlV,oBAAkBuU,IACnBA,EAAcS,aAAajC,EAAWwB,EAAcW,YAEpDhN,KAAKlJ,OAAOsU,oBACZpL,KAAKsL,uBAGR,GAAItL,KAAK+L,aAAe,GAAK/L,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,oBAAoB9Q,OAAS,EAAG,CAC9G,IACI0T,GADAR,EAAY7K,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,WACvEvI,KAAKlJ,OAAOsU,oBAAsBC,GAClCrL,KAAKsL,gBAAgBD,KAIjCpB,EAAUhJ,UAAUgM,qBAAuB,SAAUjK,GACjD,IAAI6H,EACAyB,EAAYtM,KAAKlJ,OAAOyV,cAAc,SAAWC,UAAW,oBAAqBC,OAASxJ,KAAQ,cAClGtE,EAAOqE,EAAKrE,KAChBqE,EAAKzD,KAAK+I,UAAUsE,IAAI,sBACxB5J,EAAKzD,KAAK2N,aAAa,aAAc,YACrC,IAAI7S,GAASvC,oBAAkB6G,EAAKwO,gBAAyC,YAAvBxO,EAAKwO,cAI3D,IAHAtC,EAAY6B,iBAAe1M,KAAKlJ,OAAOyV,eAAe,GAASd,QAASpR,EAAOsS,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYpQ,MAAMkS,MAAQ,OACvB,kBAAvBlO,EAAKwO,cAAmC,CACxC,IAAIC,EAAWvC,EAAUpC,iBAAiB,YAAY,GACtD4E,eAAaD,IAAY,UAAW,SAAU,cAC9CvC,EAAUE,cAAc,YAAYzC,UAAUsE,IAAI,UAGtD,OADA/B,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACjDnC,GAEXZ,EAAUhJ,UAAUqJ,eAAiB,SAAUgD,GAC3C,IAAIzC,EAAY7K,KAAKiN,qBAAqBK,GACtCC,EAAeD,EAAU/N,KAAKwL,cAAc,2BAChD,GAAKjT,oBAAkByV,GAKlB,CACD,IAAIC,EAAUxN,KAAKlJ,OAAOyV,cAAc,QAAUC,UAAW,mBACzD7N,EAAO2O,EAAU/N,KAAKkO,UAC1BH,EAAU/N,KAAKkO,UAAY,GAC3BD,EAAQC,UAAY9O,EACpB,IAAI+O,EAAS1N,KAAKlJ,OAAOyV,cAAc,OAASC,UAAW,6BAC3DkB,EAAOC,YAAY9C,GACnB6C,EAAOC,YAAYH,GACnBF,EAAU/N,KAAKoO,YAAYD,QAZtBJ,EAAU/N,KAAKwL,cAAc,yBAC9BwC,EAAaT,aAAajC,EAAW0C,EAAa9E,iBAAiB,eAAe,KAc9FwB,EAAUhJ,UAAUgK,iBAAmB,SAAU2C,GAE7C,IAAK,IAAInW,EAAI,EAAGA,EAAImW,EAAWjW,OAAQF,IAAK,CACxC,IAAIqB,EAASkH,KAAKlJ,OAAOwF,wBAAwBsR,EAAWnW,IACxDoW,EAAa1U,EAAc6G,KAAKlJ,OAAQgC,EAAOM,UAG/C+T,EAA0C,aAF9CrU,EAAUgV,cAAsD,kBAAxC9N,KAAKlJ,OAAOC,WAAsB,YACtD+B,EAAS+U,GACeV,cAA+B,QAAU,UACrErU,EAAOqU,cAAgBA,EAEvB,IAAK,IADDzU,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB0T,EAAW5Q,eAAevE,EAAKyB,MAC/B0T,EAAWnV,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1C6F,KAAK+N,gBAAgBjV,EAAQqU,GAAe,GACxCnN,KAAKlJ,OAAOsU,oBACZpL,KAAKsL,oBAIjBrB,EAAUhJ,UAAU8M,gBAAkB,SAAUjV,EAAQqU,EAAea,GACnE,IAAIrW,EAAS,EAKb,GAJAqI,KAAKiO,oBAAoBnV,EAAQqU,IAC5Ba,GAAelV,EAAOI,YAAc8G,KAAKlJ,OAAOsU,oBACjDpL,KAAKkO,sBAAsBpV,EAAOI,YAElCJ,EAAOY,cAAgBsG,KAAKlJ,OAAOsU,mBAAoB,CACvD,IAAI1R,EAAeZ,EAAOY,cACrB5B,oBAAkBkI,KAAKlJ,OAAOqX,eAC/BnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,OAAS,GAAKqI,KAAKlJ,OAAOsU,qBAClE1R,EAAesG,KAAKqO,wBAAwB3U,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAI2W,EAAQ,EAAGA,EAAQ3W,EAAQ2W,IAC3B5U,EAAa4U,GAAOC,eACjB7U,EAAa4U,GAAO7U,gBACpBuG,KAAK+N,gBAAgBrU,EAAa4U,GAAQnB,GAAe,GAGzDnN,KAAKiO,oBAAoBvU,EAAa4U,GAAQnB,MAMlElD,EAAUhJ,UAAUoN,wBAA0B,SAAU3U,GACpD,IAAI4N,EAAQtH,KAIZ,OAH2BtG,EAAaiE,OAAO,SAAUC,GACrD,OAAO0J,EAAMxQ,OAAOqX,aAAaC,eAAe1P,QAAQd,IAAM,KAItEqM,EAAUhJ,UAAUiN,sBAAwB,SAAUjV,GAClD,IACItB,EAAS,EACT+B,KACAZ,EAASK,EAAc6G,KAAKlJ,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBkI,KAAKlJ,OAAOqX,eAC/BnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,OAAS,GAAKqI,KAAKlJ,OAAOsU,qBAClE1R,EAAesG,KAAKqO,wBAAwB3U,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAI6W,EAAU,EACVC,EAAoB,EACxB,IAAK3W,oBAAkBgB,GAAS,CAkB5B,IAAK,IAjBDkE,EAAU,SAAUvF,GACpB,IAAIiX,EAAcC,EAAO7X,OAAOwF,wBAAwBqB,OAAO,SAAUC,GACrE,OAAOA,EAAExE,WAAaM,EAAajC,GAAG2B,WAEtCwV,EAAgBzV,EAAcwV,EAAO7X,OAAQ4C,EAAajC,GAAG2B,UAC7DyV,EAAkBf,cAAwD,kBAA1Ca,EAAO7X,OAAOC,WAAsB,YACpE2X,EAAY,GAAKE,EAChB9W,oBAAkB+W,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAIRE,EAAS3O,KACJvI,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCuF,EAAQvF,GAGRqB,EAAOqU,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsB9W,EACxC,gBAEI,IAAtB8W,GAAuC,IAAZD,EACT,UAGA,QAE3BxO,KAAKiO,oBAAoBnV,EAAQA,EAAOqU,eACpCrU,EAAOI,YACP8G,KAAKkO,sBAAsBpV,EAAOI,cAI9C+Q,EAAUhJ,UAAUqK,gBAAkB,SAAUwD,GAC5C,IAAIxH,EAAQtH,KAGRrI,EAAS,EACTgH,GAAS7G,oBAAkBkI,KAAKlJ,OAAOqX,eACvCnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,OAAS,EAAKqI,KAAKlJ,OAAOqX,aAAaC,eAC/EpO,KAAKlJ,OAAO4G,SAGhB,GAFAiB,EAAQmP,cAAsD,kBAAxC9N,KAAKlJ,OAAOC,WAAsB,aAA0BF,EAAamJ,KAAKlJ,QAChGkJ,KAAKlJ,OAAOwF,wBAA0BqC,GACrC7G,oBAAkBgX,GACnB,IAAK,IAAIrX,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAC7B,GAAIqX,EAAU,CACV,GAA8B,UAA1BnQ,EAAKlH,GAAG0V,cACR,SAEJxO,EAAKlH,GAAG0V,cAAgB,QACxBnN,KAAKiO,oBAAoBtP,EAAKlH,GAAIkH,EAAKlH,GAAG0V,oBAGlCnN,KAAKkK,cAAcxL,QAAQC,EAAKlH,KAC3B,IACTkH,EAAKlH,GAAG0V,cAAgB,UACxBnN,KAAKiO,oBAAoBtP,EAAKlH,GAAIkH,EAAKlH,GAAG0V,eACtCnN,KAAKlJ,OAAOsU,oBACZpL,KAAKkO,sBAAsBvP,EAAKlH,MAMnC,IAAbqX,GAAsB9O,KAAKlJ,OAAOwH,uBAClC0B,KAAKkK,iBACLlK,KAAKkI,mBACLvJ,EAAKhB,OAAO,SAAUoR,GAClBA,EAAI5B,cAAgB,UACpB7F,EAAM2G,oBAAoBc,EAAKA,EAAI5B,kBAG3CxV,EAASqI,KAAKkK,cAAcvS,OAC5B,IAAIyV,EAAWpN,KAAKlJ,OAAOqV,mBAAmB1D,iBAAiB,YAAY,GACvE9Q,EAAS,GAAKgH,EAAKhH,OAAS,EACxBA,IAAWgH,EAAKhH,QAAWmX,GAK3BzB,eAAaD,IAAY,WACzBA,EAAS9E,UAAUsE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS9E,UAAUsE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5CnD,EAAUhJ,UAAUgN,oBAAsB,SAAUW,EAAerD,EAAY5N,GAC3E,IAGIqR,EAIA5B,EAPAtU,EAASkH,KAAKlJ,OAAOwF,wBAAwBqB,OAAO,SAAUC,GAC9D,OAAOA,EAAExE,WAAawV,EAAcxV,WAIpC6V,EAAcjP,KAAKlJ,OAAOwF,wBAAwBoC,QAAQ5F,EAAO,IACjEoW,EAAiB/V,EAAc6G,KAAKlJ,OAAQ8X,EAAcxV,UAE9D,GAAI6V,GAAe,EAAG,CAClB,IAAIE,EAAKnP,KAAKlJ,OAAOiI,UAAUkQ,GAC3BG,OAAY,GACZpP,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,sBACtCiQ,EAAYpP,KAAKlJ,OAAOuY,qBAAqBJ,IAEjD7B,EAAW+B,EAAG1G,iBAAiB,YAAY,GAAK0G,EAAG1G,iBAAiB,YAAY,GAC1E2G,EAAU3G,iBAAiB,YAAY,GACxC3Q,oBAAkBsV,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA4B,EAAiBlB,cAAsD,kBAAxC9N,KAAKlJ,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKoW,EACZpX,oBAAkBkX,KAClBA,EAAgBJ,GAEpBI,EAAc7B,cAAgB5B,EACX,UAAfA,GAA0BzT,oBAAkB8W,EAAcL,eACrC,IAAjBU,IAAqE,IAA/CjP,KAAKkI,gBAAgBxJ,QAAQuQ,IACnDjP,KAAKkI,gBAAgBtP,KAAKqW,IAEqB,IAA/CjP,KAAKkK,cAAcxL,QAAQsQ,KAA2C,IAAjBC,IACnDnX,oBAAkBkI,KAAKlJ,OAAOqX,eAAiBnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,OAAS,GAClGqI,KAAKkK,cAActR,KAAKoW,IAEuB,IAA/ChP,KAAKkK,cAAcxL,QAAQsQ,IAA2BlX,oBAAkBkI,KAAKlJ,OAAOqX,eACjC,IAAnDnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,QACxCqI,KAAKkK,cAActR,KAAKoW,IAEuB,IAA/ChP,KAAKkK,cAAcxL,QAAQsQ,IAAyBlX,oBAAkBkI,KAAKlJ,OAAOqX,eAClFnO,KAAKkK,cAActR,KAAKoW,QAG3B,IAAoB,YAAfzD,GAA2C,kBAAfA,IAAmCzT,oBAAkB8W,EAAcL,cAAe,CACpH,IAAIjU,EAAQ0F,KAAKkK,cAAcxL,QAAQsQ,GAIvC,IAHe,IAAX1U,GACA0F,KAAKkK,cAAc7M,OAAO/C,EAAO,IAEc,IAA/C0F,KAAKkI,gBAAgBxJ,QAAQuQ,GAAqB,CAClD,IAAIK,EAAetP,KAAKkI,gBAAgBxJ,QAAQuQ,GAChDjP,KAAKkI,gBAAgB7K,OAAOiS,EAAc,IAGlD,IAAIC,EAA+B,kBAAfhE,EAAiC,SAAW,KAAOA,EACnE0D,GAAe,IACVnX,oBAAkBsV,IACnBA,EAAS9E,UAAUsE,IAAI2C,KAInCtF,EAAUhJ,UAAUsJ,kBAAoB,SAAUvH,GAC9C,IAEI+G,EACAyF,EAHAlI,EAAQtH,KACRH,EAAcmD,EAAKnD,YAGvB,GAAIrI,EAAiBwI,KAAKlJ,SAClBkJ,KAAKlJ,OAAOsU,mBACZ,GAAqB,YAAhBvL,GAA6C,WAAhBA,EAA2B,CACzD,IAAImI,EAAOhI,KAAKlJ,OAAOiB,KAAKgH,UAE5ByQ,GADAzF,EAAY/J,KAAKlJ,OAAOwF,yBACA3E,OACxBqI,KAAKkI,mBACL,IAAK,IAAIzQ,EAAI,EAAGA,EAAI+X,EAAa/X,IACxBuQ,EAAKvQ,GAAG6Q,UAAUC,SAAS,iBAC5BvI,KAAKiO,oBAAoBlE,EAAUtS,GAAIsS,EAAUtS,GAAG0V,eAAe,QAI1E,GAAoB,WAAhBtN,GAA4C,QAAhBmD,EAAKvH,OAAkB,CACxD,IAAIgU,KACgB,WAAhB5P,EACA4P,EAAczM,EAAKrE,KAGnB8Q,EAAY7W,KAAKoK,EAAKrE,MAE1B,IAASlH,EAAI,EAAGA,EAAIgY,EAAY9X,OAAQF,IAAK,CACzC,GAAoB,WAAhBoI,EAA0B,CAC1B,IAAIvF,EAAQ0F,KAAKlJ,OAAO4G,SAASgB,QAAQ+Q,EAAYhY,IACjD6X,EAAetP,KAAKkI,gBAAgBxJ,QAAQpE,GAChD0F,KAAKkI,gBAAgB7K,OAAOiS,EAAc,GAC1CtP,KAAKiO,oBAAoBwB,EAAYhY,GAAI,WAExCK,oBAAkB2X,EAAYhY,GAAGyB,aAClC8G,KAAKkO,sBAAsBuB,EAAYhY,GAAGyB,iBAIxB,QAArB8J,EAAKnD,aAAyBG,KAAKlJ,OAAOsU,mBAC/CpI,EAAKrE,KAAKwO,cAAgB,WAEL,cAAhBtN,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DhJ,EAAamJ,KAAKlJ,WACtBkJ,KAAKkK,iBACLlK,KAAKkI,oBACL6B,GAAcjS,oBAAkBkI,KAAKlJ,OAAOqX,eAAiBnO,KAAKlJ,OAAOqX,aAAaC,eAAezW,OAAS,EAC1GqI,KAAKlJ,OAAOwF,wBAA0B0D,KAAKlJ,OAAO4G,UAC5CgS,QAAQ,SAAU5W,GACpBA,EAAOW,gBACP6N,EAAM4G,sBAAsBpV,GAG5BwO,EAAM2G,oBAAoBnV,EAAQA,EAAOqU,iBAGjDnN,KAAKsL,oBAKrBrB,EAAUhJ,UAAU0O,kBAAoB,WACpC,OAAO3P,KAAKkK,eAEhBD,EAAUhJ,UAAU2O,qBAAuB,WACvC,OAAO5P,KAAKkI,iBAET+B,KCrbP4F,GAAuB,WAIvB,SAASA,EAAM/Y,GACXkJ,KAAKlJ,OAASA,EACd2L,OAAKC,OAAOoN,SACZ9P,KAAKmK,mBAqCT,OA/BA0F,EAAM5O,UAAU4B,cAAgB,WAC5B,MAAO,SAKXgN,EAAM5O,UAAUkJ,iBAAmB,WAC/BnK,KAAKlJ,OAAOiB,KAAKqS,GAAG2F,EAAsB/P,KAAKgQ,cAAehQ,OAElE6P,EAAM5O,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAOiB,KAAK4S,IAAIoF,EAAsB/P,KAAKgQ,gBAEpDH,EAAM5O,UAAU+O,cAAgB,SAAUC,GACtC,IAAIlY,EAAOY,YAAU,YAAasX,GAC9BC,EAAcvX,YAAU,UAAWsX,GACvClY,EAAKoS,iBAAiBgG,EAAsBnQ,KAAKlJ,OAAOiB,KAAK0M,eAC7D1M,EAAKoS,iBAAiBiG,EAAqBpQ,KAAKlJ,OAAOiB,KAAKyM,cAC5DzM,EAAKoS,iBAAiBkG,EAAwBrQ,KAAKlJ,OAAOiB,KAAK2M,iBAC/D4L,YAAUJ,GAAc,eAE5BL,EAAM5O,UAAUsP,MAAQ,WACpBvQ,KAAKlJ,OAAOiB,KAAKwY,SAOrBV,EAAM5O,UAAU6I,QAAU,WACtB9J,KAAKyK,uBAEFoF,KCnDPpP,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5D+O,GAAgC,SAAUzO,GAE1C,SAASyO,IACL,OAAkB,OAAXzO,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,OAnBAS,GAAU+P,EAAgBzO,GAI1BZ,IACIc,cACDuO,EAAevP,UAAW,cAAU,GACvCE,IACIc,YAAS,IACVuO,EAAevP,UAAW,kBAAc,GAC3CE,IACIc,WAAS,aACVuO,EAAevP,UAAW,gBAAY,GACzCE,IACIc,cACDuO,EAAevP,UAAW,WAAO,GACpCE,IACIc,cACDuO,EAAevP,UAAW,qBAAiB,GACvCuP,GACTtO,iBC5CEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5DgP,GAAmC,SAAU1O,GAE7C,SAAS0O,IACL,OAAkB,OAAX1O,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,OAzBAS,GAAUgQ,EAAmB1O,GAI7BZ,IACIc,WAAS,QACVwO,EAAkBxP,UAAW,YAAQ,GACxCE,IACIc,WAAS,SACVwO,EAAkBxP,UAAW,yBAAqB,GACrDE,IACIc,WAAS,WACVwO,EAAkBxP,UAAW,YAAQ,GACxCE,IACIc,YAAS,IACVwO,EAAkBxP,UAAW,wBAAoB,GACpDE,IACIc,WAAS,YACVwO,EAAkBxP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVwO,EAAkBxP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVwO,EAAkBxP,UAAW,oBAAgB,GACzCwP,GACTvO,iBCzCEwO,GAAwB,WAIxB,SAASA,EAAO5Z,GACZkJ,KAAKlJ,OAASA,EACdkJ,KAAK2Q,eAAiB,KACtB3Q,KAAKlJ,OAAOiB,KAAKqS,GAAG,kBAAmBpK,KAAK4Q,qBAAsB5Q,MAClEA,KAAKlJ,OAAOiB,KAAKqS,GAAG,sBAAuBpK,KAAK6Q,oBAAqB7Q,MA4OzE,OAvOA0Q,EAAOzP,UAAU6P,YAAc,SAAU9N,GACrC,GAAKA,EAAKrE,KAAV,CAGA,IAAIA,EAAOqE,EAAKrE,KACZlB,EAAakB,EAAKzF,WAEtB,GAAKpB,oBAAkB6G,EAAKzF,aAAgBrB,EAAuBmI,KAAKlJ,SACjEkJ,KAAKlJ,OAAOia,aAA2D,SAA1C/Q,KAAKlJ,OAAOka,aAAaC,gBACpDpa,EAAamJ,KAAKlJ,SAAY8C,EAAUoG,KAAKlJ,UAUzCkM,EAAKnE,IAAIuN,aAAa,qBAV8B,CACrDzN,EAAKzF,WAAWoB,OACP0F,KAAKlJ,OAAOuC,kBAAoBvB,oBAAkB2F,EAAWuC,KAAKlJ,OAAOwC,sBACtFmE,EAAWuC,KAAKlJ,OAAOwC,sBAAwB0G,KAAKlJ,OAAOoa,qBAC1DrY,EAAgBmH,KAAKlJ,OAAQkM,EAAKrE,KAAMqB,KAAKlJ,OAAOiB,KAAKuE,4BAE1D0G,EAAKnE,IAAIlE,MAAMG,QAAU,QAMjC,GAAIjE,EAAamJ,KAAKlJ,UAAY8C,EAAUoG,KAAKlJ,QAAS,CACtD,IAAIqa,EAAUnR,KAAKlJ,OACfsa,EAAYpR,KAAKlJ,OAAOwF,wBAAwBqB,OAAO,SAAUoR,GACjE,OAAOxQ,WAAS4S,EAAQ/T,UAAW2R,KAASxQ,WAAS4S,EAAQhU,gBAAiBwB,KAElF,GAAIyS,EAAUzZ,OAAS,EAAG,CACtB,IAAImD,EAAUsW,EAAU,GAAG7X,SAAW,YAAc,OACpDyJ,EAAKnE,IAAIqO,aAAa,QAAS,YAAcpS,EAAU,MAI9CnC,YAAU,eAAgBqK,EAAKrE,OAE5C2R,YAAUtN,EAAKnE,KAAM,gBAErBmE,EAAKnE,IAAIkM,cAAc,qBACvB/H,EAAKnE,IAAIqO,aAAa,gBAAiB,QAElClK,EAAKnE,IAAIkM,cAAc,wBAC5B/H,EAAKnE,IAAIqO,aAAa,gBAAiB,SAEvClN,KAAKlJ,OAAOoa,mBAAqBlR,KAAKlJ,OAAOuC,gBACxCvB,oBAAkB6G,EAAKzF,cACxB8J,EAAKnE,IAAIlE,MAAMG,QAAU,SAGjCkF,KAAKlJ,OAAOqS,QAAQiH,EAAqBpN,KAK7C0N,EAAOzP,UAAU3B,WAAa,SAAU0D,GACpC,GAAKA,EAAKrE,KAAV,CAGA,IAEIrE,EAIA+W,EANAtZ,EAAOiI,KAAKlJ,OAAOiB,KACnB4G,EAAOqE,EAAKrE,KAGZ2S,EADcxZ,oBAAkB6G,EAAK4S,aACjB5S,EAAKpE,MAAQoE,EAAK4S,YACtCC,EAAkB,EAElB7R,EAASK,KAAKlJ,OAAO2a,eAAezO,EAAKrD,OAAOsM,KAChDyF,EAAa/S,EAAK4P,aAOtB,GAFIjU,EAJCxC,oBAAkB6G,EAAKzF,YAIhByF,EAAKrE,MAHLqE,EAAKzF,WAAWoB,MAKxBvC,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO2I,kBACjC,QAArBuD,EAAKnD,aAA8C,WAArBmD,EAAKnD,aAA4B/H,oBAAkBkL,EAAKzD,KAAKwL,cAAc,iBAAkB,CAM/H,IAAK,IALDuC,EAAYf,gBAAc,OAASC,UAAW,2BAC9CoF,EAAkBrF,gBAAc,QAChCC,UAAW,iBACXqF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIR,EAAKQ,IACrBN,GAAmB,GACnBlE,EAAUK,YAAYiE,EAAgB7E,aAE1C,IAAIgF,EAAgBja,oBAAkB6G,EAAKqT,yBACNrT,EAAKlF,gBAApCkF,EAAKqT,wBAIX,GAHID,IAAiBja,oBAAkB6G,EAAKjF,gBACxCqY,IAA8C,IAA7BpT,EAAKjF,aAAa/B,SAEnCoa,EAAc,CACdzB,YAAUtN,EAAKzD,MAAO,iBACtB,IAAI0S,EAAa1F,gBAAc,QAAUC,UAAW,YAChD0F,OAAS,EAETA,EADAlS,KAAKlJ,OAAOuC,cACHsF,EAAKpF,WACTzB,oBAAkB6G,EAAKqB,KAAKlJ,OAAOwC,sBAAwBqF,EAAKqB,KAAKlJ,OAAOwC,uBAC5E0G,KAAKlJ,OAAOoa,qBAGLvS,EAAKpF,WAAaV,EAAgBmH,KAAKlJ,OAAQ6H,EAAMqB,KAAKlJ,OAAOiB,KAAKuE,0BAEtFgU,YAAU2B,GAAa,EAAW,mBAAqB,sBACvDT,GAAmB,GACnBlE,EAAUK,YAAYsE,GACtBL,EAAgBjX,MAAMkS,MAAQ,MAC9B2E,GAAmB,EACnBlE,EAAUK,YAAYiE,EAAgB7E,kBAEjCuE,IAAQA,IAAQ3S,EAAKpE,SAE1BiX,GAAmB,GACnBlE,EAAUK,YAAYiE,EAAgB7E,aACtCO,EAAUK,YAAYiE,EAAgB7E,cAM1CsE,EAAc9E,gBAAc,QAAUC,UAAW,eAC7CxM,KAAKlJ,OAAOqb,gBACZd,EAAY1W,MAAMkS,MAAQ,eAAiB2E,EAAkB,OAEjElB,YAAUtN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,OAChEyF,KAAKoS,eAAepP,EAAMqO,EAAa/D,GACvCA,EAAUK,YAAY0D,GACtBrO,EAAKzD,KAAKoO,YAAYL,GAe1B,GAbItN,KAAKlJ,OAAO4I,cAAgBM,KAAKlJ,OAAO2I,iBAAmBO,KAAKlJ,OAAO4I,cAAgB,GACvF3H,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO4I,cAC1D4Q,YAAUtN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,OAE3DyF,KAAKlJ,OAAO4I,cAAgBM,KAAKlJ,OAAO2I,iBAAmBO,KAAKlJ,OAAO4I,cAAgB,IAC3F3H,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO4I,eACpD3H,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO4I,cAAgB,GACjF4Q,YAAUtN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,OAE3DyF,KAAKlJ,OAAO4I,gBAAkBM,KAAKlJ,OAAO2I,iBAAmBO,KAAKlJ,OAAO4I,cAAgB,GAC9F3H,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO2I,gBAAkB,GAC5E6Q,YAAUtN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,QAE/DzC,oBAAkB6H,IAAWA,EAAO/H,eACrCoI,KAAKlJ,OAAOub,OAAO,iBAAkBrP,GACjChD,KAAKlJ,OAAOqb,eAAe,CAC3B,IAAIG,EAAkBtP,EAAKzD,KAAKkJ,iBAAiB,YAAY,GAE7D+I,GADYe,SAASD,EAAgB3X,MAAMkS,MAAO,IAElD2E,GAAmB,IAEfH,EADAtZ,EAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO2I,gBAC5CuD,EAAKzD,KAAKwL,cAAc,eAGxB/H,EAAKzD,KAAKwL,cAAc,oBAE9BpQ,MAAMkS,MAAQ,eAAiB2E,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUtN,EAAKzD,MAAO,iBACtB,IAAIiT,EAAc7Z,YAAUqK,EAAKrD,OAAO2E,MAAOtB,EAAKrE,MACV,MAA1CqE,EAAKzD,KAAKwL,cAAc,eACpB/H,EAAKzD,KAAKwL,cAAc,eAAe0C,UAAY+E,EAAcxP,EAAKzD,KAAKkO,UAAY+E,EAE3F1a,oBAAkBkI,KAAKlJ,OAAO2b,cAC9BzS,KAAKlJ,OAAOqS,QAAQgH,EAAsBnN,KAGlD0N,EAAOzP,UAAUmR,eAAiB,SAAUpP,EAAMqO,EAAa/D,GAC3D,IAAIoF,EAAa1S,KAAKlJ,OAAOY,QAAQsI,KAAKlJ,OAAO2I,iBAC7CkT,EAAa,aACbC,EAAW5P,EAAKrD,OAAOrF,MACvBxC,oBAAkB4a,EAAWpO,QAC7BtB,EAAKzD,KAAK2N,aAAa,gBAAiB0F,EAAW,IAEnDF,EAAWpO,QAAUtB,EAAKrD,OAAO2E,OAAUxM,oBAAkB4a,EAAWG,WAAc/E,eACtF9K,EAAKrD,OAAOkT,SAAWH,EAAWG,SAClC7P,EAAKrD,OAAOgT,GAAcG,mBAAiB9P,EAAKrD,OAAOkT,UACvD7P,EAAKzD,KAAK+I,UAAUsE,IAAI,mBAE5B,IAAImG,EAAwD,MAA1C/P,EAAKzD,KAAKwL,cAAc,eACtC/H,EAAKzD,KAAKwL,cAAc,eAAe0C,UAAYzK,EAAKzD,KAAKkO,UACjE,GAAsC,iBAA1BzK,EAAKrD,OAAe,UAAkBK,KAAK2Q,eACnDqC,iBAAe3B,EAAarR,KAAK2Q,gBACjC3Q,KAAK2Q,eAAiB,KACtB3N,EAAKzD,KAAKkO,UAAY,QAErB,GAAIzK,EAAKzD,KAAK+I,UAAUC,SAAS,kBAAmB,CACrD,IAAI/P,EAAMwK,EAAKzD,KAAK0T,SAAStb,OACzBub,EAASlT,KAAKlJ,OAAOqc,QAAQC,GAAKpQ,EAAKrD,OAAOsM,IAClD,GAAIyG,EAAWpO,QAAUtB,EAAKrD,OAAO2E,OAAUxM,oBAAkB4a,EAAWG,UAqBxE,KAAa,EAAOra,EAAKA,EAAMwK,EAAKzD,KAAK0T,SAAStb,OAC9C0Z,EAAY1D,YAAY3K,EAAKzD,KAAK0T,SADzB,QArBsE,CAGnF,GAAIjT,KAAKlJ,OAAOuc,QACZrQ,EAAKrD,OAAOgT,GAAY3P,EAAKrE,KAAMqB,KAAKlJ,OAAQ,WAAYoc,EAAQ,KAAM,KAAM7B,GAC5EvZ,oBAAkBkI,KAAKlJ,OAAOiB,KAAY,WAC1CiI,KAAKlJ,OAAOiB,KAAY,QAAIiI,KAAKlJ,OAAc,SAEnDkJ,KAAKlJ,OAA2B,2BAE/B,CACD,IACIwc,OAAS,EACbA,EAAStQ,EAAKrD,OAAOgT,GAAYpW,UAASjC,MAAS,IAAM0I,EAAKrE,MAAOqB,KAAKlJ,OAAQ,WAAYoc,EAAQlT,KAAKlJ,OAAU,kBACrHkc,iBAAe3B,EAAaiC,UAEzBtQ,EAAKrD,OAAOkT,gBACZ7P,EAAKrD,OAAOgT,GACnB3P,EAAKzD,KAAKkO,UAAY,SAS1B4D,EAAY5D,UAAYsF,EACxB/P,EAAKzD,KAAKkO,UAAY,IAG9BiD,EAAOzP,UAAU2P,qBAAuB,SAAU5N,GAC9ChD,KAAK2Q,eAAiB3N,EAAK6P,UAE/BnC,EAAOzP,UAAU4P,oBAAsB,SAAU7N,GAG7ChD,KAAKlJ,OAAc,QAAIkM,EACvBhD,KAAKlJ,OAAOub,OAAO,sBAAuBrS,KAAKlJ,OAAc,SAC7DkJ,KAAKlJ,OAA2B,wBAEpC4Z,EAAOzP,UAAU6I,QAAU,WACvB9J,KAAKlJ,OAAOiB,KAAK4S,IAAI,kBAAmB3K,KAAK4Q,sBAC7C5Q,KAAKlJ,OAAOiB,KAAK4S,IAAI,sBAAuB3K,KAAK6Q,sBAE9CH,KCnPP6C,GAAkC,WAClC,SAASA,EAAiBxb,GACtBiI,KAAKwT,aAAe,eACpBxT,KAAKlJ,OAASiB,EACdiI,KAAKyT,eACLzT,KAAK0T,WACL1T,KAAK2T,iBACL3T,KAAK4T,aAAe,EACpB5T,KAAK6T,cACL7T,KAAK8T,cAAe,EACpB9T,KAAKmK,mBACLnK,KAAK+T,eACL/T,KAAK7E,iBAAmBrD,oBAAkBkI,KAAKlJ,OAAOqG,iBA8hB1D,OAzhBAoW,EAAiBtS,UAAUkJ,iBAAmB,WAC1CnK,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAKgU,uBAAwBhU,MACjEA,KAAKlJ,OAAOiB,KAAKqS,GAAG,gBAAiBpK,KAAKiU,aAAcjU,MACxDA,KAAKlJ,OAAOsT,GAAG,eAAgBpK,KAAKkU,WAAYlU,MAChDA,KAAKlJ,OAAOsT,GAAG+J,EAAqBnU,KAAKoU,qBAAsBpU,MAC/DA,KAAKlJ,OAAOsT,GAAG,gBAAiBpK,KAAKqU,cAAerU,OAKxDuT,EAAiBtS,UAAUwJ,oBAAsB,WACzCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIwJ,EAAqBnU,KAAKoU,sBAC1CpU,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAKgU,wBAC1ChU,KAAKlJ,OAAO6T,IAAI,eAAgB3K,KAAKkU,YACrClU,KAAKlJ,OAAO6T,IAAI,gBAAiB3K,KAAKqU,eACtCrU,KAAKlJ,OAAOiB,KAAK4S,IAAI,gBAAiB3K,KAAKiU,gBAO/CV,EAAiBtS,UAAU6I,QAAU,WACjC9J,KAAKyK,uBAGT8I,EAAiBtS,UAAUqT,SAAW,WAClC,OAAMtU,KAAKlJ,OAAOC,sBAAsBC,eAW5Cuc,EAAiBtS,UAAUsT,kBAAoB,SAAU5V,GACrD,IAAI2I,EAAQtH,KACZA,KAAKlJ,OAAO4G,SAAyC,IAA7BjF,OAAOC,KAAKiG,GAAMhH,QAAkBqI,KAAKlJ,OAAOC,sBAAsBC,iBAC1FgJ,KAAKlJ,OAAOC,WAChBiJ,KAAKlJ,OAAO2G,cAEZ,GAAK5G,EAAamJ,KAAKlJ,UAAY8C,EAAUoG,KAAKlJ,SAAY6H,aAAgB3H,iBAAiB2H,aAAgB9B,OAAQ,CACnH,IAAIhD,EAAKmG,KAAKlJ,OAAOC,WACrB,GAAIiJ,KAAKlJ,OAAOqG,gBAAiB,CAG7B,GAFA6C,KAAKlJ,OAAO0d,MAAQ1c,oBAAkBkI,KAAKlJ,OAAO0d,OAC9C,IAAIC,QAAUzU,KAAKlJ,OAAO0d,MAC1BxU,KAAKlJ,OAAOqG,gBAAiB,CAC7B,IAAIuX,EAAY1U,KAAKlJ,OAAO0d,MAAMG,OAAOhX,OAAO,SAAUiX,GAAS,MAAqB,cAAdA,EAAM3c,MAC5E+H,KAAKlJ,OAAOuC,gBAAkBqb,EAAU/c,SACxCqI,KAAKlJ,OAAO0d,MAAMK,MAAM7U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAC9D6C,KAAKlJ,OAAO0d,MAAMM,UAAU,YAAa9U,KAAKlJ,OAAOsG,YAI7D,IAAK4C,KAAKlJ,OAAOie,kBAA6D,kBAAxC/U,KAAKlJ,OAAOC,WAAsB,aAA0BiJ,KAAKlJ,OAAmB,gBAAI,CAC1H,IAAIke,EAAMhV,KAAKlJ,OAAO0d,MAAMS,QAC5BD,EAAIE,YACJF,EAAMA,EAAIxL,QAAQxJ,KAAKlJ,OAAOqG,mBAC1B5F,iBAAkB,EACtBsC,EAAGsb,aAAaH,GAAKI,KAAK,SAAUxX,GAChC0J,EAAMmM,YAAc4B,WAASC,SAAS1X,EAAE0V,OAAQhM,EAAMxQ,OAAOqG,iBAAiB,GAIlE,IAHFxE,YAAU,sBAAuB2O,EAAMxQ,QAAQ6G,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE2X,YAAYC,aACtB7d,SAEC8d,WAAS,+BAA+B,EAAMnO,EAAMxQ,QAC/CgB,oBAAkBwP,EAAMoO,mBACzBD,WAAS,UAAU,EAAOnO,EAAMoO,iBAChCnX,WAAS,oBAAqB+I,EAAMxQ,QAAQ6e,mBAAmBrO,EAAMoO,iBACrEpO,EAAMoO,gBAAkB,MAE5BpO,EAAMxQ,OAAOiB,KAAK6d,wBAM7BjX,aAAgB9B,OACrBmD,KAAK6V,gBAAgBlX,IAG7B4U,EAAiBtS,UAAU4U,gBAAkB,SAAUlX,GAGnD,GAFAqB,KAAK2T,iBACL3T,KAAK0T,WACA1T,KAAKlJ,OAAOsG,UAIb,IAAK,IAAI3F,EAAI,EAAGA,EAAIgB,OAAOC,KAAKiG,GAAMhH,OAAQF,IAAK,CAC/C,IAAIqe,EAAWnX,EAAKlH,GACpBuI,KAAK2T,cAAc/a,KAAK2D,YAAWuZ,IAC9Bhe,oBAAkBge,EAAS9V,KAAKlJ,OAAOsG,aACxC4C,KAAK0T,QAAQ9a,KAAKkd,EAAS9V,KAAKlJ,OAAOsG,iBAP/C4C,KAAK2T,cAAgBhV,EAWzB,GAAIqB,KAAK7E,gBAAiB,CAIjB,IAHD4a,KACAC,EAAc,IAAIhf,cAAYgJ,KAAK2T,eAAesC,cAAa,IAAIxB,SAClEyB,MAAMlW,KAAKlJ,OAAOqG,kBACvB,IAAS1F,EAAI,EAAGA,EAAIue,EAAYre,OAAQF,IAAK,CACzC,IAAI0e,EAAYH,EAAYve,GACxB6C,EAAQ0F,KAAK0T,QAAQhV,QAAQyX,EAAUle,KAC3C,IAAKH,oBAAkBqe,EAAUle,MACzBqC,GAAS,EADjB,CAEQ,IAAIyP,EAAaoM,EAAe,MAChCnW,KAAK2T,cAAcrZ,GAAO0F,KAAKlJ,OAAOwG,cAAgByM,OAI9DgM,EAASnd,KAAKoJ,MAAM+T,EAAUI,EAAUC,OAE5CpW,KAAK2T,cAAgB3T,KAAKqW,oBAAoBN,GAElD,GAAKtd,OAAOC,KAAKsH,KAAK2T,eAAehc,OAMjCqI,KAAKsW,cAActW,KAAK2T,mBANiB,CACzC,IACI4C,IAAkBvW,KAAKlJ,OAAOC,sBAAsBC,gBAAgBgJ,KAAKlJ,OAAc,QAC3FkJ,KAAKlJ,OAAO4G,SAAW6Y,EAAiBvW,KAAKlJ,OAAiB,cAKlEkJ,KAAK4T,aAAe,GAYxBL,EAAiBtS,UAAUoV,oBAAsB,SAAUN,GAEvD,IADA,IAAIzC,KACGtT,KAAK2T,cAAchc,OAAS,GAAKoe,EAASpe,OAAS,GAAG,CACzD,IAAI2C,EAAQyb,EAASrX,QAAQsB,KAAK2T,cAAc,KACjC,IAAXrZ,EACA0F,KAAK2T,cAAc6C,SAGnBlD,EAAO1a,KAAKoH,KAAK2T,cAAc6C,SAC/BT,EAAS1Y,OAAO/C,EAAO,IAG/B,OAAOgZ,GAMXC,EAAiBtS,UAAU+S,uBAAyB,SAAUhR,GAC1D,IAAI1K,EAAU0K,EAAKsQ,OACfmD,EAAc,cACdC,EAAe,iBACnB,GAAK1W,KAAKlJ,OAAOie,iBAAoB/U,KAAKyT,YAAY9b,QACP,kBAAxCqI,KAAKlJ,OAAOC,WAAW0f,KAAqCzW,KAAKlJ,OAAO4f,IAAmB1W,KAAKlJ,OAAO6f,kBAK1G,GAA8C,kBAAxC3W,KAAKlJ,OAAOC,WAAW0f,KAAqCzW,KAAKlJ,OAAO4f,IAAmB1W,KAAKlJ,OAAO6f,kBAgBpG7e,oBAAkBQ,IACnB0H,KAAKuU,kBAAkBjc,QAhB3B,IAAK,IAAIyW,EAAM,EAAGA,EAAMzW,EAAQX,OAAQoX,IAChCjX,oBAAkBQ,EAAQyW,GAAKzU,SAC/BhC,EAAQyW,GAAKhS,SAAWR,YAAWjE,EAAQyW,IAC3CzW,EAAQyW,GAAK3V,SAAWwd,SAAO5W,KAAKlJ,OAAOqc,QAAQC,GAAK,UACxDqC,WAAS,sBAAwBnd,EAAQyW,GAAK3V,SAAUd,EAAQyW,GAAM/O,KAAKlJ,QAC3EwB,EAAQyW,GAAKxU,MAAQ,EACrBjC,EAAQyW,GAAKzU,MAAQuc,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bze,EAAQyW,GAAK/O,KAAKlJ,OAAOie,mBAAuF,IAAnE/U,KAAKyT,YAAY/U,QAAQpG,EAAQyW,GAAK/O,KAAKlJ,OAAOsG,eAChG9E,EAAQyW,GAAKtV,iBAAkB,GAEnCnB,EAAQyW,GAAK5B,cAAgB,gBAfzCnN,KAAK0V,gBAAkB1S,EACvByS,WAAS,UAAU,EAAMzS,GAwB7BA,EAAKsQ,OAAkD,kBAAxCtT,KAAKlJ,OAAOC,WAAW0f,KAAqCzW,KAAKlJ,OAAO4f,KAAkB5e,oBAAkBQ,IACpH0H,KAAKlJ,OAAO6f,kBAAoB3W,KAAKlJ,OAAO4G,SAAWpF,EAC9D0H,KAAKlJ,OAAOub,OAAO,gBAAiBrP,IAMxCuQ,EAAiBtS,UAAUmT,qBAAuB,SAAU4C,EAAYC,GACpE,IAAIC,EAAWlX,KAAKlJ,OAAOiI,UAC3B,GAAIiB,KAAKlJ,OAAO2b,YAAa,CACzB,IAAIzK,EAAOhI,KAAKlJ,OAAOqgB,kBAAkBnP,KACzCkP,KAAc1O,MAAM5F,KAAKoF,GAE7B,IAAI0G,EAGJ,GAAIsI,EAAWhP,KAAKrQ,OAAS,EAAG,CACvBsf,IACDD,EAAWle,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAIuf,EAAWhP,KAAKrQ,OAAQF,IAAK,CAQ7C,GAPIqW,cAAc9N,KAAKlJ,OAAOsgB,kBAC1B/J,eAAa2J,EAAWhP,KAAKvQ,IAAK,sBAClC6Y,YAAU0G,EAAWhP,KAAKvQ,IAAK,sBAG/Buf,EAAWhP,KAAKvQ,GAAGkD,MAAMG,QAAU,YAElCgT,cAAuD,kBAAxC9N,KAAKlJ,OAAOC,WAAsB,cAA0BiJ,KAAKlJ,OAAmB,gBACjGkJ,KAAKlJ,OAAO6f,kBAAmB,CAClC,IAAIU,EAAYL,EAAWhP,KAAKvQ,GAAG6f,uBAAuB,sBAAsB,GAChF5I,EAAc1O,KAAKlJ,OAAO2b,YAAczS,KAAKlJ,OAAOiB,KAAKuE,wBAAwB0a,EAAWhP,KAAKvQ,GAAGmS,UAChG5J,KAAKlJ,OAAOiB,KAAKwf,oBAAoBP,EAAWhP,KAAKvQ,GAAG2U,aAAa,aAAazN,MACjF7G,oBAAkBuf,IAAc3I,EAAYnV,WAC7C+W,YAAU+G,GAAY,oBACtBhK,eAAagK,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASvZ,OAAO,SAAU8D,GAClC,OAAOA,EAAEsJ,cAAc,kBAAoB2D,EAAYpU,MAAQ,SAAWoU,EAAYnU,MAAQ,OAEpF5C,QAAU+W,EAAYnV,UAChCyG,KAAKoU,sBAAuBtb,OAAQ4V,EAAa1G,KAAMwP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAWhP,KAAKvQ,GAAGsT,cAAc,wBAC9CjT,oBAAkB4f,IACnB1X,KAAKlJ,OAAOiB,KAAK4f,gBAAgBzF,OAAOwF,SAKhD1X,KAAK4X,sBAAuB9e,OAAQke,EAAWle,OAAQkP,KAAMgP,EAAWhP,KAAMyP,UAAWT,EAAWS,aAG5GlE,EAAiBtS,UAAU2W,qBAAuB,SAAUZ,EAAYC,GACpE,IAAI3P,EAAQtH,KACRgD,GAASnE,IAAKmY,EAAWS,UAAW9Y,KAAMqY,EAAWle,QACrDe,EAAKmG,KAAKlJ,OAAOC,WACjBie,EAAMhV,KAAKlJ,OAAOiB,KAAK8f,gBAAgBC,gBACvCC,EAAc/C,EAAIE,QAAQvX,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEoa,IAA4B,YAATpa,EAAEoa,KAClFhD,EAAIE,QAAU6C,EACd/C,EAAIzd,iBAAkB,EACtByd,EAAIH,MAAM7U,KAAKlJ,OAAOqG,gBAAiB,QAAS6Z,EAAWle,OAAOkH,KAAKlJ,OAAOsG,YAC9E6a,cAAYjY,KAAKlJ,OAAOqc,SACxBtZ,EAAGsb,aAAaH,GAAKI,KAAK,SAAUxX,GAChC,IAAIrF,EAAQ+O,EAAMxQ,OAAOiB,KAAKmgB,gBAC1BC,EAAM5f,EAAMmG,QAAQsY,EAAWle,SACtB,IAATqf,GACA7Q,EAAMxQ,OAAOiB,KAAKqgB,gBAAgB1I,QAAQ,SAAU1H,GAC5CA,EAAKrJ,KAAKvF,WAAa4d,EAAWle,OAAOM,WACzC+e,EAAMnQ,EAAK1N,SAIvB,IAAI+d,EAAY1f,YAAU,mBAAoBiF,GAC1C0V,EAAS1V,EAAE0V,OACf0D,EAAWle,OAAOY,aAAe4Z,EACjC,IAAK,IAAI7R,EAAI,EAAGA,EAAI6R,EAAO3b,OAAQ8J,IAAK,CACpC6R,EAAO7R,GAAG1E,SAAWR,YAAW+W,EAAO7R,IACvC6R,EAAO7R,GAAGlH,MAAQyc,EAAWle,OAAOyB,MAAQ,EAC5C+Y,EAAO7R,GAAGnH,MAAQuc,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAItZ,EAAalB,YAAWya,EAAWle,eAChC2E,EAAW/D,aAClB4Z,EAAO7R,GAAGvI,WAAauE,EACvB6V,EAAO7R,GAAGjD,eAAiBwY,EAAWle,OAAOM,SAC7Cka,EAAO7R,GAAGrI,SAAWwd,SAAOtP,EAAMxQ,OAAOqc,QAAQC,GAAK,UACtDE,EAAO7R,GAAG0L,cAAgB,UAC1BsI,WAAS,sBAAwBnC,EAAO7R,GAAGrI,SAAUka,EAAO7R,GAAI6F,EAAMxQ,SAEjEwc,EAAO7R,GAAG6F,EAAMxQ,OAAOie,mBAAsF,IAAlEzN,EAAMmM,YAAY/U,QAAQ4U,EAAO7R,GAAG6F,EAAMxQ,OAAOsG,aACxFib,IAAcA,EAAU5W,KAC7B6R,EAAO7R,GAAGhI,iBAAkB,EAC5B6Z,EAAO7R,GAAGlI,UAAW,GAEzBhB,EAAM8E,OAAO8a,EAAM1W,EAAI,EAAG,EAAG6R,EAAO7R,IAMxC,GAJAgU,WAAS,SAAUld,EAAOqF,GAC1B6X,WAAS,SAAU,sBAAuB7X,GAC1C0J,EAAMxQ,OAAOqS,QAAQmP,EAAuB1a,GAC5CgY,cAAYtO,EAAMxQ,OAAOqc,SACrB7L,EAAMxQ,OAAOiB,KAAKwgB,WAAW5gB,OAAS,IAAM2P,EAAMxQ,OAAOwH,qBAAsB,CAC/E,IAAIka,EAAY7f,YAAU,QAASiF,GAKnC,GAHI9F,oBAAkB0gB,KAClBA,EAAYja,WAAS,yBAA0B+I,EAAMxQ,QAAQ2hB,eAAe,IAAIhE,WAE/E3c,oBAAkB0gB,GAAY,CAC/B,IAAIE,EAAeF,EAAUtD,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEX,KACpEpa,EAAU,OAAI0J,EAAMxQ,OAAO8hB,cAAcC,sBAAsBH,EAAc9a,EAAU,QAAG,IAGlGA,EAAE0Q,MAAQhH,EAAMxQ,OAAOiB,KAAKiZ,aAAa8H,kBACzC,IAAIC,KACAzR,EAAMxQ,OAAOwH,sBACbgJ,EAAM0R,oBAAoBD,GAE9Bxa,WAAS,oBAAqB+I,EAAMxQ,QAAQ6e,mBAAmB/X,EAAGmb,GAClEzR,EAAMxQ,OAAOqS,QAAQ8P,EAAiBjW,MAG9CuQ,EAAiBtS,UAAU+X,oBAAsB,SAAUD,GACvDA,EAAYlZ,YAAc,UAC1B4V,WAAS,oBAAoB,EAAMsD,GACnC,IAAIG,EAAgB3a,WAAS,qBAAsByB,KAAKlJ,QACpDqiB,EAAc5a,WAAS,cAAe2a,GACtCE,EAAW7a,WAAS,WAAY2a,GAChCC,EAAYE,UAAYrZ,KAAKlJ,OAAOiB,KAAKiZ,aAAasI,cAAgBH,EAAYI,SAASC,OAC3FxZ,KAAKlJ,OAAOiB,KAAKiZ,aAAasI,YAAcF,EAASI,OAG7DjG,EAAiBtS,UAAUgT,aAAe,WACtCjU,KAAK8T,cAAe,GAExBP,EAAiBtS,UAAUqV,cAAgB,SAAU3X,EAAM8a,GAEvD,IAAK,IADDC,KACKjiB,EAAI,EAAGe,EAAMC,OAAOC,KAAKiG,GAAMhH,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAIkiB,EAAcpd,YAAWoC,EAAKlH,IAClCkiB,EAAY5c,SAAW4B,EAAKlH,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBAyF,KAAK4T,cACA+F,EAAY1c,eAAe,WAC5B0c,EAAYrf,MAAQ0F,KAAK4T,eAExB9b,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOwG,gBAC1Cqc,EAAY3Z,KAAKlJ,OAAOie,kBAAoBxd,EAAgByI,KAAKlJ,WAClE6iB,EAAYlgB,iBAAkB,EAC1BuG,KAAKlJ,OAAOoa,oBAAsBpZ,oBAAkBkI,KAAKlJ,OAAO+M,kBAC7D/L,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOwG,eAC7Cqc,EAAYpgB,UAAW,EAGvBogB,EAAYpgB,WAAYzB,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOwC,sBAC5DqgB,EAAY3Z,KAAKlJ,OAAOwC,qBAGjCqgB,EAAY1c,eAAe,WAC5B0c,EAAYrf,OAAQqf,EAAYlgB,gBAAkBuG,KAAK4T,cAEvD5T,KAAK7E,iBAAmBrD,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOqG,mBAClE6C,KAAKlJ,OAAO2G,WAAW7E,KAAK+gB,GAEhCA,EAAYvgB,SAAWwd,SAAO5W,KAAKlJ,OAAOqc,QAAQC,GAAK,UACvDqC,WAAS,sBAAwBkE,EAAYvgB,SAAUugB,EAAa3Z,KAAKlJ,SACpEgB,oBAAkB2hB,GAAgB,CACnC,IAAIhc,EAAalB,YAAWkd,UACrBhc,EAAW/D,oBACX+D,EAAWuC,KAAKlJ,OAAOwG,cAC1B0C,KAAK7E,wBACEsC,EAAWV,SAASiD,KAAKlJ,OAAOwG,cAE3Cqc,EAAYzgB,WAAauE,EACzBkc,EAAYnb,eAAiBf,EAAWrE,SACxCmB,EAAQkf,EAAclf,MAAQ,EAYlC,GAVKof,EAAY1c,eAAe,WAC5B0c,EAAYpf,MAAQA,GAExBof,EAAYxM,cAAgB,WACxBrV,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOqG,mBAAqBwc,EAAYzgB,aAC3E8G,KAAKlJ,OAAO4G,SAAS9E,KAAK+gB,GAEzB3Z,KAAK7E,iBAAyC,IAAtBwe,EAAYpf,OACrCyF,KAAKlJ,OAAO2G,WAAW7E,KAAK+gB,IAE3B7hB,oBAAkB6hB,EAAY3Z,KAAKlJ,OAAOwG,eAAiBqc,EAAY3Z,KAAKlJ,OAAOwG,cAAc3F,QAAS,CAC3G,IAAImB,EAASkH,KAAKsW,cAAcqD,EAAY3Z,KAAKlJ,OAAOwG,cAAeqc,GACvEA,EAAYjgB,aAAeZ,EAE/B4gB,EAAa9gB,KAAK+gB,GAEtB,OAAOD,GAMXnG,EAAiBtS,UAAUoT,cAAgB,SAAUrR,GACjD,IAII4W,EAJAC,EAAWlhB,YAAU,WAAYqK,GACjC8W,EAAanhB,YAAU,aAAcqK,GACrC+W,EAAaphB,YAAU,aAAcqK,GACrCgX,EAAarhB,YAAU,aAAcqK,GAErCiX,EAAathB,YAAU,aAAcqK,GACrCnD,EAAclH,YAAU,cAAeqK,GACvCkX,EAAavhB,YAAU,OAAQqK,GAC/BvH,EAAS9C,YAAU,SAAUqK,GAC7BmX,EAAgBF,EAChBG,EAAuBpa,KAAKlJ,OAAO4E,0BAA0B,GAC7D2e,EAAY1hB,YAAU,OAAQwhB,GAC5BriB,oBAAkBqiB,IAAqBriB,oBAAkBqiB,EAAc1e,SAAsC,QAAzB0e,EAAc1e,QAC/F3D,oBAAkBqiB,EAAcxb,QAAU7G,oBAAkBqiB,EAAcxb,KAAKyb,MACpFD,EAAcxb,KAAKyb,GAAwBpX,EAAKsQ,OAAO6G,EAAc7f,OAAO8f,GAC5EC,EAAUtd,SAASqd,GAAwBpX,EAAKsQ,OAAO6G,EAAc7f,OAAO8f,MAE1EtiB,oBAAkBmiB,IAAexhB,OAAOC,KAAKuhB,GAAYtiB,QAA2B,SAAhBkI,KACtEA,EAAcA,GAA4Boa,EAAWpa,YACrDqa,EAAaA,GAA0BvhB,YAAU,OAAQshB,GACzDxe,EAASA,GAAkB9C,YAAU,SAAUshB,GACT,UAAlCja,KAAKlJ,OAAOkF,aAAaC,OACzB+D,KAAKxE,aAAewE,KAAKlJ,OAAOiB,KAAKmE,WAAWC,oBAErC,QAAXV,GAAqC,cAAhBoE,GAAkE,UAAlCG,KAAKlJ,OAAOkF,aAAaC,MAC3E+D,KAAKxE,aAAawE,KAAKwT,cAAc7b,UACxCqI,KAAKlJ,OAAOiB,KAAKmgB,gBAAkBlV,EAAKsQ,QAExCtT,KAAKlJ,OAAOwjB,aACZta,KAAKua,aAAaL,EAAYze,EAAQoE,IAU9C,IAAI2a,GANAZ,EADAC,IAAa/hB,oBAAkBgiB,GACrBA,EAGAviB,EAAgByI,KAAKlJ,QAAUyH,WAAS,SAAUyB,KAAKlJ,OAAOiB,KAAKhB,YACvEiJ,KAAKlJ,OAAOiB,KAAKhB,sBAEMC,cAAc4iB,EAAQ7iB,WAAW6E,KAAOge,EACrEtL,EAAQ/W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YACnEyjB,EAAQ7iB,OACd,GAAKqI,KAAKlJ,OAAOiB,KAAKI,gBAAkB6H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,IAAIqd,EAAM,IAAIP,QACV+D,EAAY7f,YAAU,QAASqK,GAC/BlL,oBAAkB0gB,KAClBA,EAAY,IAAI/D,QAChB+D,EAAYja,WAAS,yBAA0ByB,KAAKlJ,QAAQ2jB,YAAYjC,GACxEA,EAAYja,WAAS,yBAA0ByB,KAAKlJ,QAAQ4jB,YAAYlC,IAE5E,IAAImC,EAAYnC,EAAUtD,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,YAATA,EAAEX,KAC7D4C,EAAYpC,EAAUtD,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,aAATA,EAAEX,KACjEhD,EAAIE,QAAUyF,EAAUhhB,OAAOihB,GAC/B,IAAIC,EAAe,IAAI7jB,cAAYwjB,GAASvE,aAAajB,GAIzD,GAHAhV,KAAKlJ,OAAOub,OAAO,oBAAsB1T,KAAMkc,IAC/CL,EAAUxa,KAAK+T,YAAYT,OAC3BtT,KAAK+T,YAAYT,OAAS,KACtBtT,KAAKlJ,OAAOiB,KAAKwgB,WAAW5gB,OAAS,EAAG,CACxC,IAAI6c,EAAQ7b,YAAU,QAASqK,GAI/B,GAHIlL,oBAAkB0gB,KAClBA,EAAYja,WAAS,yBAA0ByB,KAAKlJ,QAAQ2hB,eAAe,IAAIhE,WAE9E3c,oBAAkB0c,GAAQ,CAC3B,IAAIkE,EAAelE,EAAMU,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEX,KAChEwC,EAAUxa,KAAKlJ,OAAO8hB,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAIxa,KAAKlJ,OAAOiB,KAAKwgB,WAAW5gB,QAA2D,IAAjDqI,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,QACtB,IAAnDqI,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiBqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpG6gB,EAAY7f,YAAU,QAASqK,GAC/BlL,oBAAkB0gB,KAClBA,EAAYja,WAAS,yBAA0ByB,KAAKlJ,QAAQ2hB,eAAe,IAAIhE,UAE/EiE,EAAeF,EAAUtD,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEX,KACpEwC,EAAUxa,KAAKlJ,OAAO8hB,cAAcC,sBAAsBH,EAAc1Y,KAAKlJ,OAAO4G,UAAU,GAElG,GAAIsC,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,OAAS,GAAKqI,KAAK8T,aAAc,CACvE9T,KAAK8T,cAAe,EACpB,IAAIrW,OAAa,EACjBA,EAEauC,KAAKlJ,OAAO2G,WAErB+W,EAAQ7b,YAAU,QAASqK,GAE/B,IAAK,IADD8X,EAAS,IAAIrG,QACRsG,EAAM/a,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,OAAS,EAAGojB,GAAO,EAAGA,IAAO,CAC9E,IAAI/O,EAAMhM,KAAKlJ,OAAOiB,KAAKijB,iBAAiBhb,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQqjB,GAAKzW,OACnF2W,EAAUjP,EAAIkP,cAAgBthB,EAAUoG,KAAKlJ,QAC7CkV,EAAIkP,aAAaC,KAAKnP,GACtBhM,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQqjB,GAAKK,UAC/CN,EAAOO,OAAOrb,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQqjB,GAAKzW,MAAO2W,GAEpE,IAEIK,GAAazf,aAFE,IAAI7E,cAAYyG,GAAYwY,aAAa6E,GAEfD,aAAcL,EAASM,OAAQA,GAM5E,GALA9a,KAAKlJ,OAAOub,OAAO,aAAciJ,GACjCd,EAAUc,EAASzf,aACnBmE,KAAK+T,YAAYT,OAAS,KAC1BtT,KAAK6T,WAAa2G,EAClBxa,KAAKlJ,OAAOub,OAAO,kBACfrS,KAAKlJ,OAAOiB,KAAKwgB,WAAW5gB,OAAS,IAAMG,oBAAkB0c,GAAQ,CAGjEkE,EADU/f,YAAU,QAASqK,GACNkS,QAAQvX,OAAO,SAAUgb,GAAK,MAAgB,iBAATA,EAAEX,KAClEwC,EAAUxa,KAAKlJ,OAAO8hB,cAAcC,sBAAsBH,EAAc1Y,KAAK6T,YAHhE,IAMrBvF,EAAQ/W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YAC/DyjB,EAAQ7iB,OACd,IAAI4jB,EAAOvb,KAAKwb,OAAOhB,EAASlM,EAAOuL,EAAUG,EAAYD,EAAY/W,GACzEwX,EAAUe,EAAKjI,OACfhF,EAAQiN,EAAKjN,MACbtL,EAAKsQ,OAASkH,EACdxX,EAAKsL,MAAQA,EACbtO,KAAKlJ,OAAOub,OAAO,gBAAiBrP,IAExCuQ,EAAiBtS,UAAUua,OAAS,SAAUhB,EAASlM,EAAOuL,EAAUG,EAAYD,EAAY/W,IACxFhD,KAAKlJ,OAAOia,aAAiB8I,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1Bha,KAAKlJ,OAAO2kB,WAM1Bzb,KAAKlJ,OAAOwH,sBAA0Bub,GAA2B,gBAAfE,GAClB,SAAlCxb,WAAS,cAAeyE,KAC3BhD,KAAKlJ,OAAOub,OAAOqJ,GAAwBpI,OAAQkH,EAASlM,MAAOA,EAAO2L,WAAY1b,WAAS,aAAcyE,KAC7GwX,EAAUxa,KAAK+T,YAAYT,OAC3BhF,EAAQtO,KAAK+T,YAAYzF,QATzBtO,KAAKlJ,OAAOub,OAAOqJ,GAAwBpI,OAAQkH,EAASlM,MAAOA,IACnEkM,EAAUxa,KAAK+T,YAAYT,OAC3BhF,EAAQ/W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YAC/DiJ,KAAK+T,YAAYzF,OAS3B,OADcgF,OAAQkH,EAASlM,MAAOA,IAM1CiF,EAAiBtS,UAAUiT,WAAa,SAAUyH,GAC9C3b,KAAK+T,YAAc4H,GAEvBpI,EAAiBtS,UAAUsZ,aAAe,SAAUL,EAAYze,EAAQoE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKlJ,OAAOub,OAAOuJ,IAAqBvhB,MAAO6f,EAAYze,OAAQA,GAAUoE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKlJ,OAAOkF,aAAaC,MACxD+D,KAAKlJ,OAAOub,OAAOwJ,QAGpBtI,MC/iBX,SAAWuI,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC3CxB,IAAItb,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Dua,GAA8B,SAAUja,GAExC,SAASia,IACL,OAAkB,OAAXja,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,GAAUub,EAAcja,GAIxBZ,IACIc,WAAS,KACV+Z,EAAa/a,UAAW,gBAAY,GACvCE,IACIc,WAAS,IACV+Z,EAAa/a,UAAW,iBAAa,GACxCE,IACIc,WAAS,IACV+Z,EAAa/a,UAAW,mBAAe,GAC1CE,IACIc,cACD+Z,EAAa/a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV+Z,EAAa/a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV+Z,EAAa/a,UAAW,iBAAa,GACxCE,IACIc,WAAS,OACV+Z,EAAa/a,UAAW,gBAAY,GACvCE,IACIc,WAAS,QACV+Z,EAAa/a,UAAW,oBAAgB,GACpC+a,GACT9Z,iBCrDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAQ5Dwa,GAAiC,SAAUla,GAE3C,SAASka,IACL,IAAI3U,EAAmB,OAAXvF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAGhE,OAFAsH,EAAM4U,KAAO,IAAIC,uBACjB7U,EAAMqL,cACCrL,EAmEX,OAxEA7G,GAAUwb,EAAiBla,GAU3Bka,EAAgBhb,UAAUmb,aAAe,SAAUC,GAC3Crc,KAAKsc,SAAWtc,KAAKsc,OAAOC,UAAYvc,KAAKsc,OAAOA,UACpDtc,KAAKwc,SAAWxc,KAAKyc,kBAAkBzc,KAAKsc,UAMpDL,EAAgBhb,UAAUwb,kBAAoB,SAAUH,GACpD,OAAIA,EAAOrZ,KACAjD,KAAKkc,KAAKQ,cAAcJ,GAGxBtc,KAAKkc,KAAKS,gBAAgBL,IAMzCL,EAAgBhb,UAAU2b,aAAe,WACrC,OAAO5c,KAAKwc,UAKhBP,EAAgBhb,UAAU4b,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxB/c,KAAKgd,iBACLhd,KAAK2S,WAAWsK,eAAaC,WAAUA,WAASC,WAAcnF,GAAIoF,UAAQpd,KAAKgd,eAAgBF,GAC3FO,SAAU,oBAMtBpB,EAAgBhb,UAAUqc,YAAc,SAAUra,GAC9C,OAAOjD,KAAK2S,WAAWsK,eAAaC,WAAUja,KAKlDgZ,EAAgBhb,UAAUsc,oBAAsB,SAAUC,GACtDxd,KAAKyd,cAAcD,GAAM,IAE7Brc,IACIc,cACDga,EAAgBhb,UAAW,YAAQ,GACtCE,IACIc,cACDga,EAAgBhb,UAAW,sBAAkB,GAChDE,IACIc,cACDga,EAAgBhb,UAAW,aAAS,GACvCE,IACIc,cACDga,EAAgBhb,UAAW,cAAU,GACxCE,IACIc,cACDga,EAAgBhb,UAAW,kBAAc,GAC5CE,IACIc,cACDga,EAAgBhb,UAAW,uBAAmB,GAC1Cgb,GACT/Z,iBAEEwb,GAA8B,SAAU3b,GAExC,SAAS2b,IACL,OAAkB,OAAX3b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUid,EAAc3b,GAIxBZ,IACIiB,gBAAe6Z,KAChByB,EAAazc,UAAW,eAAW,GACtCE,IACIc,YAAS,IACVyb,EAAazc,UAAW,wBAAoB,GACxCyc,GACTxb,iBCjHEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Dkc,GAA8B,SAAU5b,GAExC,SAAS4b,IACL,OAAkB,OAAX5b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,OAlCAS,GAAUkd,EAAc5b,GAIxBZ,IACIc,YAAS,IACV0b,EAAa1c,UAAW,mBAAe,GAC1CE,IACIc,YAAS,IACV0b,EAAa1c,UAAW,oBAAgB,GAC3CE,IACIc,YAAS,IACV0b,EAAa1c,UAAW,qBAAiB,GAC5CE,IACIc,WAAS,SACV0b,EAAa1c,UAAW,YAAQ,GACnCE,IACIc,WAAS,QACV0b,EAAa1c,UAAW,sBAAkB,GAC7CE,IACIc,YAAS,IACV0b,EAAa1c,UAAW,2BAAuB,GAClDE,IACIc,YAAS,IACV0b,EAAa1c,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV0b,EAAa1c,UAAW,+BAA2B,GACtDE,IACIc,WAAS,KACV0b,EAAa1c,UAAW,gBAAY,GACvCE,IACIc,gBACD0b,EAAa1c,UAAW,cAAU,GAC9B0c,GACTzb,iBC3DEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Dmc,GAAgC,SAAU7b,GAE1C,SAAS6b,IACL,OAAkB,OAAX7b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUmd,EAAgB7b,GAI1BZ,IACIc,cACD2b,EAAe3c,UAAW,aAAS,GACtCE,IACIc,cACD2b,EAAe3c,UAAW,iBAAa,GACnC2c,GACT1b,iBAKE2b,GAA8B,SAAU9b,GAExC,SAAS8b,IACL,OAAkB,OAAX9b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUod,EAAc9b,GAIxBZ,IACIiB,gBAAewb,KAChBC,EAAa5c,UAAW,eAAW,GACtCE,IACIc,YAAS,IACV4b,EAAa5c,UAAW,mBAAe,GACnC4c,GACT3b,iBCpDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAyC5Dqc,GAA0B,SAAU/b,GAEpC,SAAS+b,EAAS/d,EAASoT,GACvB,IAAI7L,EAAQvF,EAAOa,KAAK5C,KAAMD,EAASoT,IAAYnT,KACnDsH,EAAMyM,eACNzM,EAAMyW,sBACNzW,EAAM0W,4BACN1W,EAAM2W,eAAiB,iBACvB3W,EAAM4W,eAAiB,iBACvB5W,EAAMkM,aAAe,eACrB2K,EAAWzb,OAAO0b,IAClB3I,WAAS,mBAAoBnO,EAAM+W,yBAA0B/W,GAM7D,OAJKxP,oBAAkBwP,EAAMgX,gBAAsB,SAC/C7b,OAAKC,OAAOF,UAEhB8E,EAAMvP,KAAO,IAAI0K,OACV6E,EAhBX7G,GAAUqd,EAAU/b,GAkBpBoc,EAAaL,EAUbA,EAAS7c,UAAUsd,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,OAAI7Q,cACA9N,KAAK4e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ3e,KAAK4e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS7c,UAAU6d,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,OAAI7Q,cACA9N,KAAK4e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ3e,KAAK4e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS7c,UAAU8d,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,OAAI7Q,cACA9N,KAAKkf,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJ3e,KAAKkf,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFb,EAAS7c,UAAU4B,cAAgB,WAC/B,MAAO,YAMXib,EAAS7c,UAAUke,UAAY,WAC3Bnf,KAAKof,iBACLpf,KAAKqf,iBACLrf,KAAKsf,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB7f,KAAK8f,KAAO,IAAIC,OAAK,WAAY/f,KAAKsf,cAAetf,KAAKggB,QACtDhgB,KAAK7E,iBAAmBrD,oBAAkBkI,KAAK1C,gBAC/C0C,KAAK1C,aAAe,aAU5BwgB,EAAS7c,UAAUgf,aAAe,SAAU3kB,EAAY8f,EAAW8E,GAC/DlgB,KAAKmgB,WAAWC,WAAW9kB,EAAY8f,EAAW8E,IAMtDpC,EAAS7c,UAAUof,aAAe,WAC1BrgB,KAAKmgB,YACLngB,KAAKmgB,WAAWE,gBASxBvC,EAAS7c,UAAUqf,iBAAmB,SAAUhc,GAC5CtE,KAAKmgB,WAAWG,iBAAiBhc,IASrCwZ,EAAS7c,UAAUsf,OAAS,SAAUC,GAClCxgB,KAAKjI,KAAKwoB,OAAOC,IAYrB1C,EAAS7c,UAAUwf,eAAiB,SAAUC,GAC1C1gB,KAAK2gB,aAAaF,eAAeC,GACjC1gB,KAAK4gB,qBAQT9C,EAAS7c,UAAU4f,eAAiB,SAAUC,EAAWC,GACrD/gB,KAAKjI,KAAK8oB,eAAeC,EAAWC,IAExCjD,EAAS7c,UAAUme,eAAiB,WAEhC,IACI4B,EADAhB,EAASD,OAAKC,OAElBgB,KACAvL,WAASzV,KAAKggB,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAatoB,YAAUqH,KAAKggB,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiBvoB,YAAUqH,KAAK6C,gBAAiBoe,GACjDxL,WAAS,OAAQyL,EAAgBvoB,YAAUqH,KAAKggB,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdlD,EAAS7c,UAAUsP,MAAQ,WACvBvQ,KAAKohB,YAAY7Q,SAErBuN,EAAS7c,UAAUogB,yBAA2B,SAAUzjB,GACpD,GAAIoC,KAAKshB,cACL,OAAQ1jB,EAAEnC,QACN,IAAK,gBACDuE,KAAKuhB,YACL,MACJ,IAAK,cACDvhB,KAAKwhB,cACL,MACJ,IAAK,mBACD,IAEIC,EAFiB7jB,EAAEyD,OACa2J,QAAQ,cACXA,QAAQ,MACrC0W,EAAcD,EAAY1W,cAAc,qBACxB,OAAhB2W,QAAwC3E,IAAhB2E,GACxB1hB,KAAK2hB,sBAAsBF,EAAY1W,cAAc,sBAEzD,MACJ,IAAK,qBACD,IAEI6W,EAFehkB,EAAEyD,OACW2J,QAAQ,cACXA,QAAQ,MACjC6W,EAAYD,EAAU7W,cAAc,uBACtB,OAAd8W,QAAoC9E,IAAd8E,GACtB7hB,KAAK2hB,sBAAsBC,EAAU7W,cAAc,wBAEvD,MACJ,IAAK,YACD,IAAI1J,EAASzD,EAAEyD,OAAOygB,cAClBC,EAAiB/hB,KAAKgiB,mBAAmB3gB,GAC7C,GAAuB,OAAnB0gB,EAAyB,CACzB,IAAInY,EAAWmY,EAAenY,SAC9B5J,KAAKiiB,UAAUrY,GACf,IAAIsY,EAAYtkB,EAAEyD,OAAO6gB,UACrBrjB,EAAMkjB,EAAe9O,SAASiP,GAClC5R,YAAUzR,GAAM,aAChByR,YAAUzR,GAAM,gBAGhBmB,KAAKmiB,iBAET,MACJ,IAAK,UACD,IAAIC,EAAYxkB,EAAEyD,OAAOygB,cACrBO,EAAoBriB,KAAKsiB,uBAAuBF,GACpD,GAA0B,OAAtBC,EAA4B,CAC5B,IAAIE,EAASF,EAAkBzY,SAC/B5J,KAAKiiB,UAAUM,GACf,IAAIC,EAAS5kB,EAAEyD,OAAO6gB,UAClBla,EAAOqa,EAAkBpP,SAASuP,GACtClS,YAAUtI,GAAO,aACjBsI,YAAUtI,GAAO,gBAGjBhI,KAAKmiB,mBAMzBrE,EAAS7c,UAAU+gB,mBAAqB,SAAUK,GAC9C,IAAI7W,EAAa6W,EAAkBlX,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAU9N,QAAQ,iBACxB,SAA7B8M,EAAW7Q,MAAMG,UACjB0Q,EAAaxL,KAAKgiB,mBAAmBxW,IAElCA,GAGXsS,EAAS7c,UAAUqhB,uBAAyB,SAAUD,GAClD,IAAI7W,EAAa6W,EAAkBI,uBAKnC,OAJmB,OAAfjX,IAA0E,IAAlDA,EAAWgB,UAAU9N,QAAQ,iBACxB,SAA7B8M,EAAW7Q,MAAMG,UACjB0Q,EAAaxL,KAAKsiB,uBAAuB9W,IAEtCA,GAEXsS,EAAS7c,UAAUoe,eAAiB,WAChCrf,KAAKsf,iBACLtf,KAAKtC,YACLsC,KAAKvC,cACLuC,KAAK0iB,eACL1iB,KAAK2iB,aAAc,EACnB3iB,KAAK4iB,eAAgB,EACrB5iB,KAAK6iB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbnjB,KAAKsa,cAAiBta,KAAKjJ,sBAAsBC,gBAAgBgJ,KAAKjJ,WAAWA,WAAWqsB,UACnFtrB,oBAAkBkI,KAAKjJ,WAAW+C,QAAWkG,KAAKjJ,WAAWE,mBAAmBosB,oBACzFrjB,KAAK7E,iBAAmBrD,oBAAkBkI,KAAK7C,kBAMnD2gB,EAAS7c,UAAUqiB,WAAa,WAC5BC,eAAa3W,IAAI5M,KAAKjI,KAAKob,QAAS,QAASnT,KAAKwjB,kBAAmBxjB,MACrEujB,eAAa3W,IAAI5M,KAAKmT,QAAS,WAAYnT,KAAKwjB,kBAAmBxjB,MACnEA,KAAKyjB,eAAiB,IAAIC,iBAAe1jB,KAAKmT,SAC1CwQ,UAAW3jB,KAAKqhB,yBAAyBlG,KAAKnb,MAC9C6iB,WAAY7iB,KAAK6iB,WACjBe,UAAW,YAEX5jB,KAAKshB,gBACLthB,KAAKmT,QAAQ0Q,UAAsC,IAA3B7jB,KAAKmT,QAAQ0Q,SAAkB,EAAI7jB,KAAKmT,QAAQ0Q,WAQhF/F,EAAS7c,UAAU6iB,gBAAkB,WACjC,IAAIC,KACJ,OAAI/jB,KAAK0K,YACEqZ,GAEXA,EAAQnrB,MACJorB,OAAQ,SAAUhhB,MAAOhD,KAAMA,KAAK5H,kBAEnCN,oBAAkBkI,KAAKikB,UACxBF,EAAQnrB,MACJorB,OAAQ,UACRhhB,MAAOhD,QAGXA,KAAKkkB,kBACLH,EAAQnrB,MACJorB,OAAQ,cACRhhB,MAAOhD,QAGXA,KAAK+Q,aACLgT,EAAQnrB,MACJorB,OAAQ,QACRhhB,MAAOhD,KAAMA,KAAKgR,gBAGtBhR,KAAKI,iBACL2jB,EAAQnrB,MACJorB,OAAQ,UACRhhB,MAAOhD,QAGXA,KAAKM,cACLyjB,EAAQnrB,MACJorB,OAAQ,OACRhhB,MAAOhD,QAGXA,KAAKuY,WAAW5gB,OAAS,GACzBosB,EAAQnrB,MACJorB,OAAQ,UAAWhhB,MAAOhD,QAGlC+jB,EAAQnrB,MACJorB,OAAQ,SAAUhhB,MAAOhD,QAEzBA,KAAKmkB,kBACLJ,EAAQnrB,MACJorB,OAAQ,cAAehhB,MAAOhD,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9C4kB,EAAQnrB,MACJorB,OAAQ,SAAUhhB,MAAOhD,QAG7BA,KAAKokB,gBACLL,EAAQnrB,MACJorB,OAAQ,YAAahhB,MAAOhD,QAGhCA,KAAKqkB,gBACLN,EAAQnrB,MACJorB,OAAQ,YAAahhB,MAAOhD,QAGhCA,KAAKK,gBACL0jB,EAAQnrB,MACJorB,OAAQ,aAAchhB,MAAOhD,QAGjCA,KAAKskB,mBACLP,EAAQnrB,MACJorB,OAAQ,gBAAiBhhB,MAAOhD,QAGxCA,KAAKukB,sBAAsBR,GACpBA,IAEXjG,EAAS7c,UAAUsjB,sBAAwB,SAAUR,GAC7C/jB,KAAKkE,qBACL6f,EAAQnrB,MACJorB,OAAQ,iBACRhhB,MAAOhD,SAGXA,KAAKhE,aAAawoB,aAAexkB,KAAKhE,aAAayoB,eAAiBzkB,KAAKhE,aAAaiE,eACtF8jB,EAAQnrB,MACJorB,OAAQ,OACRhhB,MAAOhD,QAGXA,KAAK0kB,gBAAgB1kB,KAAKtI,UAC1BqsB,EAAQnrB,MACJorB,OAAQ,gBACRhhB,MAAOhD,QAGXA,KAAK2kB,gBACLZ,EAAQnrB,MACJorB,OAAQ,YACRhhB,MAAOhD,QAGXA,KAAK1B,sBACLylB,EAAQnrB,MACJorB,OAAQ,gBACRhhB,MAAOhD,QAGf+jB,EAAQnrB,MACJorB,OAAQ,SACRhhB,MAAOhD,KAAKjI,SAGpB+lB,EAAS7c,UAAUyjB,gBAAkB,SAAUhtB,GAC3C,IAAI4P,EAAQtH,KACZ,OAAOtI,EAAQktB,KAAK,SAAU5Y,GAC1B,OAAIA,EAAItU,QACG4P,EAAMod,gBAAgB1Y,EAAItU,YAE3BsU,EAAI6Y,WAAY7Y,EAAI8Y,qBAOtChH,EAAS7c,UAAU8jB,aAAe,WAC1B/kB,KAAKjI,MAAQiI,KAAKjI,KAAKob,SACvBoQ,eAAayB,OAAOhlB,KAAKjI,KAAKob,QAAS,QAASnT,KAAKwjB,oBAO7D1F,EAAS7c,UAAU6B,IAAM,SAAUC,EAAOC,GACtChD,KAAKilB,cAAejlB,KAAKilB,aAAajhB,QAAQjB,EAAOC,EAAMhD,OAM/D8d,EAAS7c,UAAUikB,OAAS,WACxB,IAAI5d,EAAQtH,KACRA,KAAKqT,UACLrT,KAAKjI,KAAKsb,SAAU,GAExB8R,iBAAgB9jB,OAAQrB,KAAKmT,SAAWnT,KAAKuM,eAC7CvM,KAAK8C,KAAK,2BACV9C,KAAKX,aAAe,IAAIqR,GAAO1Q,MAC/BA,KAAKolB,WAAa,IAAI7R,GAAiBvT,MACvCA,KAAKohB,YAAc,IAAIvR,GAAM7P,MAW7B,GATIA,KAAiB,iBACjBA,KAAKoX,kBAAmB,GAE5BpX,KAAKmJ,QbrgBK,QasgBVnJ,KAAKqlB,sBACLrlB,KAAK3G,eAAgB,EAChBvB,oBAAkBkI,KAAKjJ,aACxBiJ,KAAKslB,gBAAgBtlB,KAAKjJ,aAEzB+W,eAAe9N,KAAKoX,iBAAkB,CACvCpX,KAAKulB,WACDvlB,KAAKmT,QAAQ7K,UAAUC,SAAS,eAAiBvI,KAAKwlB,gBAAgBC,WACtEzlB,KAAKjI,KAAKytB,gBAAgBC,UAAY,gBAE1CzlB,KAAK0lB,cACL,IAAIC,EAAgBpZ,gBAAc,OAAS6G,GAAIpT,KAAKmT,QAAQC,GAAK,iBACjE9C,YAAUtQ,KAAKmT,SAAU,cACpBrb,oBAAkBkI,KAAK4lB,SAAoC,iBAAjB5lB,KAAW,SAAgD,IAA9BA,KAAK4lB,OAAOlnB,QAAQ,OAC5FsB,KAAKmT,QAAQxY,MAAMirB,OAAS5lB,KAAK4lB,QAEhC9tB,oBAAkBkI,KAAK6M,QAAkC,iBAAhB7M,KAAU,QAA+C,IAA7BA,KAAK6M,MAAMnO,QAAQ,OACzFsB,KAAKmT,QAAQxY,MAAMkS,MAAQ7M,KAAK6M,OAEpC7M,KAAKmT,QAAQxF,YAAYgY,GACzB3lB,KAAKjI,KAAK8tB,SAASF,GACnB3lB,KAAKsjB,aAETtjB,KAAK8lB,iBACL,IACIC,EAAoB/lB,KAAKjI,KAAoB,gBASjD,GAPAiI,KAAKjI,KAAoB,gBAAI,SAAUiL,EAAM1I,GACzCyrB,EAAkB/jB,MAAMsF,EAAMvP,MAExBuP,EAAM+L,SAAWvb,oBAAkBwP,EAAa,UAClDA,EAAM0e,cAAchjB,EAAM1I,IAG9BwT,cAAc9N,KAAKoX,iBAAkB,CACrC,IAAI6O,EAAO,SAAUjjB,GAAQ,OAAOsE,EAAM4e,aAAaljB,EAAMijB,IAC7DE,eAAa/b,GAAG,qBAAsB6b,EAAMjmB,QAGpD8d,EAAS7c,UAAUmlB,gBAAkB,WAC5BtuB,oBAAkBkI,KAAKjI,KAAKsuB,kBAC7BrmB,KAAKjI,KAAKsuB,gBAAgBvc,UAE9B9J,KAAKqmB,gBAAkBrmB,KAAKjI,KAAKsuB,gBAAkB,IAAIhf,GAAcrH,OAEzE8d,EAAS7c,UAAUilB,aAAe,SAAUljB,EAAMgV,GAC9C,GAAIhV,EAAKoQ,KAAOpT,KAAKmT,QAAQC,GAAK,eAAlC,CACIpT,KAAKjI,KAAOiL,EAAKjL,KAKrBiI,KAAKjI,KAAKyc,MAAMU,WAGXlV,KAAKoX,iBAINpX,KAAKjI,KAAa,UAAI,EAHtBiI,KAAKjI,KAAkB,eAAI,EAK/BiI,KAAKsmB,gBACLtmB,KAAKumB,YAAYvmB,KAAKjI,KAAKL,SAC3BsI,KAAKwmB,iBAEA1uB,oBAAkBkI,KAAKymB,kBACxBzmB,KAAKjI,KAAKqS,GAAG,mBAAoBpK,KAAKymB,gBAA8B,eAAGzmB,KAAKymB,iBAEhF,IAAK,IAAIhvB,EAAI,EAAGA,EAAIuI,KAAKtI,QAAQC,OAAQF,IACrCuI,KAAKtI,QAAQD,GAAGwU,IAAMjM,KAAKjI,KAAKL,QAAQD,GAAGwU,IAE/CjM,KAAKsjB,aACLtjB,KAAKomB,kBAELpmB,KAAKjI,KAAiB,eACtBouB,eAAaxb,IAAI,qBAAsB3K,KAAKkmB,gBAEhDpI,EAAS7c,UAAUslB,YAAc,SAAU7D,EAAagE,QACxC,IAARA,IAAkBA,EAAM,GAC5B,IAAK,IAAIjvB,EAAI,EAAGe,EAAMkqB,EAAY/qB,OAAQF,EAAIe,EAAKf,IAC3CirB,EAAYjrB,GAAGC,SACfgrB,EAAYjrB,GAAG6C,MAAQxC,oBAAkB4qB,EAAYjrB,GAAG6C,OAASosB,EAC7DhE,EAAYjrB,GAAG6C,MACnBosB,IACAA,EAAM1mB,KAAKumB,YAAY7D,EAAYjrB,GAAGC,QAASgvB,KAG/ChE,EAAYjrB,GAAG6C,MAAQxC,oBAAkB4qB,EAAYjrB,GAAG6C,OAASosB,EAC7DhE,EAAYjrB,GAAG6C,MACnBosB,KAGR,OAAOA,GAEX5I,EAAS7c,UAAUqlB,cAAgB,WAE3BtmB,KAAKhE,eACLgE,KAAKjI,KAAKiE,aAAiB,KAAIgE,KAAKhE,aAAiB,KACrDgE,KAAKjI,KAAKiE,aAAa6W,SAAW7S,KAAKhE,aAAa6W,UAExD,IAAK,IAAIpb,EAAI,EAAGA,EAAIuI,KAAKuY,WAAW5gB,OAAQF,IACxC,IAAK,IAAI0C,EAAI,EAAGA,EAAI6F,KAAKuY,WAAW9gB,GAAGC,QAAQC,OAAQwC,IACnD6F,KAAKjI,KAAKwgB,WAAW9gB,GAAGC,QAAQyC,GAAO,KAAI6F,KAAKuY,WAAW9gB,GAAGC,QAAQyC,GAAO,KAGrF,IAAS1C,EAAI,EAAGA,EAAIuI,KAAKtI,QAAQC,OAAQF,IACrCuI,KAAKjI,KAAKL,QAAQD,GAAO,KAAIuI,KAAKtI,QAAQD,GAAO,MAIzDqmB,EAAS7c,UAAUqkB,gBAAkB,SAAU3mB,GAC3C,IAAI2I,EAAQtH,KACZ,GAAIrB,aAAgB9B,OAAS8B,EAAKhH,OAAS,GAAKgH,EAAK,GAAG1B,eAAe,SACnE+C,KAAKtC,SAAWnG,EAAgByI,MAAQzB,WAAS,SAAUI,GAAQA,EACnEqB,KAAKtC,SAASC,OAAO,SAAUC,GAC3B6X,WAAS,sBAAwB7X,EAAExE,SAAUwE,EAAG0J,GAChC,IAAZ1J,EAAErD,OACF+M,EAAM7J,WAAW7E,KAAKgF,UAK9B,GAAIrG,EAAgByI,MAAO,CACvB,IAAI2mB,EAAWpoB,WAAS,SAAUyB,KAAKjJ,YACvCiJ,KAAKolB,WAAW7Q,kBAAkBoS,QAGlC3mB,KAAKolB,WAAW7Q,kBAAkB5V,IAa9Cmf,EAAS7c,UAAU2lB,mBAAqB,WACpC5mB,KACK6mB,mBACL7mB,KAAKjI,KAAK+uB,UAAY9mB,KAAK8mB,UAC3B9mB,KAAKjI,KAAKupB,cAAgBthB,KAAKshB,cAC/BthB,KAAKjI,KAAKL,QAAUsI,KAAK+mB,eAAe/mB,KAAKtI,SAC7CsI,KAAKjI,KAAKosB,iBAAmBnkB,KAAKmkB,iBAClCnkB,KAAKjI,KAAKssB,eAAiBrkB,KAAKqkB,eAChCrkB,KAAKjI,KAAKyc,MAAQxU,KAAKwU,MACvBxU,KAAKjI,KAAKivB,gBAAkBhnB,KAAKgnB,gBACjChnB,KAAKjI,KAAKgZ,YAAc/Q,KAAK+Q,YAC7B/Q,KAAKjI,KAAKiZ,aAAeiW,sBAAoBjnB,KAAKgR,cAClDhR,KAAKjI,KAAKmvB,cAAgBlnB,KAAKknB,cAC/BlnB,KAAKjI,KAAKsI,eAAiBL,KAAKK,eAChCL,KAAKjI,KAAKuI,aAAeN,KAAKM,aAC9BN,KAAKjI,KAAKI,eAAiB6H,KAAK7H,eAChC6H,KAAKjI,KAAKuG,qBAAuB0B,KAAK1B,qBACtC0B,KAAKjI,KAAK8U,MAAQ7M,KAAK6M,MACvB7M,KAAKjI,KAAK6tB,OAAS5lB,KAAK4lB,OACxB5lB,KAAKjI,KAAKovB,aAAennB,KAAKmnB,aAC9BnnB,KAAKjI,KAAKqI,gBAAkBJ,KAAKI,gBACjCJ,KAAKjI,KAAKoa,cAAgBnS,KAAKmS,cAC/BnS,KAAKjI,KAAKwI,cAAgBP,KAAKO,cAC/BP,KAAKjI,KAAKqvB,YAAcpnB,KAAKonB,YAC7BpnB,KAAKjI,KAAKsvB,eAAiBrnB,KAAKqnB,eAChCrnB,KAAKjI,KAAKmM,oBAAsBlE,KAAKkE,oBACrClE,KAAKjI,KAAKytB,gBAAkByB,sBAAoBjnB,KAAKwlB,iBACrDxlB,KAAKjI,KAAKuvB,UAAYtnB,KAAKsnB,UAC3BtnB,KAAKjI,KAAKwvB,UAAYvnB,KAAKunB,UAC3BvnB,KAAKjI,KAAK4sB,eAAiB3kB,KAAK2kB,eAChC3kB,KAAKjI,KAAKksB,QAAUgD,sBAAoBjnB,KAAKwnB,kBAC7CxnB,KAAKjI,KAAK0vB,gBAAkBznB,KAAKynB,gBACjCznB,KAAKjI,KAAKusB,kBAAoBtkB,KAAKskB,kBACnCtkB,KAAKjI,KAAKK,eAAiB6uB,sBAAoBjnB,KAAK5H,gBACpD4H,KAAKjI,KAAKkQ,kBAAoBgf,sBAAoBjnB,KAAKiI,mBACvDjI,KAAKjI,KAAK0G,aAAewoB,sBAAoBjnB,KAAKvB,cAClDuB,KAAKjI,KAAKC,eAAiBivB,sBAAoBjnB,KAAKhI,gBACpDgI,KAAKjI,KAAKwgB,WAAa0O,sBAAoBjnB,KAAKuY,YAChDvY,KAAKjI,KAAK2vB,iBAAmBT,sBAAoBjnB,KAAK0nB,kBACtD1nB,KAAKjI,KAAK0jB,UAAYwL,sBAAoBjnB,KAAKyb,WAC/Czb,KAAKjI,KAAKioB,OAASiH,sBAAoBjnB,KAAKggB,QAC5ChgB,KAAKjI,KAAK4vB,iBAAmB3nB,KAAK2nB,iBAClC3nB,KAAKjI,KAAKmsB,iBAAmB+C,sBAAoBjnB,KAAK4nB,kBACtD5nB,KAAKjI,KAAK8vB,gBAAkBZ,sBAAoBjnB,KAAK6nB,iBACrD7nB,KAAKjI,KAAKiE,aAAegE,KAAK8nB,sBAC9B9nB,KAAKjI,KAAK0a,YAAcwU,sBAAoBjnB,KAAKyS,aACjDzS,KAAKjI,KAAKqsB,eAAiB6C,sBAAoBjnB,KAAKokB,gBACpDpkB,KAAKjI,KAAKmH,WAAac,KAAKd,WAC5Bc,KAAKjI,KAAK2H,cAAgBM,KAAKN,cAC/B,IAAIqoB,EAAmB,yBACvB/nB,KAAKjI,KAAKgwB,GAAoB/nB,KAAK+nB,GAEnC/nB,KAAKjI,KAAkB,eAAI,GAE/B+lB,EAAS7c,UAAU+mB,cAAgB,SAAUhlB,GACzChD,KAAKmJ,QAAQxQ,YAAU,OAAQqK,GAAOA,IAE1C8a,EAAS7c,UAAUulB,eAAiB,WAChC,IAAIlf,EAAQtH,KACRiE,EAAWjE,KACfA,KAAKjI,KAAKkwB,aAAe,SAAUjlB,GAC1BlL,oBAAkBkL,EAAK3B,WAAY2B,EAAK3B,OAAOiH,UAAUC,SAAS,qBAChEvF,EAAK3B,OAAOiH,UAAUC,SAAS,uBAAyBvF,EAAK3B,OAAOiH,UAAUC,SAAS,kBAI9FjB,EAAM6B,QbpsBQ,eaosBqBnG,GAH/BA,EAAKkG,QAAS,GAKtBlJ,KAAKjI,KAAK8M,YAAc,SAAU7B,GACzB8K,aAGIA,cAAcxG,EAAM8P,mBACzB9P,EAAM4gB,wBAAyB,EAC/B5gB,EAAMmW,eAAgBkK,iBAAkBrgB,EAAMvP,KAAK4vB,mBAAoB,GACvErgB,EAAM4gB,wBAAyB,GAL/B5gB,EAAMqgB,iBAAmBrgB,EAAMvP,KAAK4vB,iBAOxC1jB,EAASoO,OAAO8V,EAAoBnlB,GACpCsE,EAAM6B,QAAQgf,EAAoBnlB,IAEtChD,KAAKjI,KAAKgN,cAAgB,SAAU/B,GAChCsE,EAAMqgB,iBAAmBrgB,EAAMvP,KAAK4vB,iBACpCrgB,EAAM6B,QAAQif,EAAsBplB,IAExChD,KAAKjI,KAAKswB,WAAa,SAAUrlB,GAC7BsE,EAAMsZ,oBACNtZ,EAAM6B,Qb1sBM,aa0sBqBnG,IAErChD,KAAKjI,KAAKuwB,mBAAqB,SAAUtlB,GACrCsE,EAAM+K,OAAO,gBAAiBrP,GAC9BA,EAAOsE,EAAMyM,aAEjB/T,KAAKjI,KAAKwwB,iBAAmB,SAAUvlB,GACnCsE,EAAM+K,OAAO,cAAerP,GAC5BA,EAAOsE,EAAMyM,aAEjB/T,KAAKjI,KAAKywB,eAAiB,SAAUxlB,GACjCsE,EAAM6B,QAAQyC,EAAuB5I,IAEzChD,KAAKjI,KAAK0wB,kBAAoBzoB,KAAKgoB,cAAc7M,KAAKnb,MACtDA,KAAKjI,KAAK2wB,oBAAsB1oB,KAAKgoB,cAAc7M,KAAKnb,MACxDA,KAAKjI,KAAK4wB,yBAA2B3oB,KAAKgoB,cAAc7M,KAAKnb,MAC7DA,KAAKjI,KAAK6wB,uBAAyB5oB,KAAKgoB,cAAc7M,KAAKnb,MAC3DA,KAAKjI,KAAK8wB,kBAAoB7oB,KAAKgoB,cAAc7M,KAAKnb,MACtDA,KAAKjI,KAAK8N,kBAAoB7F,KAAKgoB,cAAc7M,KAAKnb,MACtDA,KAAKjI,KAAK+wB,eAAiB9oB,KAAKgoB,cAAc7M,KAAKnb,MACnDA,KAAKjI,KAAKgxB,eAAiB/oB,KAAKgoB,cAAc7M,KAAKnb,MACnDA,KAAKjI,KAAKixB,gBAAkBhpB,KAAKgoB,cAAc7M,KAAKnb,MACpDA,KAAKjI,KAAKkxB,eAAiBjpB,KAAKgoB,cAAc7M,KAAKnb,MACnDA,KAAKjI,KAAKmxB,gBAAkBlpB,KAAKgoB,cAAc7M,KAAKnb,MACpDA,KAAKjI,KAAKoxB,aAAenpB,KAAKgoB,cAAc7M,KAAKnb,MACjDA,KAAKjI,KAAKqxB,eAAiBppB,KAAKgoB,cAAc7M,KAAKnb,MACnDA,KAAKjI,KAAKsxB,YAAcrpB,KAAKgoB,cAAc7M,KAAKnb,MAChDA,KAAKjI,KAAKuxB,SAAWtpB,KAAKgoB,cAAc7M,KAAKnb,MAC7CA,KAAKjI,KAAKwxB,WAAavpB,KAAKgoB,cAAc7M,KAAKnb,MAC/CA,KAAKjI,KAAKyxB,gBAAkBxpB,KAAKgoB,cAAc7M,KAAKnb,MACpDA,KAAKjI,KAAK0xB,WAAazpB,KAAKgoB,cAAc7M,KAAKnb,MAC/CA,KAAKjI,KAAK2xB,YAAc1pB,KAAKgoB,cAAc7M,KAAKnb,MAChDA,KAAKjI,KAAK4xB,WAAa3pB,KAAKgoB,cAAc7M,KAAKnb,MAC/CA,KAAKjI,KAAK6xB,YAAc,SAAU5mB,GAG9B,IAFA,IAAIgF,EAAOV,EAAMvI,UAEViJ,EAAKhF,EAAa,UAAGsF,UAAUC,SAAS,iBAC3CvF,EAAa,WAEjBsE,EAAM6B,QbztBO,caytBqBnG,IAEtChD,KAAKjI,KAAKopB,KAAO,WAEb,GADAld,EAASlM,KAAKqS,GAAG,cAAenG,EAASmiB,gBAAiBniB,IACrDnM,oBAAkBwP,EAAM2d,cAAe,CAExC3d,EAAM2d,aAAe3d,EAAMvP,KAAiB,aAAI,IAAI8xB,EAAWviB,EAAMvP,QAG7EiI,KAAKjI,KAAK+xB,cAAgB9pB,KAAKgoB,cAAc7M,KAAKnb,MAClDA,KAAKjI,KAAKgyB,cAAgB/pB,KAAKgoB,cAAc7M,KAAKnb,MAClDA,KAAKgqB,6BACLhqB,KAAKiqB,qBACLjqB,KAAKkqB,2BACLlqB,KAAKmqB,yBACLnqB,KAAKoqB,qBACLpqB,KAAKqqB,sBAETvM,EAAS7c,UAAUqpB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,IAAIrwB,EAAI,EAAGA,EAAIowB,EAAW/qB,MAAM7H,OAAQwC,IACzCqwB,EAAcla,YAAUia,EAAW/qB,MAAMrF,IAAK,iBAAmBkT,eAAakd,EAAW/qB,MAAMrF,IAAK,kBAI5G2jB,EAAS7c,UAAUwpB,cAAgB,WAC/B,MAAoB,SAAhBzqB,KAAK4lB,SAA8D,IAAzC5lB,KAAK4lB,OAAO9d,WAAWpJ,QAAQ,MAQjEof,EAAS7c,UAAU+oB,2BAA6B,WAC5C,IAAI1iB,EAAQtH,KACRiE,EAAWjE,KACfA,KAAKjI,KAAK2yB,UAAY,SAAU1nB,GAK5B,GAJAsE,EAAMqjB,kBAAkB3nB,GACxBsE,EAAMsZ,oBACNtZ,EAAMsjB,aAAatjB,EAAMvI,WACzBuI,EAAM+K,OAAO,eAAgBrP,GACzBnM,EAAayQ,KAAW1N,EAAU0N,KAAWA,EAAMyN,gBAAiB,CACpE,IAAI8V,EAAMlyB,YAAU,sBAAuB2O,GAAO3J,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE2X,YAAYC,aACtB7d,OACH8d,WAAS,gCAAiCoV,EAAM,GAAIvjB,GAExD,GAAIA,EAAMmjB,iBAAmBnjB,EAAMjO,cAI/B,IAAK,IAHDyxB,OAAY,EACZ9iB,EAAOV,EAAM6P,kBAAkBnP,KAE1BvQ,GADTqzB,KAAetiB,MAAM5F,KAAKoF,IACHrQ,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAASqwB,EAAUrzB,IAAK,CACrBqzB,EAAUrzB,GAAG0T,oBACb7D,EAAMgjB,cAAcQ,EAAUrzB,IAAI,GAEtC,MAIZ6P,EAAM6B,Qbv0BK,Yau0BqBnG,GAChCsE,EAAMjO,eAAgB,GAE1B2G,KAAKjI,KAAK2M,gBAAkB,SAAU1B,GAClC,IACInD,EAAclH,YAAU,SAAUqK,GACtC,GAAInM,EAAaoN,KAAcrK,EAAUqK,IAA6B,SAAhBpE,EAClDoE,EAASoO,OAAO,oBAAqBrP,GACrCA,EAAQiB,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASvG,SAAS/F,QAAgBiC,EAAUqK,IAAaA,EAASlN,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAKoK,EAASlN,WAClBkN,EAASmhB,WAAW7Q,kBAAkB1a,EAAG9C,WAAW6E,MACpDoH,EAAKsQ,OAASrP,EAASlM,KAAKhB,WAAqB,WAAE6E,KAAOqI,EAASvG,SAWvE,GATK7G,EAAaoN,IAAc1M,EAAgByI,OAAUlI,oBAAkBmM,EAASlN,cAC7EiJ,KAAKga,YACLvE,WAAS,cAAc,EAAMzS,GAEjCiB,EAASoO,OAAO,gBAAiBrP,IAGrCzG,SAAOyG,EAAMiB,EAAS8P,cAEjB/T,KAAKga,WAAY,CAClB,IAAI+Q,EAAoB,IAAIC,WAI5B,OAHA/mB,EAASkF,QAAQkH,EAAwBrN,EAAM,SAAUioB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf/qB,KAAKjI,KAAK+K,IAAM,SAAUG,EAAMD,GAC5BsE,EAAM2d,cAAe3d,EAAM2d,aAAaniB,IAAIG,EAAMD,KAG1D8a,EAAS7c,UAAUopB,mBAAqB,WACpC,IACI1kB,EADA2B,EAAQtH,KAER8N,cAAc9N,KAAKoX,mBACdtf,oBAAkBkI,KAAKjI,KAAK4N,aAC7BA,EAAY3F,KAAKjI,KAAK4N,YAG9B3F,KAAKjI,KAAKiN,aAAe,SAAUhC,GAC/B,IAAImoB,EAAkB,IAAIH,WAO1B,OANA1jB,EAAM6B,QAAQiiB,EAAqBpoB,EAAM,SAAUqoB,GAC1CA,EAAYniB,QACb5B,EAAM+K,OAAO+Y,EAAqBpoB,GAEtCmoB,EAAgBD,QAAQG,KAErBF,GAEXnrB,KAAKjI,KAAKuzB,cAAgB,SAAUtoB,GAChC,IAAImoB,EAAkB,IAAIH,WAI1B,OAHA1jB,EAAM6B,QAAQxQ,YAAU,OAAQqK,GAAOA,EAAM,SAAUuoB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEXnrB,KAAKjI,KAAK4N,UAAY,SAAU3C,GACxB8K,cAAcxG,EAAM8P,kBAChBzR,GAAkC,mBAAdA,GACpBA,EAAU3D,MAAMsF,GAAQtE,IAGhC,CAAA,GAAKlL,oBAAkBkL,EAAKnE,OAAQmE,EAAKnE,IAAIyJ,UAAUC,SAAS,gBAAhE,CAIA,IAAI4iB,EAAkB,IAAIH,WAI1B,OAHA1jB,EAAM6B,QAAQqiB,GAAkBxoB,EAAM,SAAUyoB,GAC5CN,EAAgBD,QAAQO,KAErBN,EAPHnoB,EAAKkG,QAAS,KAU1B4U,EAAS7c,UAAUkpB,uBAAyB,WACxC,IAIInkB,EACAF,EALAwB,EAAQtH,KAcZ,GARI8N,cAAc9N,KAAKoX,mBACdtf,oBAAkBkI,KAAKjI,KAAKiO,YAC7BA,EAAWhG,KAAKjI,KAAKiO,UAEpBlO,oBAAkBkI,KAAKjI,KAAK+N,YAC7BA,EAAW9F,KAAKjI,KAAK+N,WAGzB9F,KAAK9D,YAAc4R,cAAc9N,KAAKoX,iBAAkB,CACxDpX,KAAKjI,KAAKqS,GAdG,cAcYpK,KAAK9D,WAAuB,WAAG8D,KAAK9D,YAC7D,IAAIwvB,EAAW1rB,KAAKjI,KAAkB,cAAE4zB,cAAc,eACtDD,EAASruB,OAAO,EAAG,EAAGquB,EAASE,OAEnC5rB,KAAKjI,KAAK8L,gBAAkB,SAAUb,GAC9BsE,EAAMukB,iBACNvkB,EAAMukB,iBAAkB,EACxBvkB,EAAMvP,KAAKhB,YAAeuc,OAAQhM,EAAM5J,SAAU4Q,MAAO/P,WAAS,QAAS+I,EAAMvP,KAAKhB,cAGtFuQ,EAAM6B,QAAQ2iB,EAAwB9oB,IAG9ChD,KAAKjI,KAAK+N,SAAW,SAAU9C,GAM3B,GALI8K,cAAcxG,EAAM8P,kBAChBtR,GAAgC,mBAAbA,GACnBA,EAAS9D,MAAMsF,GAAQtE,IAG3BsE,EAAMvP,KAAKg0B,oBAAqB,CAChC,IAAIC,OAAe,EACnBA,EAAe1kB,EAAMvP,KAAKk0B,kBAAkBC,YAAY/Y,QAAQmE,uBAAuB,cAAc,IAChGxf,oBAAkBk0B,IAAiBA,EAAa5Y,KAAO9L,EAAM6L,QAAQC,GAAK,6BAC3EpQ,EAAKkG,QAAS,GAGtB,IAAIiiB,EAAkB,IAAIH,WAU1B,OATA1jB,EAAM6B,QAAQgjB,GAAiBnpB,EAAM,SAAUopB,GACvCte,eAAexG,EAAM8P,mBACrBgV,EAAa7sB,KAAO8sB,aAAWD,EAAa7sB,OAE3C6sB,EAAaljB,QACd5B,EAAM+K,OAAO8Z,GAAiBC,GAElCjB,EAAgBD,QAAQkB,KAErBjB,GAEXnrB,KAAKjI,KAAKgO,UAAY,SAAU/C,GAC5BsE,EAAM6B,QAAQmjB,GAAkBtpB,GAChCsE,EAAM+K,OAAOia,GAAkBtpB,IAEnChD,KAAKjI,KAAKiO,SAAW,SAAUhD,GACvB8K,cAAcxG,EAAM8P,kBAChBpR,GAAgC,mBAAbA,GACnBA,EAAShE,MAAMsF,GAAQtE,IAG/B,IACIupB,EAAU,IAAIvB,WAGlB,OAFAhoB,EAAS,QAAIupB,EACbjlB,EAAM+K,OAAOma,GAAiBxpB,GACvBupB,GAEXvsB,KAAKjI,KAAKoO,SAAW,SAAUnD,GAC3BsE,EAAM6B,QAAQsjB,GAAiBzpB,GAC/BsE,EAAM+K,OAAOoa,GAAiBzpB,IAElChD,KAAKjI,KAAKuO,gBAAkB,SAAUtD,GAClCsE,EAAM6B,QAAQujB,GAAwB1pB,GACtCsE,EAAM+K,OAAOqa,GAAwB1pB,IAEzChD,KAAKjI,KAAKsO,eAAiB,SAAUrD,GACjCsE,EAAM6B,QAAQwjB,GAAuB3pB,GACrCsE,EAAM+K,OAAOsa,GAAuB3pB,IAExChD,KAAKjI,KAAKkO,YAAc,SAAUjD,GAC9BsE,EAAM6B,QAAQyjB,GAAoB5pB,GAClCsE,EAAM+K,OAAOua,GAAoB5pB,IAErChD,KAAKjI,KAAKqO,kBAAoB,SAAUpD,GACpCsE,EAAM6B,QAAQ0jB,GAA0B7pB,GACxCsE,EAAM+K,OAAOwa,GAA0B7pB,IAE3ChD,KAAKjI,KAAKmO,YAAc,SAAUlD,GACE,SAA5BsE,EAAMtL,aAAaC,MACnBqL,EAAM6B,QAAQ2jB,GAAoB9pB,GAEtCsE,EAAM+K,OAAOya,GAAoB9pB,KAGzC8a,EAAS7c,UAAU0pB,kBAAoB,SAAU3nB,GAC7C,IAAIsE,EAAQtH,KACR8N,eAAe9N,KAAKoX,iBACpB2V,WAAW,WACPzlB,EAAM0lB,sBAAsBhqB,IAC7B,KAGHhD,KAAKgtB,sBAAsBhqB,IAGnC8a,EAAS7c,UAAU4lB,iBAAmB,WAClC,IAAI9vB,EAAa,aAOjB,GAAIiJ,KAAKjJ,YAAcQ,EAAgByI,MAAO,CAC1C,IAAIrB,EAAOqB,KAAKtC,SACZuvB,EAAY1uB,WAAS,QAASyB,KAAKjJ,YACvCiJ,KAAKjI,KAAKhB,YAAeuc,OAAQ3U,EAAM2P,MAAO2e,QAG9CjtB,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWm2B,aAAcltB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SAOb,GALIoQ,cAAc9N,KAAKjJ,sBAAsBC,gBACzCgJ,KAAKjI,KAAKhB,WAAsB,YAAIiJ,KAAKjJ,WAAsB,YAC/DiJ,KAAKjI,KAAKhB,WAAyB,eAAIiJ,KAAKjJ,WAAyB,eACrEiJ,KAAKjI,KAAKhB,WAAc,IAAIiJ,KAAKjJ,WAAc,KAE/CiJ,KAAKjJ,sBAAsBC,gBAAgBgJ,KAAKjJ,WAAWA,WAAWqsB,SAAWpjB,KAAKjJ,WAAW+C,OAAQ,CACzGkG,KAAKjI,KAAKhB,WAAWA,GAAY6E,KAAO7B,EAAYiG,KAAKjJ,WAAWA,GAAY6E,MAChFoE,KAAKjI,KAAKhB,WAAgB,MAAIiJ,KAAKjJ,WAAW+C,MAC9C,IAAIqzB,EAAOntB,KAAKjI,KAAKhB,WAChBe,oBAAkBkI,KAAKjI,KAAKhB,WAAgB,QAC7CiJ,KAAKjI,KAAKhB,WAAgB,MAAEqe,KAAK,SAAUxX,GACvCuvB,EAAKp2B,GAAYqsB,SAAU,EAC3B+J,EAAoB,iBAAI,EACxBA,EAAKp2B,GAAY6E,KAAOgC,EAAE0V,OAC1B6Z,EAAY,QAAI,IAAIC,kBAKpCtP,EAAS7c,UAAUipB,yBAA2B,WAC1C,IACItlB,EADA0C,EAAQtH,KAER8N,cAAc9N,KAAKoX,mBACdtf,oBAAkBkI,KAAKjI,KAAK6M,kBAC7BA,EAAiB5E,KAAKjI,KAAK6M,iBAGnC5E,KAAKjI,KAAK4M,YAAc,SAAU3B,GACL,YAArBA,EAAKnD,aAA6BmD,EAAK3B,QAAU2B,EAAK3B,OAAOygB,eAC7D9e,EAAK3B,OAAOygB,cAAcxZ,UAAUC,SAAS,yBAC7CvF,EAAKkG,QAAS,GAGE,YADFvQ,YAAU,cAAeqK,IAEvCsE,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,eAAiBrX,WAAYgI,IACrCnM,EAAayQ,IAAWxP,oBAAkBwP,EAAM6G,eAAkB5W,EAAgB+P,IAClC,IAA7CA,EAAMvP,KAAKK,eAAeV,QAAQC,QAAyD,IAAzC2P,EAAMvP,KAAKC,eAAeC,IAAIN,SACpF2P,EAAM+K,OAAO,gBAAkB3U,SAAU4J,EAAMvP,KAAKhB,aACpDuQ,EAAMvP,KAAKhB,WAAauQ,EAAMyM,YAAYT,QAE9C,IAAI6X,EAAkB,IAAIH,WAC1B,GAAIld,cAAmC,WAArB9K,EAAKnD,cAA6ByH,EAAM8P,iBAAkB,CAExEpU,EAAS,KAAIA,EAAS,KAAE,GAe5B,OAbAsE,EAAM6B,QAAQkkB,EAAoBrqB,EAAM,SAAUiX,GAC9C,GAAInM,cAAyC,WAA3BmM,EAAWpa,cAA6ByH,EAAM8P,iBAAkB,CAE9E6C,EAAe,MAAKA,EAAe,MAElCA,EAAW/Q,QACZ5B,EAAM+K,OAAOmZ,GAAkBvR,GAE/BnM,cAAyC,cAA3BmM,EAAWpa,cAAgCyH,EAAM8P,mBAC/D6C,EAAWpb,IAAMwtB,aAAWpS,EAAWpb,MAE3CssB,EAAgBD,QAAQjR,KAErBkR,GAEXnrB,KAAKjI,KAAK6M,eAAiB,SAAU5B,GACjC,GAAI8K,cAAcxG,EAAM8P,kBAAyC,oBAArBpU,EAAKnD,YAAmC,CAEhF,IAAK,IADDmI,EAAOV,EAAMvI,UACRtH,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAAK,EAC9BuQ,EAAKvQ,GAAG6Q,UAAUC,SAAS,uBAAyBP,EAAKvQ,GAAG6Q,UAAUC,SAAS,wBAC9EjB,EAAM4J,mBAA0C,WAArBlO,EAAKnD,YAA4BwN,eAAarF,EAAKvQ,IAAK,qBAChF4V,eAAarF,EAAKvQ,IAAK,sBAC1B6P,EAAM4J,mBAA0C,WAArBlO,EAAKnD,YAA4ByQ,YAAUtI,EAAKvQ,IAAK,sBAC7E6Y,YAAUtI,EAAKvQ,IAAK,sBAE5B,IAAI+H,EAAQwI,EAAKvQ,GAAGgR,iBAAiB,cACjC6kB,EAAa9tB,EAAM8H,EAAM7H,iBAAiB6X,uBAAuB,sBAAsB,IACvF9X,EAAM8H,EAAM7H,iBAAiB6X,uBAAuB,oBAAoB,GACxEgW,IACChmB,EAAM4J,mBAA0C,WAArBlO,EAAKnD,YAA4BwN,eAAaigB,GAAa,oBACnFjgB,eAAaigB,GAAa,sBAC7BhmB,EAAM4J,mBAA0C,WAArBlO,EAAKnD,YAA4ByQ,YAAUgd,GAAa,sBAChFhd,YAAUgd,GAAa,qBAG/B1oB,GAA4C,mBAAnBA,GACzBA,EAAe5C,MAAMsF,GAAQtE,IAiBrC,GAdAsE,EAAM+K,OAAO,iBAAkBrP,GAC/BsE,EAAMsZ,oBACNtZ,EAAMimB,sBACmB,YAArBvqB,EAAKnD,aACLyH,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,kBAAoBrX,WAAYgI,IACpB,QAArBA,EAAKnD,aAAgE,QAAtCyH,EAAMtL,aAAaQ,gBAAkE,WAAtC8K,EAAMtL,aAAaQ,gBACjG8K,EAAM+K,OAAOmb,GAAiBxqB,GAET,cAArBA,EAAKnD,aACLyH,EAAM+K,OAAOwJ,GAAkB7Y,GAEnCsE,EAAM+K,OAAO,oBAAqBrP,GAC9B8K,cAAmC,WAArB9K,EAAKnD,cAA6ByH,EAAM8P,iBAAkB,CAExEpU,EAAS,KAAIA,EAAS,KAAE,GAE5BsE,EAAM6B,QAAQmP,EAAuBtV,KAG7C8a,EAAS7c,UAAUgpB,mBAAqB,WACpC,IAAI3iB,EAAQtH,KACRiE,EAAWjE,KACfA,KAAKjI,KAAK8N,kBAAoB,SAAU7C,GACpCsE,EAAM6B,QAAQskB,GAA0BzqB,GACxCsE,EAAM+K,OAAOob,GAA0BzqB,IAE3ChD,KAAKjI,KAAKgP,gBAAkB,SAAU/D,GAClCsE,EAAM+K,OAAO,kBAAmBrP,GAChCsE,EAAM6B,QAAQukB,GAAwB1qB,IAE1ChD,KAAKjI,KAAKyM,aAAe,SAAUxB,GAC3BlL,oBAAkBkI,KAAKga,YACvBvE,WAAS,cAAc,EAAOzS,GAG9ByS,WAAS,aAAczV,KAAKga,WAAYhX,GAE5CiB,EAAS5E,aAAayR,YAAY9N,IAEtChD,KAAKjI,KAAK0M,cAAgB,SAAUzB,GAC5BlL,oBAAkBkI,KAAKga,YACvBvE,WAAS,cAAc,EAAOzS,GAG9ByS,WAAS,aAAczV,KAAKga,WAAYhX,GAE5CiB,EAAS5E,aAAaC,WAAW0D,IAErChD,KAAKjI,KAAK0N,iBAAmB,SAAUzC,GACnCsE,EAAM+K,OAAOsb,EAAyB3qB,GACtCsE,EAAM6B,QAAQwkB,EAAyB3qB,IAE3ChD,KAAKjI,KAAKyN,gBAAkB,SAAUxC,GAClCsE,EAAM+K,OAAOub,EAAwB5qB,GACrCsE,EAAM6B,QAAQykB,EAAwB5qB,IAE1ChD,KAAKjI,KAAK0M,cAAgB,SAAUzB,GAChCsE,EAAMjI,aAAaC,WAAW0D,KAGtC8a,EAAS7c,UAAUmpB,mBAAqB,WACpC,IAAI9iB,EAAQtH,KACRiE,EAAWjE,KACfA,KAAKjI,KAAKiP,mBAAqB,SAAUhE,GACrCiB,EAASkF,QAAQ0kB,GAA2B7qB,IAEhDhD,KAAKjI,KAAK+1B,aAAe,SAAU9qB,GAC/BiB,EAASkF,Qb/jCK,ea+jCwBnG,IAE1ChD,KAAKjI,KAAKg2B,QAAU,SAAU/qB,GACtBsE,EAAMvP,KAAKi2B,OACXhrB,EAAKkG,QAAS,GAGlBjF,EAASoO,OAAO4b,GAAmBjrB,GACnCiB,EAASkF,Qb7kCA,Ua6kCwBnG,KAErChD,KAAKjI,KAAKm2B,QAAU,SAAUlrB,GACtBsE,EAAMvP,KAAKi2B,OACXhrB,EAAKkG,QAAS,GAGlBjF,EAASoO,OAAO8b,GAAmBnrB,GACnCA,EAAKkG,QAAS,KAOtB4U,EAAS7c,UAAUskB,SAAW,WAC1BvlB,KAAK4mB,qBACL5mB,KAAKwmB,iBACL/Q,WAAS,qBAAsBzV,KAAKouB,mBAAoBpuB,KAAKjI,MAE7D0d,WAAS,mBAAoBzV,KAAQ,iBAAGA,KAAKjI,OAMjD+lB,EAAS7c,UAAUokB,oBAAsB,WACrC,IAAKrlB,KAAKtI,QAAQC,SAAYqI,KAAKolB,WAAW9Q,YAAc7b,OAAOC,KAAKsH,KAAKjJ,YAAYY,OAAS,CAC9FqI,KAAKtI,WACL,IAAIoB,OAAS,EAIbA,EAASkH,KAAKjJ,WAAW,GAGzB,IAAK,IADD2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/DuI,KAAK1C,aAAc0C,KAAK7C,iBAAiBuB,QAAQhG,EAAKjB,KACvDuI,KAAKtI,QAAQkB,KAAKF,EAAKjB,MAKvCqmB,EAAS7c,UAAU6mB,oBAAsB,WACrC,IAAI5nB,KAYJ,OAVAA,EAAKskB,YAAcxkB,KAAKhE,aAAawoB,YACrCtkB,EAAKD,aAAeD,KAAKhE,aAAaiE,aACtCC,EAAKukB,cAAgBzkB,KAAKhE,aAAayoB,cACvCvkB,EAAK1D,eAAsD,WAArCwD,KAAKhE,aAAaQ,eAA8B,SAAW,MACjF0D,EAAKmuB,oBAAsBruB,KAAKhE,aAAaqyB,oBAC7CnuB,EAAKouB,kBAAoBtuB,KAAKhE,aAAasyB,kBAC3CpuB,EAAK2S,SAAW7S,KAAKhE,aAAa6W,SAClC3S,EAAKquB,wBAA0BvuB,KAAKhE,aAAauyB,wBACjDruB,EAAS,KAAIF,KAAKhE,aAAiB,KACnCkE,EAAKsuB,OAASxuB,KAAKhE,aAAawyB,OACxBxuB,KAAKhE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDiE,EAAKjE,KAAO+D,KAAKhE,aAAaC,KAC9B,MACJ,IAAK,MACDiE,EAAKjE,KAAO,SACZ,MACJ,IAAK,OACDiE,EAAKjE,KAAO,SACZiE,EAAKouB,mBAAoB,EAGjC,OAAOpuB,GAMX4d,EAAS7c,UAAU2mB,eAAiB,WAChC,GAAI5nB,KAAKkkB,iBAAkB,CAEvB,IAAK,IADD9N,KACK3e,EAAI,EAAGA,EAAIuI,KAAKkkB,iBAAiBvsB,OAAQF,IAC9C,OACQuI,KAAKkkB,iBAAiBzsB,IAC1B,IAAK,SACL,KAAKskB,mBAAiB0D,OAClBrJ,EAAMxd,MAAO61B,KAAMzuB,KAAK8f,KAAK4O,YAAY,UACrCrtB,OAAQ,aAAc+R,GAAIpT,KAAKmT,QAAQC,GAAK,4BAC5CgD,QAAUqY,KAAMzuB,KAAK8f,KAAK4O,YAAY,SAAUtb,GAAI,UAAaqb,KAAMzuB,KAAK8f,KAAK4O,YAAY,SAAUtb,GAAI,YAC/G,MACJ,QACIgD,EAAMxd,KAAKoH,KAAKkkB,iBAAiBzsB,IAG7C,OAAO2e,EAGP,OAAO,MAOf0H,EAAS7c,UAAUumB,eAAiB,WAChC,GAAIxnB,KAAKikB,QAAS,CAEd,IAAK,IADD7N,KACK3e,EAAI,EAAGA,EAAIuI,KAAKikB,QAAQtsB,OAAQF,IACrC,OACQuI,KAAKikB,QAAQxsB,IACjB,IAAK,SACL,KAAKqkB,cAAY6S,OACbvY,EAAMxd,KAAK,UACX,MACJ,IAAK,QACL,KAAKkjB,cAAYjM,MACbuG,EAAMxd,KAAK,SACX,MACJ,IAAK,YACL,KAAKkjB,cAAY4D,UACb,IAAIkP,EAAc5uB,KAAK8f,KAAK4O,YAAY,aACxCtY,EAAMxd,MAAO61B,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAYzb,GAAIpT,KAAKmT,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAK0I,cAAY6D,YACb,IAAImP,EAAU9uB,KAAK8f,KAAK4O,YAAY,eACpCtY,EAAMxd,MAAO61B,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAczb,GAAIpT,KAAKmT,QAAQC,GAAK,6BAE1E,MACJ,IAAK,SACL,KAAK0I,cAAY8D,UACb,IAAImP,EAAgB/uB,KAAK8f,KAAK4O,YAAY,aAC1CtY,EAAMxd,MACF61B,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAYzb,GAAIpT,KAAKmT,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAK0I,cAAY+D,WACb,IAAImP,EAAiBhvB,KAAK8f,KAAK4O,YAAY,cAC3CtY,EAAMxd,MACF61B,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAazb,GAAIpT,KAAKmT,QAAQC,GAAK,yBAEnD,MACJ,QACIgD,EAAMxd,KAAKoH,KAAKikB,QAAQxsB,IAGpC,OAAO2e,EAGP,OAAO,MAOf0H,EAAS7c,UAAU8lB,eAAiB,SAAUrvB,GAC1C,IAAIiI,EAASjI,EACbsI,KAAK0iB,eAIL,IAAK,IAHDuM,EACAC,EACAC,KACK13B,EAAI,EAAGA,EAAIkI,EAAOhI,OAAQF,IAAK,CACpC,IAAIib,EAAa1S,KAAKjI,KAAK0Z,eAAe9R,EAAOlI,GAAGwU,KAGpD,GAFAijB,EAAaxc,MACbuc,KAC+B,iBAApBjvB,KAAKtI,QAAQD,GACpBy3B,EAAW5qB,MAAQ2qB,EAAe3qB,MAAQtE,KAAKtI,QAAQD,QAGvD,IAAK,IAAI23B,EAAK,EAAGC,EAAK52B,OAAOC,KAAKiH,EAAOlI,IAAK23B,EAAKC,EAAG13B,OAAQy3B,IAAM,CAChE,IAAI5R,EAAO6R,EAAGD,GACV33B,IAAMuI,KAAKP,iBAA4B,aAAT+d,EAC9ByR,EAAezR,GAAQ7d,EAAOlI,GAAG+lB,GAGjC0R,EAAW1R,GAAQyR,EAAezR,GAAQ7d,EAAOlI,GAAG+lB,GAI5D7d,EAAOlI,GAAGC,QACVsI,KAAK+mB,eAAervB,EAAQD,GAAGC,SAG/BsI,KAAK0iB,YAAY9pB,KAAK,IAAIkH,EAAOmvB,IAErCE,EAAqBv2B,KAAKs2B,GAE9B,OAAOC,GAQXrR,EAAS7c,UAAUquB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,IAFDC,GAAiB,EAEZL,EAAK,EAAGM,EAHAj3B,OAAOC,KAAK62B,GAGeH,EAAKM,EAAa/3B,OAAQy3B,IAAM,CACxE,IAAI5R,EAAOkS,EAAaN,GACxB,OAAQ5R,GACJ,IAAK,UACK1P,cAAc9N,KAAKoX,kBAAoBpX,KAAkB,gBAC3DA,KAAKjI,KAAKL,QAAUsI,KAAK+mB,eAAe/mB,KAAKtI,UAEjD,MACJ,IAAK,kBACDsI,KAAKjI,KAAK43B,iBACV,MACJ,IAAK,cACD3vB,KAAKjI,KAAKgZ,YAAc/Q,KAAK+Q,YAC7B,MACJ,IAAK,eACD/Q,KAAKjI,KAAKiZ,aAAeiW,sBAAoBjnB,KAAKgR,cAClDye,GAAiB,EACjB,MACJ,IAAK,uBACDzvB,KAAKjI,KAAKuG,qBAAuB0B,KAAK1B,qBACtC,MACJ,IAAK,UACD0B,KAAKjI,KAAKksB,QAAUjkB,KAAKwnB,iBACzB,MACJ,IAAK,iBACDxnB,KAAKjI,KAAK4sB,eAAiB3kB,KAAK2kB,eAChC,MACJ,IAAK,oBACD3kB,KAAKjI,KAAKkQ,kBAAoBgf,sBAAoBjnB,KAAKiI,mBACvD,MACJ,IAAK,eACDjI,KAAKjI,KAAKuI,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKjI,KAAK63B,kBAAoB5vB,KAAK4vB,kBACnC,MACJ,IAAK,eACD5vB,KAAKjI,KAAK0G,aAAewoB,sBAAoBjnB,KAAKvB,cAClD,MACJ,IAAK,iBACDuB,KAAKjI,KAAKC,eAAiBivB,sBAAoBjnB,KAAKhI,gBACpD,MACJ,IAAK,iBACDgI,KAAKjI,KAAKI,eAAiB6H,KAAK7H,eAChC,MACJ,IAAK,iBACD6H,KAAKjI,KAAKK,eAAiB6uB,sBAAoBjnB,KAAK5H,gBACpD,MACJ,IAAK,iBACD4H,KAAKjI,KAAKsI,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKjI,KAAKmM,oBAAsBlE,KAAKkE,oBACrC,MACJ,IAAK,aACDlE,KAAKjI,KAAKwgB,WAAa0O,sBAAoBjnB,KAAKuY,YAChD,MACJ,IAAK,aAID,GAHAvY,KAAKsa,cAAiBta,KAAKjJ,sBAAsBC,iBAAkBc,oBAAkBkI,KAAKjJ,WAAW+C,QAC9FkG,KAAKjJ,WAAWE,mBAAmBosB,oBAC1CrjB,KAAKslB,gBAAgBtlB,KAAKjJ,YACtBiJ,KAAKsa,YAAa,CAClB,GAAI/iB,EAAgByI,MAAO,CACvB,IAAIsO,EAAQ/P,WAAS,QAASyB,KAAKjJ,YACnCiJ,KAAKjI,KAAKhB,YAAeuc,OAAQtT,KAAKtC,SAAU4Q,MAAOA,QAGvDtO,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWm2B,aAAcltB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SAETsC,KAAK1B,uBACL0B,KAAKjI,KAAKmhB,cAAc2W,qBAAsB,QAIlD7vB,KAAK6mB,mBACD7mB,KAAK1B,uBACL0B,KAAKjI,KAAKmhB,cAAczO,sBACxBzK,KAAKjI,KAAKmhB,cAAc4W,cAAc,MACtC9vB,KAAKjI,KAAKmhB,cAAc6W,eAGhC,MACJ,IAAK,QACD/vB,KAAKjI,KAAKyc,MAAQxU,KAAKwU,MACvB,MACJ,IAAK,oBACG+a,EAAQ/R,GACRxd,KAAKwhB,cAGLxhB,KAAKuhB,YAET,MACJ,IAAK,qBACDvhB,KAAKjI,KAAKi4B,UACV,MACJ,IAAK,YACDhwB,KAAKjI,KAAKwvB,UAAYvnB,KAAKunB,UAC3B,MACJ,IAAK,cACDvnB,KAAKjI,KAAK0a,YAAcwU,sBAAoBjnB,KAAKyS,aACjD,MACJ,IAAK,aACDzS,KAAKjI,KAAKmH,WAAac,KAAKd,WAC5B,MACJ,IAAK,gBACDc,KAAKjI,KAAK2H,cAAgBM,KAAKN,cAC/B,MACJ,IAAK,YACDM,KAAKjI,KAAKuvB,UAAYtnB,KAAKsnB,UAC3B,MACJ,IAAK,SACIxvB,oBAAkBkI,KAAK4lB,SAAoC,iBAAjB5lB,KAAW,SAAgD,IAA9BA,KAAK4lB,OAAOlnB,QAAQ,OAC5FsB,KAAKmT,QAAQxY,MAAMirB,OAAS5lB,KAAK4lB,QAErC5lB,KAAKjI,KAAK6tB,OAAS5lB,KAAK4lB,OACxB,MACJ,IAAK,QACI9tB,oBAAkBkI,KAAK6M,QAAkC,iBAAhB7M,KAAU,QAA+C,IAA7BA,KAAK6M,MAAMnO,QAAQ,OACzFsB,KAAKmT,QAAQxY,MAAMkS,MAAQ7M,KAAK6M,OAEpC7M,KAAKjI,KAAK8U,MAAQ7M,KAAK6M,MACvB,MACJ,IAAK,SACD7M,KAAKjI,KAAKioB,OAAShgB,KAAKggB,OACxB,MACJ,IAAK,mBACDhgB,KAAKjI,KAAK4vB,iBAAmB3nB,KAAK2nB,iBAClC,MACJ,IAAK,eACD3nB,KAAKjI,KAAKovB,aAAennB,KAAKmnB,aAC9B,MACJ,IAAK,cACDnnB,KAAKjI,KAAKqvB,YAAcpnB,KAAKonB,YAC7B,MACJ,IAAK,iBACDpnB,KAAKjI,KAAKsvB,eAAiBrnB,KAAKqnB,eAChC,MACJ,IAAK,mBACDrnB,KAAKjI,KAAKosB,iBAAmBnkB,KAAKmkB,iBAClC,MACJ,IAAK,iBACDnkB,KAAKjI,KAAKssB,eAAiBrkB,KAAKqkB,eAChC,MACJ,IAAK,YACDrkB,KAAKjI,KAAK+uB,UAAY9mB,KAAK8mB,UAC3B,MACJ,IAAK,kBACD9mB,KAAKjI,KAAKqI,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKjI,KAAKwI,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKjI,KAAK2vB,iBAAmBT,sBAAoBjnB,KAAK0nB,kBACtD,MACJ,IAAK,gBACD1nB,KAAKjI,KAAKoa,cAAgB8U,sBAAoBjnB,KAAKmS,eACnDnS,KAAKjI,KAAKi4B,UACV,MACJ,IAAK,mBACDhwB,KAAKjI,KAAKmsB,iBAAmBlkB,KAAK4nB,iBAClC,MACJ,IAAK,oBACD5nB,KAAKjI,KAAKusB,kBAAoBtkB,KAAKskB,kBACnC,MACJ,IAAK,iBACDtkB,KAAKjI,KAAKqsB,eAAiB6C,sBAAoBjnB,KAAKokB,gBACpD,MACJ,IAAK,kBACDpkB,KAAKjI,KAAK8vB,gBAAkBZ,sBAAoBjnB,KAAK6nB,iBACrD,MACJ,IAAK,eAMD,GALI7nB,KAAKjI,KAAKi2B,QAA0C,WAAhChuB,KAAKjI,KAAKiE,aAAaC,MAAqBszB,EAAQ/R,GAAMvhB,OACtD,SAAvBszB,EAAQ/R,GAAMvhB,MAA0C,QAAvBszB,EAAQ/R,GAAMvhB,OAChD+D,KAAKjI,KAAKk4B,YAEdjwB,KAAKjI,KAAKiE,aAAegE,KAAK8nB,sBAC1B9nB,KAAKjI,KAAKiE,aAAaiE,aAAc,CAErCD,KAAK9D,WAAoB,WAAI,GAIrCuzB,GACAzvB,KAAKjI,KAAKi4B,YAStBlS,EAAS7c,UAAU6I,QAAU,WACzB9J,KAAKkwB,iBACLlwB,KAAK+kB,eACLhjB,EAAOd,UAAU6I,QAAQlH,KAAK5C,MAC1BA,KAAKjI,MACLiI,KAAKjI,KAAK+R,UAEV9J,KAAKolB,YACLplB,KAAKolB,WAAWtb,UAMpB,IAAK,IAJDia,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDtsB,EAAI,EAAGA,EAAIssB,EAAQpsB,OAAQF,IAC5BuI,KAAK+jB,EAAQtsB,MACbuI,KAAK+jB,EAAQtsB,IAAM,MAG3BuI,KAAKmT,QAAQ1F,UAAY,GACzBzN,KAAKjI,KAAO,MAQhB+lB,EAAS7c,UAAUkvB,SAAW,WAC1BpuB,EAAOd,UAAUkvB,SAASvtB,KAAK5C,MACzB8N,cAAc9N,KAAKoX,oBAAqB7Y,WAAS,aAAcyB,KAAKjI,OAAUiI,KAAK3G,gBACrF2G,KAAKjI,KAAKo4B,YAQlBrS,EAAS7c,UAAUmvB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACAtf,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG5Y,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvCyG,gBAAkB/G,WAAaiwB,qBAI1BlwB,EAAI,EAAGA,EAAI44B,EAAU14B,OAAQF,IAElC,IAAK,IADD84B,EAAgBvwB,KAAKqwB,EAAU54B,IAC1B23B,EAAK,EAAGC,EAAKiB,EAAgBD,EAAU54B,IAAK23B,EAAKC,EAAG13B,OAAQy3B,IAAM,QAEhEmB,EADGlB,EAAGD,IAKrB,OADApvB,KAAKwwB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQCxwB,KAAKtI,SAClCsI,KAAKywB,aAAaJ,IAE7BvS,EAAS7c,UAAUuvB,eAAiB,SAAUE,EAAgBh5B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACXsI,KAAK2wB,eAAeD,EAAgBh5B,EAAQD,IAC5CuI,KAAKwwB,eAAeE,EAAgBh5B,EAAQD,GAAGC,UAG/CsI,KAAK2wB,eAAeD,EAAgBh5B,EAAQD,KAIxDqmB,EAAS7c,UAAU0vB,eAAiB,SAAUD,EAAgB/wB,GAC1D,IAAK,IAAIlI,EAAI,EAAGA,EAAIi5B,EAAe/4B,OAAQF,WAChCkI,EAAO+wB,EAAej5B,IAC7BkI,EAAOhC,WAGfmgB,EAAS7c,UAAUuiB,kBAAoB,SAAU5lB,GAC7C,GAAK9F,oBAAkB8F,EAAEgzB,SAAzB,CAGA,IAAIvvB,EAASzD,EAAEyD,QACVA,EAAOiH,UAAUC,SAAS,sBAC3BlH,EAAOiH,UAAUC,SAAS,uBAA4BvI,KAAK6wB,gBAAmB7wB,KAAKjI,KAAKi2B,QACxFhuB,KAAK2hB,sBAAsBtgB,GAE/BrB,KAAK6wB,gBAAiB,EACtB7wB,KAAKqS,OAAO,qBAAuBhR,OAAQA,MAM/Cyc,EAAS7c,UAAUlC,QAAU,WACzB,OAAOiB,KAAKjI,KAAKgH,WAMrB+e,EAAS7c,UAAU6vB,SAAW,WAC1B,OAAO9wB,KAAKjI,KAAK+4B,YASrBhT,EAAS7c,UAAU8vB,UAAY,SAAUpyB,EAAMrE,EAAO02B,GAC9ChxB,KAAK9D,YACL8D,KAAK9D,WAAW60B,UAAUpyB,EAAMrE,EAAO02B,IAM/ClT,EAAS7c,UAAUgvB,UAAY,WACvBjwB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW+zB,aAM7BnS,EAAS7c,UAAUgwB,SAAW,WACtBjxB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW+0B,YAS7BnT,EAAS7c,UAAUiwB,WAAa,SAAUtnB,EAAUtF,EAAOjK,GACnD2F,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAWg1B,WAAWtnB,EAAUtF,EAAOjK,IAQzDyjB,EAAS7c,UAAUkwB,UAAY,SAAU72B,EAAOqE,GAC5C,GAAIqB,KAAKjI,KAAKmE,WACV,GAAKpE,oBAAkBwC,GAMnB0F,KAAKjI,KAAKmE,WAAWi1B,UAAU72B,EAAOqE,OANX,CAC3B,IAAIgoB,EAAW3mB,KAAKjI,KAAKuE,wBAAwBhC,GACjDiC,SAAOoqB,EAAUhoB,GACjBqB,KAAKjI,KAAKmE,WAAWi1B,UAAU72B,EAAOqsB,KAalD7I,EAAS7c,UAAUmwB,aAAe,SAAUC,EAAW1yB,GAC/CqB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAWk1B,aAAaC,EAAW1yB,IAOrDmf,EAAS7c,UAAUqwB,UAAY,SAAUzyB,GACjCmB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAWo1B,UAAUzyB,IAQvCif,EAAS7c,UAAUswB,SAAW,SAAU3nB,EAAUtF,GAC1CtE,KAAK9D,YACL8D,KAAK9D,WAAWq1B,SAAS3nB,EAAUtF,IAQ3CwZ,EAAS7c,UAAUuwB,mBAAqB,SAAUpb,EAAOqb,GACjDzxB,KAAKjI,KAAK25B,eACV1xB,KAAKjI,KAAK25B,cAAcC,YAAYvb,EAAOqb,IAMnD3T,EAAS7c,UAAU2wB,QAAU,WACrB5xB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW01B,WAS7B9T,EAAS7c,UAAU4wB,kBAAoB,SAAUC,EAAGC,GAC5C/xB,KAAKgyB,qBACLhyB,KAAKgyB,oBAAoBH,kBAAkBC,EAAGC,IAOtDjU,EAAS7c,UAAUgxB,UAAY,SAAU9iB,GACjCnP,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW+1B,UAAU9iB,IAOvC2O,EAAS7c,UAAUvF,wBAA0B,WACzC,OAAOsE,KAAKjI,KAAK2D,2BASrBoiB,EAAS7c,UAAUixB,aAAe,SAAUj6B,EAAKqM,EAAOjK,GACpD2F,KAAKjI,KAAKm6B,aAAaj6B,EAAKqM,EAAOjK,IAQvCyjB,EAAS7c,UAAUrC,WAAa,SAAU3G,EAAKyT,GAC3C,IAAItN,EAAiB4B,KAAK1D,wBACtB61B,EAAanyB,KAAKjI,KAAK2D,0BAA0B,GACjDnB,EAAQ,EACRzB,KACJsF,EAAewmB,KAAK,SAAUvqB,EAAO5C,EAAGmG,GACpC,OAAIvD,EAAM83B,KAAgBl6B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfmR,EAAQnR,MAAQA,EAChBmR,EAAQpR,MAAQxB,EAAOwB,MACvBoR,EAAQhS,aAAeZ,EAAOY,aAC9BgS,EAAQ3O,SAAWjE,EAAOiE,SAC1B2O,EAAQtS,SAAWN,EAAOM,SAC1BsS,EAAQxS,WAAaJ,EAAOI,WAC5BwS,EAAQyB,cAAgBrU,EAAOqU,cAC/BzB,EAAQjS,gBAAkBX,EAAOW,gBACjCiS,EAAQlN,eAAiB1F,EAAO0F,eAChCkN,EAAQnS,SAAWT,EAAOS,SAC1ByG,KAAKjI,KAAK6G,WAAW3G,EAAKyT,IAO9BoS,EAAS7c,UAAUmxB,SAAW,SAAUC,GAChCryB,KAAKjI,KAAKu6B,aACVtyB,KAAKjI,KAAKu6B,YAAYF,SAASC,IAQvCvU,EAAS7c,UAAUsxB,sBAAwB,SAAUhvB,GAC7CvD,KAAKsyB,aACLtyB,KAAKjI,KAAKu6B,YAAYC,sBAAsBhvB,IASpDua,EAAS7c,UAAUuxB,iBAAmB,SAAU5oB,EAAUmC,GACtD,OAAO/L,KAAKjI,KAAKy6B,iBAAiB5oB,EAAUmC,IAOhD+R,EAAS7c,UAAU+Z,iBAAmB,SAAU1W,GAC5C,OAAIwJ,cAAc9N,KAAKoX,iBACZqb,uBAAqBzyB,KAAKjI,KAAKL,QAAS,SAAUwL,EAAM5I,GAC3D,GAAI4I,EAAKoB,QAAUA,EACf,OAAOpB,IAGZ,GAGIuvB,uBAAqBzyB,KAAK0iB,YAAa,SAAUxf,EAAM5I,GAC1D,GAAI4I,EAAKoB,QAAUA,EACf,OAAOpB,IAGZ,IAQX4a,EAAS7c,UAAUwQ,eAAiB,SAAUxF,GAC1C,OAAOwmB,uBAAqBzyB,KAAKjI,KAAKL,QAAS,SAAUwL,EAAM5I,GAC3D,GAAI4I,EAAK+I,MAAQA,EACb,OAAO/I,IAGZ,IAMP4a,EAAS7c,UAAUyxB,oBAAsB,WACrC,OAAO1yB,KAAKjI,KAAK26B,uBAMrB5U,EAAS7c,UAAU0xB,iBAAmB,WAClC,OAAO3yB,KAAKjI,KAAK46B,oBAMrB7U,EAAS7c,UAAU2xB,sBAAwB,WACvC,OAAO5yB,KAAKjI,KAAK66B,yBAQrB9U,EAAS7c,UAAU4xB,YAAc,SAAUn6B,EAAMo6B,GAC7C9yB,KAAKjI,KAAK86B,YAAYn6B,EAAMo6B,GAC5B9yB,KAAK4gB,qBAQT9C,EAAS7c,UAAU8xB,YAAc,SAAUr6B,EAAMs6B,GAC7ChzB,KAAKjI,KAAKg7B,YAAYr6B,EAAMs6B,GAC5BhzB,KAAK4gB,qBAOT9C,EAAS7c,UAAUgyB,uBAAyB,SAAU3uB,GAClD,OAAOtE,KAAKjI,KAAKk7B,uBAAuB3uB,IAO5CwZ,EAAS7c,UAAUiyB,uBAAyB,SAAU54B,GAClD,OAAO0F,KAAKjI,KAAKm7B,uBAAuB54B,IAO5CwjB,EAAS7c,UAAUkyB,qBAAuB,SAAUlnB,GAChD,OAAOjM,KAAKjI,KAAKo7B,qBAAqBlnB,IAO1C6R,EAAS7c,UAAUmyB,sBAAwB,SAAU9uB,GACjD,OAAOtE,KAAKjI,KAAKq7B,sBAAsB9uB,IAO3CwZ,EAAS7c,UAAU0Q,oBAAsB,SAAU1F,GAC/C,OAAOjM,KAAKjI,KAAK4Z,oBAAoB1F,IAMzC6R,EAAS7c,UAAUrB,WAAa,SAAUyzB,GACtC,OAAIvlB,cAAc9N,KAAKoX,iBACZpX,KAAKjI,KAAKL,SAGjBsI,KAAK4gB,kBAAkB5gB,KAAKjI,KAAK6H,WAAWyzB,IACrCrzB,KAAK0iB,cAGpB5E,EAAS7c,UAAU2f,kBAAoB,SAAUjhB,GAC7C,IAAI4b,EACAjX,EACAgvB,EAAcx7B,oBAAkB6H,GAAUK,KAAKjI,KAAK6H,aAAeD,GACzC,IAA1BK,KAAKP,iBAA0BO,KAAKtI,QAAQsI,KAAKP,mBAChD3H,oBAAkBkI,KAAKtI,QAAQsI,KAAKP,iBAAiBoT,YACtD0I,EAAOvb,KAAKtI,QAAQsI,KAAKP,iBAAiBoT,SAC1CvO,EAAQgvB,EAAYtzB,KAAKP,iBAAiB6E,OAE9CtE,KAAK0iB,eAGL,IAAK,IADDwM,EADAqE,GAAgB,EAEX97B,EAAI,EAAGA,EAAI67B,EAAY37B,OAAQF,IAAK,CACzCy3B,KACA,IAAK,IAAIE,EAAK,EAAGC,EAAK52B,OAAOC,KAAK46B,EAAY77B,IAAK23B,EAAKC,EAAG13B,OAAQy3B,IAAM,CACrE,IAAI5R,EAAO6R,EAAGD,GACTthB,cAAuB,SAAT0P,IACf0R,EAAW1R,GAAQ8V,EAAY77B,GAAG+lB,IAG1Cxd,KAAK0iB,YAAY9pB,KAAK,IAAIkH,EAAOovB,IAC7B5qB,IAAUtE,KAAK0iB,YAAYjrB,GAAG6M,OAAWxM,oBAAkByjB,IAAkB,KAATA,IACpEvb,KAAK0iB,YAAYjrB,GAAGob,SAAW0I,GAGvC,IAAKzN,eAAe9N,KAAKoX,iBAAkB,CAEvCpX,KAAU,WAAK,WACXA,KAAKjI,KAAKL,QAAQC,SAAWqI,KAAK0iB,YAAY/qB,SAC9C47B,GAAgB,GAEfA,GACDvzB,KAAKyd,eAAgB/lB,QAASsI,KAAK0iB,cAAe,GAEtD1iB,KAAU,eAAI+c,EAElB,OAAO/c,KAAK0iB,aAMhB5E,EAAS7c,UAAUuyB,WAAa,WAC5B,OAAOxzB,KAAKjI,KAAKy7B,cAErB1V,EAAS7c,UAAUod,yBAA2B,WAE1Cre,KAAKjI,KAAa,qBAAEiK,MAAMhC,OAE9B8d,EAAS7c,UAAUwyB,aAAe,SAAUC,EAAch8B,GAEtDsI,KAAKjI,KAAa,aAAEiK,MAAMhC,MAAO0zB,EAAch8B,KAEnDomB,EAAS7c,UAAUssB,oBAAsB,WACrCvtB,KAAKyd,eAAgBrlB,eAAgBO,YAAU,aAAcqH,KAAKjI,KAAKK,kBAAmB,GAC1F4H,KAAKyd,eAAgBzM,aAAcrY,YAAU,aAAcqH,KAAKjI,KAAKiZ,gBAAiB,GACtFhR,KAAKyd,eAAgBzlB,eAAgBW,YAAU,aAAcqH,KAAKjI,KAAKC,kBAAmB,GAC1FgI,KAAKyd,eAAgBhf,aAAc9F,YAAU,aAAcqH,KAAKjI,KAAK0G,gBAAiB,IAM1Fqf,EAAS7c,UAAUkW,gBAAkB,WACjC,OAAOnX,KAAKjI,KAAKof,mBAMrB2G,EAAS7c,UAAU0yB,YAAc,WAG7B,IAAK,IAFDC,KACA5rB,EAAOhI,KAAKjI,KAAK47B,cACZl8B,EAAI,EAAGe,EAAMwP,EAAKrQ,OAAQF,EAAIe,EAAKf,IACnCuQ,EAAKvQ,GAAG6Q,UAAUC,SAAS,iBAC5BqrB,EAAMh7B,KAAKoP,EAAKvQ,IAGxB,OAAOm8B,GAOX9V,EAAS7c,UAAU3E,sBAAwB,WACvC,OAAO0D,KAAKjI,KAAKmgB,iBAMrB4F,EAAS7c,UAAU9E,gBAAkB,WACjC,OAAO6D,KAAKjI,KAAKmE,WAAWC,mBAMhC2hB,EAAS7c,UAAUkL,iBAAmB,WAClC,OAAOnM,KAAKjI,KAAKoU,oBAMrB2R,EAAS7c,UAAU4yB,eAAiB,WAChC,OAAO7zB,KAAKjI,KAAK87B,kBAOrB/V,EAAS7c,UAAUnC,cAAgB,SAAUxE,GACzC,OAAO0F,KAAKjI,KAAK+G,cAAcxE,IAOnCwjB,EAAS7c,UAAU6yB,WAAa,SAAUzyB,GACtC,OAAOrB,KAAKjI,KAAK+7B,WAAWzyB,IAOhCyc,EAAS7c,UAAU8yB,oBAAsB,SAAUzvB,GAC/C,OAAOtE,KAAKjI,KAAKg8B,oBAAoBzvB,IAMzCwZ,EAAS7c,UAAU+H,kBAAoB,WAEnC,IAAK,IADDgrB,KACK5E,EAAK,EAAGC,EAAKrvB,KAAK0iB,YAAa0M,EAAKC,EAAG13B,OAAQy3B,IAAM,CAC1D,IAAIpjB,EAAMqjB,EAAGD,GACTpjB,EAAIioB,SACJD,EAAKp7B,KAAKoT,GAGlB,OAAOgoB,GAKXlW,EAAS7c,UAAUgX,YAAc,WAC7BA,cAAYjY,KAAKmT,UAKrB2K,EAAS7c,UAAU2U,YAAc,WAC7BA,cAAY5V,KAAKmT,UAKrB2K,EAAS7c,UAAU+uB,QAAU,WACzBhwB,KAAKslB,gBAAgBtlB,KAAKjJ,YAC1BiJ,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWm2B,aAAcltB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SACTsC,KAAKjI,KAAKi4B,WAOdlS,EAAS7c,UAAU0K,kBAAoB,WACnC,OAAO3L,KAAKymB,gBAAgB9W,qBAMhCmO,EAAS7c,UAAU2O,qBAAuB,WACtC,OAAO5P,KAAKymB,gBAAgB7W,wBAKhCkO,EAAS7c,UAAUgK,iBAAmB,SAAUipB,GAC5Cl0B,KAAKymB,gBAAgBxb,iBAAiBipB,IAK1CpW,EAAS7c,UAAU0uB,eAAiB,SAAUwE,GACtCr8B,oBAAkBq8B,IAAcA,GAChCn0B,KAAKjI,KAAKL,QAAUsI,KAAK+mB,eAAe/mB,KAAKtI,SAC7CsI,KAAKjI,KAAK43B,kBAGV3vB,KAAKjI,KAAK0lB,eAAgB/lB,QAASsI,KAAK+mB,eAAe/mB,KAAKtI,WAAY,IAMhFomB,EAAS7c,UAAUmzB,cAAgB,WAC/Bp0B,KAAKjI,KAAKq8B,iBAOdtW,EAAS7c,UAAU0gB,sBAAwB,SAAUtgB,GACjD,GAA+B,UAA3BrB,KAAKhE,aAAaC,KAAkB,CAGpC,GAAI+D,KAAK7D,kBAAkB6D,KAAKie,gBAAgBtmB,QAC5CqI,KAAK7D,kBAAkB6D,KAAKke,gBAAgBvmB,QAAUqI,KAAK7D,kBAAkB6D,KAAKwT,cAAc7b,OAAQ,CACxG,IAAI08B,EAAYr0B,KAAKjI,KAAKmE,WAAc,UAGxC,OAFA8D,KAAKjI,KAAKmE,WAAqB,WAAE,aAAcm4B,QAC/Cr0B,KAAKs0B,cAAgBjzB,IAI7B,GAAIrB,KAAKyS,YAAa,CAClB,IAAI8hB,EAAUlzB,EAAO2J,QAAQ,kBAAkB8W,cAC3ChpB,EAASkH,KAAK1D,wBAAwBi4B,EAAQ3qB,UAC9CvI,EAAOiH,UAAUC,SAAS,oBAC1BvI,KAAK0hB,YAAY6S,EAASz7B,GAG1BkH,KAAK6hB,UAAU0S,EAASz7B,OAG3B,CAEGA,GADAy7B,EAAUv0B,KAAKjI,KAAK+7B,WAAWzyB,IACdqK,QACjBrK,EAAOiH,UAAUC,SAAS,oBAC1BvI,KAAK0hB,YAAY6S,EAAQ11B,IAAK/F,GAG9BkH,KAAK6hB,UAAU0S,EAAQ11B,IAAK/F,KAQxCglB,EAAS7c,UAAU4gB,UAAY,SAAUhjB,EAAK/F,GAC1C,IAAIwO,EAAQtH,KACZlH,EAASkH,KAAKw0B,yBAAyB31B,EAAK/F,IACvChB,oBAAkB+G,IAAQA,EAAIW,MAAM,GAAG8I,UAAUC,SAAS,kBAC3DvI,KAAKsqB,cAAczrB,GAAK,GAE5B,IAAImE,GAASrE,KAAM7F,EAAQ+F,IAAKA,EAAKqK,QAAQ,GAC7ClJ,KAAKmJ,Qb1tEU,Ya0tEgBnG,EAAM,SAAUyxB,GAC3C,IAAKA,EAAcvrB,SACf5B,EAAMotB,eAAe,SAAU71B,EAAK/F,KAC9BjC,EAAayQ,IAAW1N,EAAU0N,MAAY/P,EAAgB+P,IAAQ,CACxE,IAAIqtB,GAAiBh2B,KAAM7F,EAAQ+F,IAAKA,GACxCyI,EAAM6B,QAAQ8P,EAAiB0b,OAK/C7W,EAAS7c,UAAUuzB,yBAA2B,SAAU31B,EAAK/F,GAUzD,OATIkH,KAAK+Q,aAAkD,QAAnC/Q,KAAKgR,aAAaC,cAA0BjR,KAAK2iB,aAAe7qB,oBAAkBgB,KACrGjC,EAAamJ,MACdlH,EAASkH,KAAKtC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAEnE,kBAGR3B,oBAAkBgB,KACvBA,EAASkH,KAAKjI,KAAKuE,wBAAwBuC,EAAI+K,WAE5C9Q,GAMXglB,EAAS7c,UAAUygB,YAAc,SAAU7iB,EAAK/F,GAC5C,IAAIwO,EAAQtH,KAERgD,GAASrE,KADb7F,EAASkH,KAAKw0B,yBAAyB31B,EAAK/F,GACjB+F,IAAKA,EAAKqK,QAAQ,GAC7ClJ,KAAKmJ,QbpvEW,aaovEgBnG,EAAM,SAAU4xB,GAC5C,IAAKA,EAAe1rB,OAAQ,CACxB5B,EAAMotB,eAAe,WAAY71B,EAAK/F,GACtC,IAAI67B,GAAiBh2B,KAAM7F,EAAQ+F,IAAKA,GACnChI,EAAayQ,IACdA,EAAM6B,QAAQ0rB,EAAkBF,OAShD7W,EAAS7c,UAAU6zB,cAAgB,SAAUv6B,GACzC,IAAMyF,KAAK+Q,aAAkD,QAAnC/Q,KAAKgR,aAAaC,cAA2BjR,KAAK1B,wBAA0BzH,EAAamJ,MAAO,CACtH,IAAI+O,EAAM/O,KAAKjI,KAAKhB,WAAW4G,OAAO,SAAUC,GAI5C,OAHIA,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IACjCqD,EAAErE,UAAW,GAEVqE,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IAE5CyF,KAAK6hB,UAAU,KAAM9S,OAMhB,CAHDA,EAAM/O,KAAK+0B,iBAAiBx6B,GAGhC,IAAK,IAFDsE,EAAMlG,YAAU,OAAQoW,GACxBjW,EAASH,YAAU,UAAWoW,GACzBtX,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/BuI,KAAK6hB,UAAUhjB,EAAIpH,GAAIqB,EAAOrB,MAI1CqmB,EAAS7c,UAAU8zB,iBAAmB,SAAUx6B,GAC5C,IAAIyN,EAAOhI,KAAKjB,UAAUpB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE4O,UAAU9N,QAAQ,QAAUnE,KAC9BqD,EAAEmN,cAAc,wBAA0BnN,EAAEmN,cAAc,wBAItE,OADYzS,QADE0H,KAAK1D,wBAAwBqB,OAAO,SAAUC,GAAK,OAAOA,EAAErD,QAAUA,GAASqD,EAAEnE,kBACjEuO,KAAMA,IAOxC8V,EAAS7c,UAAU+zB,gBAAkB,SAAUz6B,GAC3C,IAAMyF,KAAK+Q,aAAkD,QAAnC/Q,KAAKgR,aAAaC,cAA2BjR,KAAK1B,wBAA0BzH,EAAamJ,MAAO,CACtH,IAAIlH,EAASkH,KAAKjI,KAAKhB,WAAW4G,OAAO,SAAUC,GAI/C,OAHIA,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IACjCqD,EAAErE,UAAW,GAEVqE,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IAE5CyF,KAAK0hB,YAAY,KAAM5oB,QAMvB,IAAK,IAHDiW,EAAM/O,KAAK+0B,iBAAiBx6B,GAC5ByN,EAAOrP,YAAU,OAAQoW,GACzBzW,EAAUK,YAAU,UAAWoW,GAC1BtX,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCuI,KAAK0hB,YAAY1Z,EAAKvQ,GAAIa,EAAQb,IAG1C,IAAKuI,KAAKjI,KAAKmhB,cAAc2W,qBAAuB7vB,KAAK1B,sBAAwB0B,KAAKjB,WAC/EiB,KAAKvC,WAAW9F,SAAWqI,KAAKjB,UAAUpH,OAAQ,CAErDqI,KAAKjI,KAAKmhB,cAAc+b,YAAc,EACtCj1B,KAAKjI,KAAKmhB,cAAsB,UAAK,IAO7C4E,EAAS7c,UAAUsgB,UAAY,WAC3BvhB,KAAKk1B,kBAAkB,WAM3BpX,EAAS7c,UAAUugB,YAAc,WAC7BxhB,KAAKk1B,kBAAkB,aAE3BpX,EAAS7c,UAAUi0B,kBAAoB,SAAUz5B,GAC7C,IAAIuM,EAAOhI,KAAKjB,UAAUpB,OAAO,SAAUC,GACvC,OAAOA,EAAEmN,cAAc,eAA4B,WAAXtP,EAAsB,WAAa,aAI/E,GAFAuE,KAAK2iB,aAAc,EACnB3iB,KAAK4iB,eAAgB,GACf5iB,KAAK+Q,aAAkD,QAAnC/Q,KAAKgR,aAAaC,cAA2BjR,KAAK1B,wBAA0BzH,EAAamJ,MAM/G,GALAA,KAAKtC,SAASC,OAAO,SAAUC,GACvBA,EAAEnE,kBACFmE,EAAErE,SAAsB,aAAXkC,KAGjBuM,EAAKrQ,OACM,aAAX8D,EAAwBuE,KAAK0hB,YAAY1Z,EAAK,IAAMhI,KAAK6hB,UAAU7Z,EAAK,QAEvE,CACD,IAAImtB,EAAsBn1B,KAAKkR,kBAC/BlR,KAAKyd,eAAgBvM,mBAAmB,IAAQ,GAChDlR,KAAKjI,KAAKu6B,YAAYF,SAAS,GAC/BpyB,KAAKyd,eAAgBvM,kBAAmBikB,IAAuB,QAInE,IAAK,IAAI19B,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAClB,aAAXgE,EAAwBuE,KAAK0hB,YAAY1Z,EAAKvQ,IAAMuI,KAAK6hB,UAAU7Z,EAAKvQ,IAGhFuI,KAAK2iB,aAAc,EACnB3iB,KAAK4iB,eAAgB,GAEzB9E,EAAS7c,UAAUyzB,eAAiB,SAAUj5B,EAAQoD,EAAK/F,EAAQme,GAC/D,IAAIwd,GAAkB51B,IAAKA,EAAKF,KAAM7F,EAAQiR,aAAelK,YAAapE,IACrE5E,EAAamJ,OAAoB,WAAXvE,GAAuBuE,KAAK7E,iBAAmB5D,EAAgByI,OACtFA,KAAKo1B,oBAAoBX,GAE7B,IAAIvd,EAAWlX,KAAKjB,UACpB,GAAIiB,KAAKyS,YAAa,CAClB,IAAIzK,EAAOhI,KAAKmX,kBAAkBnP,KAClCkP,KAAc1O,MAAM5F,KAAKoF,GAa7B,GAVIlQ,oBAAkB+G,GAElBA,EAAMqY,EADKlX,KAAK1D,wBAAwBoC,QAAQ5F,KAIpC+F,EAAIuN,aAAa,iBAE5BtU,oBAAkB+G,IACnBA,EAAIqO,aAAa,gBAA4B,WAAXzR,EAAsB,OAAS,WAE/DuE,KAAK+Q,aAAkD,QAAnC/Q,KAAKgR,aAAaC,cAA2BjR,KAAK1B,uBAA0BzH,EAAamJ,OAC3GzI,EAAgByI,MAGnB,CACD,IAAIq1B,OAAgB,EACpB,GAAe,WAAX55B,EAAqB,CACrB45B,EAAgB,YACXpe,IACDne,EAAOS,UAAW,EAClByG,KAAK+d,mBAAmBjlB,EAAOM,UAAUG,SAAWT,EAAOS,UAE/D,IAAI8d,EAAYxY,EAAIyY,uBAAuB,sBAAsB,GAKjE,GAJIL,IAAYnf,oBAAkBgB,EAAOkH,KAAK1G,sBAC1CR,EAAOkH,KAAK1G,qBAAuBxB,oBAAkBuf,KACrDA,EAAYxY,EAAIyY,uBAAuB,oBAAoB,IAE3Dxf,oBAAkBuf,GAClB,OAECA,EAAU/O,UAAUC,SAAS,qBAC9B+H,YAAU+G,GAAY,oBAE1BhK,eAAagK,GAAY,0BAExB,CACDge,EAAgB,OACXpe,IAAW1f,EAAgByI,QAC5BlH,EAAOS,UAAW,EAClByG,KAAK+d,mBAAmBjlB,EAAOM,UAAUG,SAAWT,EAAOS,UAE3D8d,EAAYxY,EAAIyY,uBAAuB,oBAAoB,GAK/D,GAJIL,IAAYnf,oBAAkBgB,EAAOkH,KAAK1G,uBACzCR,EAAOkH,KAAK1G,qBAAuBxB,oBAAkBuf,KACtDA,EAAYxY,EAAIyY,uBAAuB,sBAAsB,IAE7Dxf,oBAAkBuf,GAClB,OAECA,EAAU/O,UAAUC,SAAS,uBAC9B+H,YAAU+G,GAAY,sBAE1BhK,eAAagK,GAAY,oBAE7B,IAAIie,EAAape,EAASvZ,OAAO,SAAU8D,GACvC,OAAOA,EAAE6G,UAAUC,SAAS,uBAAyBzP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAUlG,GARI1D,EAAamJ,QAAUpG,EAAUoG,MACjCA,KAAKoF,aAAa3J,EAAQoD,EAAK/F,EAAQme,GAGlC1f,EAAgByI,OAAoB,aAAXvE,GAC1BuE,KAAKu1B,YAAY95B,EAAQoD,EAAK/F,EAAQme,GAG1CjX,KAAKyqB,kBAAoB5rB,EAAIW,MAAM,GAAG8I,UAAUC,SAAS,iBAIzD,IAAK,IAHDuiB,EAAY9qB,KAAKjB,UAGZtH,GAFLuQ,EAAOhI,KAAKmX,kBAAkBnP,MAClC8iB,KAAetiB,MAAM5F,KAAKoF,IACHrQ,OAAS,GAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAASqwB,EAAUrzB,IAAK,CACzB,IACI+9B,EADQx1B,KAAKmX,kBACGse,aAChBC,EAAe11B,KAAKwzB,aAAakC,aACrC11B,KAAKsqB,cAAcQ,EAAUrzB,GAAI+9B,GAAWE,GAC5C,MAIZ11B,KAAKqS,OAAO,qBAAuBijB,WAAYA,EAAY75B,OAAQ45B,EAAev8B,OAAQA,EAAQ+F,IAAKA,IACvGmB,KAAK4qB,aAAa1T,QApElBlX,KAAKqS,OAAOsjB,GAAmCl6B,OAAQA,EAAQoD,IAAKA,EAAK/F,OAAQA,KAuEzFglB,EAAS7c,UAAUm0B,oBAAsB,SAAUX,GAC/C,IAAIntB,EAAQtH,KACR41B,EAAO,IAAI5K,WAEfyJ,EAA2B,cAAImB,EAAK1K,QACpC,IAAIpyB,EAAS27B,EAAc91B,KAC3BqB,KAAKmJ,QAAQ2iB,EAAwB2I,GACrCmB,EAAKrJ,QAAQnX,KAAK,SAAUxX,GACxB,GAAI62B,EAAc1qB,UAAUpS,OAAQ,CAGhC,IAAK,IAFDgiB,EAAerS,EAAc,SAC7BhN,EAAQ,EACH7C,EAAI,EAAGA,EAAIkiB,EAAYhiB,OAAQF,IACpC,GAAIkiB,EAAYliB,GAAGsF,WAAajE,EAAOiE,SAAU,CAC7CzC,EAAQ7C,EACR,MAOH,IAJDo+B,EAASt3B,WAAS,SAAU+I,EAAMvQ,YAClCgT,EAAYhQ,EAAY06B,EAAc1qB,WACtC+rB,EAAWh9B,EAAOwO,EAAMhK,eACxBxE,EAAOwO,EAAMhK,cAAc3F,OAASoS,EAAUpS,OAASmB,EAAOwO,EAAMhK,cAAc3F,OAA4BoS,EAAUpS,OAC5H,IAASF,EAAI,EAAGA,EAAIq+B,EAAUr+B,IACtBqB,EAAOwO,EAAMhK,eACbu4B,EAAOl4B,OAAO,SAAUC,EAAGnG,GACnBmG,EAAE0J,EAAMnK,mBAAqBrE,EAAOwO,EAAMlK,YAC1Cy4B,EAAOx4B,OAAO5F,EAAG,KAIzBsS,EAAUtS,IACVsS,EAAUtS,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCwP,EAAUtS,GAAG6C,MAAQuc,KAAKC,KAAqB,IAAhBD,KAAKE,UACpChN,EAAUtS,GAAGyB,WAAaqD,YAAWzD,GACrCiR,EAAUtS,GAAGsF,SAAWR,YAAWwN,EAAUtS,WACtCsS,EAAUtS,GAAGyB,WAAWQ,oBACxBqQ,EAAUtS,GAAGsF,SAAS7D,WAC7B6Q,EAAUtS,GAAG+G,eAAiB1F,EAAOM,SACrC2Q,EAAUtS,GAAG2B,SAAWwd,SAAOtP,EAAM6L,QAAQC,GAAK,UAClDqC,WAAS,sBAAwB1L,EAAUtS,GAAG2B,SAAU2Q,EAAUtS,GAAI6P,KACjExP,oBAAkBiS,EAAUtS,GAAG6P,EAAMhK,gBACrCyM,EAAUtS,GAAG6P,EAAMyN,kBAAoBxd,EAAgB+P,MACxDyC,EAAUtS,GAAGgC,iBAAkB,GAEnCkgB,EAAYtc,OAAO/C,EAAQ,EAAI7C,EAAGqB,EAAOwO,EAAMhK,eAAiBxE,EAAOwO,EAAMhK,cAAc7F,GAAK,EAAI,EAAGsS,EAAUtS,KAGjHkiB,EAAYtc,OAAO/C,EAAQ,EAAI7C,EAAG,GAG1CkiB,EAAYrf,GAAOgN,EAAMhK,cAAgByM,EACzC4P,EAAYrf,GAAOZ,aAAeqQ,EAClC4P,EAAYrf,GAAOf,UAAW,EAC9Bkc,WAAS,sBAAwBkE,EAAYrf,GAAOlB,SAAUugB,EAAYrf,GAAQgN,GAClF,IAAK,IAAInN,EAAI,EAAGA,EAAIs6B,EAAc1qB,UAAUpS,OAAQwC,IAChD07B,EAAOj9B,KAAK67B,EAAc1qB,UAAU5P,IAG5CmN,EAAMukB,iBAAkB,EACxBvkB,EAAMvP,KAAKi4B,UACX1oB,EAAM6B,QAAQ8P,EAAiBwb,MAGvC3W,EAAS7c,UAAUmE,aAAe,SAAU3J,EAAQoD,EAAK/F,EAAQme,GAC7D,IAAIC,EAAWlX,KAAKjB,UACpB,GAAIiB,KAAKyS,YAAa,CAClB,IAAIsjB,EAAS/1B,KAAKmX,kBAAkBnP,KACpCkP,KAAc1O,MAAM5F,KAAKmzB,GAE7B,IAAI/yB,GAASrE,KAAM7F,EAAQ+F,IAAKA,GAC5BmJ,KAIJ,GAHAA,EAAOkP,EAASvZ,OAAO,SAAU8D,GAC7B,OAAOA,EAAEsJ,cAAc,kBAAoBjS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXkB,EAAqB,CACrBuE,KAAKqS,OAAO8B,GAAuBrb,OAAQA,EAAQkP,KAAMA,EAAMyP,UAAW5Y,IAC1E,IAAIm3B,GAAWn3B,IAAKA,EAAKF,KAAM7F,GAC3BkP,EAAKrQ,OAAS,GACdqI,KAAKmJ,QAAQ8P,EAAiB+c,QAIlCh2B,KAAKi2B,qBAAsBn9B,OAAQA,EAAQkP,KAAMA,IACjDhI,KAAKmJ,QAAQ0rB,EAAkB7xB,IAGvC8a,EAAS7c,UAAUs0B,YAAc,SAAU95B,EAAQoD,EAAK/F,EAAQme,GAC5D,IAAIvd,EAAesG,KAAK1D,wBAAwBqB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB1F,EAAOM,WAEnC4G,KAAKyqB,iBAAmB5rB,EAAIW,MAAM,GAAG8I,UAAUC,SAAS,kBACxDvI,KAAKsqB,cAAczrB,GAAK,GAE5B,IAAIq3B,EACAhf,EAAWlX,KAAKjB,UACpB,GAAIiB,KAAKyS,YAAa,CAClB,IAAI0jB,EAASn2B,KAAKmX,kBAAkBnP,KACpCkP,KAAc1O,MAAM5F,KAAKuzB,GAE7B,IAAId,EAA4B,WAAX55B,EAAuB,YAAc,OAEtDuM,GADQtO,EAAa,GAAGR,WAAWoB,MAC5B4c,EAASvZ,OAAO,SAAU8D,GACjC,OAAOA,EAAEsJ,cAAc,kBAAoBjS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpFyF,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9C+2B,EAAcl2B,KAAKo2B,iBAAiBz4B,OAAO,SAAU8D,GACjD,OAAOA,EAAEsJ,cAAc,kBAAoBjS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAK,IAAI9C,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAC7BuQ,EAAKvQ,GAAGkD,MAAMG,QAAUu6B,EACnBv9B,oBAAkBo+B,KACnBA,EAAYz+B,GAAGkD,MAAMG,QAAUu6B,GAEnCr1B,KAAKqS,OAAO,kBAAoBxT,IAAKmJ,EAAKvQ,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAX+B,IACrD3D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/DyG,KAAK00B,eAAej5B,EAAQuM,EAAKvQ,GAAIiC,EAAajC,IAAI,GAClDuI,KAAKN,eAAiBM,KAAKP,kBAAoB3H,oBAAkBo+B,IACjEl2B,KAAK00B,eAAej5B,EAAQy6B,EAAYz+B,GAAIiC,EAAajC,IAAI,KAK7EqmB,EAAS7c,UAAU2pB,aAAe,SAAU5iB,GACxC,GAAIhI,KAAKmnB,eAAiBnnB,KAAKyS,YAE3B,IAAK,IADD4jB,EAAkB,EACb5+B,EAAI,EAAGuQ,GAAQvQ,EAAIuQ,EAAKrQ,OAAQF,IAAK,CAC1C,IAAI6+B,EAAUtuB,EAAKvQ,GACW,SAA1B6+B,EAAQ37B,MAAMG,UACVw7B,EAAQhuB,UAAUC,SAAS,aAC3B8E,eAAaipB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQhuB,UAAUC,SAAS,iBAAoB+tB,EAAQhuB,UAAUC,SAAS,gBACxG+H,YAAUgmB,GAAU,YAEnBA,EAAQhuB,UAAUC,SAAS,iBAAoB+tB,EAAQhuB,UAAUC,SAAS,gBAC3E8tB,OAMpBvY,EAAS7c,UAAU+rB,sBAAwB,SAAUhqB,GACjD,GAAIhD,KAAKyS,YAAa,CAClB,IAAIzK,EAAOhI,KAAKmX,kBAAkBnP,KAClCA,KAAUQ,MAAM5F,KAAKoF,GACrB,IAAK,IAAIvQ,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAAK,CAClC,IAAI8+B,EAAQv2B,KAAKjI,KAAKof,kBAAkBnP,KAAKvQ,GAAG+H,MAAMQ,KAAKP,iBACvDZ,EAAMmJ,EAAKvQ,GAEX++B,GAAQ73B,KADEqB,KAAKjI,KAAKqgB,gBAAgB3gB,GAAGkH,KAChBE,IAAKA,EAAKU,KAAMg3B,EAAO52B,OAAQK,KAAKJ,aAAaI,KAAKP,kBACjFO,KAAKX,aAAaC,WAAWk3B,MAIzC1Y,EAAS7c,UAAUg1B,oBAAsB,SAAUjf,EAAYC,GACtDA,IACDD,EAAWle,OAAOS,UAAW,GAIjC,IAAK,IADDmV,EADA1G,EAAOgP,EAAWhP,KAEbvQ,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAAK,CAC9BqW,cAAc9N,KAAKoX,kBACnB/J,eAAarF,EAAKvQ,IAAK,qBACvB6Y,YAAUtI,EAAKvQ,IAAK,uBAGpBuQ,EAAKvQ,GAAGkD,MAAMG,QAAU,OAE5B,IAAI27B,EAAezuB,EAAKvQ,GAAGsT,cAAc,sBAIzC,GAHKjT,oBAAkB2+B,IACnBz2B,KAAKjI,KAAK4f,gBAAgB+e,SAASD,GAEnCzuB,EAAKvQ,GAAGsT,cAAc,6CAA8C,CACpE,IAAI4rB,EAAgB3uB,EAAKvQ,GAAGsT,cAAc,6CAC1C2D,EAAc1O,KAAKyS,YAAczS,KAAKjI,KAAKuE,wBAAwB0L,EAAKvQ,GAAGmS,UACvE5J,KAAKjI,KAAKwf,oBAAoBvP,EAAKvQ,GAAG2U,aAAa,aAAazN,MAC/D7G,oBAAkB6+B,IAAkBjoB,EAAYnV,WACjD8T,eAAaspB,GAAgB,oBAC7BrmB,YAAUqmB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ72B,KAAKjB,UACR+3B,EAAM,EAAGA,EAAMD,EAAMl/B,OAAQm/B,IAC9BD,EAAMC,GAAK/rB,cAAc,kBAAoB2D,EAAYpU,MAAQ,SAAWoU,EAAYnU,MAAQ,KAChGq8B,EAAKh+B,KAAKi+B,EAAMC,IAGpBF,EAAKj/B,QAAU+W,EAAYnV,UAC3ByG,KAAKi2B,qBAAsBn9B,OAAQ4V,EAAa1G,KAAM4uB,IAAQ,MAQ9E9Y,EAAS7c,UAAUykB,YAAc,WAC7B1lB,KAAKoK,GAAG,gBAAiBpK,KAAK+2B,kBAAmB/2B,MACjDA,KAAKjI,KAAKqS,GAAG,cAAepK,KAAKomB,gBAAiBpmB,OAEtD8d,EAAS7c,UAAU81B,kBAAoB,SAAUC,GAC7Ch3B,KAAK+T,YAAcijB,GAKvBlZ,EAAS7c,UAAUivB,eAAiB,WAC5BlwB,KAAK0K,cAGT1K,KAAK2K,IAAI,gBAAiB3K,KAAK+2B,mBAC/B/2B,KAAKjI,KAAK4S,IAAI,cAAe3K,KAAKomB,mBAgBtCtI,EAAS7c,UAAUg2B,eAAiB,SAAU5F,EAAW6F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIx3B,KAAKjI,KAAKk/B,eAAe5F,EAAW6F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H1Z,EAAS7c,UAAUw2B,eAAiB,WAChCz3B,KAAKjI,KAAK0/B,kBASd3Z,EAAS7c,UAAUy2B,0BAA4B,SAAUpzB,EAAOqzB,GAC5D33B,KAAKjI,KAAK2/B,0BAA0BpzB,EAAOqzB,IAQ/C7Z,EAAS7c,UAAUghB,UAAY,SAAU3nB,EAAOs9B,GAC5C53B,KAAKjI,KAAKkqB,UAAU3nB,EAAOs9B,IAO/B9Z,EAAS7c,UAAU42B,WAAa,SAAUjqB,GACtC5N,KAAKjI,KAAK8/B,WAAWjqB,IAMzBkQ,EAAS7c,UAAUkhB,eAAiB,WAChCniB,KAAKjI,KAAKoqB,kBAMdrE,EAAS7c,UAAUyI,KAAO,SAAU/B,GAChC3H,KAAKqmB,gBAAgB3c,KAAK/B,IAQ9BmW,EAAS7c,UAAU0I,MAAQ,SAAUhL,EAAMiL,EAAUC,GACjD7J,KAAKqmB,gBAAgB1c,MAAMhL,EAAMiL,EAAUC,IAQ/CiU,EAAS7c,UAAU62B,WAAa,SAAU5V,EAAW0V,GACjD53B,KAAKjI,KAAK+/B,WAAW5V,EAAW0V,IAMpC9Z,EAAS7c,UAAU82B,gBAAkB,WACjC,OAAO/3B,KAAKjI,KAAKggC,mBAQrBja,EAAS7c,UAAU+2B,wBAA0B,SAAUpuB,EAAUmC,GAC7D,OAAO/L,KAAKjI,KAAKigC,wBAAwBpuB,EAAUmC,IAMvD+R,EAAS7c,UAAUoO,mBAAqB,WACpC,OAAOrP,KAAKjI,KAAKsX,sBAOrByO,EAAS7c,UAAU7B,qBAAuB,SAAU9E,GAChD,OAAO0F,KAAKjI,KAAKqH,qBAAqB9E,IAM1CwjB,EAAS7c,UAAUm1B,eAAiB,WAChC,OAAOp2B,KAAKjI,KAAKq+B,kBAKrBtY,EAAS7c,UAAU9B,iBAAmB,WAClC,OAAOa,KAAKi4B,eAAej4B,KAAKtI,QAAS,GAAKsI,KAAKN,eAEvDoe,EAAS7c,UAAUg3B,eAAiB,SAAUjE,EAAMkE,GAChD,IAAK,IAAI/9B,EAAI,EAAG3B,EAAMw7B,EAAKr8B,OAAQwC,EAAI3B,EAAK2B,IACpC65B,EAAK75B,GAAGzC,QACRwgC,EAAMl4B,KAAKi4B,eAAejE,EAAK75B,GAAGzC,QAASwgC,GAGvClE,EAAK75B,GAAGg+B,UACRD,IAIZ,OAAOA,GAMXpa,EAAS7c,UAAUkH,sBAAwB,WACvC,OAAOnI,KAAKjI,KAAKoQ,yBAMrB2V,EAAS7c,UAAUm3B,0BAA4B,WAC3C,OAAOp4B,KAAKjI,KAAKqgC,6BAOrBta,EAAS7c,UAAU0H,mBAAqB,WACpC,OAAO3I,KAAKjI,KAAK4Q,sBAMrBmV,EAAS7c,UAAU4W,cAAgB,WAC/B,OAASwgB,WAAYr4B,KAAKjI,KAAK8f,gBAAiBygB,WAAYt4B,KAAKolB,aAKrEtH,EAAS7c,UAAUs3B,YAAc,SAAUC,EAAaC,EAASzH,GAC7DhxB,KAAK04B,qBAAqBH,YAAYC,EAAaC,EAASzH,IAEhE,IAAI7S,EAkXJ,OAjXAhd,IACIc,WAAS,IACV6b,EAAS7c,UAAW,kBAAc,GACrCE,IACIc,WAAS,IACV6b,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,WAAS,aACV6b,EAAS7c,UAAW,gBAAY,GACnCE,IACIc,gBACD6b,EAAS7c,UAAW,eAAW,GAClCE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,oBAAgB,GACvCE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,IACV6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,iBAAa,GACpCE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,0BAAsB,GAC7CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,2BAAuB,GAC9CE,IACIc,gBACD6b,EAAS7c,UAAW,kBAAc,GACrCE,IACIc,cACD6b,EAAS7c,UAAW,aAAS,GAChCE,IACIc,cACD6b,EAAS7c,UAAW,kBAAc,GACrCE,IACIc,WAAS,aACV6b,EAAS7c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,qBAAiB,GACxCE,IACIw3B,aAAYt2B,IACbyb,EAAS7c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,0BAAsB,GAC7CE,IACIw3B,aAAY3c,KACb8B,EAAS7c,UAAW,oBAAgB,GACvCE,IACIw3B,aAAYC,oBACb9a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,cACD6b,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIw3B,aAAY9a,KACbC,EAAS7c,UAAW,oBAAgB,GACvCE,IACIiB,gBAAesb,KAChBI,EAAS7c,UAAW,kBAAc,GACrCE,IACIw3B,aAAYhb,KACbG,EAAS7c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACIc,cACD6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACIw3B,aAAYx2B,IACb2b,EAAS7c,UAAW,sBAAkB,GACzCE,IACIw3B,aAAYnoB,KACbsN,EAAS7c,UAAW,sBAAkB,GACzCE,IACIc,cACD6b,EAAS7c,UAAW,eAAW,GAClCE,IACIc,cACD6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACV6b,EAAS7c,UAAW,iBAAa,GACpCE,IACIc,cACD6b,EAAS7c,UAAW,wBAAoB,GAC3CE,IACIc,cACD6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACIc,cACD6b,EAAS7c,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACV6b,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV6b,EAAS7c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACIc,WAAS,SACV6b,EAAS7c,UAAW,cAAU,GACjCE,IACIc,WAAS,SACV6b,EAAS7c,UAAW,aAAS,GAChCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACV6b,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,eAAW,GAClCE,IACI03B,WACD/a,EAAS7c,UAAW,YAAQ,GAC/BE,IACI03B,WACD/a,EAAS7c,UAAW,iBAAa,GACpCE,IACI03B,WACD/a,EAAS7c,UAAW,gBAAY,GACnCE,IACI03B,WACD/a,EAAS7c,UAAW,kBAAc,GACrCE,IACI03B,WACD/a,EAAS7c,UAAW,iBAAa,GACpCE,IACI03B,WACD/a,EAAS7c,UAAW,gBAAY,GACnCE,IACI03B,WACD/a,EAAS7c,UAAW,iBAAa,GACpCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,iBAAa,GACpCE,IACI03B,WACD/a,EAAS7c,UAAW,gBAAY,GACnCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,gBAAY,GACnCE,IACI03B,WACD/a,EAAS7c,UAAW,qBAAiB,GACxCE,IACI03B,WACD/a,EAAS7c,UAAW,iBAAa,GACpCE,IACI03B,WACD/a,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI03B,WACD/a,EAAS7c,UAAW,oBAAgB,GACvCE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,oBAAgB,GACvCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,qBAAiB,GACxCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,qBAAiB,GACxCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,oBAAgB,GACvCE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,gBAAY,GACnCE,IACI03B,WACD/a,EAAS7c,UAAW,kBAAc,GACrCE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,kBAAc,GACrCE,IACI03B,WACD/a,EAAS7c,UAAW,kBAAc,GACrCE,IACI03B,WACD/a,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,qBAAiB,GACxCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,oBAAgB,GACvCE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,wBAAoB,GAC3CE,IACI03B,WACD/a,EAAS7c,UAAW,kBAAc,GACrCE,IACI03B,WACD/a,EAAS7c,UAAW,mBAAe,GACtCE,IACI03B,WACD/a,EAAS7c,UAAW,eAAW,GAClCE,IACI03B,WACD/a,EAAS7c,UAAW,oBAAgB,GACvCE,IACI03B,WACD/a,EAAS7c,UAAW,0BAAsB,GAC7CE,IACI03B,WACD/a,EAAS7c,UAAW,eAAW,GAClCE,IACIc,YAAU,IACX6b,EAAS7c,UAAW,wBAAoB,GAC3CE,IACIw3B,aAAYloB,KACbqN,EAAS7c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACI03B,WACD/a,EAAS7c,UAAW,wBAAoB,GAC3CE,IACI03B,WACD/a,EAAS7c,UAAW,8BAA0B,GACjDE,IACI03B,WACD/a,EAAS7c,UAAW,0BAAsB,GAC7CE,IACI03B,WACD/a,EAAS7c,UAAW,gCAA4B,GACnDE,IACI03B,WACD/a,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI03B,WACD/a,EAAS7c,UAAW,2BAAuB,GAC9CE,IACI03B,WACD/a,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI03B,WACD/a,EAAS7c,UAAW,yBAAqB,GAC5C6c,EAAWK,EAAahd,IACpB23B,yBACDhb,IAELib,aCjuGEC,GAAyB,WAIzB,SAASA,EAAQliC,EAAQ4b,GACrBjQ,OAAKC,OAAOu2B,WACZj5B,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBA4CT,OAtCA6uB,EAAQ/3B,UAAU4B,cAAgB,WAC9B,MAAO,WAKXm2B,EAAQ/3B,UAAUkJ,iBAAmB,WACjCnK,KAAKlJ,OAAOsT,GAAG,iBAAkBpK,KAAKk5B,cAAel5B,OAEzDg5B,EAAQ/3B,UAAUwJ,oBAAsB,WAChCzK,KAAKlJ,OAAO4T,aAGhB1K,KAAKlJ,OAAO6T,IAAI,iBAAkB3K,KAAKk5B,gBAO3CF,EAAQ/3B,UAAU6I,QAAU,WACxB9J,KAAKyK,uBAETuuB,EAAQ/3B,UAAUi4B,cAAgB,WAK9B,IAAK,IAFDC,EADAzmB,EAAa1S,KAAKlJ,OAAkB,YAAEkJ,KAAKlJ,OAAO2I,iBAElD25B,EAAcp5B,KAAKlJ,OAAO8I,aACrBy5B,EAAI,EAAGA,EAAID,EAAYzhC,OAAQ0hC,IAAK,CAGzC,GAFsB1gC,YAAU,QAAS+Z,KACjB/Z,YAAU,QAASygC,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRr5B,KAAKlJ,OAAO2mB,eAAgBhe,gBAAiB05B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,SAASA,EAAOxiC,GACZ2L,OAAKC,OAAO62B,UACZv5B,KAAKlJ,OAASA,EA4BlB,OArBAwiC,EAAOr4B,UAAUwf,eAAiB,SAAU+Y,GACxCx5B,KAAKlJ,OAAOiB,KAAK0oB,eAAe+Y,IAMpCF,EAAOr4B,UAAU4B,cAAgB,WAC7B,MAAO,UAOXy2B,EAAOr4B,UAAU6I,QAAU,WACnB9J,KAAKlJ,OAAO4T,aAGhB1K,KAAKlJ,OAAOiB,KAAK4oB,aAAa7W,WAE3BwvB,KC5BPG,GAAuB,WAKvB,SAASA,EAAM3iC,GAEXkJ,KAAK05B,SAAU,EAEf15B,KAAK25B,oBAAqB,EAE1B35B,KAAK45B,eAAgB,EACrBn3B,OAAKC,OAAOm3B,SACZ75B,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBAu+BT,OAr+BAsvB,EAAMx4B,UAAU64B,0BAA4B,SAAU1mB,GAYlD,OATIpT,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QAC3CkJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAGvCoE,KAAKlJ,OAAOiB,KAAKhB,YAEV4G,OAAO,SAAUC,GAC7C,OAAOA,EAAExE,WAAaga,KAO9BqmB,EAAMx4B,UAAUkJ,iBAAmB,WAC/BnK,KAAKlJ,OAAOsT,GAAG6jB,GAAmBjuB,KAAK+5B,WAAY/5B,MACnDA,KAAKlJ,OAAOsT,GAAG+jB,GAAmBnuB,KAAKoH,WAAYpH,MACnDA,KAAKlJ,OAAOsT,GAAG4vB,GAAgBh6B,KAAKi6B,UAAWj6B,MAC/CA,KAAKlJ,OAAOsT,GAAG8vB,GAAmBl6B,KAAKm6B,YAAan6B,OAKxDy5B,EAAMx4B,UAAUs3B,YAAc,SAAUC,EAAaC,EAASzH,GAC1D,IAAIoJ,EAAOp6B,KAAKlJ,OACZ0hC,EAAY,GACK,UAAbxH,IACAhxB,KAAKq6B,aAAe,cAEP,UAAbrJ,IACAhxB,KAAKq6B,aAAe,iBAEP,UAAbrJ,IACAhxB,KAAKq6B,aAAe,iBAGxB,IAAK,IADD17B,KACKlH,EAAI,EAAGA,EAAI+gC,EAAY7gC,OAAQF,IACpCkH,EAAKlH,GAAKuI,KAAKlJ,OAAOwF,wBAAwBk8B,EAAY/gC,IAE9D,IACIuL,GACArE,KAAMA,EACN27B,UAAW7B,GAEVlhC,EAAgByI,KAAKlJ,SACtBkJ,KAAKu6B,SAASv3B,GAND,GASbo3B,EAAK9f,cACL8f,EAAK18B,SAAWsC,KAAKw6B,aAAaJ,EAAK18B,WAE3CsC,KAAKlJ,OAAOiB,KAAKi4B,WAMzByJ,EAAMx4B,UAAUu5B,aAAe,SAAU7gB,GAUrC,IAAK,IATD3c,EAAU,SAAUvF,GAEpB,GADAkiB,EAAYliB,GAAG6C,MAAQ7C,GAClBK,oBAAkB6hB,EAAYliB,GAAGyB,YAAa,CAC/C,IAAIuhC,EAAgB9gB,EAAYhc,OAAO,SAAUgB,GAC7C,OAAOA,EAAKvF,WAAaugB,EAAYliB,GAAG+G,iBACzC,GACHmb,EAAYliB,GAAGyB,WAAWoB,MAAQmgC,EAAcngC,QAG/C7C,EAAI,EAAGA,EAAIkiB,EAAYhiB,OAAQF,IACpCuF,EAAQvF,GAEZ,OAAOkiB,GAEX8f,EAAMx4B,UAAUg5B,UAAY,SAAUr8B,GAGlC,IAAK,IAFD88B,EACAC,EAAc/8B,EAAEtF,QACXb,EAAImG,EAAEtF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAijC,EAAgBC,EAAYljC,IACV+G,eAAgB,CAC9B,IAAI1F,EAAS6hC,EAAYh9B,OAAO,SAAUgB,GACtC,OAAOA,EAAKvF,WAAashC,EAAcl8B,iBAE3C,GAAI1F,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAagF,QAAQg8B,GACvCzhC,EAAeH,EAAO,IACX,IAAXwB,IACArB,EAAaS,aAAa2D,OAAO/C,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAa+Y,yBAA0B,GAE3ChS,KAAK25B,oBAAqB,IAK1C,GAAI7hC,oBAAkBkI,KAAKlJ,OAAOC,cAAgBiJ,KAAKlJ,OAAOC,WAAWY,OAAQ,CAKxE,IAHDijC,EADAR,EAAOp6B,KAAKlJ,OAEZ+jC,EAAgBj9B,EAAEtF,QAEtB,IAASb,EADQmG,EAAEtF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtCmjC,EAAkBC,EAAcpjC,GAMhC,GAJKK,oBAAkB8iC,EAAgB79B,WAClC69B,EAAgB79B,SAASE,eAAem9B,EAAK98B,gBAC9Cs9B,EAAgB79B,SAASq9B,EAAK98B,kBAE9Bs9B,EAAgB39B,eAAem9B,EAAK98B,eACnCs9B,EAAgBR,EAAK98B,cAAe3F,SAAWqI,KAAK25B,qBACpD7hC,oBAAkBsiC,EAAKj9B,iBAExB,IAAK,IADD4M,EAAa6wB,EAAgBR,EAAK98B,cAC7BnD,EAAI,EAAGA,EAAI4P,EAAUpS,OAAQwC,KACW,IAAzC0gC,EAAcn8B,QAAQqL,EAAU5P,MAChC0gC,EAAcx9B,OAAOlD,EAAG,EAAG4P,EAAU5P,IACrC4P,EAAU5P,GAAG4C,SAAWR,YAAWwN,EAAU5P,IAC7C1C,GAAK,GAIbmjC,EAAgB39B,eAAem9B,EAAKj9B,kBAA6D,MAAzCy9B,EAAgBR,EAAKj9B,mBACzE6C,KAAK25B,qBACTiB,EAAgB79B,SAASq9B,EAAKj9B,iBAAmB,YAC1Cy9B,EAAgB1hC,kBAChB0hC,EAAgBp8B,gBAEvB1G,oBAAkBsiC,EAAKrjC,cACvBqjC,EAAKrjC,eAETqjC,EAAKrjC,WAAWsG,OA1BG,EA0BkB,EAAGu9B,EAAgB79B,UAE5Dq9B,EAAK3c,eAAgB1mB,WAAYqjC,EAAKrjC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIkjC,EAAYhjC,OAAQF,IACpCge,WAAS,sBAAwBklB,EAAYljC,GAAG2B,SAAUuhC,EAAYljC,GAAIuI,KAAKlJ,QAEnF,IAAIkM,GAASrE,KAAMf,EAAEtF,QAASgiC,UAAW18B,EAAE66B,SACvCz4B,KAAKlJ,OAAOC,sBAAsBC,eAClCgJ,KAAK0Z,aAAe1Z,KAAKlJ,OAAOC,WAAWA,WAAW6E,KACtDoE,KAAKrE,SAAWqE,KAAKlJ,OAAOC,WAAWA,WAAW6E,OAGlDoE,KAAK0Z,aAAe1Z,KAAKlJ,OAAOiB,KAAKhB,WACrCiJ,KAAKrE,SAAWqE,KAAKlJ,OAAOC,YAEhCiJ,KAAKu6B,SAASv3B,KAGtBy2B,EAAMx4B,UAAUk5B,YAAc,SAAUv8B,GACpC,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAEtF,QAAQX,OAAQF,IAClCuI,KAAK06B,cAAgB98B,EAAEtF,QAAQb,IAC3BuI,KAAK06B,cAAcjhC,iBAAmBuG,KAAK06B,cAAcxhC,aAE8B,IADvF8G,KAAKlJ,OAAOiB,KAAKhB,WACb2H,QAAQsB,KAAK85B,0BAA0B95B,KAAK06B,cAAcl8B,gBAAgB,KACjD,IAA7BwB,KAAK06B,cAAcngC,QACnByF,KAAK86B,iBAIjBrB,EAAMx4B,UAAU85B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgB16B,KAAK06B,cACrBQ,EAAgBl7B,KAAKk7B,cACrBC,EAAQn7B,KAAKlJ,OASjB,KALIkkC,EADAh7B,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QAC/CqkC,EAAMpkC,WAAWA,WAAW6E,KAG5Bu/B,EAAMpkC,aAEHe,oBAAkBojC,IAAmBA,EAAchiC,YAiBtE,IAAK8G,KAAKlJ,OAAOqG,kBAAqBrF,oBAAkBojC,IAAkBA,EAAchiC,aAC/D,eAAtB8G,KAAKq6B,cAAuD,kBAAtBr6B,KAAKq6B,cAGtC,CAAA,IADD3gC,EADSsG,KAAK85B,0BAA0BoB,EAAc18B,gBAAgB,GAChD9E,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCyjC,EAAchiC,WAAW6D,SAASiD,KAAKlJ,OAAOwG,cAAc7F,GAAKiC,EAAajC,GAAGsF,cAtBL,CACpF,IAAK,IAAItF,EAAI,EAAGA,EAAIgB,OAAOC,KAAKsiC,GAAgBrjC,OAAQF,IAChDujC,EAAevjC,GAAGuI,KAAKlJ,OAAOwG,gBAAkB49B,EAAcn+B,SAASiD,KAAKlJ,OAAOwG,gBACnF29B,EAAMxjC,GAGY,eAAtBuI,KAAKq6B,aACAr6B,KAAKlJ,OAAOsG,WACb49B,EAAe39B,OAAO49B,EAAK,EAAGP,EAAc39B,UAGrB,kBAAtBiD,KAAKq6B,eACLr6B,KAAKlJ,OAAOsG,WACb49B,EAAe39B,OAAO49B,EAAM,EAAG,EAAGP,EAAc39B,WAaxDiD,KAAKlJ,OAAOqG,kBACRu9B,EAAcxhC,WACY,eAAtB8G,KAAKq6B,cAAuD,kBAAtBr6B,KAAKq6B,cAC3CK,EAAc16B,KAAKlJ,OAAOqG,iBAAmB+9B,EAAcl7B,KAAKlJ,OAAOqG,iBACvEu9B,EAAc39B,SAASiD,KAAKlJ,OAAOqG,iBAAmB+9B,EAAcl7B,KAAKlJ,OAAOqG,mBAGhFu9B,EAAc16B,KAAKlJ,OAAOqG,iBAAmB+9B,EAAcl7B,KAAKlJ,OAAOsG,WACvEs9B,EAAc39B,SAASiD,KAAKlJ,OAAOqG,iBAAmB+9B,EAAcl7B,KAAKlJ,OAAOsG,aAIpFs9B,EAAc39B,SAASiD,KAAKlJ,OAAOqG,iBAAmB,KACtDu9B,EAAc16B,KAAKlJ,OAAOqG,iBAAmB,QAIzDs8B,EAAMx4B,UAAUm6B,qBAAuB,SAAUjoB,EAASkoB,GACtD,IAAIC,EAAkC,kBAAtBt7B,KAAKq6B,aACjBr6B,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,qBAAqB3f,OAAS,GAAKwb,IACxD,IAArBA,EAAQvJ,UAAkB0xB,IAC3Bt7B,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,qBAAqB,GAAG0N,UAG3EyU,EAAMx4B,UAAUs6B,oBAAsB,SAAUpoB,EAASkoB,GACrD,IAAIG,EAAaroB,IAAYA,EAAQ7K,UAAUC,SAAS,eAAiB4K,EAAQ7K,UAAUC,SAAS,mBAChGkzB,EAAiBtoB,IAAYqoB,GAC7Bx7B,KAAKlJ,OAAOgI,cAAckB,KAAKlJ,OAAOiI,UAAUpH,OAAS,GAAGyU,aAAa,cACrE+G,EAAQ/G,aAAa,YACzBkvB,EAAYG,GAAwC,eAAtBz7B,KAAKq6B,aACnCr6B,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,oBAAoB3f,OAAS,GAAKwb,IAAYsoB,GAAkBH,IAC3Gt7B,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,oBAAoB,GAAG0N,UAG1EyU,EAAMx4B,UAAUy6B,WAAa,SAAU78B,EAAKvE,EAAO0I,GAC/C,IAAI24B,EAAS34B,EAAK3B,OAAS2J,UAAQhI,EAAK3B,OAAQ,MAAQ,KACxDrB,KAAKq6B,kBAAetd,EACpB,IAAI6e,EAAoB,EACxB57B,KAAKo7B,qBAAqBO,GAC1B37B,KAAKu7B,oBAAoBI,GACzB,IAAK,IAAIlkC,EAAI,EAAGA,EAAIuL,EAAKgF,KAAKrQ,OAAQF,KAC7BK,oBAAkB6jC,IAAWA,EAAOvvB,aAAa,cAAgBpJ,EAAKgF,KAAKvQ,GAAG2U,aAAa,cACxFtB,eAAa9H,EAAK3B,OAAQ,mBAC9BrB,KAAKq6B,aAAe,UACpBr6B,KAAK67B,gBAIb,IAAIzB,EAAOp6B,KAAKlJ,OACZglC,EAAS,EAETC,EAAa3B,EAAKnW,SAAWmW,EAAKnW,QAAQtsB,OAC1CqkC,SAASC,eAAe7B,EAAKjnB,QAAQC,GAAK,6BAA6B8oB,aAAe,EAEtFC,EAAiBn8B,KAAKo8B,UAAUhC,EAAKjnB,SAErCkpB,EAAgBjC,EAAKjuB,mBAAmB+vB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAK5G,aAAagJ,kBAAkBD,UAC/CzkC,oBAAkB6jC,KACnBC,EAAoBD,EAAOc,UAAYF,GAS3C,IAEIG,IAPAZ,EADA1B,EAAKjoB,cACItT,EAAI,GAAGq9B,aAGPN,EAAoBS,EAhBlB,GAkBUx9B,EAAI,GAAGq9B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACTpkC,YAAU,sBAAuBqK,GAC5Bg6B,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,EAC7D,GAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBj9B,KAAKq6B,eACrBr6B,KAAKo9B,oBACLp9B,KAAKq6B,aAAe,aACpBr6B,KAAKq9B,0BACLr9B,KAAKs9B,kBAAkB3B,GACvB37B,KAAKu9B,kBACLv9B,KAAKu7B,oBAAoBI,GACzB37B,KAAKw9B,kBAAkBx6B,EAAK3B,SAE5B67B,GAA4C,YAAtBl9B,KAAKq6B,aAA4B,CACvDr6B,KAAKq9B,0BACL,IAAIlqB,OAAU,EACV3H,KACJ2H,EAAUnI,UAAQhI,EAAK3B,OAAQ,OAC/BmK,KAAgBhD,MAAM5F,KAAKuQ,EAAQ1K,iBAAiB,oDACrC9Q,OAAS,GACpBqI,KAAKy9B,iBAAiBjyB,GAAY,EAAM,iBAE5CxL,KAAK09B,iBAAiB/B,GACtB37B,KAAKs9B,kBAAkB3B,GACvB37B,KAAKq6B,aAAe,gBAEpB8C,GAA4C,YAAtBn9B,KAAKq6B,eAC3Br6B,KAAKu9B,kBACLv9B,KAAKq9B,0BACLr9B,KAAKo9B,oBACLp9B,KAAKq6B,aAAe,gBACpBr6B,KAAK09B,iBAAiB/B,GACtB37B,KAAKo7B,qBAAqBO,GAC1B37B,KAAKw9B,kBAAkBx6B,EAAK3B,SAGpC,OAAOrB,KAAKq6B,cAEhBZ,EAAMx4B,UAAUm8B,kBAAoB,WAChC,IAAIO,MACJA,KAAgBn1B,MAAM5F,KAAK5C,KAAKlJ,OAAOqc,QAAQ1K,iBAAiB,oBACjD9Q,OAAS,GACpBqI,KAAKy9B,iBAAiBE,GAAY,EAAO,kBAGjDlE,EAAMx4B,UAAUq8B,kBAAoB,SAAUlb,GAC1C,IAAIwb,EAAO59B,KAAKlJ,OAAOqc,QACnBinB,EAAOp6B,KAAKlJ,OAChB,GAAIsrB,GAAoC,IAAvBA,EAAUxY,WAAmBwY,EAAU9Z,UAAUC,SAAS,cAAe,CACtF,IAAIs1B,EAAM79B,KAAKlJ,OAAOyV,cAAc,OAASC,UAAW,sBACpDsxB,EAAgB99B,KAAKlJ,OAAOqV,mBAC5B4xB,EAAgB,EAChB3D,EAAKnW,UACL8Z,EAAgB3D,EAAK1I,cAAcsM,aAAa9B,cAEpD,IAAI+B,GAAgBnmC,oBAAkBkI,KAAKlJ,OAAO0uB,gBAAgBC,UAC9DwY,IACAJ,EAAIljC,MAAM2hC,IAAMt8B,KAAKlJ,OAAOiB,KAAKob,QAAQmE,uBAAuB,gBAAgB,GAAG4kB,aAC7E6B,EAAgB,MAE1BF,EAAIljC,MAAMkS,MAAQoxB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAcl+B,KAAKm+B,iBAAmB,KAC1CL,EAAcr1B,iBAAiB,sBAAsB9Q,QACtDmmC,EAAcnwB,YAAYkwB,KAItCpE,EAAMx4B,UAAUy8B,iBAAmB,SAAUU,GACzC,IAAI5C,EAAa4C,IAAcA,EAAU91B,UAAUC,SAAS,eACxD61B,EAAU91B,UAAUC,SAAS,mBACjC,GAAI61B,IAAc5C,GAAcx7B,KAAKlJ,OAAOgI,cAAckB,KAAKlJ,OAAOiI,UAAUpH,OAAS,GAAGyU,aAAa,cACrGgyB,EAAUhyB,aAAa,YAAa,CACpC,IAAIiyB,EAAer+B,KAAKlJ,OAAOyV,cAAc,OAASC,UAAW,qBAC7D8xB,EAAiBt+B,KAAKlJ,OAAO08B,aACjC6K,EAAa1jC,MAAMkS,MAAQ7M,KAAKlJ,OAAOqc,QAAQ+qB,YAAcl+B,KAAKm+B,iBAAmB,KAChFG,EAAe71B,iBAAiB,qBAAqB9Q,SACtD2mC,EAAeh2B,UAAUsE,IAAI,uBAC7B0xB,EAAe3wB,YAAY0wB,GAC3BA,EAAa1jC,MAAM4jC,OAASv+B,KAAKm+B,iBAAmB,QAIhE1E,EAAMx4B,UAAUk9B,eAAiB,WAC7B,IAAIK,EAAax+B,KAAKlJ,OAAO08B,aAAagJ,kBAC1C,OAAOgC,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAMx4B,UAAU46B,aAAe,WAC3B,IAAI+C,EAAW5C,SAAS1kB,uBAAuB,qBAAqB,GAEpE,IADgBsnB,EAASn2B,iBAAiB,gBAAgB9Q,SACvCqI,KAAKlJ,OAAO0uB,gBAAgBC,SAAU,CACrD,IAAIoZ,EAAM7C,SAASzvB,cAAc,OACjCjE,YAAUu2B,GAAM,wBAChBv2B,YAAUu2B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAAS7zB,cAAc,eAClCg0B,EAAUH,EAAS7zB,cAAc,cAAc0C,UAC/CqxB,IACAC,EAAUD,EAASrxB,UACnBqxB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS7zB,cAAc,cAAc0C,UAAY,GACjD,IAAIyxB,EAAclD,SAASzvB,cAAc,QACzC2yB,EAAY1yB,UAAY,aACxB0yB,EAAYvkC,MAAMwkC,YAAc,OAChCD,EAAYzxB,UAAYsxB,EACxBH,EAAS7zB,cAAc,cAAc4C,YAAYkxB,GACjDD,EAAS7zB,cAAc,cAAc4C,YAAYuxB,KAGzDzF,EAAMx4B,UAAUs8B,gBAAkB,WAC9B,IAAI6B,EAAYpD,SAASjxB,cAAc,gBACnCq0B,GACAA,EAAUpa,UAGlByU,EAAMx4B,UAAUu8B,kBAAoB,SAAUn8B,GAEtBvJ,oBAAkBkI,KAAKlJ,OAAO0uB,gBAAgBC,UADlE,IAAItS,EAEA3H,MAEJA,GADA2H,EAAUnI,UAAQ3J,EAAQ,UACAmH,MAAM5F,KAAKuQ,EAAQ1K,iBAAiB,uDAC/C9Q,SACe,eAAtBqI,KAAKq6B,eACLr6B,KAAKy9B,iBAAiBjyB,GAAY,EAAM,aACpCxL,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,wBAAwB3f,OAAS,GAC5EqI,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,wBAAwB,GAAG0N,UAGpD,kBAAtBhlB,KAAKq6B,cACLr6B,KAAKy9B,iBAAiBjyB,GAAY,EAAM,kBAIpDiuB,EAAMx4B,UAAUo8B,wBAA0B,WACtC,IAAIgC,MACJA,KAAY72B,MAAM5F,KAAK5C,KAAKlJ,OAAOqc,QAAQ1K,iBAAiB,+BACjD9Q,SACPqI,KAAKy9B,iBAAiB4B,GAAQ,EAAO,gBACrCr/B,KAAKy9B,iBAAiB4B,GAAQ,EAAO,eAG7C5F,EAAMx4B,UAAUw8B,iBAAmB,SAAUj+B,EAAOoN,EAAKJ,GACrD,IAAK,IAAI/U,EAAI,EAAGe,EAAMgH,EAAM7H,OAAQF,EAAIe,EAAKf,IACrCmV,EACApN,EAAM/H,GAAG6Q,UAAUsE,IAAIJ,GAGvBhN,EAAM/H,GAAG6Q,UAAU0c,OAAOxY,IAItCitB,EAAMx4B,UAAUm7B,UAAY,SAAUjpB,GAClC,IAAImsB,EAAMnsB,EAAQosB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAY3hC,OAAO+kC,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAahlC,OAAOilC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,EACnC,OAASzD,IAAKzlB,KAAKmpB,MAAM1D,GAAMS,KAAMlmB,KAAKmpB,MAAMjD,KAEpDtD,EAAMx4B,UAAU84B,WAAa,SAAU/2B,GACnC,IAAIo3B,EAAOp6B,KAAKlJ,OACZmpC,EAAejgC,KAAKlJ,OAAOqc,QAAQpI,cAAc,sBACrDk1B,EAAatlC,MAAMulC,OAAS,GAC5B,IAAIvE,EAAS34B,EAAK3B,OAAS2J,UAAQhI,EAAK3B,OAAQ,MAAQ,KACpD8+B,EAASxE,EAASA,EAAO/xB,UAAY,EACrC+wB,KACAO,EAAgBd,EAAK99B,wBAAwB6jC,GAmBjD,GAlBAngC,KAAKu9B,kBACLv9B,KAAK05B,SAAU,EACV12B,EAAKrE,KAAK,GAIXg8B,EAAc33B,EAAKrE,KAHnBg8B,EAAY/hC,KAAKoK,EAAKrE,OAKV,IAAZwhC,EACAngC,KAAKogC,mBAAmBzF,EAAaO,IAGrCl7B,KAAK05B,SAAU,EACf15B,KAAK67B,iBAEJzB,EAAK5U,gBAAgBC,UAAYzlB,KAAK05B,SACvCU,EAAK1B,qBAAqBgD,WAAW14B,EAAKgF,KAAMm4B,EAAQn9B,GAExDo3B,EAAK5U,gBAAgBC,SAAU,CAE/B,IADI4a,EAAcv1B,eAAa9H,EAAK3B,OAAQ,gBACzBg/B,EAAYjtB,KAAOpT,KAAKlJ,OAAO0uB,gBAAgBC,SAAU,CACvD4a,EAAYC,cAAc,GAChC5H,qBAAqBgD,WAAW14B,EAAKgF,KAAMm4B,EAAQn9B,IAGtE,GAAIA,EAAK3B,QAAU2J,UAAQhI,EAAK3B,OAAQ,IAAM+4B,EAAK5U,gBAAgBC,UAAW,CAC1E,IAAI4a,GAAAA,EAAcv1B,eAAa9H,EAAK3B,OAAQ,iBAExC4+B,EAAatlC,MAAMulC,OAAS,aAIxCzG,EAAMx4B,UAAUmG,WAAa,SAAUpE,GACnC,IAAIo3B,EAAOp6B,KAAKlJ,OACXsjC,EAAK5U,gBAAgBC,UAuBlBziB,EAAK3B,QAAU2J,UAAQhI,EAAK3B,OAAQ,IAAM+4B,EAAK5U,gBAAgBC,WAAa3a,eAAa9H,EAAK3B,OAAQ,eACtGyJ,eAAa9H,EAAK3B,OAAQ,cAAc+R,KAAOgnB,EAAK5U,gBAAgBC,YACpEhQ,WAAS,eAAgBzV,KAAKq6B,aAAcr3B,GAC5Co3B,EAAKjxB,QhBnaA,UgBmawBnG,IACxBA,EAAKkG,QAAUkxB,EAAK5U,gBAAgBC,WACrCzlB,KAAKugC,aAAav9B,GACdo3B,EAAK9f,cACL8f,EAAK18B,SAAWsC,KAAKw6B,aAAaJ,EAAK18B,aA7B/CoN,eAAa9H,EAAK3B,OAAQ,eACtBrB,KAAKlJ,OAAOqc,QAAQpI,cAAc,kBAClC/K,KAAKq6B,aAAe,WAExB5kB,WAAS,eAAgBzV,KAAKq6B,aAAcr3B,GAC5CA,EAAKs3B,UAAYt3B,EAAKs3B,YAAct3B,EAAKw9B,UAAYxgC,KAAKygC,aAAaz9B,EAAK3B,OAAOygB,eAAiB9e,EAAKs3B,UACzGF,EAAKjxB,QhBhZA,UgBgZwBnG,GACxBA,EAAKkG,SACD3R,EAAgByI,KAAKlJ,SACtBkJ,KAAKu6B,SAASv3B,GAEdo3B,EAAK9f,cACL8f,EAAK18B,SAAWsC,KAAKw6B,aAAaJ,EAAK18B,WAE3C08B,EAAKriC,KAAKi4B,UACLl4B,oBAAkBsiC,EAAKjuB,mBAAmBpB,cAAc,wBACzDqvB,EAAKjuB,mBAAmBpB,cAAc,sBAAsBia,WAkB5EhlB,KAAKq9B,0BACLr9B,KAAKo9B,oBACAtlC,oBAAkBkI,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,qBAAqB,IAG7Exf,oBAAkBkI,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,oBAAoB,KACvFtX,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,oBAAoB,GAAG0N,SAHlEhlB,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,qBAAqB,GAAG0N,UAM3EyU,EAAMx4B,UAAUs/B,aAAe,SAAUv9B,GACrC,IAKI09B,EALAtG,EAAOp6B,KAAKlJ,OAEZsrB,EAAYpX,UAAQhI,EAAK3B,OAAQ,MACjCs/B,EAAcC,MAAM5gC,KAAKygC,aAAare,IAAc,EAAIpiB,KAAKygC,aAAare,GAC1Eie,EAAcv1B,eAAa9H,EAAK3B,OAAQ,cAE5C,GAAIg/B,GAAeA,EAAYjtB,KAAOpT,KAAKlJ,OAAO0uB,gBAAgBC,WAAa5uB,EAAamJ,KAAKlJ,UACzFS,EAAgByI,KAAKlJ,QAAS,CAClC4pC,EAAaL,EAAYC,cAAc,GAGvC,IAAK,IAFDhoC,EAAU8hC,EAAKzxB,qBACfurB,KACKz8B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCy8B,EAAQz8B,GAAKa,EAAQb,GAAG6C,MAE5B8/B,EAAK/nB,OAAO6nB,IAAqBhG,QAASA,EAAS57B,QAASA,IAC5DooC,EAAWruB,OAAO2nB,IAAkBvB,QAASkI,EAAaroC,QAASA,IACnE,IAAIuoC,EAAqBH,EAAWhI,qBAAqBhf,aACzD,IAAK5hB,oBAAkB+oC,GACnB,IAASppC,EAAI,EAAGA,EAAIopC,EAAmBlpC,OAAQF,IAE3C,GADAopC,EAAmBppC,GAAG6C,MAAQ7C,GACzBK,oBAAkB+oC,EAAmBppC,GAAGyB,YAAa,CACtD,IAAI4nC,EAAcviC,WAAS,sBAAwBsiC,EAAmBppC,GAAG+G,eAAiB,SAAUkiC,GACpGG,EAAmBppC,GAAGyB,WAAWoB,MAAQwmC,EAIrD1G,EAAKriC,KAAKi4B,UACV0Q,EAAW3oC,KAAKi4B,UACZ0Q,EAAW3oC,KAAKhB,WAAWY,OAAS,IACpC+oC,EAAW3oC,KAAKi4B,UACXl4B,oBAAkB4oC,EAAWv0B,mBAAmBpB,cAAc,wBAC/D21B,EAAWv0B,mBAAmBpB,cAAc,sBAAsBia,SAEjEltB,oBAAkB4oC,EAAWlN,aAAazoB,cAAc,uBACzD21B,EAAWlN,aAAazoB,cAAc,qBAAqBia,UAInEztB,EAAgByI,KAAKlJ,UACrB4pC,EAAaL,EAAYC,cAAc,GACvClG,EAAKriC,KAAKi4B,UACV0Q,EAAW3oC,KAAKi4B,YAGxByJ,EAAMx4B,UAAUw/B,aAAe,SAAUre,GACrC,OAAOA,EAAY7P,SAAS6P,EAAUhW,aAAa,iBAAkB,IAAM,GAE/EqtB,EAAMx4B,UAAU9H,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtB8G,KAAKq6B,aAAkC,CACvC,IAAI0G,EAAiB/gC,KAAKlJ,OAAO6R,qBAAqB,GACtD3I,KAAKk7B,cAAgB/hC,EAAc6G,KAAKlJ,OAAQiqC,EAAe7nC,WAAWE,UAE9E,GAA0B,kBAAtB4G,KAAKq6B,aAAkC,CAC3Br6B,KAAKlJ,OAAO6R,qBAAqB,GAAGpO,QAClCrB,EAAWqB,MACrByF,KAAKk7B,cAAgB/hC,EAAc6G,KAAKlJ,OAAQoC,EAAWE,UAG3D4G,KAAK7G,cAAcD,KAI/BugC,EAAMx4B,UAAUs5B,SAAW,SAAUv3B,EAAMg+B,GACvC,GAA0B,YAAtBhhC,KAAKq6B,eAA+BxjC,EAAamJ,KAAKlJ,QAAS,CAC/D,IAAIsjC,EAAOp6B,KAAKlJ,OACZ4jC,OAAgB,EAChBQ,OAAgB,EACpB,GAAIpjC,oBAAkBkL,EAAKs3B,WAAY,CACnC,IAAI1wB,EAAWwwB,EAAKjyB,wBAAwB,GAAK,EAC7CrP,EAASshC,EAAK99B,wBAAwBsN,GAC1C5J,KAAK7G,cAAcL,QAGnBkK,EAAKs3B,UAAYt3B,EAAKs3B,YAAct3B,EAAKw9B,UAAYxgC,KAAKygC,aAAaz9B,EAAK3B,OAAOygB,eAAiB9e,EAAKs3B,UACzGt6B,KAAKk7B,cAAgBd,EAAK99B,wBAAwB0G,EAAKs3B,WAE3D,IAAIK,KACJO,EAAgBl7B,KAAKk7B,cAChBl4B,EAAKrE,KAAK,GAIXg8B,EAAc33B,EAAKrE,KAHnBg8B,EAAY/hC,KAAKoK,EAAKrE,MAK1B,IAAI2P,EAAQ,EACR2vB,EAAej+B,KAAKlJ,OAAO0uB,gBAAgBC,SAC/CzlB,KAAKihC,eAAiBhD,EAEjBA,EAIDj+B,KAAK45B,cAA8BqE,GAAgBj+B,KAAK25B,mBAHxD35B,KAAKogC,mBAAmBzF,EAAaO,GAMzC,IAAK,IADDgG,EAAavG,EAAYhjC,OACpBF,EAAI,EAAGA,EAAIypC,EAAYzpC,IAAK,CACjCijC,EAAgBC,EAAYljC,GAC5BuI,KAAK06B,cAAgBA,EACrB,IAAIzrB,EAAcjM,EAAKs3B,UACnBn/B,GAAmBrD,oBAAkBsiC,EAAKj9B,iBAC9C,GAA0B,YAAtB6C,KAAKq6B,aAA4B,CAIjC,GAHKD,EAAK5U,gBAAgBC,WAAYub,GAClChhC,KAAK86B,gBAEL96B,KAAK06B,gBAAkB16B,KAAKk7B,cAAe,CAC3C,IAAIiG,EAAenhC,KAAKygC,aAAaz9B,EAAK3B,OAAO+/B,aAAatf,eAC1D8e,MAAMO,KACNA,EAAenhC,KAAKygC,aAAaz9B,EAAK3B,OAAOygB,gBAEjD7S,EAAcjM,EAAKs3B,UAAY6G,EAC/BjG,EAAgBl7B,KAAKk7B,cAAgBl7B,KAAKlJ,OAAOwF,wBAAwB0G,EAAKs3B,WAElF,IAAI+G,EAAerhC,KAAK0Z,aAAahb,QAAQw8B,GAE7C,GADAl7B,KAAKshC,UAAUD,EAAclmC,EAAiB1D,GACpB,kBAAtBuI,KAAKq6B,aAAkC,CAiBvC,GAhBKa,EAAczhC,iBAOf6U,EAAQtO,KAAKuhC,cAAcrG,EAAe,GACtCl7B,KAAKlJ,OAAOqG,iBACZ6C,KAAKrE,SAAS0B,OAAOgkC,EAAe/yB,EAAQ,EAAG,EAAGtO,KAAK06B,cAAc39B,UAEzEiD,KAAK0Z,aAAarc,OAAOgkC,EAAe/yB,EAAQ,EAAG,EAAGtO,KAAK06B,iBAVvD16B,KAAKlJ,OAAOqG,iBACZ6C,KAAKrE,SAAS0B,OAAOgkC,EAAe,EAAG,EAAGrhC,KAAK06B,cAAc39B,UAEjEiD,KAAK0Z,aAAarc,OAAOgkC,EAAe,EAAG,EAAGrhC,KAAK06B,gBASvDA,EAAcxhC,WAAa8G,KAAK0Z,aAAa2nB,GAAcnoC,WAC3DwhC,EAAcl8B,eAAiBwB,KAAK0Z,aAAa2nB,GAAc7iC,eAC/Dk8B,EAAcngC,MAAQyF,KAAK0Z,aAAa2nB,GAAc9mC,MAClDmgC,EAAcjhC,gBAAiB,CAE/BuG,KAAKwhC,uBAAuB9G,EADhB,GAEZ16B,KAAKyhC,kBAAkB/G,EAAe2G,EAAe/yB,EAAQ,GAEjE,GAAI4sB,EAAchiC,WAAY,CAC1B,IACIQ,EADMsG,KAAK85B,0BAA0BoB,EAAc18B,gBAChC,GAAG9E,aACtBgoC,EAAqBhoC,EAAagF,QAAQw8B,GAAiB,EAC/DxhC,EAAa2D,OAAOqkC,EAAoB,EAAGhH,IAGnD16B,KAAK2hC,WAAW1yB,EAAaoyB,EAAcr+B,EAAMg+B,EAAY7lC,EAAiB1D,GAElF,GAAIK,oBAAkB4iC,EAAcxhC,YAAa,CAC7C,IAAIugB,EAAgB2gB,EAAK38B,WACrBmkC,EAAiBnoB,EAAc/a,QAAQsB,KAAKk7B,eACtB,kBAAtBl7B,KAAKq6B,aACL5gB,EAAcpc,OAAOukC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtB16B,KAAKq6B,cACV5gB,EAAcpc,OAAOukC,EAAgB,EAAGlH,GAGhDN,EAAK1B,qBAAqBqC,2BAItCtB,EAAMx4B,UAAU0gC,WAAa,SAAU1yB,EAAaoyB,EAAcr+B,EAAM7H,EAAiB6lC,EAAYvpC,GACjG,IAAI2iC,EAAOp6B,KAAKlJ,OACZ4C,EAAeF,EAAoBwG,KAAKk7B,eACxC2G,EAAsB/pC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgB0pC,EAAe,EAC5C3nC,EAAa/B,OAAS0pC,EAAe,EACf,kBAAtBrhC,KAAKq6B,eACDD,EAAKj9B,iBACL6C,KAAKrE,SAAS0B,OAAOwkC,EAAoB,EAAG7hC,KAAK06B,cAAc39B,UAC/DiD,KAAK0Z,aAAarc,OAAOwkC,EAAoB,EAAG7hC,KAAK06B,gBAGrD16B,KAAK0Z,aAAarc,OAAOwkC,EAAoB,EAAG7hC,KAAK06B,eAEzD16B,KAAK8hC,cACD9hC,KAAK06B,cAAcjhC,iBACnBuG,KAAKyhC,kBAAkBzhC,KAAK06B,cAAemH,EAAoB7hC,KAAKk7B,cAAc3hC,YAI9FkgC,EAAMx4B,UAAUqgC,UAAY,SAAUD,EAAclmC,EAAiB1D,GACjE,IAAI2iC,EAAOp6B,KAAKlJ,OAChB,GAA0B,eAAtBkJ,KAAKq6B,aAA+B,CAQpC,GAPID,EAAKj9B,iBACL6C,KAAKrE,SAAS0B,OAAOgkC,EAAc,EAAGrhC,KAAK06B,cAAc39B,UAE7DiD,KAAK06B,cAAcxhC,WAAa8G,KAAK0Z,aAAa2nB,GAAcnoC,WAChE8G,KAAK06B,cAAcl8B,eAAiBwB,KAAK0Z,aAAa2nB,GAAc7iC,eACpEwB,KAAK06B,cAAcngC,MAAQyF,KAAK0Z,aAAa2nB,GAAc9mC,MAC3DyF,KAAK0Z,aAAarc,OAAOgkC,EAAc,EAAGrhC,KAAK06B,eAC3C16B,KAAK06B,cAAcjhC,gBAAiB,CAEpCuG,KAAKyhC,kBAAkBzhC,KAAK06B,cAAe2G,GAC3CrhC,KAAKwhC,uBAAuBxhC,KAAK06B,cAFrB,GAIhB,GAAI16B,KAAKk7B,cAAchiC,WAAY,CAC/B,IACIQ,EADMsG,KAAK85B,0BAA0B95B,KAAKk7B,cAAc18B,gBACrC,GAAG9E,aACtBgoC,EAAqBhoC,EAAagF,QAAQsB,KAAKk7B,eACnDxhC,EAAa2D,OAAOqkC,EAAoB,EAAG1hC,KAAK06B,kBAI5DjB,EAAMx4B,UAAU6gC,YAAc,WAC1B,IAAI1H,EAAOp6B,KAAKlJ,OACZ4jC,EAAgB16B,KAAK06B,cACrBQ,EAAgBl7B,KAAKk7B,cACrB6G,EAAY3H,EAAK98B,aAWrB,GAVK49B,EAAczhC,kBACfyhC,EAAczhC,iBAAkB,EAChCyhC,EAAclpB,yBAA0B,EACpCla,oBAAkBojC,EAAcxhC,gBAChCwhC,EAAcxhC,iBACT0gC,EAAKj9B,iBAAmBrF,oBAAkBojC,EAAcn+B,SAASglC,MAClE7G,EAAcn+B,SAASglC,SAIT,kBAAtB/hC,KAAKq6B,aAAkC,CACvC,IAAInhC,EAAaqD,YAAW2+B,GAQ5B,UAPOhiC,EAAWQ,aAClBghC,EAAcxhC,WAAaA,EAC3BwhC,EAAcl8B,eAAiB08B,EAAc9hC,SAC7C8hC,EAAcxhC,aAAa2D,OAAO69B,EAAcxhC,aAAa/B,OAAQ,EAAG+iC,GACnE5iC,oBAAkB4iC,IAAmBN,EAAKj9B,iBAAoBrF,oBAAkBojC,EAAcn+B,SAASglC,KACxG7G,EAAcn+B,SAASq9B,EAAK98B,cAAcD,OAAO69B,EAAcxhC,aAAa/B,OAAQ,EAAG+iC,EAAc39B,UAEpG29B,EAAcjhC,gBAGd,CAEDihC,EAAcngC,MAAQ2gC,EAAc3gC,MAAQ,EAC5CyF,KAAKwhC,uBAAuB9G,EAFhB,QAHZA,EAAcngC,MAAQ2gC,EAAc3gC,MAAQ,EAOhD2gC,EAAc3hC,UAAW,IAMjCkgC,EAAMx4B,UAAU65B,cAAgB,WACxB96B,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,SAChEkJ,KAAK0Z,aAAe1Z,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAC3DoE,KAAKrE,SAAWqE,KAAKlJ,OAAOC,WAAWA,WAAW6E,OAGlDoE,KAAK0Z,aAAe1Z,KAAKlJ,OAAOiB,KAAKhB,WACrCiJ,KAAKrE,SAAWqE,KAAKlJ,OAAOC,YAEhC,IAAIirC,EACJA,EAAa7oC,EAAc6G,KAAKlJ,OAAQkJ,KAAK06B,cAActhC,UAC3D4G,KAAKiiC,cAAcD,IAEvBvI,EAAMx4B,UAAUwgC,kBAAoB,SAAU3oC,EAAQwV,EAAO/U,GACzD,IAAIqV,EACAwrB,EAAOp6B,KAAKlJ,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBmX,EAAgB9V,EAAOY,aAAajC,GACpC6W,IACA8rB,EAAK18B,SAASL,OAAOiR,EAAO,EAAGM,GAC/B6G,WAAS,sBAAwB7G,EAAcxV,SAAUwV,EAAe5O,KAAKlJ,QACzEsjC,EAAKj9B,iBACL6C,KAAKrE,SAAS0B,OAAOiR,EAAO,EAAGM,EAAc7R,UAE7C6R,EAAcnV,kBACd6U,EAAQtO,KAAKyhC,kBAAkB7yB,EAAeN,IAGtD,OAAOA,GAEXmrB,EAAMx4B,UAAUugC,uBAAyB,SAAU1oC,EAAQyB,GACvD,IACIqU,EADAjX,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BmX,EAAgB9V,EAAOY,aAAajC,GACpC,IAAIgG,OAAa,EACb3E,EAAOI,aACPuE,EAAatE,EAAc6G,KAAKlJ,OAAQgC,EAAOI,WAAWE,WAE9DwV,EAAcrU,MAAQzB,EAAOI,WAAauE,EAAWlD,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFqU,EAAcnV,kBACdc,IACAA,EAAQyF,KAAKwhC,uBAAuB5yB,EAAerU,IAG3D,OAAOA,GAEXk/B,EAAMx4B,UAAUghC,cAAgB,SAAUnpC,GACtC,IACI/B,EADAqjC,EAAOp6B,KAAKlJ,OAGZC,EADAiJ,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACnDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE7B,IAAIirC,EAAalpC,EAGbqC,GAAmBrD,oBAAkBsiC,EAAKj9B,iBAC1C+kC,EAAiBliC,KAAK85B,0BAA0BkI,EAAWxjC,gBAAgB,GAC/E,GAAIwjC,EAAY,CACZ,GAAIA,EAAW9oC,WAAY,CACvB,IAAIQ,EAAewoC,EAAiBA,EAAexoC,gBAC/CyoC,EAAa,EACbzoC,GAAgBA,EAAa/B,OAAS,IACtCwqC,EAAazoC,EAAagF,QAAQsjC,GAClCE,EAAexoC,aAAa2D,OAAO8kC,EAAY,GAC1CniC,KAAKlJ,OAAOqG,iBACbnC,GAAaX,MAAO2nC,EAAYvmC,OAAQ,UAAYuE,KAAKlJ,OAAQqE,EAAiB6mC,EAAW1nC,MAAO0nC,EAAW1nC,QAI3H,GAAI8/B,EAAKj9B,gBAAiB,CAClB6kC,EAAWvoC,iBAAmBuoC,EAAWtoC,aAAa/B,OAAS,GAC/DqI,KAAKoiC,gBAAgBJ,GAKzB,IAAK,IAHD/G,OAAM,EACNoH,OAAM,EACN3oB,EAAe3iB,EACVU,EAAI,EAAGA,EAAIiiB,EAAa/hB,OAAQF,IACjCiiB,EAAajiB,GAAGuI,KAAKlJ,OAAOsG,aAAe4kC,EAAWjlC,SAASiD,KAAKlJ,OAAOsG,aAC3E69B,EAAMxjC,GAGd,IAASA,EAAI,EAAGA,EAAIuI,KAAK0Z,aAAa/hB,OAAQF,IACtCuI,KAAK0Z,aAAajiB,GAAGuI,KAAKlJ,OAAOsG,aAAe4kC,EAAWjlC,SAASiD,KAAKlJ,OAAOsG,aAChFilC,EAAM5qC,IAGD,IAATwjC,IAAuB,IAAToH,IACdtrC,EAAWsG,OAAO49B,EAAK,GACvBj7B,KAAK0Z,aAAarc,OAAOglC,EAAK,IAGtC,IAAIC,EAAgBtiC,KAAK0Z,aAAahb,QAAQsjC,GAC9C,IAAK5H,EAAKj9B,gBAAiB,CACvB,IAAIolC,EAAcviC,KAAKlJ,OAAO2G,WAAWiB,QAAQsjC,IAC5B,IAAjBO,IACAnI,EAAK38B,WAAWJ,OAAOklC,EAAa,GACpCxrC,EAAWsG,OAAOklC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyBlI,EAAKj9B,gBAE9B,IAAK,IADDqlC,EAAkBpI,EAAK1+B,0BAA0B,GAC5CvB,EAAI,EAAGA,EAAI6F,KAAK0Z,aAAa/hB,OAAQwC,IACtC6F,KAAK0Z,aAAavf,GAAGqoC,KAAqBR,EAAWQ,KACrDF,EAAgBnoC,GAI5B,IAAKigC,EAAKj9B,gBAAiB,CACvB,IAAIslC,EAAqBziC,KAAKuhC,cAAcS,EAAY,GACxDhiC,KAAK0Z,aAAarc,OAAOilC,EAAeG,EAAqB,GAE7DT,EAAW9oC,YAAcgpC,GAAkBA,EAAexoC,eAAiBwoC,EAAexoC,aAAa/B,SACvGuqC,EAAe3oC,UAAW,EAC1B2oC,EAAezoC,iBAAkB,EACjCyoC,EAAelwB,yBAA0B,KAIrDynB,EAAMx4B,UAAUmhC,gBAAkB,SAAUtpC,GACxC,IACI8V,EACAqsB,EACAoH,EACAtrC,EAJOiJ,KAAKlJ,OAMZC,EADAiJ,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACnDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDmX,EAAgB9V,EAAOY,aAAajC,GACpC,IAAIiiB,OAAe,EAEfA,EADA1Z,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACjDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE/B,IAAK,IAAI+/B,EAAM,EAAGA,EAAMpd,EAAa/hB,OAAQm/B,IACrCpd,EAAaod,GAAK92B,KAAKlJ,OAAOsG,aAAewR,EAAc7R,SAASiD,KAAKlJ,OAAOsG,aAChF69B,EAAMnE,GAGd,IAAK,IAAI4L,EAAM,EAAGA,EAAM1iC,KAAK0Z,aAAa/hB,OAAQ+qC,IAC9C,GAAI1iC,KAAK0Z,aAAagpB,GAAK1iC,KAAKlJ,OAAOsG,aAAewR,EAAc7R,SAASiD,KAAKlJ,OAAOsG,WAAY,CACjGilC,EAAMK,EACN,OAGK,IAATzH,IAAuB,IAAToH,IACdtrC,EAAWsG,OAAO49B,EAAK,GACvBj7B,KAAK0Z,aAAarc,OAAOglC,EAAK,IAE9BzzB,EAAcnV,iBACduG,KAAKoiC,gBAAgBxzB,KAIjC6qB,EAAMx4B,UAAUsgC,cAAgB,SAAUzoC,EAAQwV,GAC9C,IAAIM,EACJ,IAAK9V,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C6W,KADAM,EAAgB9V,EAAOY,aAAajC,IAElBgC,kBACd6U,EAAQtO,KAAKuhC,cAAc3yB,EAAeN,IAGlD,OAAOA,GAEXmrB,EAAMx4B,UAAUm/B,mBAAqB,SAAUuC,EAAgB/zB,GAChD5O,KAAKlJ,OAAhB,IACI8rC,EAAiB5iC,KACrB2iC,EAAehlC,OAAO,SAAUC,GAC5B,GAAIA,EAAEnE,kBAAoB3B,oBAAkB8F,EAAElE,cAAe,CAEzD,IAAe,IADHkE,EAAElE,aAAagF,QAAQkQ,GAQ/B,OAHAg0B,EAAevI,aAAe,UAC9BuI,EAAe/G,oBACf+G,EAAelJ,SAAU,GALzBkJ,EAAexC,mBAAmBxiC,EAAElE,aAAckV,OAWlE6qB,EAAMx4B,UAAU6I,QAAU,WACtB9J,KAAKyK,uBAKTgvB,EAAMx4B,UAAUwJ,oBAAsB,WAC9BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIsjB,GAAmBjuB,KAAK+5B,YACxC/5B,KAAKlJ,OAAO6T,IAAIwjB,GAAmBnuB,KAAKoH,YACxCpH,KAAKlJ,OAAO6T,IAAIqvB,GAAgBh6B,KAAKi6B,WACrCj6B,KAAKlJ,OAAO6T,IAAIuvB,GAAmBl6B,KAAKm6B,eAS5CV,EAAMx4B,UAAU4B,cAAgB,WAC5B,MAAO,kBAEJ42B,KChgCPh5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Dm3B,GAAiC,SAAU72B,GAE3C,SAAS62B,IACL,OAAkB,OAAX72B,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,GAAUm4B,EAAiB72B,GAI3BZ,IACIc,cACD22B,EAAgB33B,UAAW,gBAAY,GACnC23B,GACT12B,iBChCEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAsBxC8hC,GAA8C,SAAU9gC,GAExD,SAAS8gC,EAA6B/rC,GAClC,IAAIwQ,EAAQvF,EAAOa,KAAK5C,KAAMlJ,IAAWkJ,KAEzC,OADAsH,EAAM6C,mBACC7C,EAkDX,OAtDA7G,GAAUoiC,EAA8B9gC,GAMxC8gC,EAA6B5hC,UAAUkJ,iBAAmB,WACtDnK,KAAKlJ,OAAOsT,GAAG04B,GAAqB9iC,KAAK+iC,SAAU/iC,OAEvD6iC,EAA6B5hC,UAAU8hC,SAAW,SAAU//B,GACxDhD,KAAKgjC,WAAahgC,EAAKrE,MAE3BkkC,EAA6B5hC,UAAUgiC,aAAe,SAAUtkC,EAAMukC,GAClE,GAAKljC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACvC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAe5rC,EAAgByI,KAAKlJ,QACzE,OAAOiL,EAAOd,UAAUgiC,aAAargC,KAAK5C,KAAMrB,EAAMukC,GAGjDprC,oBAAkBorC,EAAWrjC,cAAsD,gBAAtCqjC,EAAWrjC,YAAYiI,aACrEo7B,EAAWrjC,YAAc,WAG7B,IAAK,IADDmI,EAAOjG,EAAOd,UAAUgiC,aAAargC,KAAK5C,KAAMrB,EAAMukC,GACjDzhC,EAAI,EAAGA,EAAIuG,EAAKrQ,OAAQ8J,IAC7BuG,EAAKvG,GAAGnH,MAAS0F,KAAe,WAAEtB,QAAQsJ,EAAKvG,GAAG9C,MAEtD,OAAOqJ,GAGf66B,EAA6B5hC,UAAUmiC,mBAAqB,SAAU3nC,GAClE,IAAI4nC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAUze,KAAK,SAAUvqB,GAAS,OAAOoB,IAAWpB,IAChE,GAAK2F,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACvC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAe5rC,EAAgByI,KAAKlJ,QAAS,CAClF,IACIwiB,EAActZ,KAAU,MAAEsZ,YAC1B+pB,GACArjC,KAAKsjC,SACLtjC,KAAKrB,QACLqB,KAAKujC,WAEW,kBAAX9nC,GAA8BuE,KAAKsjC,MAAMhqB,IAC9CtZ,KAAKsjC,MAAMhqB,GAAa3hB,OAAUqI,KAAKlJ,OAAoB,cAAE0sC,uBACtDxjC,KAAKsjC,MAAMhqB,QAIlB+pB,GAAoB,kBAAX5nC,KACTuE,KAAKsjC,SACLtjC,KAAKrB,QACLqB,KAAKujC,WAGb,OAAOF,GAEJR,GACTY,4BCvEEC,GAAwB,WAIxB,SAASA,EAAO5sC,GACZ2L,OAAKC,OAAOihC,UACZ3jC,KAAKlJ,OAASA,EACdkJ,KAAK4jC,mBAAoB,EACzB5jC,KAAKoO,kBACLpO,KAAK6jC,oBACL7jC,KAAK8jC,sBACL9jC,KAAKmK,mBAyMT,OAnMAu5B,EAAOziC,UAAU4B,cAAgB,WAC7B,MAAO,UAOX6gC,EAAOziC,UAAU6I,QAAU,WACvB9J,KAAKyK,uBAKTi5B,EAAOziC,UAAUkJ,iBAAmB,WAChCnK,KAAKlJ,OAAOsT,GAAG,mBAAoBpK,KAAK+jC,sBAAuB/jC,MAC/DA,KAAKlJ,OAAOsT,GAAG,eAAgBpK,KAAKgkC,iBAAkBhkC,OAK1D0jC,EAAOziC,UAAUwJ,oBAAsB,WAC/BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,mBAAoB3K,KAAK+jC,uBACzC/jC,KAAKlJ,OAAO6T,IAAI,eAAgB3K,KAAKgkC,oBAMzCN,EAAOziC,UAAU8iC,sBAAwB,SAAUE,GAC/CxuB,WAAS,8BAAgCzV,KAAKlJ,QAC9CkJ,KAAK6jC,iBAAmBI,EAAYtlC,KACpCqB,KAAK8jC,sBACL9jC,KAAKoO,kBACLpO,KAAK4jC,mBAAoB,EACzB,IAAK,IAAIvK,EAAI,EAAGA,EAAIr5B,KAAK6jC,iBAAiBlsC,OAAQ0hC,IAAK,CACnD,IAAItqB,EAAM/O,KAAK6jC,iBAAiBxK,GAChCr5B,KAAKkkC,gBAAgBn1B,GACrB,IAAI7W,EAAwD,KAAxC8H,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAa+H,KAAKlJ,OAAOsB,eAAeF,cACtF8H,KAAKlJ,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,MACzF+H,KAAK4jC,mBAAoB,GAE7B,IAAIO,EAAUxrC,YAAU,eAAgBoW,IACnCjX,oBAAkBqsC,IAAYA,EAAQxsC,QACvC8d,WAAS,0BAA2BzV,KAAKokC,iBAAiBr1B,GAAMA,GAEpE,IAAIs1B,EAAW1rC,YAAU,aAAcoW,GACvC,IAAKjX,oBAAkBusC,GAAW,CAC9B,IAAIC,EAAYnrC,EAAc6G,KAAKlJ,OAAQiY,EAAI7V,WAAWE,UAAU,GAGpEqc,WAAS,2BAA2B,EAAM6uB,GACtCA,GAAaA,EAAUprC,YACvB8G,KAAKukC,2BAA2BD,IAIxCtkC,KAAK6jC,iBAAiBlsC,OAAS,GAAKqI,KAAK4jC,mBACzC5jC,KAAKwkC,oBAETxkC,KAAKlJ,OAAOub,OAAO,gBAAkBiB,OAAQtT,KAAKoO,kBAEtDs1B,EAAOziC,UAAUsjC,2BAA6B,SAAUzrC,GACpD,IAAIwrC,EAAYnrC,EAAc6G,KAAKlJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEqrC,EAAgBlmC,WAAS,2BAA4ByB,KAAKlJ,QAC1DwtC,GAAaG,EAAcxnC,eAAeqnC,EAAUlrC,WACpDqc,WAAS,2BAA2B,EAAM6uB,GAE1CA,GAAaA,EAAUprC,YACvB8G,KAAKukC,2BAA2BD,IAIxCZ,EAAOziC,UAAUijC,gBAAkB,SAAUprC,GACzC,IAAIhC,EAASqC,EAAc6G,KAAKlJ,OAAQgC,EAAO0F,gBAI/C,GAAsB,UAFsC,KAAxCwB,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAa+H,KAAKlJ,OAAOsB,eAAeF,cACtF8H,KAAKlJ,OAAOkB,eAAeE,gBACmD,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCkJ,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAClD+H,KAAKlJ,OAAOsB,eAAeF,cAAgB8H,KAAKlJ,OAAOkB,eAAeE,gBACa,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAMnC+H,KAAKkkC,gBAAgBptC,IAL0B,IAA3CkJ,KAAK6jC,iBAAiBnlC,QAAQ5H,IAC9BkJ,KAAKkkC,gBAAgBptC,IAOY,IAAzCkJ,KAAKoO,eAAe1P,QAAQ5F,KAC5BkH,KAAKoO,eAAexV,KAAKE,GACzB2c,WAAS,4BAA8B3c,EAAOM,SAAUN,EAAQkH,KAAKlJ,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CkJ,KAAK6jC,iBAAiBnlC,QAAQ5F,GAM9B,aAL6C,IAAzCkH,KAAKoO,eAAe1P,QAAQ5F,KAC5BkH,KAAKoO,eAAexV,KAAKE,GACzB2c,WAAS,4BAA8B3c,EAAOM,SAAUN,EAAQkH,KAAKlJ,QACrEgC,EAAOkZ,yBAA0B,SAMzChS,KAAKkkC,gBAAgBptC,IAC0B,IAA3CkJ,KAAK6jC,iBAAiBnlC,QAAQ5H,KAA2D,IAAzCkJ,KAAKoO,eAAe1P,QAAQ5H,IAC/B,IAAzCkJ,KAAKoO,eAAe1P,QAAQ5F,KAC5BkH,KAAKoO,eAAexV,KAAKE,GACzB2c,WAAS,4BAA8B3c,EAAOM,SAAUN,EAAQkH,KAAKlJ,UAI5B,IAAzCkJ,KAAKoO,eAAe1P,QAAQ5F,KAA6D,IAA3CkH,KAAK6jC,iBAAiBnlC,QAAQ5F,KAC5EkH,KAAKoO,eAAexV,KAAKE,GACzB2c,WAAS,4BAA8B3c,EAAOM,SAAUN,EAAQkH,KAAKlJ,UAyBzF4sC,EAAOziC,UAAUmjC,iBAAmB,SAAU9rC,GAG1C,IAAK,IAFDosC,EAAW/rC,YAAU,eAAgBL,GACrCqsC,GAAU,EACLr2B,EAAQ,EAAGA,EAAQo2B,EAAS/sC,OAAQ2W,IAAS,CAClD,IAAI61B,EAAUO,EAASp2B,GAAO5U,aAC1BxB,EAAwD,KAAxC8H,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAChD+H,KAAKlJ,OAAOsB,eAAeF,cAAgB8H,KAAKlJ,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,KAAc,CAC7BsG,WAAS,2BAA4ByB,KAAKlJ,QAC3CmG,eAAeynC,EAASp2B,GAAOlV,YAC9C4G,KAAKoO,eAAexV,KAAK8rC,EAASp2B,IAClCmH,WAAS,4BAA8BivB,EAASp2B,GAAOlV,SAAUsrC,EAASp2B,GAAQtO,KAAKlJ,QACvF6tC,GAAU,GAGlB,GAAuB,SAAlBzsC,IACsD,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApD+H,KAAK6jC,iBAAiBnlC,QAAQgmC,EAASp2B,IAAgB,CACvDq2B,GAAU,EACV,OAGH7sC,oBAAkBqsC,IAAYA,EAAQxsC,SACvCgtC,EAAU3kC,KAAKokC,iBAAiBM,EAASp2B,KAEtB,UAAlBpW,GAA+C,SAAlBA,IAA6BwsC,EAAS/sC,SACpEgtC,GAAU,GAGlB,OAAOA,GAEXjB,EAAOziC,UAAUujC,kBAAoB,WAGjC,IAAK,IAFD1rC,EAASkH,KAAKoO,eACd5V,EAAMwH,KAAKoO,eAAezW,OACrB4J,EAAI,EAAGA,EAAI/I,EAAK+I,IAAK,CAC1B,IAAIqjC,EAAWzrC,EAAc6G,KAAKlJ,OAAQgC,EAAOyI,GAAG/C,gBAEpD,IAD2C,IAA9B1F,EAAO4F,QAAQkmC,GAChB,CACR,IAAIC,EAAW1rC,EAAc6G,KAAKlJ,OAAQgC,EAAOyI,GAAG/C,gBAAgB,GACpE1F,EAAOyI,GAAGgQ,YAAcszB,EAAStzB,YAAc,OAG/CzY,EAAOyI,GAAGgQ,YAAc,EACxBvR,KAAK8jC,mBAAmBlrC,KAAKE,EAAOyI,MAIhDmiC,EAAOziC,UAAU+iC,iBAAmB,SAAUrlC,GAK1C,IAJA,IAGIiQ,EAHAN,EAAQ,EACR5Q,EAAWiB,EAAKjB,SAChBlF,EAAMkF,EAAS/F,OAEP2W,EAAQ9V,EAAK8V,IAAS,CAE9B,IAAIw2B,GADJl2B,EAAgBlR,EAAS4Q,IACEiD,aACvBuzB,GAAqB,IAAXA,GAAiBhtC,oBAAkB8W,EAAcoD,2BAC3DpD,EAAcoD,wBAA0B,KACxCpD,EAAc2C,YAAc,MAGpCvR,KAAKoO,kBACLpO,KAAKlJ,OAAOub,OAAO,iBAAmBiB,OAAQ5V,EAAU4Q,MAAO5Q,EAAS/F,UAErE+rC,KClNPqB,GAA6B,WAI7B,SAASA,EAAYjuC,GACjB2L,OAAKC,OAAOsiC,eACZhlC,KAAKlJ,OAASA,EACdkJ,KAAK+T,eACL/T,KAAKmK,mBA6JT,OAvJA46B,EAAY9jC,UAAU4B,cAAgB,WAClC,MAAO,eAKXkiC,EAAY9jC,UAAUkJ,iBAAmB,WACrCnK,KAAKlJ,OAAOsT,GAAG,gBAAiBpK,KAAKilC,uBAAwBjlC,MAC7DA,KAAKlJ,OAAOsT,GAAG,gBAAiBpK,KAAKsoB,mBAAoBtoB,MACzDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,sBAAuBpK,KAAKklC,mBAAoBllC,MACpEA,KAAKlJ,OAAOiB,KAAKqS,GAAG,iBAAkBpK,KAAKmlC,eAAgBnlC,OAO/D+kC,EAAY9jC,UAAU6I,QAAU,WAC5B9J,KAAKyK,uBAKTs6B,EAAY9jC,UAAUwJ,oBAAsB,WACpCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,gBAAiB3K,KAAKilC,wBACtCjlC,KAAKlJ,OAAO6T,IAAI,gBAAiB3K,KAAKsoB,oBACtCtoB,KAAKlJ,OAAOiB,KAAK4S,IAAI,sBAAuB3K,KAAKklC,oBACjDllC,KAAKlJ,OAAOiB,KAAK4S,IAAI,iBAAkB3K,KAAKmlC,kBAEhDJ,EAAY9jC,UAAUgkC,uBAAyB,SAAUjO,GACrDh3B,KAAK+T,YAAcijB,GAEvB+N,EAAY9jC,UAAU4d,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQymB,GAChC,IAAI99B,EAAQtH,KACRjJ,EAAaiJ,KAAKlJ,OAAOC,WACzBsmB,EAAW5kB,SAGf,OAFAgd,WAAS,QAAS2vB,EAAO/nB,GACzB5H,WAAS,UAAU,EAAO4H,GACnB,IAAIgoB,QAAQ,SAAUna,EAASoa,GAClC,IAAIzrC,EAAKyN,EAAMi+B,UAAY,IAAIvuC,cAAYD,GAAcuQ,EAAMxQ,OAAOC,WAClEyd,EAAQ,IAAIC,QAMhB,GALKnN,EAAMi+B,YACP/wB,EAAQlN,EAAMwQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAO6I,IAE7B/V,EAAMxQ,OAAOqS,QAAQq8B,EAAyBjpC,SAAO8gB,EAAUmB,IAC3D7lB,YAAU,SAAU0kB,GACpB,OAAO,KAEXxjB,EAAGsb,aAAaX,GAAOY,KAAK,SAAUxX,GAClC,IAAI6nC,EAAa,KAKjB,OAJK3tC,oBAAkB0mB,IAA2B1mB,oBAAkB0mB,EAAsBznB,cACtF0uC,EAAajnB,EAAsBznB,YAEvCynB,EAAwBlX,EAAMo+B,2BAA2BlnB,EAAuBznB,EAAY6G,GACrF0J,EAAMxQ,OAAOiB,KAAK6mB,kBAAkBC,IAAIvX,EAAMxQ,OAAOiB,KAAMymB,EAAuBC,EAAkBC,EAAU0mB,EAAOzmB,GAAQvJ,KAAK,SAAUuwB,GAC7H,MAAdF,EACAjnB,EAAsBznB,WAAa0uC,SAG5BjnB,EAAsBznB,WAEjCm0B,EAAQya,UAKxBZ,EAAY9jC,UAAU6W,cAAgB,SAAUtD,EAAO6I,GAQnD,OAPKvlB,oBAAkBulB,IAAqC,gBAAxBA,EAAStD,YACtC/Z,KAAKlJ,OAAOia,cACfsM,EAAStD,WAAa,WACtBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAClDqX,EAAQ7b,YAAU,mCAAoCqH,KAAKlJ,OAAnD6B,CAA2D6b,IAEhEA,GAEXuwB,EAAY9jC,UAAUykC,2BAA6B,SAAUroB,EAAUuoB,EAAOC,GAE1E,IAAI7iC,EAAOvK,SAkBX,GAjBAgd,WAAS,QAASzV,KAAKlJ,OAAOiB,KAAK8f,gBAAgBC,eAAc,GAAO9U,GACxEyS,WAAS,YAAY,EAAMzS,GACtBlL,oBAAkBulB,IAAcvlB,oBAAkBulB,EAAStD,aAC5DtE,WAAS,aAAc4H,EAAStD,WAAY/W,GAE3ChD,KAAKulC,WAAcztC,oBAAkBkI,KAAKlJ,OAAOqG,mBAClD6C,KAAKlJ,OAAO2G,cACZuC,KAAKlJ,OAAOsuB,WAAW7Q,kBAAkB5b,YAAU,SAAUktC,IAC7DpwB,WAAS,aAAczV,KAAKlJ,OAAO4G,SAAUsF,IAEjDhD,KAAKlJ,OAAOub,OAAO,gBAAiBrP,GAEpCA,EAAOhD,KAAK+T,YACZ6xB,EAAQ9tC,oBAAkBkL,EAAKsQ,QAAUtT,KAAKlJ,OAAO4G,SAAS8K,MAAM,GAAKxF,EAAKsQ,OACzEtT,KAAKulC,YACNvlC,KAAKlJ,OAAO4G,aAEZ2f,GAAYA,EAAStmB,YAAciJ,KAAKulC,UAAW,CACnD,IAAIO,EAAY9lC,KAAKlJ,OAAO4G,SACxBqoC,EAAU1oB,EAAStmB,sBAAsBC,cAAcqmB,EAAStmB,WAAWA,WAAW6E,KAAOyhB,EAAStmB,WAC1GiJ,KAAKlJ,OAAOsuB,WAAW7Q,kBAAkBwxB,GACzCH,EAAQ5lC,KAAKlJ,OAAO4G,SACpBsC,KAAKlJ,OAAO4G,SAAWooC,EAI3B,OAFAzoB,EAAWvlB,oBAAkBulB,GAAY5kB,SAAW4kB,EACpDA,EAAStmB,WAAa,IAAIC,eAAc4E,KAAMgqC,IACvCvoB,GAMX0nB,EAAY9jC,UAAUqnB,mBAAqB,SAAUtlB,GACjD,GAAIhD,KAAKlJ,OAAOiB,KAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO2I,gBAAiB,CACvF,IAAI9E,KACAgE,EAAOqE,EAAKrE,KAEZ2S,EADcxZ,oBAAkB6G,EAAK4S,aACjB5S,EAAKpE,MAAQoE,EAAK4S,YAC1C5W,EAAMqrC,OAAS10B,EACftO,EAAKrI,MAAQA,EAEjBqF,KAAKlJ,OAAOub,OAAO,gBAAiBrP,GACpChD,KAAKlJ,OAAOqS,QAAQ,qBAAsBnG,IAE9C+hC,EAAY9jC,UAAUikC,mBAAqB,SAAUe,GACjD,GAAsB,UAAlBA,EAAShjC,KAAkB,CAC3B,IAAIijC,EAAcD,EAASE,OAAOxnC,KAC9BynC,EAAqBpmC,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAIuuC,EAAYhtC,YAAcC,EAAc6G,KAAKlJ,OAAQovC,EAAYhtC,WAAWE,SAAUitC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAU5uC,OAC/B6uC,EAAWN,EAAY3rC,MAC3B0rC,EAASM,UAAUD,EAAY,GAAGG,UAAaC,aAAcF,EAAUG,aAAa,MAKhG5B,EAAY9jC,UAAUkkC,eAAiB,SAAgDzmB,GACnF,IAAK,IAAIjnB,EAAI,EAAGA,EAAIinB,EAASkoB,WAAWjvC,OAAQF,IACxCinB,EAASkoB,WAAWnvC,GAAGuQ,OACvB0W,EAASkoB,WAAWnvC,GAAGovC,WAAcC,mBAAmB,KAIpE/B,EAAY9jC,UAAUskC,QAAU,WAC5B,OAAQ1uC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,SAEjDiuC,KCrKPgC,GAA2B,WAI3B,SAASA,EAAUjwC,GACf2L,OAAKC,OAAOskC,aACZhnC,KAAKlJ,OAASA,EACdkJ,KAAK+T,eACL/T,KAAKmK,mBAoIT,OA9HA48B,EAAU9lC,UAAU4B,cAAgB,WAChC,MAAO,aAKXkkC,EAAU9lC,UAAUkJ,iBAAmB,WACnCnK,KAAKlJ,OAAOsT,GAAG,cAAepK,KAAKuoB,iBAAkBvoB,MACrDA,KAAKlJ,OAAOsT,GAAG,gBAAiBpK,KAAKinC,qBAAsBjnC,OAK/D+mC,EAAU9lC,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,cAAe3K,KAAKuoB,kBACpCvoB,KAAKlJ,OAAO6T,IAAI,gBAAiB3K,KAAKinC,wBAO1CF,EAAU9lC,UAAU6I,QAAU,WAC1B9J,KAAKyK,uBAETs8B,EAAU9lC,UAAUgmC,qBAAuB,SAAUjQ,GACjDh3B,KAAK+T,YAAcijB,GAEvB+P,EAAU9lC,UAAU4d,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,IAAIrX,EAAQtH,KACR4lC,EAAQ5lC,KAAKlJ,OAAOC,WACpBymB,EAAO/kB,SACP8sC,GAAW1uC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,QAE3D,OADA2e,WAAS,UAAU,EAAO+H,GACnB,IAAI6nB,QAAQ,SAAUna,EAASoa,GAClC,IAAIzrC,EAAK0rC,EAAU,IAAIvuC,cAAY4uC,GAASt+B,EAAMxQ,OAAOC,WACrDyd,EAAQ,IAAIC,QAMhB,GALK8wB,IACD/wB,EAAQlN,EAAMwQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAOgJ,IAE7BlW,EAAMxQ,OAAOqS,QAAQ+9B,EAAuB3qC,SAAOihB,EAAMwB,IACrDrmB,YAAU,SAAU6kB,GACpB,OAAO,KAEX3jB,EAAGsb,aAAaX,GAAOY,KAAK,SAAUxX,GAClC,IAAIupC,EAAc,KAKlB,OAJKrvC,oBAAkBknB,IAAyBlnB,oBAAkBknB,EAAoBjoB,cAClFowC,EAAcnoB,EAAoBjoB,YAEtCioB,EAAsB1X,EAAM8/B,wBAAwBpoB,EAAqB4mB,EAAOhoC,GACzE0J,EAAMxQ,OAAOiB,KAAKmnB,gBAAgBL,IAAIvX,EAAMxQ,OAAOiB,KAAMinB,EAAqBP,EAAkBQ,EAAQN,GAAQvJ,KAAK,SAAU4mB,GAC/G,MAAfmL,EACAnoB,EAAoBjoB,WAAaowC,SAG1BnoB,EAAoBjoB,WAE/Bm0B,EAAQ8Q,UAKxB+K,EAAU9lC,UAAU6W,cAAgB,SAAUtD,EAAOgJ,GAQjD,OAPK1lB,oBAAkB0lB,IAA6B,gBAApBA,EAAKzD,YAC9B/Z,KAAKlJ,OAAOia,cACfyM,EAAKzD,WAAa,WAClBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAClDqX,EAAQ7b,YAAU,mCAAoCqH,KAAKlJ,OAAnD6B,CAA2D6b,IAEhEA,GAEXuyB,EAAU9lC,UAAUmmC,wBAA0B,SAAU5pB,EAAMooB,EAAOC,GACjE,IAAI7iC,KAEAuiC,GAAW1uC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,QAkB3D,GAjBA2e,WAAS,QAASzV,KAAKlJ,OAAOiB,KAAK8f,gBAAgBC,eAAc,GAAO9U,GACxEyS,WAAS,YAAY,EAAMzS,GACtBlL,oBAAkB0lB,IAAU1lB,oBAAkB0lB,EAAKzD,aACpDtE,WAAS,aAAc+H,EAAKzD,WAAY/W,GAEvCuiC,GAAYztC,oBAAkBkI,KAAKlJ,OAAOqG,mBAC3C6C,KAAKlJ,OAAO2G,cACZuC,KAAKlJ,OAAOsuB,WAAW7Q,kBAAkBhW,WAAS,SAAUsnC,IAC5DpwB,WAAS,aAAczV,KAAKlJ,OAAO4G,SAAUsF,IAEjDhD,KAAKlJ,OAAOub,OAAO,gBAAiBrP,GAEpCA,EAAOhD,KAAK+T,YACZ6xB,EAAQ9tC,oBAAkBkL,EAAKsQ,QAAUtT,KAAKlJ,OAAO4G,SAAS8K,MAAM,GAAKxF,EAAKsQ,OACzEiyB,IACDvlC,KAAKlJ,OAAO4G,aAEZ8f,GAAQA,EAAKzmB,YAAcwuC,EAAS,CACpC,IAAI8B,EAAYrnC,KAAKlJ,OAAO4G,SACxBqoC,EAAUvoB,EAAKzmB,sBAAsBC,cAAcwmB,EAAKzmB,WAAWA,WAAW6E,KAAO4hB,EAAKzmB,WAC9FiJ,KAAKlJ,OAAOsuB,WAAW7Q,kBAAkBwxB,GACzCH,EAAQ5lC,KAAKlJ,OAAO4G,SACpBsC,KAAKlJ,OAAO4G,SAAW2pC,EAI3B,OAFA7pB,EAAO1lB,oBAAkB0lB,MAAaA,EACtCA,EAAKzmB,WAAa,IAAIC,eAAc4E,KAAMgqC,IACnCpoB,GAMXupB,EAAU9lC,UAAUsnB,iBAAmB,SAAUvlB,GAC7C,GAAIhD,KAAKlJ,OAAOiB,KAAK4Z,oBAAoB3O,EAAKrD,OAAOsM,OAASjM,KAAKlJ,OAAO2I,gBAAiB,CACvF,IAAI9E,KACAgE,EAAOhG,YAAU,OAAQqK,GAEzBsO,EADcxZ,oBAAkB6G,EAAK4S,aACjB5S,EAAKpE,MAAQoE,EAAK4S,YAC1C5W,EAAM2sC,gBAAwB,EAANh2B,EACxBtO,EAAKrI,MAAQA,EAEjBqF,KAAKlJ,OAAOub,OAAO,gBAAiBrP,GACpChD,KAAKlJ,OAAOqS,QAAQ,mBAAoBnG,IAErC+jC,KC3IPQ,GAAsB,WACtB,SAASA,EAAKzwC,GACV2L,OAAKC,OAAO8kC,QACZxnC,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBA8IT,OAzIAo9B,EAAKtmC,UAAUkJ,iBAAmB,WAC9BnK,KAAKlJ,OAAOsT,GAAGurB,EAAiC31B,KAAKynC,0BAA2BznC,MAChFA,KAAKlJ,OAAOsT,GAAGsR,EAAsB1b,KAAK0nC,WAAY1nC,OAK1DunC,EAAKtmC,UAAUwJ,oBAAsB,WAC7BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIgrB,EAAiC31B,KAAKynC,2BACtDznC,KAAKlJ,OAAO6T,IAAI+Q,EAAsB1b,KAAK0nC,cAM/CH,EAAKtmC,UAAU4B,cAAgB,WAC3B,MAAO,SAMX0kC,EAAKtmC,UAAU+uB,QAAU,WACrBhwB,KAAKlJ,OAAOiB,KAAKu6B,YAAYtC,WAOjCuX,EAAKtmC,UAAU6I,QAAU,WACrB9J,KAAKyK,uBAOT88B,EAAKtmC,UAAUmxB,SAAW,SAAUC,GAChCryB,KAAKlJ,OAAOiB,KAAKu6B,YAAYF,SAASC,IAO1CkV,EAAKtmC,UAAUsxB,sBAAwB,SAAUhvB,GAC7CvD,KAAKlJ,OAAOiB,KAAKu6B,YAAYC,sBAAsBhvB,IAKvDgkC,EAAKtmC,UAAUwmC,0BAA4B,SAAUzwB,GACjDA,EAAWle,OAAOS,SAAiC,aAAtByd,EAAWvb,OACpCqS,eACA9N,KAAKlJ,OAAO4G,SAASC,OAAO,SAAUC,GAClC,OAAOA,EAAExE,WAAa4d,EAAWle,OAAOM,WACzC,GAAGG,SAAiC,aAAtByd,EAAWvb,QAEhC,IAAIksC,GACAr0B,OAAQtT,KAAKlJ,OAAO4G,SACpBmB,IAAKmY,EAAWnY,IAChBpD,OAAQub,EAAWvb,OACnB3C,OAAQke,EAAWle,OACnBwV,MAAOtO,KAAKlJ,OAAO4G,SAAS/F,QAEhC4G,WAAS,oBAAqByB,KAAKlJ,QAAQ6e,mBAAmBgyB,IAElEJ,EAAKtmC,UAAU2mC,SAAW,SAAUC,EAActsB,EAAMjI,GAapD,IAAK,IAZDw0B,EAAahwC,oBAAkBwb,MAAeA,EAC9CtW,EAAU,SAAU+qC,GACpBD,EAAWlvC,KAAK2iB,EAAKwsB,IACrB,IAAIC,KACAzsB,EAAKwsB,GAAGtuC,kBACRuuC,EAAMH,EAAalqC,OAAO,SAAUC,GAChC,OAAO2d,EAAKwsB,GAAG3uC,WAAawE,EAAEY,iBAElCspC,EAAan5B,EAAOi5B,SAASC,EAAcG,EAAKF,KAGpDn5B,EAAS3O,KACJ+nC,EAAI,EAAGA,EAAIxsB,EAAK5jB,OAAQowC,IAC7B/qC,EAAQ+qC,GAEZ,OAAOD,GAEXP,EAAKtmC,UAAUymC,WAAa,SAAUO,GAClC,IAAI3gC,EAAQtH,KACRnG,EAAK,IAAI7C,cAAYixC,EAAe30B,QACxC,GAA8C,SAA1CtT,KAAKlJ,OAAOka,aAAaC,aAAyB,CAClD,IAAIsK,KACA2sB,EAAYloC,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CqI,KAAKlJ,OAAOsB,eAAeF,eAA0E,SAA7C8H,KAAKlJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBsc,GAAQ,IAAIC,SAAQI,MAAMqzB,EAAU,QAAS,GACjD3sB,EAAO1hB,EAAGoc,aAAazB,GACvByzB,EAAe35B,MAAQiN,EAAK5jB,OAC5B,IAEIwwC,GAFAC,EAAOpoC,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,YACrCC,EAAUtoC,KAAKlJ,OAAOiB,KAAKiZ,aAAasI,aACf,GAC7B9E,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9B7sB,EAAO1hB,EAAGoc,aAAazB,GACvB,IAAIszB,EAAa9nC,KAAK4nC,SAASK,EAAe30B,OAAQiI,GACtD0sB,EAAe30B,OAASw0B,MAEvB,CACD,IAAI3a,EAAO,IAAIn2B,cAAYixC,EAAe30B,QACtC/Z,EAAW,IAAIuI,YAAU,WAAY,WAAY,MAAM0mC,GAAG,WAAY,gBAAYzrB,GAClF0rB,EAAYtb,EAAKlX,cAAa,IAAIxB,SAAQI,MAAMtb,IAChDypC,OAAa,EAEbA,EADAnrC,EAAuBmI,KAAKlJ,QACf2xC,EAGAA,EAAU9qC,OAAO,SAAUC,GACpC,OAAO/E,EAAgByO,EAAMxQ,OAAQ8G,EAAG6qC,KAGhDR,EAAe35B,MAAQ00B,EAAWrrC,OAC9B6c,EAAQ,IAAIC,QAAhB,IACI2zB,EAAOpoC,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,SACrCC,EAAUtoC,KAAKlJ,OAAOiB,KAAKiZ,aAAasI,YACxC0pB,EAAWrrC,OAAU2wC,EAAUF,IAE/BE,GADAA,EAAWzxB,KAAK6xB,MAAM1F,EAAWrrC,OAASywC,IAAWpF,EAAWrrC,OAASywC,EAAQ,EAAI,KACvD,EAC9BpoC,KAAKlJ,OAAOiB,KAAK0lB,eAAgBzM,cAAgBsI,YAAagvB,KAAa,IAE3EH,EAAOC,GAAQE,EAAU,GAC7B9zB,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9Bjb,EAAKp2B,WAAW6E,KAAOonC,EACvBiF,EAAe30B,OAAS6Z,EAAKlX,aAAazB,GAE9CxU,KAAKlJ,OAAOub,OAAO,eAAgB41B,IAEhCV,KCrJPoB,GAAyB,WACzB,SAASA,EAAQ7xC,GACb2L,OAAKC,OAAOkmC,WACZ5oC,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBA4HT,OAtHAw+B,EAAQ1nC,UAAU4B,cAAgB,WAC9B,MAAO,WAKX8lC,EAAQ1nC,UAAUkJ,iBAAmB,WACjCnK,KAAKlJ,OAAOsT,GAAG+d,EAAoBnoB,KAAK6oC,eAAgB7oC,MACxDA,KAAKlJ,OAAOsT,GAAGghB,EAAqBprB,KAAK8oC,oBAAqB9oC,OAKlE2oC,EAAQ1nC,UAAUwJ,oBAAsB,WAChCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIwd,EAAoBnoB,KAAK6oC,gBACzC7oC,KAAKlJ,OAAO6T,IAAIygB,EAAqBprB,KAAK8oC,uBAE9CH,EAAQ1nC,UAAU4nC,eAAiB,SAAU7lC,GACzC,IAAIo3B,EAAOp6B,KAAKlJ,OAEU,IAAtBkM,EAAKnE,IAAI+K,UAAkBwwB,EAAKzxB,qBAAqBhR,OAAS,EAC9DqI,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,sBAAuBgnB,EAAKjnB,QAAQC,GAAK,yBAAyB,GAGjGtb,oBAAkBsiC,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,cACpD9R,oBAAkBsiC,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,YACxDwwB,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,UAAUrP,MAC7C6/B,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,SAAW,GAAGrP,MACxDyF,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,wBAAwB,GAG5DpT,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,wBAAwB,GAE5DgnB,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,UAAUrP,QAChD6/B,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,SAAW,GAAGrP,OACpDyF,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DgnB,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,UAAUrP,OAChDyF,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DgnB,EAAK99B,wBAAwB0G,EAAKnE,IAAI+K,UAAUrP,OAChDyF,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBpQ,EAAKnE,IAAI+K,UAAmB9R,oBAAkBkL,EAAKrE,KAAKzF,aACxD8G,KAAK2xB,aAAayI,EAAKjnB,QAAQC,GAAK,yBAAyB,IAGrEu1B,EAAQ1nC,UAAU6nC,oBAAsB,SAAU9lC,GAC9C,IAAIo3B,EAAOp6B,KAAKlJ,OAYhB,GAXsC,SAAlCkJ,KAAKlJ,OAAOkF,aAAaC,MAA0D,UAAvC+D,KAAKlJ,OAAOiB,KAAKiE,aAAaC,MAC1E+G,EAAKE,KAAKkQ,KAAOpT,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK,YAC/CpQ,EAAKkG,QAAS,EACdlJ,KAAKlJ,OAAOiB,KAAKmE,WAAW+0B,YAE5BjuB,EAAKE,KAAKkQ,KAAOpT,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK,cAC/CpT,KAAKlJ,OAAOyqB,YAEZve,EAAKE,KAAKkQ,KAAOpT,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK,gBAC/CpT,KAAKlJ,OAAO0qB,cAEZxe,EAAKE,KAAKkQ,KAAOgnB,EAAKriC,KAAKob,QAAQC,GAAK,WAAagnB,EAAKzxB,qBAAqBhR,OAAQ,CACvF,IAAImB,EAASshC,EAAK99B,wBAAwB89B,EAAKjyB,wBAAwB,GAAK,GACxEmyB,OAAY,EAChB,GAAIxhC,EAAOyB,MAAQ6/B,EAAKzxB,qBAAqB,GAAGpO,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAI2iC,EAAK99B,wBAAwB3E,OAAQF,IACjD2iC,EAAK99B,wBAAwB7E,GAAGsF,WAAajE,EAAOI,WAAW6D,WAC/Du9B,EAAY7iC,QAKpB6iC,EAAYF,EAAKjyB,wBAAwB,GAAK,EAElDiyB,EAAK7B,aAAa6B,EAAKjyB,wBAAwB,IAAKmyB,EAAW,SAEnE,GAAIt3B,EAAKE,KAAKkQ,KAAOgnB,EAAKriC,KAAKob,QAAQC,GAAK,YAAcgnB,EAAKzxB,qBAAqBhR,OAAQ,CAInF,IAHD2C,EAAQ8/B,EAAKjyB,wBAAwB,GAErCjP,GADAohC,OAAY,EACCF,EAAKzxB,qBAAqB,GAAGzP,YAC9C,IAASzB,EAAI,EAAGA,EAAI2iC,EAAK99B,wBAAwB3E,OAAQF,IACjD2iC,EAAK99B,wBAAwB7E,GAAGsF,WAAa7D,EAAW6D,WACxDu9B,EAAY7iC,GAGpB2iC,EAAK7B,aAAaj+B,GAAQggC,EAAW,WAQ7CqO,EAAQ1nC,UAAU+8B,WAAa,WAC3B,OAAOh+B,KAAKlJ,OAAOiB,KAAK25B,cAAcsM,cAS1C2K,EAAQ1nC,UAAU0wB,YAAc,SAAUvb,EAAOqb,GAC7CzxB,KAAKlJ,OAAOiB,KAAK25B,cAAcC,YAAYvb,EAAOqb,IAOtDkX,EAAQ1nC,UAAU6I,QAAU,WACxB9J,KAAKyK,uBAEFk+B,KC/HPI,GAA2B,WAI3B,SAASA,EAAUjyC,GACf2L,OAAKC,OAAOsmC,aACZhpC,KAAKlJ,OAASA,EACdkJ,KAAKipC,oBACLjpC,KAAK0Y,gBAiOT,OA3NAqwB,EAAU9nC,UAAU4B,cAAgB,WAChC,MAAO,WAEXkmC,EAAU9nC,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAO4T,aAQpBq+B,EAAU9nC,UAAU4X,sBAAwB,SAAUH,EAAcmC,EAAcquB,GAC9ElpC,KAAK0Y,aAAeA,EACpB,IAAIzf,EAEAwE,EACJA,KACA,IAAK,IAAII,EAAI,EAAGrF,EAHOC,OAAOC,KAAKmiB,GAAcljB,OAGTkG,EAAIrF,EAAKqF,IAAK,CACjClF,YAAU,eAAgBkiB,EAAahd,KAEpDJ,EAAW7E,KAAKiiB,EAAahd,IAGrC,IACIsrC,EADA1vB,EAAgBphB,EAAkBoF,GAEtC0rC,EAAc1rC,EAAW+K,QACzB,IAGIq5B,EAHAuH,EAAe3wC,OAAOC,KAAKsH,KAAKlJ,OAAOY,SAASC,OAChD0xC,EAAgB5wC,OAAOC,KAAKsH,KAAKlJ,OAAOyhB,YAAY5gB,OACpD2xC,EAAa7wC,OAAOC,KAAK+gB,GAAe9hB,OAE5C,GAAIqI,KAAKlJ,OAAOyhB,WAAW5a,OAAO,SAAUm0B,GAAK,OAAOA,EAAEyX,mBAAqB5xC,OACtE,CAAA,IAAIF,EAAI,EAAb,IAAgBe,EAAM8wC,EAAY7xC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAewgB,EAAchiB,GAC7BoqC,EAAqB7hC,KAAKwpC,sBAAsBvwC,EAAckwC,GACtC,CAyCpB,IAAK,IAxCDnsC,EAAU,SAAUysC,EAAiBC,GACrC,IAAIxmC,OAAO,EACXA,KACA,IAAK,IAAI6I,EAAc,EAAG49B,EAAQP,EAAcr9B,EAAc49B,EAAO59B,IAAe,CAGhF7I,EAFYpL,oBAAkBa,YAAU,QAASgW,EAAO7X,OAAOY,QAAQqU,KACnE4C,EAAO7X,OAAOY,QAAQqU,GAAepT,YAAU,QAASgW,EAAO7X,OAAOY,QAAQqU,KACpE,KAGlB,GADA7I,EAAOyL,EAAOi7B,kBAAkB1mC,EAAMyL,EAAO7X,OAAOyhB,WAAWkxB,EAAkB,KAC7E96B,EAAO7X,OAAOyhB,WAAWkxB,EAAkB,GAAGF,iBA2B9C,MAAO,WA1BP,IAAIM,EACJV,EAAY9qC,IAAI,SAAUT,EAAGnG,GACrBmG,EAAExE,WAAaH,EAAaG,WAC5BywC,EAAQpyC,KAIhB,IAAIqyC,EAAeD,EAAQhI,EAAqB4H,EAC5CM,EAAgBxtC,YAAWtD,UACxB8wC,EAAcrwC,oBACdqwC,EAAcp7B,EAAO7X,OAAOwG,cACnCmY,WAAS,aAAcs0B,EAAe7mC,GACtC,IAAI3I,EAAQ5B,YAAU,QAASoxC,GAC/Bt0B,WAAS,QAASlb,EAAQ,EAAG2I,GACjBvK,YAAU,QAASoxC,GAG/B,GAFAt0B,WAAS,gBAAgB,EAAMvS,GAC/BuS,WAAS,iBAAkBs0B,EAAc3wC,SAAU8J,GAC/CgmC,EAAQ,CACR,IAAIxvC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAKsK,GAG1BimC,EAAY9rC,OAAOysC,EAAc,EAAG5mC,IAMxCyL,EAAS3O,KACJypC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,IAC3EzsC,EAAQysC,GAEZzpC,KAAKipC,yBAIZ,CACD,IAAI7yB,OAAQ,EACZA,KACA,IAAK,IAAIrK,EAAc,EAAG+pB,EAAWsT,EAAcr9B,EAAc+pB,EAAU/pB,IAAe,CAGtFqK,EAFate,oBAAkBa,YAAU,QAASqH,KAAKlJ,OAAOY,QAAQqU,KAClE/L,KAAKlJ,OAAOY,QAAQqU,GAAepT,YAAU,QAASqH,KAAKlJ,OAAOY,QAAQqU,KAC9D,KAEX09B,EAAkB,EAA3B,IAAK,IAAyBO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjFzpC,KAAK4pC,kBAAkBxzB,EAAOpW,KAAKlJ,OAAOyhB,WAAWkxB,EAAkB,IAG/E,OAAON,GAEXJ,EAAU9nC,UAAUuoC,sBAAwB,SAAU/rC,EAAYC,GAG9D,IAAK,IADD5E,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKgF,GAAU/F,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAAS4E,EAASjG,GAGlB,GAAIgG,KAFW3F,oBAAkBgB,EAAOI,YAAc,KAClDwE,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAExE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzB4G,KAAKipC,iBAAiBrwC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAkH,KAAKwpC,sBAAsB1wC,EAAQ4E,IAO/C,OAAOsC,KAAKipC,iBAAiBtxC,QAEjCoxC,EAAU9nC,UAAU2oC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,IAAIzyC,EAAI,EAAGe,EADUC,OAAOC,KAAKwxC,EAAQxyC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHD0yC,EAAgBryC,oBAAkBoyC,EAAQxyC,QAAQD,GAAG6D,YAAc4uC,EAAQxyC,QAAQD,GAAG6M,MACtF4lC,EAAQxyC,QAAQD,GAAG6D,WAEd8zB,EAAK,EAAGgb,EADN3xC,OAAOC,KAAKuxC,GACS7a,EAAKgb,EAAOzyC,OAAQy3B,IAAM,CACtD,IAAIn3B,EAAMmyC,EAAOhb,GACjB,GAAIn3B,IAAQkyC,EACR,GAAInqC,KAAKipC,iBAAiBtxC,OACtBsyC,EAAShyC,GAAO+H,KAAKqqC,iBAAiBH,EAAQxyC,QAAQD,GAAIuI,KAAKipC,uBAE9D,GAAIjpC,KAAKlJ,OAAOwjB,YAAa,CAC9B,IAAI3b,EAAOqB,KAAKlJ,OAAOC,sBAAsBC,cAAcgJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KACvFoE,KAAKlJ,OAAO4G,SAClBusC,EAAShyC,GAAO+H,KAAKqqC,iBAAiBH,EAAQxyC,QAAQD,GAAIkH,IAQ1E,OAAOsrC,GAEXlB,EAAU9nC,UAAUopC,iBAAmB,SAAUC,EAAe93B,GAC5D,IACI+3B,EADAv1B,EAAM,IAAIP,QAEd81B,KACA,IAAIztB,KACA7Z,EAAQnL,oBAAkBwyC,EAAchmC,YACiByY,EAAzD/c,KAAKlJ,OAAOkkB,iBAAiBsvB,EAAchmC,OAAOrB,KACtDqnC,EAAc/sB,qBAAsBjB,OAAQtc,KAAKwqC,kBAAkBF,EAAchuB,OAAQrZ,KACzFqnC,EAAcluB,aAAapc,KAAKlJ,OAAOiB,KAAKioB,QAC5C,IAAIxD,EAAW8tB,EAAc1tB,gBAAwC,SAAUvU,GAAK,OAAOA,GAC3FiiC,EAAcztB,YAAYC,GAC1B,IAAI2tB,EAAUH,EAAchtB,YAAY,GACxCtI,EAAIE,QAAUlV,KAAK0Y,aACnB1D,EAAI01B,gBACJ,IAEIC,EAFAC,EAAU,IAAI5zC,cAAYwb,GAAayD,aAAajB,GACpDjS,EAAQunC,EAAcrnC,KAE1BF,GAASunC,EAAcrnC,MACvB,IAAK,IAAIxL,EAAI,EAAGA,EAAIsL,EAAMpL,OAAQF,IAAK,CACnCkzC,EAAa5nC,EAAMtL,GACnB,IAAIQ,EAAMqyC,EAAchmC,MAAQ,MAAQvB,EAAMtL,GAAGozC,cAC7CC,EAAmB,WAAb/nC,EAAMtL,GAAkBkB,YAAU,aAAciyC,GACtDG,qBAAmBhoC,EAAMtL,GAAImzC,EAASN,EAAetqC,KAAKlJ,QAC1Dk0C,EAAOV,EAAchvC,WACrB2vC,EAAuB,WAAbloC,EAAMtL,GAAkBqzC,EAAI7yC,GAAO6yC,EACjDP,EAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAM/yC,GAAOgzC,EACpBV,EAAOS,GAAMjoC,EAAMtL,IAAOK,oBAAkBgzC,GAA2B,IAApBtuB,EAASyuB,GAEhEnuB,EAAOR,OAASguB,EAAc1tB,eAC9B,IAAIvL,EAAc9E,gBAAc,MAC5BC,UAAW,cAEf,GAAIxM,KAAKlJ,OAAOuc,QAAS,CAErBo3B,EAAQzyB,GAAGuyB,EAAOD,EAAchvC,YAAa0E,KAAKlJ,OAAQ2zC,EAAQptB,SAAU,GAAI,KAAM,KAAMhM,GAC5FrR,KAAKlJ,OAA2B,4BAGhCkc,iBAAe3B,EAAao5B,EAAQzyB,GAAGuyB,EAAOD,EAAchvC,YAAa0E,KAAKlJ,OAAQ2zC,EAAQptB,WAElG,IAAIhjB,EAAQkwC,EAAOD,EAAchvC,YAAYqvC,GAE7C,OAA8C,IAA1Ct5B,EAAY5D,UAAU/O,QAAQrE,GACfgX,EAAY5D,UAAYpT,EAIhCgX,EAAY5D,WAG3Bs7B,EAAU9nC,UAAUupC,kBAAoB,SAAUU,EAAejoC,GAC7D,GAAInL,oBAAkBmL,IAAkC,iBAAlBioC,EAClC,OAAOA,EAEX,IAAIjxC,EACJ,OAAQgJ,GACJ,IAAK,SACDhJ,GAAQqiB,OAAQ4uB,GAChB,MACJ,IAAK,WACDjxC,GAAQgJ,KAAM,WAAYsZ,SAAU2uB,GACpC,MACJ,IAAK,OACDjxC,GAAQgJ,KAAMA,EAAMsZ,SAAU2uB,GAGtC,OAAOjxC,GAOX8uC,EAAU9nC,UAAU6I,QAAU,WAC1B9J,KAAKyK,uBAEFs+B,KCzOPoC,GAAsB,WACtB,SAASA,EAAKpzC,GACV0K,OAAKC,OAAO0oC,QACZprC,KAAKlJ,OAASiB,EACdiI,KAAK0T,WACL1T,KAAKqrC,kBACLrrC,KAAK4T,aAAe,EACpB5T,KAAK7E,iBAAmBrD,oBAAkBkI,KAAKlJ,OAAOqG,iBACtD6C,KAAKmK,mBAyFT,OAnFAghC,EAAKlqC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXsoC,EAAKlqC,UAAUkJ,iBAAmB,WAC9BnK,KAAKlJ,OAAOsT,GAAG,cAAepK,KAAKsrC,YAAatrC,MAChDA,KAAKlJ,OAAOsT,GAAG,aAAcpK,KAAKurC,qBAAsBvrC,OAK5DmrC,EAAKlqC,UAAUwJ,oBAAsB,WAC7BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,cAAe3K,KAAKsrC,aACpCtrC,KAAKlJ,OAAO6T,IAAI,aAAc3K,KAAKurC,wBAEvCJ,EAAKlqC,UAAUsqC,qBAAuB,SAAUC,GAC5C,IAAI7sC,EAAO6sC,EAAW3vC,aAClBif,EAAS0wB,EAAW1wB,OACxB9a,KAAKyrC,YAAY9sC,EAAMmc,GACvB9a,KAAK4T,aAAe,EACpB43B,EAAW3vC,aAAemE,KAAKqrC,eAC/BrrC,KAAKqrC,mBAETF,EAAKlqC,UAAUwqC,YAAc,SAAU9sC,EAAMmc,GACzC,IAAK,IAAIna,EAAI,EAAGA,EAAIhC,EAAKhH,OAAQgJ,IAW7B,GAVIX,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAc6G,KAAKlJ,OAAQ6H,EAAKgC,GAAGvH,UAAU,MAChE4G,KAAK4T,cACL5T,KAAKqrC,eAAerrC,KAAK4T,aAAejV,EAAKgC,KAIjDX,KAAK4T,cACL5T,KAAKqrC,eAAerrC,KAAK4T,aAAejV,EAAKgC,IAE7ChC,EAAKgC,GAAGlH,gBAAiB,CACzB,IAAIiyC,EAAa,IAAI10C,cAAY2H,EAAKgC,GAAGjH,cAAcuc,aAAa6E,GACpE9a,KAAKyrC,YAAYC,EAAW5wB,KAWxCqwB,EAAKlqC,UAAUmf,WAAa,SAAU9kB,EAAY8f,EAAW8E,GACzDlgB,KAAKlJ,OAAOiB,KAAKqoB,WAAW9kB,EAAY8f,EAAW8E,IAEvDirB,EAAKlqC,UAAUqf,iBAAmB,SAAUhc,GACxCtE,KAAKlJ,OAAOiB,KAAKuoB,iBAAiBhc,IAOtC6mC,EAAKlqC,UAAUqqC,YAAc,WACzBtrC,KAAKlJ,OAAO2mB,eAAgBhf,aAAcwoB,sBAAoBjnB,KAAKlJ,OAAOiB,KAAK0G,gBAAiB,IAMpG0sC,EAAKlqC,UAAUof,aAAe,WAC1BrgB,KAAKlJ,OAAOiB,KAAKsoB,eACjBrgB,KAAKsrC,eAOTH,EAAKlqC,UAAU6I,QAAU,WACrB9J,KAAKyK,uBAEF0gC,KCpGPQ,GAA4B,WAI5B,SAASA,EAAW70C,GAChB2L,OAAKC,OAAOkpC,cACZ5rC,KAAKlJ,OAASA,EAelB,OAbA60C,EAAW1qC,UAAU4qC,cAAgB,WACjC,OAAO7rC,KAAKlJ,OAAOiB,KAAK+zC,iBAAiBD,iBAE7CF,EAAW1qC,UAAU6I,QAAU,aAO/B6hC,EAAW1qC,UAAU4B,cAAgB,WACjC,MAAO,cAEJ8oC,KCpBPI,GAA6B,WAC7B,SAASA,EAAYj1C,GACjB2L,OAAKC,OAAOspC,eACZhsC,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBAgET,OA3DA4hC,EAAY9qC,UAAUkJ,iBAAmB,WACrCnK,KAAKlJ,OAAOsT,GAAG,kBAAmBpK,KAAKwF,gBAAiBxF,MACxDA,KAAKlJ,OAAOsT,GAAG,mBAAoBpK,KAAKyF,iBAAkBzF,OAK9D+rC,EAAY9qC,UAAUwJ,oBAAsB,WACpCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,kBAAmB3K,KAAKwF,iBACxCxF,KAAKlJ,OAAO6T,IAAI,mBAAoB3K,KAAKyF,oBAE7CsmC,EAAY9qC,UAAUuE,gBAAkB,SAAUxC,GAC9C,IAAIipC,EAASziC,SAAO,IAAMxJ,KAAKlJ,OAAOqc,QAAQC,GAAK,4BAA6BpQ,EAAKmQ,SACjF+4B,EAAa1iC,SAAO,IAAMxJ,KAAKlJ,OAAOqc,QAAQC,GAAK,0BAA2BpQ,EAAKmQ,SACnF84B,KACkD,IAA9CjsC,KAAKlJ,OAAOiB,KAAKiE,aAAawoB,YAC9BynB,EAAOtxC,MAAMG,QAAU,OAGvBmxC,EAAOtxC,MAAMG,QAAU,SAGQ,SAAlCkF,KAAKlJ,OAAOkF,aAAaC,MAAqD,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,MACjEnE,oBAAkBo0C,IAAkBA,EAAW5jC,UAAUC,SAAS,iBACvE2jC,EAAWvxC,MAAMG,QAAU,SAGnCixC,EAAY9qC,UAAUwE,iBAAmB,SAAUzC,GAC1B,UAAjBA,EAAKE,KAAKkQ,IAAmC,UAAjBpQ,EAAKE,KAAKkQ,KACtCpT,KAAKlJ,OAAOub,OAAO,0BAA2BrP,GAC9ChD,KAAKlJ,OAAO2mB,eAAgBzhB,cAAgBQ,eAAgBwG,EAAKE,KAAKkQ,MAAQ,GAC9EpT,KAAKlJ,OAAOi6B,cAOpBgb,EAAY9qC,UAAU4B,cAAgB,WAClC,MAAO,eAOXkpC,EAAY9qC,UAAU6I,QAAU,WAC5B9J,KAAKyK,uBAMTshC,EAAY9qC,UAAU2mB,eAAiB,WACnC,OAAO5nB,KAAKlJ,OAAOiB,KAAKk0B,kBAAkBrE,kBAEvCmkB,KChEPI,GAA2B,WAC3B,SAASA,EAAUr1C,GACfkJ,KAAKosC,gBAAkB,EACvBpsC,KAAKwT,aAAe,eACpBxT,KAAKke,eAAiB,iBACtBle,KAAKqsC,qBACLrsC,KAAKssC,uBACLtsC,KAAKusC,qBACLvsC,KAAKlJ,OAASA,EACdkJ,KAAK7E,iBAAmBrD,oBAAkBhB,EAAOqG,iBACjD6C,KAAKwsC,gBACLxsC,KAAK3D,sBACL2D,KAAKysC,OAAQ,EACbzsC,KAAKmK,mBAugBT,OArgBAgiC,EAAUlrC,UAAUkJ,iBAAmB,WACnCnK,KAAKlJ,OAAOsT,GAAGkiB,GAAkBtsB,KAAK+F,UAAW/F,MACjDA,KAAKlJ,OAAOsT,GAAGqiB,GAAiBzsB,KAAKmG,SAAUnG,MAC/CA,KAAKlJ,OAAOsT,GAAGuiB,GAAuB3sB,KAAKqG,eAAgBrG,MAC3DA,KAAKlJ,OAAOsT,GAAGyR,GAAkB7b,KAAKuG,UAAWvG,MACjDA,KAAKlJ,OAAOsT,GAAGyiB,GAA0B7sB,KAAKoG,kBAAmBpG,MACjEA,KAAKlJ,OAAOsT,GAAGsiB,GAAwB1sB,KAAKsG,gBAAiBtG,MAC7DA,KAAKlJ,OAAOsT,GAAG,kBAAmBpK,KAAK0sC,gBAAiB1sC,MACxDA,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAK2sC,kBAAmB3sC,OAKhEmsC,EAAUlrC,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI2hB,GAAkBtsB,KAAK+F,WACvC/F,KAAKlJ,OAAO6T,IAAI8hB,GAAiBzsB,KAAKmG,UACtCnG,KAAKlJ,OAAO6T,IAAIkR,GAAkB7b,KAAKuG,WACvCvG,KAAKlJ,OAAO6T,IAAIgiB,GAAuB3sB,KAAKqG,gBAC5CrG,KAAKlJ,OAAO6T,IAAIkiB,GAA0B7sB,KAAKoG,mBAC/CpG,KAAKlJ,OAAO6T,IAAI+hB,GAAwB1sB,KAAKsG,iBAC7CtG,KAAKlJ,OAAO6T,IAAI,kBAAmB3K,KAAK0sC,iBACxC1sC,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAK2sC,qBAO9CR,EAAUlrC,UAAU6I,QAAU,WAC1B9J,KAAKyK,uBAKT0hC,EAAUlrC,UAAU2rC,gBAAkB,WAClC,OAAO5sC,KAAKwsC,cAKhBL,EAAUlrC,UAAU4rC,eAAiB,WACjC,OAAO7sC,KAAK5E,aAKhB+wC,EAAUlrC,UAAU6rC,iBAAmB,WACnC,OAAO9sC,KAAK3E,eAKhB8wC,EAAUlrC,UAAU8rC,mBAAqB,WACrC,OAAO/sC,KAAKosC,iBAEhBD,EAAUlrC,UAAUyrC,gBAAkB,WAClC,IAGIpyC,EAHAqE,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Do7B,EAAanyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAE5D,IAAK5D,oBAAkBkI,KAAKqsC,oBAAsBrsC,KAAKqsC,kBAAkB10C,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAIuI,KAAKqsC,kBAAkB10C,OAAQF,IAC/C6C,EAAQqE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEu0B,KAAgBzzB,QAAQsB,KAAKqsC,kBAAkB50C,GAAG06B,IAC3FxzB,EAAKtB,OAAO/C,EAAO,GAG3B0F,KAAKqsC,kBAAoBrsC,KAAKwsC,aAAexsC,KAAKusC,kBAAoBvsC,KAAKssC,oBAAsBtsC,KAAK3D,uBAE1G8vC,EAAUlrC,UAAU8E,UAAY,SAAU/C,GACtC,IAAIgqC,EAAkBhqC,EAAKzD,KAAK2iB,UAC5B+qB,EAAajtC,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,mBAS1D,GARI8tC,GAAcjqC,EAAKkqC,aAAa5yC,MAAQ2yC,IACxCD,GAAoCC,GAEpCD,IAAoBhtC,KAAKlJ,OAAO2I,iBAChCO,KAAKlJ,OAAOuI,aAAaC,YAAaX,KAAMqE,EAAK0I,QAASnM,KAAMyD,EAAKzD,KACjEI,OAAQK,KAAKlJ,OAAOiB,KAAKo1C,iBAAiBnqC,EAAKzD,KAAK2iB,aAGxDliB,KAAKysC,OAA2C,UAAlCzsC,KAAKlJ,OAAOkF,aAAaC,MAAgE,WAA5C+D,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACjH,IAAImC,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Dq2C,OAAQ,EAGRC,EAAertC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAC1D4xC,OAAmB,EACnBr0C,OAAe,EACfs0C,OAAa,EAEbr0C,EAAa,aAEjBD,EAAe+G,KAAK3E,eAAiB,EAAI2E,KAAKwsC,aAAaxsC,KAAK5E,aAAalC,GAAc,KAC3F,IAAIkE,OAAY,EACZoB,OAAiB,EACjBrB,OAAkB,EAClBqwC,EAA6D,QAA5CxtC,KAAKlJ,OAAOkF,aAAaQ,iBAAoD,IAAxBwD,KAAK3E,cAAuB,EACtD,UAA5C2E,KAAKlJ,OAAOkF,aAAaQ,eAA6BwD,KAAK5E,YACrD4E,KAAK5E,YAAc,EAE7B,GADAoyC,EAAiBxtC,KAAKytC,wBAAwBD,GAC1CxtC,KAAK0tC,iBAAkB,CAcvB,GAbI1tC,KAAKwsC,aAAa70C,SAClByF,EAAY4C,KAAKwsC,aAAaxsC,KAAK5E,aAAa4E,KAAKlJ,OAAOsG,WAC5DD,EAAkB6C,KAAKwsC,aAAaxsC,KAAK5E,aAAa4E,KAAKlJ,OAAOqG,iBAC9D6C,KAAKwsC,aAAaxsC,KAAK5E,aAAalC,KACpCsF,EAAiBwB,KAAKwsC,aAAaxsC,KAAK5E,aAAalC,GAAoB,WAGjF8G,KAAKqsC,kBAAoBtyC,EAAYiG,KAAKqsC,mBAC1CrsC,KAAKusC,kBAAoBxyC,EAAYiG,KAAKusC,mBAC1CvsC,KAAKusC,kBAAkB3zC,KAAKoH,KAAKwsC,aAAaxsC,KAAK5E,cACnDgyC,EAAQptC,KAAKlJ,OAAOiB,KAAKqgB,gBAAgBo1B,GAAgBG,QACzDP,EAAMh0C,SAAWwd,SAAO5W,KAAKlJ,OAAOqc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwB23B,EAAMh0C,SAAUg0C,EAAOptC,KAAKlJ,SACxDs2C,EAAMnwC,eAAe,SAAU,CAEhC,GADA+C,KAAK4tC,YAAqC,IAAxB5tC,KAAK3E,cAAuB,EAAI2E,KAAK4tC,WACP,UAA5C5tC,KAAKlJ,OAAOkF,aAAaQ,gBAEzB,GADA4wC,EAAMS,cAAgB50C,EAClB+G,KAAK3E,eAAiB,EAAG,CACzB+xC,EAAMl0C,WAAaqD,YAAWyD,KAAKwsC,aAAaxsC,KAAK5E,cACrDgyC,EAAM5uC,eAAiB4uC,EAAMl0C,WAAWE,gBACjCg0C,EAAMl0C,WAAWQ,oBACjB0zC,EAAMl0C,WAAW8G,KAAKlJ,OAAOwG,cACpC8vC,EAAM7yC,MAAQ6yC,EAAMl0C,WAAWqB,MAAQ,EACvC6yC,EAAM9yC,MAAQ0F,KAAK4tC,WACnB,IAAIE,EAAmBt0C,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAczD,OAC5EmB,EAASU,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAc0yC,EAAmB,GACzFh1C,EAAShB,oBAAkBgB,GAAUkH,KAAKwsC,aAAaxsC,KAAK5E,aAAetC,EAC3Ew0C,EAAmB3uC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEyvC,KAAkB3uC,QAAQ5F,EAAOu0C,IACjFrtC,KAAK7E,kBACLiyC,EAAMptC,KAAKlJ,OAAOqG,iBAAmBC,GAEzCG,EAAgB8vC,EAAcD,EAAMl0C,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBiyC,SAG7F,IAAiD,UAA5CptC,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAClF1E,oBAAkBkI,KAAKwsC,aAAaxsC,KAAK5E,cAAe,CAS5D,GARAgyC,EAAM7yC,MAAQyF,KAAKwsC,aAAaxsC,KAAK5E,aAAkB,MACnDgyC,EAAM7yC,OAASyF,KAAK3E,eAAiB,IACrC+xC,EAAMl0C,WAAaD,EACnBm0C,EAAM5uC,eAAiBA,SAChB4uC,EAAMl0C,WAAWQ,oBACjB0zC,EAAMl0C,WAAW8G,KAAKlJ,OAAOwG,eAExC8vC,EAAM9yC,MAAoD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA6BwD,KAAK4tC,WAAa5tC,KAAK4tC,WAAa,EACxD,UAA5C5tC,KAAKlJ,OAAOkF,aAAaQ,gBAA8BwD,KAAK3E,eAAiB,EAAG,CAC5EyyC,EAAmBt0C,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAczD,OAC5EmB,EAASU,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAc0yC,EAAmB,GACzFh1C,EAAShB,oBAAkBgB,GAAUkH,KAAKwsC,aAAaxsC,KAAK5E,aAAetC,EAC3Ew0C,EAAmB3uC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEyvC,KAAkB3uC,QAAQ5F,EAAOu0C,IAEzF,GAAgD,UAA5CrtC,KAAKlJ,OAAOkF,aAAaQ,gBAA8BwD,KAAK3E,eAAiB,EAAG,CAC5EvC,EAASkH,KAAKwsC,aAAaxsC,KAAK5E,aACpCkyC,EAAmB3uC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEyvC,KAAkB3uC,QAAQ5F,EAAOu0C,IAErFrtC,KAAK7E,kBACLiyC,EAAMptC,KAAKlJ,OAAOqG,iBAAmBA,GAG7CiwC,EAAM9yC,OAAyB,IAAjB8yC,EAAM9yC,MAAe,EAAI8yC,EAAM9yC,MAC7C8yC,EAAM3zC,iBAAkB,EACxB2zC,EAAM1zC,gBACNsG,KAAKwsC,aAAanvC,OAAO+vC,EAAM9yC,MAAO,EAAG8yC,GACzCptC,KAAK3D,mBAAmBgB,OAAO+vC,EAAM9yC,MAAO,EAAG8yC,GAE3CG,EADAD,GAIaF,EAAM9yC,MAEyB,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,iBACzB+wC,EAA6B,IAAhBH,EAAM9yC,MAAcizC,EAAaA,EAAa,GAE/D5uC,EAAKtB,OAAOkwC,EAAY,EAAGH,GAC3BptC,KAAKqsC,kBAAkBzzC,KAAKw0C,GAEhCptC,KAAKlJ,OAAOiB,KAAKqgB,gBAAgBo1B,GAAgB7uC,KAAOyuC,EACxDptC,KAAK0tC,kBAAmB,GAExB1tC,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,oBACoB,QAA1Da,KAAKlJ,OAAOiB,KAAKqgB,gBAAgBo1B,GAAgBttC,OACpDM,QAAMR,KAAK3D,mBAAmBmxC,GAAiBxtC,KAAKlJ,OAAOiB,KAAKqgB,gBAAgBo1B,GAAgBG,WAI5GxB,EAAUlrC,UAAUoF,eAAiB,SAAUzI,GAE3C,GAAsC,SAAlCoC,KAAKlJ,OAAOkF,aAAaC,MAAmB+D,KAAKlJ,OAAOoF,WAAuB,aAG/E,OAFA0B,EAAEsL,QAAS,OACXlJ,KAAKlJ,OAAOoF,WAAuB,cAAI,GAG3C8D,KAAK3E,cAAgB2E,KAAKlJ,OAAOiB,KAAK4vB,iBACtC3nB,KAAK5E,YAAc4E,KAAKlJ,OAAOiB,KAAK4vB,kBAAoB,EAAI3nB,KAAKlJ,OAAOiB,KAAK4vB,iBAAmB,EAChG3nB,KAAKzE,aAAeyE,KAAKlJ,OAAO6R,qBAAqB,IAEzDwjC,EAAUlrC,UAAUkF,SAAW,SAAUvI,GACrC,GAAgD,WAA5CoC,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACtDwD,KAAKysC,OAAQ,EACbzsC,KAAK0tC,kBAAmB,EACxB,IAAI5M,EAAc,EAMlB,GALK9gC,KAAKwsC,aAAa70C,SACnBqI,KAAKqsC,qBACLrsC,KAAKwsC,aAAezyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,0BAEX,QAA5C0D,KAAKlJ,OAAOkF,aAAaQ,eAA0B,CACnD,IAAIlE,EAAU0H,KAAKlJ,OAAOiB,KAAKuE,wBACO,UAAlC0D,KAAKlJ,OAAOkF,aAAaC,OAAqB+D,KAAKlJ,OAAOqF,kBAAkB6D,KAAKwT,cAAc7b,OAAS,GACrGqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAKke,gBAAgBvmB,UACtDW,EAAU0H,KAAKwsC,cAEnBxsC,KAAK+tC,iBAAiBz1C,GACtB0H,KAAKlJ,OAAOub,OAAOmb,OACnBxtB,KAAKosC,gBAAkB,EAE3BpsC,KAAKguC,iBAEL,IAAIC,EAAc1vC,WAAS,cAAeyB,KAAKlJ,OAAOiB,MAClDm2C,EAAQluC,KAAKlJ,OAAOqgB,kBACpBnX,KAAKlJ,OAAOqF,kBAAkB6D,KAAKke,gBAAgBvmB,QAAsD,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,gBACtFskC,EAAcljC,EAAEiB,IAAI+K,SACpBqkC,EAAYza,aAAa2a,OAAOA,OAASnuC,KAAKmuC,QAG9CrN,EAAcoN,EAAM52B,uBAAuB,cAAc,GAAG1N,SAKhEqkC,EAAYza,aAAa2a,OAAO7F,SAAWxH,EAAamN,EAAYza,aAAa2a,OAAO7F,QAAQ,MAGxG6D,EAAUlrC,UAAUmF,kBAAoB,SAAUxI,GACzCoC,KAAKwsC,aAAa70C,SACnBqI,KAAKwsC,aAAezyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,0BAE3D,IAAI2xC,EAAc1vC,WAAS,cAAeyB,KAAKlJ,OAAOiB,MACtDiI,KAAKmuC,OAASF,EAAYza,aAAa2a,OAAOA,OAC9CnuC,KAAKlJ,OAASkJ,KAAKlJ,OACnB,IACIwB,EACAqG,EAFAE,KAGAuvC,EAAapuC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAExD2yC,EAAS70C,EADbmF,EAAOqB,KAAKlJ,OAAOiB,KAAK4Q,qBAAqB3I,KAAKlJ,OAAOiB,KAAK4Q,qBAAqBhR,OAAS,IAE5F,GAAI02C,EAAO12C,OACP,IAAK,IAAIF,EAAI,EAAGA,EAAI42C,EAAO12C,OAAQF,IAAK,CACpC,IAAI6C,EAAQ0F,KAAKlJ,OAAOiB,KAAKiH,wBAAwBqvC,EAAO52C,GAAG22C,IAC/DvvC,EAAIjG,KAAKoH,KAAKlJ,OAAOiB,KAAKgH,UAAUzE,KAChC0F,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,qBACnEN,EAAIjG,KAAKoH,KAAKlJ,OAAOiB,KAAKq+B,iBAAiB97B,IAIvD,IAAKxC,oBAAkB6G,EAAKzF,YAAa,CACrC,IAAIA,EAAaC,EAAc6G,KAAKlJ,OAAQ6H,EAAKzF,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAI0oC,EAAajpC,EAAWQ,aAAagF,QAAQC,GACjDzF,EAAWQ,aAAa2D,OAAO8kC,EAAY,GAE/CniC,KAAKssC,oBAAsBvyC,EAAYiG,KAAKssC,qBAC5CtsC,KAAKssC,oBAAoB1zC,KAAK+F,GAElC0vC,EAAOz1C,KAAK+F,GACZrG,EAAU+1C,EACV,IAAS52C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAI81C,EAAavtC,KAAKwsC,aAAanuC,IAAI,SAAUT,GAAK,OAAOA,EAAEwwC,KAAgB1vC,QAAQpG,EAAQb,GAAG22C,KAC9E,IAAhBb,GACAvtC,KAAKwsC,aAAanvC,OAAOkwC,EAAY,GAG7C,IAAS91C,EAAI,EAAGA,EAAIoH,EAAIlH,OAAQF,IACvBK,oBAAkB+G,EAAIpH,KACvBuI,KAAKlJ,OAAOiB,KAAK0uB,gBAAgB6nB,gBAAgB11C,KAAKiG,EAAIpH,KAItE00C,EAAUlrC,UAAU+sC,eAAiB,WAEjC,IAAK,IADDhmC,EAAOhI,KAAKlJ,OAAOiB,KAAK47B,cACnBl8B,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAC7BuQ,EAAKvQ,GAAGyV,aAAa,gBAAiBzV,EAAEqQ,YAE5C,GAAI9H,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,cAEnE,CAAA,IADD6uC,EAAQvuC,KAAKlJ,OAAOiB,KAAKsX,qBAC7B,IAAS5X,EAAI,EAAGA,EAAI82C,EAAM52C,OAAQF,IAC9B82C,EAAM92C,GAAGyV,aAAa,gBAAiBzV,EAAEqQ,cAIrDqkC,EAAUlrC,UAAU8sC,iBAAmB,SAAUz1C,GAK7C,IAAK,IAJD65B,EAAanyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACxD8X,EAAe,eAEfta,EAAyD,UAA5C8G,KAAKlJ,OAAOkF,aAAaQ,eAA6B,gBAAkB,aAChF/E,EAAI,EAAGA,EAAIuI,KAAKlJ,OAAOqF,kBAAkBqX,GAAc7b,OAAQF,IAC/DK,oBAAkBkI,KAAKlJ,OAAOqF,kBAAkBqX,GAAc/b,GAAGyB,KAC9D8G,KAAKlJ,OAAOqF,kBAAkBqX,GAAc/b,GAAGyB,GAAYi5B,KAAgB75B,EAAQ0H,KAAK5E,aAAa+2B,KACrGnyB,KAAKosC,gBAAkBpsC,KAAKosC,gBAAkB,IAK9DD,EAAUlrC,UAAUqF,gBAAkB,SAAU1I,GAC5C,IACI4wC,EAAgB,iBAChBvwB,EAAiBrgB,EAAEpC,aAA0B,eACjD,GAAIoC,EAAEpC,aAA0B,eAAE7D,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAIwmB,EAAetmB,OAAQF,IACvCuD,GAAaX,MAAO4jB,EAAexmB,GAAIgE,OAAQ,QAAUuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,mBAFtG,GAKrB,GAAIuC,EAAEpC,aAAagzC,GAAe72C,OAGzB,CAAA,IADDmB,EADiB8E,EAAEpC,aAAagzC,GAEpC,IAAS/2C,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpCuI,KAAKyuC,eAAe31C,EAAOrB,GAAG2B,UAE9B,IAAK,IADDi1C,EAAS70C,EAAoBV,EAAOrB,IAC/B8J,EAAI,EAAGA,EAAI8sC,EAAO12C,OAAQ4J,IAC/BvB,KAAKyuC,eAAeJ,EAAO9sC,GAAGnI,UAElCwE,EAAEpC,aAAagzC,GAAiB5wC,EAAEpC,aAAagzC,GAAe70C,OAAO00C,IAG7EruC,KAAKysC,OAAQ,GAEjBN,EAAUlrC,UAAUwtC,eAAiB,SAAUp0C,UAEpC2F,KAAKlJ,OAAe,yBAAEuD,UAEtB2F,KAAKlJ,OAAS,mBAAEuD,IAE3B8xC,EAAUlrC,UAAU0rC,kBAAoB,WACpC,IACIryC,EADAg6B,EAAgB,gBAEhBp7B,EAAa,aAEbmD,EAAqB2D,KAAKlJ,OAAOiB,KAAKuE,wBACtC5C,EAAe,eACfiF,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Do7B,EAAanyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAC5D,IAAK5D,oBAAkBkI,KAAKlJ,OAAOw9B,IAAiB,CAChD,IAAIz1B,EAAMmB,KAAKlJ,OAAOw9B,GAAetpB,QAAQ,MAC7ChL,KAAKlJ,OAAO4qB,YAAY7iB,GACxBmB,KAAKlJ,OAAOw9B,GAAiB,KAEjC,IAAKx8B,oBAAkBkI,KAAKqsC,mBACxB,IAAK,IAAI50C,EAAI,EAAGA,EAAIuI,KAAKqsC,kBAAkB10C,OAAQF,IAG/C,GAFA6C,EAAQqE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEu0B,KAAgBzzB,QAAQsB,KAAKqsC,kBAAkB50C,GAAG06B,IAC3FxzB,EAAKtB,OAAO/C,EAAO,GAC6B,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,iBACzBlC,EAAQ+B,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAEu0B,KAClDzzB,QAAQsB,KAAKqsC,kBAAkB50C,GAAGyB,GAAc8G,KAAKqsC,kBAAkB50C,GAAGyB,GAAYi5B,GACrFnyB,KAAKqsC,kBAAkB50C,GAAG06B,KAC3Br6B,oBAAkBuE,EAAmB/B,KAEtC,IAAK,IADD2Y,EAAW5W,EAAmB/B,GAAOZ,GAChCS,EAAI,EAAG8Y,GAAY9Y,EAAI8Y,EAAStb,OAAQwC,IACzC8Y,EAAS9Y,GAAGg4B,KAAgBnyB,KAAKqsC,kBAAkB50C,GAAG06B,IACtD91B,EAAmB/B,GAAOZ,GAAc2D,OAAOlD,EAAG,GAO1E,IAAKrC,oBAAkBkI,KAAKssC,qBACxB,IAAS70C,EAAI,EAAGA,EAAIuI,KAAKssC,oBAAoB30C,OAAQF,IACjD,IAAKK,oBAAkBkI,KAAKssC,oBAAoB70C,GAAGyB,IAAc,CAC7DoB,EAAQ+B,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAEu0B,KAClDzzB,QAAQsB,KAAKssC,oBAAoB70C,GAAGyB,GAAYi5B,IACrD,IAAIuc,EAA4D,IAA5C1uC,KAAKssC,oBAAoB70C,GAAa,MAAUuI,KAAKssC,oBAAoB70C,GAAa,MACtGuI,KAAKssC,oBAAoB70C,GAAa,MAAI,EACzCK,oBAAkBuE,EAAmB/B,KACtC+B,EAAmB/B,GAAOZ,GAAc2D,OAAOqxC,EAAe,EAAG1uC,KAAKssC,oBAAoB70C,IAK1GuI,KAAKqsC,kBAAoBrsC,KAAKwsC,aAAexsC,KAAKusC,kBAAoBvsC,KAAK3D,sBAC3E2D,KAAKwsC,aAAezyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK4tC,WAAa,EAClB5tC,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACvD0D,KAAKssC,uBACLtsC,KAAKlJ,OAAOiB,KAAKsH,aAAa2wB,WAElCmc,EAAUlrC,UAAUsF,UAAY,SAAUvD,GACtC,GAAsC,UAAlChD,KAAKlJ,OAAOkF,aAAaC,KAAkB,CAC3C,IAAIxE,OAAI,EACJ+D,EAAewE,KAAKlJ,OAAOqF,kBAC3B+hB,EAAiB,iBAIjBvf,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/DsF,EAAqB2D,KAAKlJ,OAAOiB,KAAKuE,wBACtCqyC,EAAe3uC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAE1DkzC,EAAapzC,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHIqzC,EAAWj3C,OAAS,GAAiD,WAA5CqI,KAAKlJ,OAAOkF,aAAaQ,gBAClDoyC,EAAWC,UAEiC,WAA5C7uC,KAAKlJ,OAAOkF,aAAaQ,eAEzB,GADAmC,EAAKtB,OAAOsB,EAAKhH,OAASi3C,EAAWj3C,OAAQi3C,EAAWj3C,QACnDqI,KAAKlJ,OAAOia,YAKZ,CACD,IAAI+9B,EAAe/0C,EAAY4E,GAC3Bs2B,EAAa6Z,EAAazwC,IAAI,SAAUT,GAAK,OAAOA,EAAE+wC,KACrDjwC,QAAQrC,EAAmB,GAAGsyC,IAC/BI,EAAW9Z,EAAaj1B,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,SAC1DhsC,EAAqByyC,EAAazxC,OAAO43B,EAAY8Z,QATjD1yC,EAAmB1E,OAASi3C,EAAWj3C,QACvC0E,EAAmBgB,OAAOhB,EAAmB1E,OAASi3C,EAAWj3C,OAAQi3C,EAAWj3C,QAWhG,IAAKF,EAAI,EAAGA,EAAIm3C,EAAWj3C,OAAQF,IAAK,CACpC,IAAIsF,EAAWR,YAAWqyC,EAAWn3C,IAgCrC,UA/BOsF,EAAS7D,kBACT6D,EAAS3D,gBACT2D,EAASzC,aACTyC,EAASxC,aACTwC,EAAStD,uBACTsD,EAASrD,oBACTqD,EAASyB,eACX1G,oBAAkBiF,EAAS8wC,uBACrB9wC,EAAS8wC,cAEpBe,EAAWn3C,GAAGsF,SAAWA,EACzBxB,EAAeyE,KAAKusC,kBAAkB90C,GAClCK,oBAAkByD,KAClBA,EAAeyE,KAAKusC,kBAAkB90C,EAAI,IAE1CuI,KAAK7E,kBACArD,oBAAkB82C,EAAWn3C,GAAGyB,aACjCqE,EAAgBoxC,EAAcC,EAAWn3C,GAAGyB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiByzC,EAAWn3C,KAGhHK,oBAAkByD,KACnBH,EAAcG,EAAajB,OAEiB,QAA5C0F,KAAKlJ,OAAOkF,aAAaQ,gBAAwE,WAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBAC1E1E,oBAAkB82C,EAAWn3C,GAAGyB,cAAuC,IAAxB8G,KAAK3E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaX,MAAOu0C,EAAWn3C,GAAIgE,OAAQ,OAASuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBC,EAAaC,OApDvF,EAoDkHE,GAC/HF,EAAgB,KACgC,UAA5C2E,KAAKlJ,OAAOkF,aAAaQ,iBAA+B1E,oBAAkB82C,EAAWn3C,GAAa,YAIlG,IAAK,IAHDu3C,EAAa3yC,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAE+wC,KAC3DjwC,QAAQkwC,EAAWn3C,GAAa,WAAEk3C,IACnC17B,EAAW5W,EAAmB2yC,GAAwB,aACjD70C,EAAI,EAAGA,EAAI8Y,EAAStb,OAAQwC,IAC7B8Y,EAAS9Y,GAAGw0C,KAAkBC,EAAWn3C,GAAGk3C,IAC5CtyC,EAAmB2yC,GAAwB,aAAE3xC,OAAOlD,EAAG,GAKvE,GAAIqB,EAAa0iB,GAAgBvmB,OAC7B,IAAKF,EAAI,EAAGA,EAAI+D,EAAa0iB,GAAgBvmB,OAAQF,IACjDuD,GAAaX,MAAOmB,EAAa0iB,GAAgBzmB,GAAIgE,OAAQ,UAAYuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBC,EAAaC,OAnEhH,EAmE2IE,GAG5JyE,KAAKlJ,OAAO2G,cACZ,IAAK,IAAIq5B,EAAM,EAAGA,EAAMn4B,EAAKhH,OAAQm/B,IACjCn4B,EAAKm4B,GAAU,MAAIA,EACnBrhB,WAAS,sBAAwB9W,EAAKm4B,GAAa,SAAI,SAAUA,EAAK92B,KAAKlJ,QACtE6H,EAAKm4B,GAAU,OAChB92B,KAAKlJ,OAAO2G,WAAW7E,KAAK+F,EAAKm4B,IAI7C92B,KAAKusC,kBAAoBvsC,KAAKqsC,kBAAoBrsC,KAAKwsC,aAAexsC,KAAKssC,oBAAsBtsC,KAAK3D,uBAE1G8vC,EAAUlrC,UAAUwsC,wBAA0B,SAAUnzC,GACpD,IAAI0N,EAAOhI,KAAKlJ,OAAOiB,KAAK47B,cAC5B,IAAiD,UAA5C3zB,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,iBAC9EwD,KAAK3E,eAAiB,EAAG,CAC5B,IAAKvD,oBAAkBkI,KAAKwsC,aAAaxsC,KAAK5E,eAAiB4E,KAAKwsC,aAAaxsC,KAAK5E,aAAa7B,SAC/F,GAAIyG,KAAKlJ,OAAOqF,kBAAkB6D,KAAKwT,cAAc7b,OAAS,GACvDqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAKke,gBAAgBvmB,QAEtD,GADA2C,GAASd,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAczD,OAClB,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAErDlC,GADsB0F,KAAK+sC,2BAK/BzyC,GAASd,EAAoBwG,KAAKwsC,aAAaxsC,KAAK5E,cAAczD,OAGtE2C,GAAS0N,EAAKrQ,SACd2C,EAAQ0N,EAAKrQ,OAAS,GAE1BqI,KAAK+tC,iBAAiB/tC,KAAKlJ,OAAOiB,KAAKuE,yBACnC0D,KAAKosC,kBACL9xC,GAAS0F,KAAKosC,iBAElBpsC,KAAKosC,gBAAkB,EAE3B,OAAO9xC,GAEJ6xC,KCjhBP8C,GAAsB,WAItB,SAASA,EAAKn4C,GACVkJ,KAAKwT,aAAe,eACpBxT,KAAKke,eAAiB,iBACtBle,KAAKkvC,iBAAmB,KACxBzsC,OAAKC,OAAOysC,QACZnvC,KAAKlJ,OAASA,EACdkJ,KAAK7E,iBAAmBrD,oBAAkBhB,EAAOqG,iBACjD6C,KAAKovC,uBAAyB,KAC9BpvC,KAAKqvC,sBACLrvC,KAAKsvC,gBAAkB,IAAInD,GAAUnsC,KAAKlJ,QAC1CkJ,KAAKmK,mBAgxBT,OA1wBA8kC,EAAKhuC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXosC,EAAKhuC,UAAUkJ,iBAAmB,WAC9BnK,KAAKlJ,OAAOsT,GAAGwR,GAAmB5b,KAAK0F,WAAY1F,MACnDA,KAAKlJ,OAAOsT,GAAGohB,GAAkBxrB,KAAK2F,UAAW3F,MACjDA,KAAKlJ,OAAOsT,GAAGojB,GAAiBxtB,KAAK4F,SAAU5F,MAC/CA,KAAKlJ,OAAOsT,GAAGqjB,GAA0BztB,KAAK6F,kBAAmB7F,MACjEA,KAAKlJ,OAAOsT,GAAG+hB,GAAiBnsB,KAAK8F,SAAU9F,MAC/CA,KAAKlJ,OAAOsT,GAAG0iB,GAAoB9sB,KAAKkG,YAAalG,MACrDA,KAAKlJ,OAAOiB,KAAKqS,GAAGmlC,GAAmBvvC,KAAKwG,WAAYxG,MACxDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,iBAAkBpK,KAAKwvC,YAAaxvC,MACxDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,gBAAiBpK,KAAKyvC,aAAczvC,MACxDA,KAAKlJ,OAAOsT,GAAGoiB,GAAiBxsB,KAAKgG,SAAUhG,MAC/CA,KAAKlJ,OAAOsT,GAAG,cAAepK,KAAK0vC,iBAAkB1vC,MACrDA,KAAKlJ,OAAOsT,GAAG,iBAAkBpK,KAAK0vC,iBAAkB1vC,MACxDA,KAAKlJ,OAAOiB,KAAKqS,GAAGulC,GAAkB3vC,KAAK6F,kBAAmB7F,MAC9DA,KAAKlJ,OAAOiB,KAAKqS,GAAG,WAAYpK,KAAK4vC,aAAc5vC,MACnDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,cAAepK,KAAK6vC,eAAgB7vC,MACxDA,KAAKlJ,OAAOsT,GAAG,0BAA2BpK,KAAK8vC,wBAAyB9vC,MAExEA,KAAKlJ,OAAOiB,KAAKqS,GAAG2lC,GAAwB/vC,KAAK6G,gBAAiB7G,MAClEA,KAAKlJ,OAAOiB,KAAKqS,GAAG4lC,GAA0BhwC,KAAK8G,kBAAmB9G,MACtEA,KAAKlJ,OAAOiB,KAAKqS,GAAG,mBAAoBpK,KAAKiwC,eAAgBjwC,MAC7DA,KAAKlJ,OAAOiB,KAAKqS,GAAG,mBAAoBpK,KAAKkwC,eAAgBlwC,OAEjEivC,EAAKhuC,UAAU2uC,aAAe,SAAUhyC,GACpCoC,KAAKmwC,kBAAoBvyC,EAAEyD,QAE/B4tC,EAAKhuC,UAAUivC,eAAiB,SAAUE,GACtCA,EAAQ5zC,eAAiBwD,KAAKlJ,OAAOkF,aAAaQ,eAClD4zC,EAAQh1C,YAAc4E,KAAK5E,YAC3Bg1C,EAAQC,cAAgBrwC,KAAKkvC,kBAEjCD,EAAKhuC,UAAU4F,gBAAkB,SAAU7D,GACvChD,KAAKlJ,OAAOqS,QAAQkkB,EAAoBrqB,IAE5CisC,EAAKhuC,UAAU6F,kBAAoB,SAAU9D,GACH,SAAlChD,KAAKlJ,OAAOkF,aAAaC,MACzB+D,KAAKlJ,OAAOqS,QAAQmP,EAAuBtV,IAMnDisC,EAAKhuC,UAAUwJ,oBAAsB,WAC7BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIiR,GAAmB5b,KAAK0F,YACxC1F,KAAKlJ,OAAO6T,IAAI6gB,GAAkBxrB,KAAK2F,WACvC3F,KAAKlJ,OAAO6T,IAAI6iB,GAAiBxtB,KAAK4F,UACtC5F,KAAKlJ,OAAO6T,IAAI8iB,GAA0BztB,KAAK6F,mBAC/C7F,KAAKlJ,OAAO6T,IAAImiB,GAAoB9sB,KAAKkG,aACzClG,KAAKlJ,OAAOiB,KAAK4S,IAAI4kC,GAAmBvvC,KAAKwG,YAC7CxG,KAAKlJ,OAAOiB,KAAK4S,IAAI,iBAAkB3K,KAAKwvC,aAC5CxvC,KAAKlJ,OAAOiB,KAAK4S,IAAI,gBAAiB3K,KAAKyvC,cAC3CzvC,KAAKlJ,OAAO6T,IAAI6hB,GAAiBxsB,KAAKgG,UACtChG,KAAKlJ,OAAO6T,IAAI,cAAe3K,KAAK0vC,kBACpC1vC,KAAKlJ,OAAO6T,IAAI,iBAAkB3K,KAAK0vC,kBACvC1vC,KAAKlJ,OAAOiB,KAAK4S,IAAI,cAAe3K,KAAK6vC,gBACzC7vC,KAAKlJ,OAAOiB,KAAK4S,IAAIglC,GAAkB3vC,KAAK6F,mBAC5C7F,KAAKlJ,OAAO6T,IAAI,0BAA2B3K,KAAK8vC,yBAChD9vC,KAAKlJ,OAAOiB,KAAK4S,IAAIolC,GAAwB/vC,KAAK6G,iBAClD7G,KAAKlJ,OAAOiB,KAAK4S,IAAIqlC,GAA0BhwC,KAAK8G,mBACpD9G,KAAKlJ,OAAOiB,KAAK4S,IAAI,WAAY3K,KAAK4vC,cACtC5vC,KAAKlJ,OAAOiB,KAAK4S,IAAI,mBAAoB3K,KAAKiwC,gBAC9CjwC,KAAKlJ,OAAOiB,KAAK4S,IAAI,mBAAoB3K,KAAKkwC,kBAQlDjB,EAAKhuC,UAAU6I,QAAU,WACrB9J,KAAKyK,uBAKTwkC,EAAKhuC,UAAUqvC,oBAAsB,SAAUtc,GAC3Ch0B,KAAKlJ,OAAOiB,KAAKmE,WAAWo0C,oBAAoBtc,IAEpDib,EAAKhuC,UAAUyuC,iBAAmB,SAAU1sC,GACxC,IAAIutC,EAAY53C,YAAU,aAAcqK,GACpC4gB,EAAYjrB,YAAU,OAAQ43C,GAC9BC,EAAUxwC,KAAKlJ,OACfG,EAAUu5C,EAAQz5C,WAAWE,QACjC,IAAKJ,EAAa25C,IAAYv5C,aAAmBosB,sBAClB,SAA1BktB,EAAU1wC,aAA+C,QAArB0wC,EAAU90C,SACN,UAAxC+0C,EAAQx0C,aAAaQ,gBAAsE,UAAxCg0C,EAAQx0C,aAAaQ,gBAC1B,UAAxCg0C,EAAQx0C,aAAaQ,gBAC5B,GAAkB,gBAAdonB,EAA6B,CAC7B,IAAIha,EAAW9R,oBAAkBy4C,EAAU1xC,OAASpG,OAAOC,KAAK63C,EAAU1xC,KAAKlH,OAASqI,KAAK3E,cACzFk1C,EAAU1xC,IAAI+K,SAAW,EACzB6mC,EAAY34C,oBAAkB8R,KAA2B,IAAdA,GACwC,EAAnF4mC,EAAQl0C,wBAAwBsN,GAAU4mC,EAAQ90C,0BAA0B,IAChF80C,EAAQz4C,KAAKyc,MAAMM,UAAU,gBAAiB27B,QAE7C,GAAkB,mBAAd7sB,EAEL,IAAK,IADD8sB,EAAeF,EAAQz4C,KAAKyc,MAAMG,OAAOhd,OACpCF,EAAI,EAAGA,EAAIi5C,EAAcj5C,IACW,kBAArC+4C,EAAQz4C,KAAKyc,MAAMG,OAAOld,GAAGQ,KAC7Bu4C,EAAQz4C,KAAKyc,MAAMG,OAAOtX,OAAO5F,GAKX,UAAlCuI,KAAKlJ,OAAOkF,aAAaC,MAA8C,WAA1Bs0C,EAAU1wC,aACvDG,KAAKlJ,OAAOub,OAAO,uBAG3B48B,EAAKhuC,UAAU4E,kBAAoB,SAAU7C,GACzC,IAAI3B,EAAS2B,EAAK3B,OAClB,IAAIvJ,oBAAkBuJ,EAAO2J,QAAQ,iBAArC,CAGA,IAAIrL,EAASK,KAAKlJ,OAAOiB,KAAKo1C,kBAAkB9rC,EAAO2J,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlCpM,KAAKlJ,OAAOkF,aAAaC,OAAoB+D,KAAK2wC,WAAahxC,IAAWA,EAAOixC,cACjFjxC,EAAOM,eAAkBoB,EAAOiH,UAAUC,SAAS,sBACnDlH,EAAOiH,UAAUC,SAAS,uBAA0BvI,KAAKlJ,OAAOkF,aAAaqyB,oBAAqB,CAGlG,GAFAruB,KAAK2wC,WAAY,EACjB3wC,KAAKlJ,OAAOiB,KAAK0lB,eAAgBkK,iBAAkB3kB,EAAK4G,WAAY,GAChE5J,KAAKlJ,OAAOwH,qBAAsB,CAClC,IAAI6Q,EAAKrE,eAAa9H,EAAK3B,OAAQ,SACnCrB,KAAKkvC,iBAAmB//B,EAAG/C,aAAa,iBACxC+C,EAAGjC,aAAa,gBAAiBiC,EAAGvF,SAAW,IAEnD5J,KAAK6wC,mBAAmB,YAGhC5B,EAAKhuC,UAAU4vC,mBAAqB,SAAU50C,GAC1C+D,KAAKlJ,OAAOiB,KAAK0lB,eAAgBzhB,cAAgBC,KAAMA,KAAU,GAC9CtD,YAAU,gBAAiBqH,KAAKlJ,OAAOiB,KAAKmE,YAClD8F,MAAMhC,KAAKlJ,OAAOiB,KAAKmE,YACpC8D,KAAKlJ,OAAOiB,KAAKi2B,QAAS,GAE9BihB,EAAKhuC,UAAUgvC,eAAiB,WACxBjwC,KAAKlJ,OAAOwH,sBAA0D,SAAlC0B,KAAKlJ,OAAOkF,aAAaC,OAC7D+D,KAAK2wC,WAAY,EACjB3wC,KAAK6wC,mBAAmB,YAGhC5B,EAAKhuC,UAAUuF,WAAa,SAAUxD,IAC9BhD,KAAK2wC,WAAgD,SAAlC3wC,KAAKlJ,OAAOkF,aAAaC,MAAmB6R,cAAc9N,KAAKlJ,OAAOsgB,oBACzFpX,KAAK8wC,SAAW9tC,EAAKvH,QAEL,OAAhBuH,EAAKvH,QACLuE,KAAK6F,kBAAkB7C,IAG/BisC,EAAKhuC,UAAUwtC,eAAiB,SAAUp0C,UAE/B2F,KAAKlJ,OAAe,yBAAEuD,UAEtB2F,KAAKlJ,OAAS,mBAAEuD,IAE3B40C,EAAKhuC,UAAU+E,SAAW,SAAUhD,GAChC,IAAIsE,EAAQtH,KAER+wC,EAAO/tC,EAAY,QAoBvB,UAnBOA,EAAY,QACfhD,KAAKlJ,OAAOwH,uBAAyBxG,oBAAkBkI,KAAKkvC,oBAC5DlsC,EAAKnE,IAAIqO,aAAa,gBAAiBlN,KAAKkvC,kBAC5ClvC,KAAKkvC,sBAAmBnyB,GAEN,UAAlB/c,KAAK8wC,UACL9wC,KAAKlJ,OAAOqS,QAAQqjB,GAAiBxpB,EAAM,SAAUguC,GAC5CA,EAAa9nC,QAA6C,SAAnC5B,EAAMxQ,OAAOkF,aAAaC,KAG7C+0C,EAAa9nC,QAA6C,SAAnC5B,EAAMxQ,OAAOkF,aAAaC,OACtDqL,EAAMqpC,WAAY,EAClBrpC,EAAMupC,mBAAmB,WAJzBvpC,EAAMkqB,mBAAmB,QAMxB15B,oBAAkBi5C,IACnBA,EAAK7lB,QAAQ8lB,KAIrBhxC,KAAKmwC,oBAAsBnwC,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,qBACrEvI,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,uBAAyBvI,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,kBAG7G,OAFAvF,EAAKkG,QAAS,OACdlJ,KAAKmwC,kBAAoB,MAGS,SAAlCnwC,KAAKlJ,OAAOkF,aAAaC,OACH,QAAlB+D,KAAK8wC,UAAwC,aAAlB9wC,KAAK8wC,SAChC9wC,KAAK8wC,SAAW,KAEO,UAAlB9wC,KAAK8wC,WACV9tC,EAAKkG,QAAS,EACdlJ,KAAK8wC,SAAW,QAO5B7B,EAAKhuC,UAAUuwB,mBAAqB,SAAUyf,GAC1C,IAAKn5C,oBAAkBkI,KAAKlJ,OAAOiB,KAAK25B,eAAgB,CACpD,IAAIwf,EAAYlxC,KAAKlJ,OAAOqc,QAAQC,GAAK,gBACzCpT,KAAKlJ,OAAOiB,KAAK25B,cAAcC,aAAauf,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GjxC,KAAKlJ,OAAOiB,KAAK25B,cAAcC,aAAauf,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGhC,EAAKhuC,UAAUiF,YAAc,SAAUtI,GACnC,GAAsC,SAAlCoC,KAAKlJ,OAAOkF,aAAaC,KAAiB,CAC1C,IAAIk1C,EAAc5yC,WAAS,yBAA0ByB,KAAKlJ,OAAOiB,KAAKmE,YAClEk1C,EAAWpxC,KAAKlJ,OAAO07B,iBAAiB2e,EAAYvnC,SAAU5J,KAAKlJ,OAAO2I,iBAC9EO,KAAKlJ,OAAOuI,aAAaC,YACrBX,KAAMwyC,EAAYzlC,QAClBnM,KAAM6xC,EACNzxC,OAAQK,KAAKlJ,OAAOiB,KAAK6H,aAAaI,KAAKlJ,OAAO2I,mBAEtDO,KAAK6wC,mBAAmB,UACxB7wC,KAAK2wC,WAAY,EAEiB,UAAlC3wC,KAAKlJ,OAAOkF,aAAaC,MACzB+D,KAAKlJ,OAAOub,OAAO,yBAG3B48B,EAAKhuC,UAAU4uC,eAAiB,SAAU7sC,GAClCzL,EAAgByI,KAAKlJ,SAA6C,SAAlCkJ,KAAKlJ,OAAOkF,aAAaC,MAAmC,SAAhB+G,EAAKvH,SACjFuE,KAAKkxB,WAAWluB,EAAMA,EAAK4G,UAC3B5J,KAAKqxC,cAAcruC,EAAMA,EAAKnE,IAAKmE,EAAK4G,YAGhDqlC,EAAKhuC,UAAU6E,SAAW,SAAU9C,GAChC,IAAIsE,EAAQtH,KACZ,GAAsC,SAAlCA,KAAKlJ,OAAOkF,aAAaC,MAAmB+D,KAAKlJ,OAAOqc,QAAQpI,cAAc,QAAS,CACvF/H,EAAKkG,QAAS,EAEduM,WAAS,UAAU,EAAOzV,KAAKlJ,OAAOiB,MACtC0d,WAAS,kBAAkB,EAAMzV,KAAKlJ,QACtCkM,EAAK0I,QAAQ1I,EAAK1H,YAAc0H,EAAK3I,MACrC,IAAIi3C,EAEAA,EADAx5C,oBAAkBkL,EAAKzD,MACfS,KAAKlJ,OAAOiB,KAAKmE,WAAqB,WAAEq1C,KAAKzvB,cAAckd,WAG3Dh8B,EAAKzD,KAAKy/B,WAEtB,IAAIwS,EACAC,EAAgBzxC,KAAKlJ,OAAO4E,0BAC5B5D,oBAAkBw5C,GAClBtxC,KAAKlJ,OAAOiB,KAAKuE,wBAAwBqB,OAAO,SAAUC,EAAGnG,GACrDmG,EAAE6zC,EAAc,MAAQzuC,EAAK0I,QAAQ+lC,EAAc,MACnDD,EAAa/5C,KAMrB+5C,GAAwD,IAA1CxxC,KAAKlJ,OAAOiI,UAAUL,QAAQ4yC,IAAkBtxC,KAAKlJ,OAAOqI,mBAAqB,EAC3Fa,KAAKlJ,OAAOiB,KAAKq+B,iBAAiB13B,QAAQ4yC,GAAStxC,KAAKlJ,OAAOiI,UAAUL,QAAQ4yC,GAEzF,IAAI9a,KAMJ,GALAj6B,SAAOi6B,EAAKxzB,GACZwzB,EAAIttB,QAAS,EACbstB,EAAIvzB,KAAO,OACXquC,EAAQtxC,KAAKlJ,OAAOiB,KAAKgH,UAAUuyC,EAAM1nC,UACzC5J,KAAKlJ,OAAOqS,QAAQkkB,EAAoBmJ,GACnCA,EAAIttB,OAiCLlJ,KAAKlJ,OAAOiB,KAAKi2B,QAAS,OA5B1B,GAJKsjB,EAAM1nC,WAAa5J,KAAKlJ,OAAOwF,wBAAwB3E,OAAS,GAAwB,QAAlBqI,KAAK8wC,WAC5E9wC,KAAK0xC,cAAe,GAExB1xC,KAAK2xC,gBAAgB3uC,GAChBnM,EAAamJ,KAAKlJ,SACjBkJ,KAAKlJ,OAAOC,sBAAsBC,eAAegJ,KAAKlJ,OAAOC,WAAWE,mBAAmBosB,qBAa5F,GAAIxsB,EAAamJ,KAAKlJ,SACtBkJ,KAAKlJ,OAAOC,sBAAsBC,eAAegJ,KAAKlJ,OAAOC,WAAWE,mBAAmBosB,oBAAoB,CAChH,IAAI7O,EAAQxU,KAAKlJ,OAAOiB,KAAKyc,MAClBxU,KAAKlJ,OAAOiB,KAAKhB,WAAW66C,OAAOH,EAAc,GAAIzuC,EAAK0I,QAAS8I,EAAMq9B,UAAWr9B,EAAOxR,EAAK8uC,eACtG18B,KAAK,SAAUxX,GACX9F,oBAAkB8F,KACnBoF,EAAK0I,QAAQ1I,EAAK1H,YAAcsC,EAAEoF,EAAK1H,aAE3CgM,EAAM4pB,WAAWluB,EAAMwuC,GACvBlqC,EAAM+pC,cAAcruC,EAAMsuC,EAAOE,WArBrC,GAAIj6C,EAAgByI,KAAKlJ,QAAS,CAC9B,IACIi7C,GAAalyC,YAAa,OAAQlB,KAAMqE,EAAK0I,QAASjQ,OAAQ,OAAQoD,IAAKyyC,EAC3E1nC,SAAU4nC,EAAY9lC,QAAS1I,EAAK0I,QAASpQ,WAAY0H,EAAK1H,WAC9D02C,kBAAmB,KAAMC,oBAAqB,MAClDjyC,KAAKlJ,OAAOiB,KAAK8f,gBAA4B,aAAEk6B,EAAU/xC,KAAKlJ,OAAOiB,KAAKyc,YAG1ExU,KAAKkxB,WAAWluB,EAAMwuC,GACtBxxC,KAAKqxC,cAAcruC,EAAMsuC,EAAOE,KAqBpDvC,EAAKhuC,UAAUowC,cAAgB,SAAUruC,EAAMnE,EAAK+K,GAChD,IAAIsoC,EACAlyC,KAAKlJ,OAAOiB,KAAKo6C,iBACjBnyC,KAAKlJ,OAAOiB,KAAKo6C,gBAAgBniB,QAAQhtB,EAAK0I,SAElD1L,KAAKlJ,OAAOiB,KAAKmE,WAAWk2C,gBAAgBpyC,KAAKlJ,OAAOiB,KAAKijB,iBAAiBhY,EAAK1H,cACnF0E,KAAKlJ,OAAOiB,KAAKmE,WAAWm2C,QAAQvoC,UACd,QAAlB9J,KAAK8wC,UAAwC,aAAlB9wC,KAAK8wC,WAChC9wC,KAAK6wC,mBAAmB,UACxB7wC,KAAK2wC,WAAY,GAErB3wC,KAAKwxB,mBAAmB,QACpBxxB,KAAKlJ,OAAOqI,mBAAqB,IACjC+yC,EAAOlyC,KAAKlJ,OAAOiB,KAAKq+B,iBAAiBxsB,GACzCyD,eAAa6kC,IAAQ,cAAe,eACpC7kC,cAAY6kC,EAAKzpC,iBAAiB,eAAgB,oBAAqB,iBAE3E4E,eAAaxO,IAAO,cAAe,eACnCwO,cAAYxO,EAAI4J,iBAAiB,eAAgB,oBAAqB,gBACtEzI,KAAKlJ,OAAOiB,KAAKk2C,YAAYqE,eAC7Bt3C,GAAaX,MAAO2I,EAAK0I,QAASjQ,OAAQ,QAAUuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,cAAe2H,EAAK1H,YAC7HuD,EAAI+K,WAAa5J,KAAKlJ,OAAOwF,wBAAwB3E,OAAS,GAAwB,UAAlBqI,KAAK8wC,WAC1E9wC,KAAK8wC,SAAW,MAEpB,IAAIyB,GACAtvC,KAAM,OAAQtD,OAAQK,KAAKlJ,OAAOkkB,iBAAiBhY,EAAK1H,YAAaqD,KAAMqE,EAAK0I,QAChF8mC,aAAcxvC,EAAK8uC,cAAejzC,IAAKA,EAAKwC,OAAQ2B,EAAKzD,MAE7DS,KAAKlJ,OAAOqS,QAAQmP,EAAuBi6B,IAE/CtD,EAAKhuC,UAAUuuC,YAAc,SAAU6C,IAC9BryC,KAAKlJ,OAAOiB,KAAKi2B,QAAUhuB,KAAK2wC,WAA+B,QAAlB3wC,KAAK8wC,UAAwD,SAAlC9wC,KAAKlJ,OAAOkF,aAAaC,OAClG+D,KAAK6wC,mBAAmB,UACxB7wC,KAAK2wC,WAAY,EACjB3wC,KAAK8wC,SAAW,OAGxB7B,EAAKhuC,UAAU0wC,gBAAkB,SAAU3uC,GACvC,GAAI8K,cAAc9N,KAAKlJ,OAAOsgB,iBAK1B,IAAK,IAJD4c,EAAOh0B,KAAKlJ,OAAOiB,KAAK6H,aAExB8iB,EAAc1iB,KAAKlJ,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAIu8B,EAAKr8B,OAAQF,IAAK,CAClC,GAAIirB,EAAYjrB,GAAGob,SAAU,CACzB,IAAI4/B,EAAazyC,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK4gB,EAAKv8B,GAAGwU,IACvDyW,EAAYjrB,GAAGi7C,mBAAfhwB,CAAmCnmB,UAASjC,OAAU7C,IAAMuL,EAAK0I,SAAU1L,KAAKlJ,OAAOiB,KAAM,WAAY06C,EAAYzyC,KAAKlJ,OAAOiB,KAAQ,iBAAG,MAE5Ii8B,EAAKv8B,GAAGk7C,cACRC,uBAAqB5yC,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK4gB,EAAKv8B,GAAGwU,IAAM,eAAgB,eAAgB+nB,EAAKv8B,IAEtGu8B,EAAKv8B,GAAGob,UACR+/B,uBAAqB5yC,KAAKlJ,OAAOiB,KAAKob,QAAQC,GAAK4gB,EAAKv8B,GAAGwU,IAAK,WAAY+nB,EAAKv8B,IAAI,KAKrGw3C,EAAKhuC,UAAUiwB,WAAa,SAAUluB,EAAM4G,GACxC5J,KAAKlJ,OAAOiB,KAAKmE,WAAWi1B,UAAUvnB,EAAU5G,EAAK0I,SACrD1L,KAAKlJ,OAAOiB,KAAKqgB,gBAAgBxO,GAAUjL,KAAOqE,EAAK0I,SAE3DujC,EAAKhuC,UAAUyE,WAAa,SAAUzK,EAASK,GAC3CN,EAAWC,EAAS+E,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,cAAeC,EAAY0E,KAAKzE,cAC9GyE,KAAKlJ,OAAO2G,cAGZ,IAAK,IAFDkB,EAAOqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC9CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAAK,CAClCkH,EAAKlH,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAM+H,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACjDT,EAAQZ,MAAMpC,KAAS0G,EAAKlH,GAAGQ,IACR,QAAnBgD,EAAQQ,SACRkD,EAAKlH,GAAG8C,MAAQyF,KAAKqvC,mBAAmB90C,MACxCoE,EAAKlH,GAAGsF,SAAWiD,KAAKqvC,mBAAmBtyC,SAC3C4B,EAAKlH,GAAG2B,SAAW4G,KAAKqvC,mBAAmBj2C,SACtCtB,oBAAkBkI,KAAKqvC,mBAAmBn2C,cAC3CyF,EAAKlH,GAAGyB,WAAa8G,KAAKqvC,mBAAmBn2C,WAC7CyF,EAAKlH,GAAG+G,eAAiBwB,KAAKqvC,mBAAmB7wC,gBAErDG,EAAKlH,GAAGiC,aAAesG,KAAKqvC,mBAAmB31C,cAGvD+b,WAAS,sBAAwB9W,EAAKlH,GAAG2B,SAAW,SAAU3B,EAAGuI,KAAKlJ,QACjE6H,EAAKlH,GAAG8C,OACTyF,KAAKlJ,OAAO2G,WAAW7E,KAAK+F,EAAKlH,IAGlB,QAAnBwD,EAAQQ,QAAmD,MAA/BuE,KAAKovC,yBACjCpvC,KAAKlJ,OAAO2mB,eAAgBzhB,cAAgBQ,eAAgBwD,KAAKovC,0BAA4B,GAC7FpvC,KAAKovC,uBAAyB,OAGtCH,EAAKhuC,UAAU4xC,YAAc,SAAUl0C,EAAMqJ,EAAM1P,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAI6F,KAAKlJ,OAAO68B,cAAch8B,OAAQwC,IAAK,CACvD,IAAI24C,EAAQx6C,EAAQ6B,GAChBG,EAAQiE,WAAS,sBAAwBu0C,EAAM15C,SAAW,SAAU4G,KAAKlJ,QAE7E,GADAg8C,EAAMx4C,MAAQA,GACTxC,oBAAkBg7C,EAAM55C,YAAa,CACtC,IAAIqpC,EAAchkC,WAAS,sBAAwBu0C,EAAM55C,WAAWE,SAAW,SAAU4G,KAAKlJ,QAC9Fg8C,EAAM55C,WAAWoB,MAAQioC,GAIjC,IAAK,IADDj0B,GAAS,EACJxR,EAAI,EAAGA,EAAIkD,KAAKlJ,OAAOiI,UAAUpH,OAAQmF,IAAK,CAC9CkL,EAAKlL,GAAGwL,UAAUC,SAAS,gBAC5B+F,IAEJ,IAAIykC,EAAQz6C,EAAQgW,GAEhB/T,GADAD,EAAQy4C,EAAMz4C,MACNy4C,EAAMx4C,OACdsE,EAAMmJ,EAAKlL,GACVhF,oBAAkBi7C,EAAM75C,cACzBoB,EAAQiE,WAAS,sBAAwBw0C,EAAM75C,WAAWE,SAAW,SAAU4G,KAAKlJ,SAExF,IAAIk8C,EAAWn0C,EAAIW,MAAMQ,KAAKlJ,OAAO2I,iBACrC,IAAK3H,oBAAkBk7C,GAAW,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAS1qC,UAAU3Q,OAAQs7C,IAAK,CAChD,IAAI54C,EAAQ24C,EAAS1qC,UAAU2qC,GAG3B3/B,EAASjZ,EAAMiP,MAFN,mBAGTkR,EAAUngB,EAAMiP,MAFN,yBAGA,MAAVgK,GACAjG,eAAa2lC,GAAW34C,GAEb,MAAXmgB,GACAnN,eAAa2lC,GAAW34C,GAG3B2N,EAAKlL,GAAGwL,UAAUC,SAAS,eAI5B+H,YAAU0iC,GAAW,uBAAyB14C,EAAQ,QAAUC,GAHhE+V,YAAU0iC,GAAW,iBAAmB14C,EAAQ,QAAUC,MAQ1E00C,EAAKhuC,UAAU2E,SAAW,SAAU5C,GAChC,IAAIguB,EACA12B,EAAQ0F,KAAK5E,YACb9C,EAAU0H,KAAKlJ,OAAOiB,KAAKuE,wBACO,UAAlC0D,KAAKlJ,OAAOkF,aAAaC,OACzB3B,EAAQ0F,KAAKsvC,gBAAgBzC,iBAC7B7sC,KAAK3E,cAAgB2E,KAAKsvC,gBAAgBxC,oBACtC9sC,KAAKlJ,OAAOqF,kBAAkB6D,KAAKwT,cAAc7b,OAAS,GACvDqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAKke,gBAAgBvmB,UACtDW,EAAU0H,KAAKsvC,gBAAgB1C,oBAGvC,IAAI5kC,EAAOhI,KAAKlJ,OAAOiB,KAAK47B,cACxBuf,EAAiBlrC,EAAKrQ,QAAUqQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+mC,EAAgBnrC,EAAKrQ,QAAUqQ,EAAKA,EAAKrQ,OAAS,GAAGyU,aAAa,iBAAmB,EACrFgnC,EAAcpzC,KAAK3E,eAAiB63C,GAAkBlzC,KAAK3E,eAAiB83C,EAC5EE,EAAmBrzC,KAAKlJ,OAAOwH,sBAAwB0B,KAAK5E,aAAe,GAA+B,OAA1B4E,KAAKkvC,iBACzF,GAAsC,WAAlClvC,KAAKlJ,OAAOkF,aAAaC,KAAmB,CAC5C,GAAgD,UAA5C+D,KAAKlJ,OAAOkF,aAAaQ,eACzBw0B,EAAW,cAEV,IAAiD,UAA5ChxB,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAClFwD,KAAK3E,eAAiB,GAAKg4C,IAAqBD,IACpDpiB,EAAW,SACNl5B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlCyG,KAAKlJ,OAAOkF,aAAaC,OAAqB+D,KAAKlJ,OAAOqF,kBAAkB6D,KAAKwT,cAAc7b,OAAS,GACrGqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAKke,gBAAgBvmB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAErDlC,GADsB0F,KAAKsvC,gBAAgBvC,2BAK/CzyC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAKqI,KAAK3E,eAAiB,GAAKg4C,IAAqBD,IAC7C94C,GAAsD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,gBACY,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBAA8B,CAC1DlC,GAAS0N,EAAKrQ,SACd2C,EAAQ0N,EAAKrQ,OAAS,GAE1B,IACI27C,EAAetzC,KAAKlJ,OAAOiB,KAAKmhB,cAAe,KAAE,GACjDq6B,EAAkBvX,SAASwX,cAC/BxrC,EAAK1N,EAAQ,GAAG02B,GAAUhpB,EAAK,IAC/ByN,WAAS,aAAcnb,EAAQ,EAAG0F,KAAKsvC,iBACvC,IAAI9B,EAA6D,UAA5CxtC,KAAKlJ,OAAOkF,aAAaQ,eAA6BlC,EAAQA,EAAQ,EAG3F,GAFA0F,KAAKlJ,OAAOiB,KAAKmhB,cAAe,KAAE7b,OAAO,EAAG,GAC5C2C,KAAKlJ,OAAOiB,KAAKmhB,cAAe,KAAE7b,OAAOmwC,EAAgB,EAAG8F,GACxDtzC,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,cAAe,CACvF,IAAIw2B,EAAcl2B,KAAKlJ,OAAOuY,qBAE1BokC,EAAqBzzC,KAAKlJ,OAAOiB,KAAKqgB,gBAAgB,GAC1D8d,EAAY57B,EAAQ,GAAG02B,GAAUkF,EAAY,IAC7Cl2B,KAAKlJ,OAAOiB,KAAKmhB,cAAmB,WAAE7b,OAAO,EAAG,GAChD2C,KAAKlJ,OAAOiB,KAAKmhB,cAAmB,WAAE7b,OAAOmwC,EAAgB,EAAGiG,GAChEh+B,WAAS,aAAcnb,EAAQ,EAAG0F,KAAKsvC,iBAE3C,GAAsC,QAAlCtvC,KAAKlJ,OAAOkF,aAAaC,MAAoD,SAAlC+D,KAAKlJ,OAAOkF,aAAaC,KAAiB,CAErF,IAAK,IADDy3C,EAAS1zC,KAAKlJ,OAAOiB,KAAKof,kBAAkB1O,iBAAiB,gBACxDhR,EAAI,EAAGA,EAAIi8C,EAAO/7C,OAAQF,IAC/Bi8C,EAAOj8C,GAAGutB,SAEdvP,WAAS,gBAAkBzV,KAAKlJ,OAAOiB,KAAKmE,WAAWm2C,SAEvDgB,IACArzC,KAAKkvC,iBAAmB,MAE5BqE,EAAgBI,WAsB5B1E,EAAKhuC,UAAU0E,UAAY,SAAU3C,GACjC,GAAyB,YAArBA,EAAKnD,aAA6BG,KAAK2wC,UACvC3tC,EAAKkG,QAAS,OAGlB,GAAsC,SAAlClJ,KAAKlJ,OAAOkF,aAAaC,MAAwC,cAArB+G,EAAKnD,YAArD,CAIA,GAAIG,KAAKmwC,oBAAsBnwC,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,qBACrEvI,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,uBAAyBvI,KAAKmwC,kBAAkB7nC,UAAUC,SAAS,YAG7G,OAFAvF,EAAKkG,QAAS,OACdlJ,KAAKmwC,kBAAoB,MAG7B,GAAyB,WAArBntC,EAAKnD,YAEL,IAAK,IADDlB,EAAOqE,EAAKrE,KACPlH,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAAK,CAClCuI,KAAKyuC,eAAe9vC,EAAKlH,GAAG2B,UAE5B,IAAK,IADDi1C,EAAS70C,EAAoBmF,EAAKlH,IAC7B8J,EAAI,EAAGA,EAAI8sC,EAAO12C,OAAQ4J,IAC/BvB,KAAKyuC,eAAeJ,EAAO9sC,GAAGnI,UAElC4J,EAAKrE,KAAOA,EAAKhF,OAAO00C,GAGhC,GAAyB,QAArBrrC,EAAKnD,YAAuB,CAE5B,GADAG,KAAK3E,cAAgB2E,KAAKlJ,OAAOiB,KAAK4vB,iBAClC3nB,KAAKlJ,OAAOwH,qBAAsB,CAClC,IAAIs1C,EAAW,yBAA2B5zC,KAAK3E,cAAgB,KAC3DwD,OAAM,EACNmB,KAAK3E,eAAiB,GAAiD,QAA5C2E,KAAKlJ,OAAOkF,aAAaQ,gBACR,WAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBACzBwD,KAAKkvC,iBAAmBlvC,KAAK3E,cAAcyM,WAC3CjJ,EAAMmB,KAAKlJ,OAAO08B,aAAazoB,cAAc6oC,GAC7C5zC,KAAK5E,YAAcyD,EAAMA,EAAI+K,SAAW,GAGpC5J,KAAKkvC,kBAA8C,OAA1BlvC,KAAKkvC,kBAC9B0E,EAAW,yBAA2B5zC,KAAKkvC,iBAAmB,KAC9DrwC,EAAMmB,KAAKlJ,OAAO08B,aAAazoB,cAAc6oC,GAC7C5zC,KAAK5E,YAAcyD,EAAMA,EAAI+K,SAAW,GAGxC5J,KAAK5E,YAAc,OAK3B4E,KAAK5E,YAAc4E,KAAKlJ,OAAOiB,KAAK4vB,kBAAoB,EAAI3nB,KAAKlJ,OAAOiB,KAAK4vB,iBAAmB,EAEpG3nB,KAAKzE,aAAeyE,KAAKlJ,OAAO6R,qBAAqB,GAEzD3F,EAAOhD,KAAK6zC,aAAa7wC,QA/CrBA,EAAKkG,QAAS,GAyDtB+lC,EAAKhuC,UAAU6uC,wBAA0B,SAAU9sC,GACX,OAAhChD,KAAKovC,yBACLpvC,KAAKovC,uBAAyBpvC,KAAKlJ,OAAOkF,aAAaQ,iBAG/DyyC,EAAKhuC,UAAU4yC,aAAe,SAAU7wC,GACpC,IAAI3I,EAAQ2I,EAAKrE,KACjB,GAAoB,QAAhBqE,EAAKvH,OAAkB,CACvB,IAAIxD,EAAM+H,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACjDs1B,EAAW,KACf32B,EAAM0C,SAAWjF,oBAAkBuC,EAAM0C,UAAYR,YAAWyG,EAAKrE,MAAQtE,EAAM0C,SAGnF,IAAI4c,EAAc3Z,KAAKlJ,OAAOiB,KAAKuE,wBAC/BhC,EAAQ0F,KAAK5E,YACjBf,EAAMjB,SAAWwd,SAAO5W,KAAKlJ,OAAOqc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBpb,EAAMjB,SAAUiB,EAAO2F,KAAKlJ,QAC7D,IAAIyD,EAAQ,EAER6C,OAAY,EACZoB,OAAiB,EACjBtF,OAAa,EACbiE,OAAkB,EAClBk2C,EAAmBrzC,KAAKlJ,OAAOwH,sBAAwB0B,KAAK5E,aAAe,GAA+B,OAA1B4E,KAAKkvC,iBACrFlnC,EAAOhI,KAAKlJ,OAAOiI,UACnBm0C,EAAiBlrC,EAAKrQ,QAAUqQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+mC,EAAgBnrC,EAAKrQ,QAAUqQ,EAAKA,EAAKrQ,OAAS,GAAGyU,aAAa,iBAAmB,EACrFgnC,EAAcpzC,KAAK3E,eAAiB63C,GAAkBlzC,KAAK3E,eAAiB83C,EAUhF,GATIx5B,EAAYhiB,SACAgiB,EAAY3Z,KAAK5E,aAAad,MAC1C8C,EAAYuc,EAAY3Z,KAAK5E,aAAa4E,KAAKlJ,OAAOsG,WACtDD,EAAkBwc,EAAY3Z,KAAK5E,aAAa4E,KAAKlJ,OAAOqG,iBACxDwc,EAAY3Z,KAAK5E,aAAalC,aAC9BsF,EAAiBmb,EAAY3Z,KAAK5E,aAAalC,WAAWE,UAE9DF,EAAaygB,EAAY3Z,KAAK5E,aAAalC,YAEC,QAA5C8G,KAAKlJ,OAAOkF,aAAaQ,gBAA4Bmd,EAAYhiB,OAAQ,CAEzE,GADA4C,EAAQof,EAAY3Z,KAAK5E,aAAab,MACU,UAA5CyF,KAAKlJ,OAAOkF,aAAaQ,eACzBw0B,EAAW,SACX12B,EAAQqf,EAAY3Z,KAAK5E,aAAad,WAErC,GAAgD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAC1Dw0B,EAAW,QACX,IAAI8c,EAAmBt0C,EAAoBmgB,EAAY3Z,KAAK5E,cAAczD,OACtE21C,EAAmB3zB,EAAY3Z,KAAK5E,aAAad,MACrDA,EAASwzC,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5C9tC,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAC1Dw0B,EAAW,SACNhxB,KAAK3E,eAAiB,GAAKg4C,IAAqBD,IACjD/4C,EAAMnB,WAAaqD,YAAWod,EAAY3Z,KAAK5E,cAC/Cf,EAAMmE,eAAiBnE,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAW8G,KAAKlJ,OAAOwG,eAExC,IAAIw2C,EAAoBt6C,EAAoBmgB,EAAY3Z,KAAK5E,cAAczD,OACvEo8C,EAAoBp6B,EAAY3Z,KAAK5E,aAAad,MACtDD,EAAME,MAAQA,EAAQ,EACtBD,EAASw5C,EAAoB,EAAMC,EAAoBD,IACnD9zC,KAAK7E,kBACLd,EAAM0C,SAASiD,KAAKlJ,OAAOqG,iBAAmB9C,EAAM2F,KAAKlJ,OAAOqG,iBAAmBC,EAC9EtF,oBAAkBuC,EAAMnB,aACzBqE,EAAgBtF,EAAKoC,EAAMnB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBd,IAsB7F,GAlBgD,UAA5C2F,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAC3EwD,KAAK3E,eAAiB,GAAKg4C,IAAqB94C,GAAS64C,IAC1D/4C,EAAMmE,eAAiBA,EACvBnE,EAAMnB,WAAaqD,YAAWrD,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAW8G,KAAKlJ,OAAOwG,eAExCjD,EAAME,MAAQA,EACVyF,KAAK7E,kBACLd,EAAM0C,SAASiD,KAAKlJ,OAAOqG,iBAAmB9C,EAAM2F,KAAKlJ,OAAOqG,iBAAmBA,EAC9ErF,oBAAkBuC,EAAMnB,aACzBqE,EAAgBtF,EAAKoC,EAAMnB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBd,KAI7E,MAAZ22B,IAAqBhxB,KAAK3E,eAAiB,GAAKg4C,IAAqBD,IACrEpwC,EAAK1I,MAAqB,WAAb02B,EAAwB12B,EAAQA,EAAQ,GAET,WAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACtD,IAAIzF,EAAciJ,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cACrDgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WACnEiM,EAAK1I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAGlBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB0I,EAAKvH,SACLuE,KAAKqvC,oBAAuB90C,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1F2D,SAAU1C,EAAM0C,SAAUyB,eAAgB1G,oBAAkBuC,EAAMnB,iBAAc6jB,EAAY1iB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArBsJ,EAAKnD,YAEL,IAAK,IADDm0C,EAAgBhxC,EAAKrE,KAChBlH,EAAI,EAAGA,EAAIu8C,EAAcr8C,OAAQF,IACtC,GAAIu8C,EAAcv8C,GAAGyB,WAAY,CACzBA,EAAaC,EAAc6G,KAAKlJ,OAAQk9C,EAAcv8C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAI0oC,EAAajpC,EAAWQ,aAAagF,QAAQs1C,EAAcv8C,IAC/DyB,EAAWQ,aAAa2D,OAAO8kC,EAAY,IAK3D,OAAOn/B,GAMXisC,EAAKhuC,UAAU8vB,UAAY,SAAUpyB,EAAMrE,EAAO02B,GAC9ChxB,KAAKovC,uBAAyBpvC,KAAKlJ,OAAOkF,aAAaQ,eACnDmC,GACIrE,GAAS,GACT0F,KAAK3E,cAAgBf,EACrB0F,KAAK5E,YAAcd,IAGnB0F,KAAK3E,cAAgB2E,KAAKlJ,OAAO6wB,iBACjC3nB,KAAK5E,YAAc4E,KAAKlJ,OAAO6wB,kBAE/BqJ,GACAhxB,KAAKlJ,OAAO2mB,eAAgBzhB,cAAgBQ,eAAgBw0B,KAAc,GAE9EhxB,KAAKlJ,OAAOiB,KAAKmE,WAAW60B,UAAUpyB,EAAMrE,IAG5C0F,KAAKlJ,OAAOiB,KAAKmE,WAAW60B,UAAUpyB,EAAMrE,IAOpD20C,EAAKhuC,UAAUgzC,iBAAmB,WAC9B,OAAOj0C,KAAKlJ,OAAOiB,KAAKmE,WAAW+3C,oBAKvChF,EAAKhuC,UAAUizC,YAAc,WACzBl0C,KAAKlJ,OAAOiB,KAAKmE,WAAWg4C,eAEhCjF,EAAKhuC,UAAUwuC,aAAe,SAAU7xC,GAC/B9F,oBAAkB8F,EAAEoF,KAAKnD,cACY,WAAlCjC,EAAEoF,KAAKnD,YAAYiI,YAA6D,SAAlClK,EAAEoF,KAAKnD,YAAYiI,aAC3B,UAAlC9H,KAAKlJ,OAAOkF,aAAaC,MAAsD,cAAlC2B,EAAEoF,KAAKnD,YAAYiI,cACxE9H,KAAK6yC,YAAY7yC,KAAKlJ,OAAOiB,KAAKhB,WAAYiJ,KAAKlJ,OAAOiI,UAAWiB,KAAKlJ,OAAOwF,0BAC7E0D,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,gBACpEM,KAAKlJ,OAAOiB,KAAKhB,WAAWY,SAAWqI,KAAKlJ,OAAOuY,qBAAqB1X,QACxEqI,KAAK6yC,YAAY7yC,KAAKlJ,OAAOiB,KAAKhB,WAAYiJ,KAAKlJ,OAAOuY,qBAAsBrP,KAAKlJ,OAAOwF,2BAS5G2yC,EAAKhuC,UAAUswB,SAAW,SAAU3nB,EAAUtF,GACJ,SAAlCtE,KAAKlJ,OAAOkF,aAAaC,MAAqD,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,OAC/B,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,OACzB+D,KAAK2wC,WAAY,EACjB3wC,KAAK6wC,mBAAmB,UAE5B7wC,KAAKlJ,OAAOiB,KAAKmE,WAAWq1B,SAAS3nB,EAAUtF,KAGhD2qC,KCtyBPkF,GAA+B,WAC/B,SAASA,EAAcr9C,GACnB2L,OAAKC,OAAO0xC,iBACZp0C,KAAKlJ,OAASA,EAiBlB,OAXAq9C,EAAclzC,UAAU4B,cAAgB,WACpC,MAAO,iBAOXsxC,EAAclzC,UAAU6I,QAAU,aAG3BqqC,KCjBPE,GAA2B,WAC3B,SAASA,EAAUv9C,GACf2L,OAAKC,OAAO4xC,aACZt0C,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBAwGT,OA/FAkqC,EAAUpzC,UAAU4B,cAAgB,WAChC,MAAO,aAEXwxC,EAAUpzC,UAAUkJ,iBAAmB,WACnCnK,KAAKlJ,OAAOsT,GAAG,eAAgBpK,KAAKu0C,aAAcv0C,MAClDA,KAAKlJ,OAAOsT,GAAG,kBAAmBpK,KAAKw0C,gBAAiBx0C,MACxDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,yBAA0BpK,KAAKy0C,oBAAqBz0C,MACxEA,KAAKlJ,OAAOsT,GAAG,iBAAkBpK,KAAK00C,eAAgB10C,MACtDA,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAK20C,kBAAmB30C,MAC5DA,KAAKlJ,OAAOsT,GAAG,iBAAkBpK,KAAK40C,eAAgB50C,OAK1Dq0C,EAAUpzC,UAAUwJ,oBAAsB,WAClCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,eAAgB3K,KAAKu0C,cACrCv0C,KAAKlJ,OAAO6T,IAAI,kBAAmB3K,KAAKw0C,iBACxCx0C,KAAKlJ,OAAO6T,IAAI,iBAAkB3K,KAAK00C,gBACvC10C,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAK20C,mBAC1C30C,KAAKlJ,OAAO6T,IAAI,iBAAkB3K,KAAK40C,gBACvC50C,KAAKlJ,OAAOiB,KAAK4S,IAAI,yBAA0B3K,KAAKy0C,uBAExDJ,EAAUpzC,UAAUwzC,oBAAsB,SAAUzxC,GAEhDA,EAAY,SAAI,GAEpBqxC,EAAUpzC,UAAUszC,aAAe,WAI/B,IAAK,IAHDM,EAAY70C,KAAKlJ,OAAOiI,UAAUpB,OAAO,SAAUC,GACnD,OAAQA,EAAE0K,UAAUC,SAAS,iBAExB9Q,EAAI,EAAGA,EAAIo9C,EAAUl9C,OAAQF,IAAK,CACvC,IAAIq9C,EAAWD,EAAUp9C,GAAG6f,uBAAuB,uBAC/Cy9B,EAAa/0C,KAAKlJ,OAAOiB,KAAKwf,oBAAoBs9B,EAAUp9C,GAAG2U,aAAa,aAC5ElT,EAAaP,YAAU,aAAcqH,KAAKlJ,OAAOiB,KAAKuE,wBAAwB7E,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBmH,KAAKlJ,OAAQi+C,EAAWp2C,KAAMqB,KAAKlJ,OAAOiB,KAAKuE,2BAC/D0D,KAAKlJ,OAAOiB,KAAK4f,gBAAgBzF,OAAO4iC,EAAS,MAI7DT,EAAUpzC,UAAUyzC,eAAiB,SAAU1xC,GAC3C,IAAIgyC,EAAmBhyC,EAAKnE,IAAIyY,uBAAuB,uBAClDxf,oBAAkBk9C,EAAiB,KACpCh1C,KAAKlJ,OAAOiB,KAAK4f,gBAAgBzF,OAAO8iC,EAAiB,KAGjEX,EAAUpzC,UAAU0zC,kBAAoB,SAAU3xC,GAC9C,IAAInM,EAAamJ,KAAKlJ,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAIuL,EAAKsyB,WAAW39B,OAAQF,IACxCuL,EAAKsyB,WAAW79B,GAAGkD,MAAMG,QAAUkI,EAAKvH,QAGhD44C,EAAUpzC,UAAUuzC,gBAAkB,SAAUxxC,GAC5C,IAAK8K,eAAe9N,KAAKlJ,OAAOsgB,iBAAkB,CAC9C,IAAIzY,EAAOqE,EAAKrE,KACZE,EAAMmE,EAAKiyC,cAAcnzB,cAAcozB,gBAEvCC,EAAgB,kBADPr9C,oBAAkB6G,EAAKzF,YAAsCyF,EAAKrE,MAA7BqE,EAAKzF,WAAWoB,OACnB,QAAUqE,EAAKpE,MAC1D66C,EAAYv2C,EAAIkM,cAAc,IAAMoqC,GAAe7sC,UACnD+sC,KAAc7sC,MAAM5F,KAAKwyC,GAAWz3C,OAAO,SAAU23C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAG19C,OAEpB69C,EAAc,eADDH,EAASvtC,WAAWU,MAAM,EAAG+sC,GAE9CjlC,YAAUtN,EAAKiyC,cAAcnzB,eAAgB0zB,KAIrDnB,EAAUpzC,UAAU2zC,eAAiB,SAAU5xC,GAC3C,GAAyB,cAArBA,EAAKnD,aAAoD,QAArBmD,EAAKnD,YAAuB,CAChE,IAAI41C,EAASzyC,EAAKnE,IAAI4J,iBAAiB,eAAe,GAAG2D,aAAa,WAElEspC,GADQnjC,SAASkjC,EAAO,IAAM,GACX3tC,WACvB9E,EAAKnE,IAAI4J,iBAAiB,eAAe,GAAGyE,aAAa,UAAWwoC,GAGxE,IAAK,IADDC,EAAe31C,KAAKlJ,OAAOiB,KAAKmhB,cAAcna,UACzCtH,EAAI,EAAGA,EAAIk+C,EAAah+C,OAAQF,IACrCk+C,EAAal+C,GAAG+H,MAAM,GAAGy0B,SAAU,EAErBt7B,YAAU,cAAeqH,KAAKlJ,OAAOiB,MAErC,eAAE,EAApBk2C,EAA4BjmC,KAAMhI,KAAKlJ,OAAOiB,KAAKmhB,cAAcna,aAOrEs1C,EAAUpzC,UAAU6I,QAAU,WAC1B9J,KAAKyK,uBAEF4pC,KCpHP5zC,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAoBxC60C,GAA4C,SAAU7zC,GAEtD,SAAS6zC,EAA2B9+C,EAAQ++C,GACxC,IAAIvuC,EAAQvF,EAAOa,KAAK5C,KAAMlJ,EAAQ++C,IAAY71C,KAalD,OAZAsH,EAAMwuC,kBAAmB,EACzBxuC,EAAMyuC,WAAa,EACnBzuC,EAAM0uC,SAAW,EACjB1uC,EAAM2uC,aAAc,EAEpB3uC,EAAM2tB,YAAc,EACpB3tB,EAAMynC,UAAY,EAClBznC,EAAM4uC,aAAe,EACrB5uC,EAAM6uC,gBAAiB,EAEvB7uC,EAAMuoB,qBAAsB,EAC5BvoB,EAAM6C,mBACC7C,EAqTX,OApUA7G,GAAUm1C,EAA4B7zC,GAiBtC6zC,EAA2B30C,UAAUm1C,kBAAoB,WACrD,OAAO,IAAIvT,GAA6B7iC,KAAKlJ,SAEjD8+C,EAA2B30C,UAAUnC,cAAgB,SAAUxE,GAC3D,OAAO0F,KAAKlJ,OAAO68B,cAAch2B,OAAO,SAAUC,GAAK,OAAO2U,SAAS3U,EAAEwO,aAAa,iBAAkB,KAAO9R,IAAU,IAE7Hs7C,EAA2B30C,UAAUkJ,iBAAmB,WACpDnK,KAAKlJ,OAAOsT,GAAGisC,GAA0Br2C,KAAKs2C,mBAAoBt2C,MAClEA,KAAKlJ,OAAOsT,GAAGmsC,GAAsBv2C,KAAK4G,cAAe5G,OAE7D41C,EAA2B30C,UAAUq1C,mBAAqB,SAAUtzC,GAC5DA,EAAKwzC,QACLx2C,KAAK+1C,WAAa,EAClB/1C,KAAKi1B,WAAa,EAClBj1B,KAAK+uC,SAAW/uC,KAAKlJ,OAAOka,aAAaq3B,SAAW,GAE/CrlC,EAAK8yC,mBACV91C,KAAK81C,kBAAmB,IAGhCF,EAA2B30C,UAAU2F,cAAgB,SAAU5D,GAC3D,IAAI+7B,EAAU/+B,KAAKlJ,OAAO08B,aAAazoB,cAAc,cACrD,GAAI/K,KAAKi2C,aAAej2C,KAAKi1B,YAAc,GAAKj1B,KAAK+uC,UAAY,EAAG,CAChE,GAAI/uC,KAAK+uC,SAAW/rC,EAAKsL,MAAQtO,KAAKlJ,OAAOka,aAAaq3B,SAAU,CAChE,IAAIoO,KAAqB1X,EAAQxC,UAAYv8B,KAAKlJ,OAAO4/C,gBACrDC,EAAYF,EAAkBz2C,KAAKlJ,OAAOiI,UAAUpH,OACpDg/C,EAAY3zC,EAAKsL,QACjBqoC,EAAYF,GACPzzC,EAAKsL,MAAQmoC,IAEtBz2C,KAAKi1B,WAAa0hB,EAAY32C,KAAKlJ,OAAOiI,UAAUpH,OACpDqI,KAAK+uC,SAAW4H,OAGhB32C,KAAKi1B,YAAc,EACnBj1B,KAAK+uC,UAAY,EAErB/uC,KAAKi2C,aAAc,EAEnBj2C,KAAK6vB,sBACL7vB,KAAKi1B,WAAa,EAClBj1B,KAAK+uC,SAAW/uC,KAAKlJ,OAAOka,aAAaq3B,SAAW,GAExDrlC,EAAKiyB,WAAaj1B,KAAKi1B,WACvBjyB,EAAK+rC,SAAW/uC,KAAK+uC,UAEzB6G,EAA2B30C,UAAU6uB,cAAgB,SAAUr0B,GAC3D,IAAI6L,EAAQtH,KACNA,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACxC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAgB5rC,EAAgByI,KAAKlJ,QAiB1EiL,EAAOd,UAAU6uB,cAAcltB,KAAK5C,KAAM,OAhB1CA,KAAKlJ,OAAO2E,GAAQ,aAAcuE,KAAK42C,YAAa52C,MAEpDA,KAAKgY,GAAK,WACN1Q,EAAMuvC,UAAUC,SAAS,SAAUC,GAAc,OAAOzvC,EAAM0vC,gBAAgBD,KAC9EzvC,EAAMxQ,OAAO6T,IAAI,gBAAiBrD,EAAM0Q,KAE5ChY,KAAKlJ,OAAOsT,GAAG,gBAAiBpK,KAAKgY,GAAIhY,MACzCA,KAAKlJ,OAAOqT,iBAAiBmO,EAAuBtY,KAAKi3C,iBAAiB97B,KAAKnb,OAC/EA,KAAKlJ,OAAO2E,GAAQ,mCAAoCuE,KAAK2F,UAAW3F,MACxEA,KAAKlJ,OAAO2E,GAAQ,kCAAmCuE,KAAK4F,SAAU5F,MACtEA,KAAKlJ,OAAO2E,GAAQ,8BAA+BuE,KAAKk3C,mBAAoBl3C,MAC5EA,KAAKlJ,OAAO2E,GAAQ,aAAcuE,KAAKm3C,iBAAkBn3C,MACzDA,KAAKlJ,OAAO2E,GAAQ,mBAAoBuE,KAAKo3C,QAASp3C,MACtDA,KAAKlJ,OAAO2E,GAAQ,6BAA8BuE,KAAKq3C,WAAYr3C,QAM3E41C,EAA2B30C,UAAU21C,YAAc,SAAUh5C,GACzDmE,EAAOd,UAAU21C,YAAYh0C,KAAK5C,KAAMpC,GAClCoC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACxC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAgB5rC,EAAgByI,KAAKlJ,UACrEgB,oBAAkB8F,EAAE0Q,SACrBtO,KAAK8uC,aAAelxC,EAAE0Q,MACtB/P,WAAS,aAAcyB,MAAMs3C,iBAAiBt3C,KAAKlJ,OAAO4/C,eAAiB94C,EAAE0Q,MAAO,WAGlFxW,oBAAkB8F,EAAEiC,cAA6C,gBAA7BjC,EAAEiC,YAAYiI,YAAiC9H,KAAK6vB,uBAC1F7vB,KAAKu3C,SAAShb,UAAY,EAC1Bv8B,KAAK6vB,qBAAsB,KAIvC+lB,EAA2B30C,UAAU8uB,YAAc,WAC/ChuB,EAAOd,UAAU8uB,YAAYntB,KAAK5C,MAC5BA,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACxC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAgB5rC,EAAgByI,KAAKlJ,UAC1EyH,WAAS,WAAYyB,MAAMD,QAAQy3C,eAAgB,EACnDx3C,KAAK62C,UAAY,IAAIY,GAAyBl5C,WAAS,WAAYyB,MAAMmT,QAAS5U,WAAS,WAAYyB,MAAMD,SAC7GC,KAAKu3C,SAAWv3C,KAAK03C,WAAW1qC,aAGxC4oC,EAA2B30C,UAAU02C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAK/3C,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACvC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAe5rC,EAAgByI,KAAKlJ,QACrEkJ,KAAKm2C,gBACLn2C,KAAKm2C,gBAAiB,EACfn2C,KAAKk2C,eAGZl2C,KAAKk2C,aAAen0C,EAAOd,UAAU02C,cAAc/0C,KAAK5C,KAAM43C,EAAMC,EAASC,EAAMC,GAC5Eh2C,EAAOd,UAAU02C,cAAc/0C,KAAK5C,KAAM43C,EAAMC,EAASC,EAAMC,IAInEh2C,EAAOd,UAAU02C,cAAc/0C,KAAK5C,KAAM43C,EAAMC,EAASC,EAAMC,IAG9EnC,EAA2B30C,UAAU0E,UAAY,SAAU/H,GACvD,IAAIg2C,EAAW,yBAA2Bh2C,EAAEtD,MAAQ,KAChDA,EAAQ0F,KAAKlJ,OAAO08B,aAAazoB,cAAc6oC,GAAUhqC,SACzD8B,EAAU1L,KAAKlJ,OAAOwF,wBAAwBhC,GAClDsD,EAAEe,KAAO+M,GAEbkqC,EAA2B30C,UAAU2E,SAAW,SAAU5C,GACtD,IAEIotC,GAAY5zC,eAAgBwD,KAAKg4C,YAAa58C,YAAa4E,KAAK5E,YAAai1C,aAAcrwC,KAAKqwC,cACpGrwC,KAAKlJ,OAAOub,OAAO,mBAAoB+9B,GACvCpwC,KAAKg4C,YAAc5H,EAAQ5zC,eAC3BwD,KAAK5E,YAAcg1C,EAAQh1C,YAC3B4E,KAAKqwC,aAAeD,EAAQC,aAC5B,IAAIroC,EAAOhI,KAAKlJ,OAAOiI,UACnBm0C,EAAiBlrC,EAAKrQ,QAAUqQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE+mC,EAAgBnrC,EAAKrQ,QAAUqQ,EAAKA,EAAKrQ,OAAS,GAAGyU,aAAa,iBAAmB,EACrF6rC,EAAcj4C,KAAKlJ,OAAO6wB,kBAAoBurB,GAAkBlzC,KAAKlJ,OAAO6wB,kBAAoBwrB,EACzE,QAArBnzC,KAAKg4C,aAA8C,WAArBh4C,KAAKg4C,cACrCh4C,KAAU,OAAI,GAEO,QAArBA,KAAKg4C,aAA8C,WAArBh4C,KAAKg4C,cAChCh4C,KAAK5E,cAAqC,IAAtB4E,KAAK5E,cAA0D,IAAlC4E,KAAKlJ,OAAO6wB,kBAA4BswB,IAC5Fl2C,EAAOd,UAAmB,eAAE2B,KAAK5C,KAAMgD,IAG/C4yC,EAA2B30C,UAAUi3C,iBAAmB,WAEpDn2C,EAAOd,UAAqB,YAAE2B,KAAK5C,OAEvC41C,EAA2B30C,UAAUk2C,iBAAmB,WAGpDn3C,KAAKlJ,OAAOub,OAAO,uBACO,QAArBrS,KAAKg4C,aAA8C,WAArBh4C,KAAKg4C,cAA6Bh4C,KAAU,OAC3E+B,EAAOd,UAAqB,YAAE2B,KAAK5C,OAG3C41C,EAA2B30C,UAAUi2C,mBAAqB,SAAUl0C,GAChE,IACI+7B,EAAU/+B,KAAKlJ,OAAO08B,aAAazoB,cAAc,cACjD/K,KAAU,OAAK++B,EAAQh0B,cAAc,iBACrC/K,KAAKi2C,aAAc,IAG3BL,EAA2B30C,UAAUo2C,WAAa,SAAUr0C,GAExDjB,EAAOd,UAAoB,WAAE2B,KAAK5C,KAAMgD,IAE5C4yC,EAA2B30C,UAAUk3C,cAAgB,WACjD,IACIpZ,EAAU/+B,KAAKlJ,OAAO08B,aAAazoB,cAAc,cACjD/K,KAAU,QAAM++B,EAAQh0B,cAAc,iBACtC/K,KAAKlJ,OAAOk3B,QAAS,EACrBhuB,KAAKlJ,OAAOi6B,cAGpB6kB,EAA2B30C,UAAUm2C,QAAU,SAAUz4C,GAErDoD,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMrB,IAEhDi3C,EAA2B30C,UAAUg2C,iBAAmB,SAAUj0C,GAC9D,GAAyB,QAArBA,EAAKnD,YAAuB,CAC5B,IAAIuwC,GAAY5zC,eAAgBwD,KAAKg4C,YAAa58C,YAAa4E,KAAK5E,YAAai1C,aAAcrwC,KAAKqwC,cACpGrwC,KAAKlJ,OAAOub,OAAO,mBAAoB+9B,GACvCpwC,KAAKg4C,YAAc5H,EAAQ5zC,eAC3BwD,KAAK5E,YAAcg1C,EAAQh1C,YAC3B4E,KAAKqwC,aAAeD,EAAQC,aAGhCtuC,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMgD,IAEhD4yC,EAA2B30C,UAAU+1C,gBAAkB,SAAUD,GAC7D,IAAIe,EAAOf,EAAWqB,SAElBrZ,EAAU/+B,KAAKlJ,OAAO08B,aAAazoB,cAAc,cACjD0qB,EAFY,GAEez1B,KAAKlJ,OAAO4/C,eACvC2B,EAAYtB,EAAWuB,OAAOhc,IAAMt8B,KAAK+1C,WAAc,EACvDwC,EAAcxB,EAAWuB,OAAOhc,IAAMt8B,KAAK+1C,WAActgB,EAC7D,GAAI4iB,EAAU,CACV,IAAIG,IAAYx4C,KAAKlJ,OAAO8uB,OAAO9d,WAAWpJ,QAAQ,KAAO,EAAIsB,KAAKlJ,OAAO8uB,OACzE5lB,KAAKlJ,OAAOqc,QAAQosB,wBAAwB3Z,QAC5CtrB,KAAYykC,EAAQxC,UAAYv8B,KAAKlJ,OAAO4/C,gBAC1C7/B,KAAKC,KAAK0hC,EAAUx4C,KAAKlJ,OAAO4/C,gBAChC12C,KAAKlJ,OAAOiI,UAAUpH,OAI5B,GAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9B0F,KAAKi1B,WAAa36B,EAClB0F,KAAK+uC,SAAWz0C,EAAQ0F,KAAKlJ,OAAOiI,UAAUpH,OAC1CqI,KAAK+uC,SAAW/uC,KAAK8uC,aAAc,CACnC,IAAI2J,EAAUz4C,KAAK8uC,aAAe,EAC9B4J,EAAU14C,KAAK+uC,SAAW0J,EAC9Bz4C,KAAK+uC,SAAW0J,EAChBz4C,KAAKi1B,WAAaj1B,KAAKi1B,WAAayjB,EAGxC,IAAIC,EAAQ9hC,KAAKC,KAAKigC,EAAWuB,OAAOhc,IAAMt8B,KAAKlJ,OAAO4/C,gBAC1DiC,GAAgB34C,KAAKlJ,OAAOka,aAAaq3B,SACzC,IAAIuQ,EAAa,EACjB,IAAK9gD,oBAAkBkI,KAAKlJ,OAAOiI,UAAU45C,IAAS,CAGlDC,GAFW54C,KAAKlJ,OAAO08B,aAAa/qB,iBAAiB,iBAAiBkwC,GACjE5tC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAfwsC,EACA54C,KAAK+1C,WAAagB,EAAWuB,OAAOhc,QAEnC,CACD,IAAI1W,EAAS5lB,KAAKlJ,OAAO4/C,eACzB12C,KAAK+1C,WAAcgB,EAAWuB,OAAOhc,IAlC7B,GAkCgD1W,EAAU,EAC9DmxB,EAAWuB,OAAOhc,IAnCd,GAmCiC1W,EAAU,GAAK,QAG3D,GAAI2yB,EAAY,CACjB,IAAI9B,KAAqB1X,EAAQxC,UAAYv8B,KAAKlJ,OAAO4/C,gBACrDC,EAAYF,EAAkBz2C,KAAKlJ,OAAOiI,UAAUpH,OACpDg/C,EAAY32C,KAAK8uC,eACjB6H,EAAYF,GACPz2C,KAAK8uC,aAAe2H,IAE7Bz2C,KAAKi1B,WAAa0hB,EAAY32C,KAAKlJ,OAAOiI,UAAUpH,OACpDqI,KAAK+uC,SAAW4H,EACZI,EAAWuB,OAAOhc,IAAOt8B,KAAKlJ,OAAO4/C,eAAiB12C,KAAK8uC,aAC3D9uC,KAAK+1C,WAAa/1C,KAAK23C,cAAcZ,EAAWuB,OAAOhc,IAAKyC,EAAQQ,wBAAwB3Z,QAG5F5lB,KAAK+1C,WAAagB,EAAWuB,OAAOhc,IAG5C,GAAKic,GAAexB,EAAWuB,OAAOhc,IAAOt8B,KAAKlJ,OAAO4/C,eAAiB12C,KAAK8uC,gBAC5D,CACf,IAAI+J,EAAWt6C,WAAS,kBAAmByB,MAAMgC,MAAMhC,MAAO+2C,EAAW37B,UAAW08B,EAAMf,EAAWuB,SACrGt4C,KAAK84C,aAAeD,EACpB,IAAIr/B,EAAOq/B,EAASx/B,WAAaw/B,EAASE,SAAWF,EAASt/B,SAASC,KAAOq/B,EAASr/B,KACvFxZ,KAAKlJ,OAAO2mB,eAAgBzM,cAAgBsI,YAAaE,KAAU,GACnEq/B,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFh5C,KAAKlJ,OAAOub,OAAOwmC,EAASG,OAASn5C,YAAa,gBAAiB81C,aAAcoB,EAAWpB,iBAGpGC,EAA2B30C,UAAUg4C,cAAgB,SAAU53C,EAAQ63C,EAAUt7C,GAC7E,GAAKoC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD+lB,IAA1C/c,KAAKlJ,OAAOC,WAAWA,WAAWosC,KACvC,KAA1CnjC,KAAKlJ,OAAOC,WAAWA,WAAWosC,KAAe5rC,EAAgByI,KAAKlJ,QACrEyH,WAAS,mBAAoBX,KAC7BoC,KAAKm2C,gBAAiB,GAE1Bp0C,EAAOd,UAAUg4C,cAAcr2C,KAAK5C,KAAMqB,EAAQ63C,EAAUt7C,OAE3D,CACD,IAAIk6C,EAAOl6C,EAAEu7C,YAAYC,cAAoD,MAApCx7C,EAAEu7C,YAAYC,aAAaC,MAChE96C,WAAS,cAAeyB,MAAMwZ,MAAQjb,WAAS,cAAeyB,MAAMwZ,OAAS5b,EAAEu7C,YAAY3/B,KAC3Fjb,WAAS,cAAeyB,MAAQpC,EAAEu7C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAUx5C,KAAKy5C,gBAAgBH,GACnCt5C,KAAK05C,WAAWC,gBAAgB,KAAOvwC,UAAQwwC,MAA8B,SAAtBxwC,UAAQ0uC,KAAK+B,OACpEx4C,EAASrB,KAAKlJ,OAAOyV,cAAc,UAC5BoB,YAAYurC,GAEnBl5C,KAAK85C,WAAW/uC,cAAc,SAAgB,YAAE1J,GAC3CrB,KAAK81C,kBAAwC,IAApB91C,KAAK+1C,WAI/B/1C,KAAK81C,kBAAmB,EAHxBv3C,WAAS,aAAcyB,MAAM+5C,YAAYP,EAASx5C,KAAK+1C,YAK3DtgC,WAAS,WAAYzV,KAAK84C,aAAe94C,KAAK84C,aAAehB,EAAM93C,MAGnE+B,EAAOd,UAAmB,UAAE2B,KAAK5C,KAAMpC,GAEnCoC,KAAU,QAAMA,KAAKlJ,OAAO08B,aAAazoB,cAAc,cAAcA,cAAc,gBACxD,QAArB/K,KAAKg4C,aAA8C,WAArBh4C,KAAKg4C,cACjCh4C,KAAKqwC,cAAgBrwC,KAAKi1B,WAC1Bj1B,KAAKm4C,gBAEAn4C,KAAK5E,aAAe4E,KAAK5E,aAAe,IAC7C4E,KAAU,OAAI,EACdA,KAAKlJ,OAAOk3B,QAAS,IAIjChuB,KAAKk4C,mBACLn2C,EAAOd,UAAoB,WAAE2B,KAAK5C,QAG1C41C,EAA2B30C,UAAUwJ,oBAAsB,WACnDzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,aAAc3K,KAAK42C,aACnC52C,KAAKlJ,OAAO6T,IAAI,gBAAiB3K,KAAKgY,IACtChY,KAAKlJ,OAAO6T,IAAI0rC,GAA0Br2C,KAAKs2C,oBAC/Ct2C,KAAKlJ,OAAO6T,IAAI4rC,GAAsBv2C,KAAK4G,eAC3C5G,KAAKlJ,OAAO6T,IAAI,mCAAoC3K,KAAK2F,WACzD3F,KAAKlJ,OAAO6T,IAAI,kCAAmC3K,KAAK4F,UACxD5F,KAAKlJ,OAAO6T,IAAI,8BAA+B3K,KAAKk3C,oBACpDl3C,KAAKlJ,OAAO6T,IAAI,aAAc3K,KAAKm3C,kBACnCn3C,KAAKlJ,OAAO6T,IAAI,mBAAoB3K,KAAKo3C,SACzCp3C,KAAKlJ,OAAO6T,IAAI,6BAA8B3K,KAAKq3C,cAEhDzB,GACToE,0BAEEvC,GAA0C,SAAU11C,GAEpD,SAAS01C,IACL,IAAInwC,EAAmB,OAAXvF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAKhE,OAJAsH,EAAM2yC,YAAa,EACnB3yC,EAAM4yC,OAAS,EACf5yC,EAAM6yC,QAAU,EAChB7yC,EAAM8yC,MAAQ,EACP9yC,EA8CX,OArDA7G,GAAUg3C,EAA0B11C,GASpC01C,EAAyBx2C,UAAU61C,SAAW,SAAUuD,GACpD5kC,WAAS,gBAAiBlX,WAAS,UAAWyB,MAAMsN,UAAUiyB,wBAAyBv/B,MACvFujB,eAAa3W,IAAIrO,WAAS,UAAWyB,MAAMsN,UAAW,SAAUtN,KAAKs6C,sBAAsBD,GAAWr6C,OAE1Gy3C,EAAyBx2C,UAAUoiC,MAAQ,WACvCrjC,KAAKm6C,QAAU,MAEnB1C,EAAyBx2C,UAAUq5C,sBAAwB,SAAUD,GACjE,IAAI/yC,EAAQtH,KACRu6C,EAAU,EACVC,EAAW,EACf,OAAO,SAAU58C,GACb,IAAI2+B,EAAY3+B,EAAEyD,OAAOk7B,UACrBqD,EAAahiC,EAAEyD,OAAOu+B,WACtBxkB,EAAYm/B,EAAUhe,EAAY,OAAS,KAC/CnhB,EAAYo/B,IAAa5a,EAAaxkB,EAAYo/B,EAAW5a,EAAa,QAAU,OACpF2a,EAAUhe,EACVie,EAAW5a,EACX,IAAI0I,EAAU/pC,WAAS,eAAgB+I,GAAO8T,GAC1Cq/B,EAAQ,EACZnzC,EAAM4yC,OAAS3d,EACM,MAAjBj1B,EAAM6yC,UACNM,EAAQnzC,EAAM4yC,OAAS5yC,EAAM6yC,SAEjC7yC,EAAM6yC,QAAU7yC,EAAM4yC,OAClB5yC,EAAM8yC,OACNM,aAAapzC,EAAM8yC,OAEvB9yC,EAAM8yC,MAAQrtB,WAAWzlB,EAAM+7B,MAAO,IAOjCoX,EAAQ,KAAOA,GAAS,MAAS78C,GAAKA,EAAE+8C,iBACzC/8C,EAAEg9C,aAAc,EAChBh9C,EAAE+8C,kBAENN,GAAWj/B,UAAWA,EAAWy/B,QAASvzC,EAAM2yC,WAC5C7B,SAAU9P,EAASgQ,QAAUhc,IAAKC,EAAWQ,KAAM6C,GACnD+V,aAAc3Z,SAASwX,kBAG5BiE,GACTqD,wBCnZEr6C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAwBxCg6C,GAA+B,WAI/B,SAASA,EAAcjkD,GACnBkJ,KAAKg7C,gBAAkB,EACvBh7C,KAAKi7C,cAAgB,EACrBj7C,KAAKlJ,OAASA,EAId,IAAK,IADDitB,EAAUthB,OAAKxB,UAAyB,gBACnCxJ,EAAI,EAAGA,EAAIssB,EAAQpsB,OAAQF,IAChC,GAAIssB,EAAQtsB,KAAOyjD,gBAAmB,CAClCn3B,EAAQ1mB,OAAO5F,EAAG,GAClB,MAGRgL,OAAKC,OAAOy4C,IACZn7C,KAAKmK,mBA6GT,OA3GA4wC,EAAc95C,UAAUm6C,iBAAmB,SAAUp4C,GACjDA,EAAKrE,KAAOqB,KAAKgjC,YAMrB+X,EAAc95C,UAAU4B,cAAgB,WACpC,MAAO,iBAKXk4C,EAAc95C,UAAUkJ,iBAAmB,WACvCnK,KAAKlJ,OAAOsT,GAAGurB,EAAiC31B,KAAKq7C,4BAA6Br7C,MAClFA,KAAKlJ,OAAOsT,GAAGsR,EAAsB1b,KAAKs7C,kBAAmBt7C,OAKjE+6C,EAAc95C,UAAUwJ,oBAAsB,WACtCzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAIgrB,EAAiC31B,KAAKq7C,6BACtDr7C,KAAKlJ,OAAO6T,IAAI+Q,EAAsB1b,KAAKs7C,qBAE/CP,EAAc95C,UAAUo6C,4BAA8B,SAAUx8C,GAC5DmB,KAAKlJ,OAAOiB,KAAKsa,OAAOgkC,IAA4BP,kBAAkB,IACtE91C,KAAKu7C,kBAAoB18C,EAAI/F,OAC7B+F,EAAI/F,OAAOS,SAA0B,aAAfsF,EAAIpD,OAC1B,IAAIksC,GACAr0B,OAAQtT,KAAKlJ,OAAO4G,SACpBmB,IAAKA,EAAIA,IACTpD,OAAQoD,EAAIpD,OACZ3C,OAAQ+F,EAAI/F,OACZwV,MAAOtO,KAAKlJ,OAAO4G,SAAS/F,QAEhCqI,KAAKlJ,OAAOiB,KAAKoqB,iBACjB,IAAItiB,EAActB,WAAS,gBAAiByB,KAAKlJ,QAAU,cAAgB,UAC3EyH,WAAS,oBAAqByB,KAAKlJ,QAAQ6e,mBAAmBgyB,GAAO9nC,YAAaA,KAEtFk7C,EAAc95C,UAAUq6C,kBAAoB,SAAUrT,GAClD,IAAI3gC,EAAQtH,KACRnG,EAAK,IAAI7C,cAAYixC,EAAe30B,QACpC/Z,EAAW,IAAIuI,YAAU,WAAY,WAAY,MAAM0mC,GAAG,WAAY,gBAAYzrB,GAClFhkB,EAAUc,EAAGoc,cAAa,IAAIxB,SAAQI,MAAMtb,IAC5CypC,EAAajqC,EAAQ4E,OAAO,SAAUC,GACtC,OAAO/E,EAAgByO,EAAMxQ,OAAQ8G,EAAG7E,KAE5CiH,KAAKgjC,WAAaA,EAClBhjC,KAAKlJ,OAAOiB,KAAKsa,OAAOywB,IAAuBnkC,KAAMqkC,IACrD,IAAIwY,GAAWvmB,YAAa,EAAG8Z,UAAW,EAAGzgC,MAAO25B,EAAe35B,OACnEtO,KAAKlJ,OAAOiB,KAAKsa,OAAOkkC,GAAsBiF,GAC9C,IAAIvmB,EAAaumB,EAAOvmB,WACpB8Z,EAAWyM,EAAOzM,SAEtB,GADA9G,EAAe35B,MAAQ00B,EAAWrrC,QACd,IAAhBs9B,IAAmC,IAAd8Z,EAAiB,CACtC,IAAIv6B,EAAQ,IAAIC,QACZ2zB,EAAOpoC,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,SAErCF,EAAOC,GADGpoC,KAAKlJ,OAAOiB,KAAKiZ,aAAasI,YACf,GAC7B9E,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9BvuC,EAAG9C,WAAW6E,KAAOonC,EACrBiF,EAAe30B,OAASzZ,EAAGoc,aAAazB,OAEvC,CASD,GAPoB,cADFyzB,EAAehuB,WAAWpa,cAExCo1B,EAAa,EACb8Z,EAAW/uC,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,SAAW,EACpDroC,KAAKlJ,OAAOiB,KAAKsa,OAAOgkC,IAA4BG,QAAQ,MAI3D1+C,oBAAkBkI,KAAKu7C,mBAAoB,CAC5C,IAAIE,EAAgBz7C,KAAKlJ,OAAOiI,UAC5B28C,EAAS1Y,EAAWtkC,QAAQsB,KAAKu7C,mBACtBvY,EAAWx6B,MAAMkzC,EAAQA,EAASD,EAAc9jD,QAClDA,OAAS8jD,EAAc9jD,QAAU+jD,GAAU,GAGpDzmB,EADAymB,GADAA,EAAS1Y,EAAWrrC,OAAS8jD,EAAc9jD,QACzB,EAAI+jD,EAAS,EAE/B3M,EAAW/L,EAAWrrC,QAEjB4G,WAAS,gBAAiByB,KAAKlJ,UACpCm+B,EAAa,EACb8Z,EAAW/uC,KAAKlJ,OAAOiB,KAAKiZ,aAAaq3B,SAAW,EACpDroC,KAAKlJ,OAAOiB,KAAKsa,OAAOgkC,IAA4BG,QAAQ,KAEhEx2C,KAAKu7C,kBAAoB,KAG7BtT,EAAe30B,OAAS0vB,EAAWx6B,MAAMysB,EAAY8Z,GACrD/uC,KAAKg7C,eAAiB/lB,EACtBj1B,KAAKi7C,aAAelM,EAExB/uC,KAAKlJ,OAAOub,OAAO,eAAgB41B,IAOvC8S,EAAc95C,UAAU6I,QAAU,WAC9B9J,KAAKyK,uBAEFswC,KAGPI,GAA6B,SAAUp5C,GAEvC,SAASo5C,EAAYrkD,EAAQ++C,GACzB,IAAIvuC,EAAQvF,EAAOa,KAAK5C,KAAMlJ,EAAQ++C,IAAY71C,KAGlD,OAFAzB,WAAS,SAAU+I,GAAOqD,IAAI,eAAgBpM,WAAS,sBAAuB+I,GAAQA,GACtF/I,WAAS,SAAU+I,GAAO8C,GAAG,eAAgB9C,EAAMq0C,qBAAsBr0C,GAClEA,EAuBX,OA5BA7G,GAAU06C,EAAap5C,GAOvBo5C,EAAYl6C,UAAU06C,qBAAuB,WACzCp9C,WAAS,SAAUyB,MAAM8C,KAAK,aAAc,kBAAmB,kBAC/D,IAAI84C,EAAWr9C,WAAS,UAAWyB,MAAM67C,WAAW,mBACpDt9C,WAAS,cAAeq9C,GACnB55C,MAAM45C,GAAWE,aAAWC,QAAS,IAAInG,GAA2Br3C,WAAS,SAAUyB,MAAOzB,WAAS,UAAWyB,SAEvHA,KAAKg8C,kBAETb,EAAYl6C,UAAU+6C,eAAiB,WACnC,IAAIC,EAAa19C,WAAS,SAAUyB,MAChCsnB,EAAY20B,EAAWvF,eACtB5+C,oBAAkBmkD,EAAWr2B,SAA0C,iBAAvBq2B,EAAiB,SAAsD,IAApCA,EAAWr2B,OAAOlnB,QAAQ,OAC9Gu9C,EAAW9oC,QAAQxY,MAAMirB,OAASq2B,EAAWr2B,QAEjD,IAGIA,EAAqB,MAHXq2B,EAAWr2B,OAAO9d,WAAWpJ,QAAQ,KAAO,EAAIu9C,EAAWr2B,OACrEq2B,EAAW9oC,QAAQosB,wBAAwB3Z,QAClB0B,GAEzB8gB,EAAO6T,EAAWjrC,aAAaq3B,SACnC4T,EAAWx+B,eAAgBzM,cAAgBq3B,SAAUD,EAAOxiB,EAASA,EAASwiB,KAAU,IAErF+S,GACTD,iBCjLEgB,GAAwB,WAIxB,SAASA,EAAOplD,GACZ2L,OAAKC,OAAOy5C,UACZn8C,KAAKlJ,OAASA,EACdkJ,KAAKmK,mBAqET,OAnEA+xC,EAAOj7C,UAAUkJ,iBAAmB,WAChCnK,KAAKlJ,OAAOsT,GAAG,oBAAqBpK,KAAK20C,kBAAmB30C,MAC5DA,KAAKlJ,OAAOsT,GAAG,eAAgBpK,KAAKu0C,aAAcv0C,MAClDA,KAAKlJ,OAAOiB,KAAKqS,GAAG,WAAYpK,KAAKo8C,gBAAiBp8C,OAE1Dk8C,EAAOj7C,UAAUwJ,oBAAsB,WAC/BzK,KAAKlJ,OAAO4T,cAGhB1K,KAAKlJ,OAAO6T,IAAI,oBAAqB3K,KAAK20C,mBAC1C30C,KAAKlJ,OAAO6T,IAAI,eAAgB3K,KAAKu0C,cACrCv0C,KAAKlJ,OAAOiB,KAAK4S,IAAI,WAAY3K,KAAKo8C,mBAE1CF,EAAOj7C,UAAU0zC,kBAAoB,SAAU3xC,GAC3C,IAEIgF,EAFAkuB,EAAcl2B,KAAKlJ,OAAOuY,qBAC1BgtC,EAAar8C,KAAKlJ,OAAOiI,UAQzBiJ,EANChF,EAAKsyB,WAAW39B,OAMVqL,EAAKsyB,WALLY,EAAYv4B,OAAO,SAAUC,GAChC,OAAOA,EAAEmN,cAAc,kBAAoB/H,EAAKlK,OAAOwB,MAAQ,SAAW0I,EAAKlK,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAIuQ,EAAKrQ,OAAQF,IAAK,CAClC,IAAI6kD,EAAQt8C,KAAKlJ,OAAOiB,KAAKwf,oBAAoBvP,EAAKvQ,GAAG2U,aAAa,aAAazN,KACnFqJ,EAAKvQ,GAAGkD,MAAMG,QAAUkI,EAAKvH,OAC7B,IAAI8gD,EAAgC,SAAhBv5C,EAAKvH,OAAoB,8CACvC,4CACN,GAAI4gD,EAAWr0C,EAAKvQ,GAAGmS,UAAUmB,cAAcwxC,GAAgB,CAE3D,IAAK,IADD3lB,KACKE,EAAM,EAAGA,EAAMZ,EAAYv+B,OAAQm/B,IACpCZ,EAAYY,GAAK/rB,cAAc,kBAAoBuxC,EAAMhiD,MAAQ,SAAWgiD,EAAM/hD,MAAQ,KAC1Fq8B,EAAKh+B,KAAKs9B,EAAYY,IAG1BF,EAAKj/B,QACLqI,KAAK20C,mBAAoBrf,WAAYsB,EAAMn7B,OAAQuH,EAAKvH,YAKxEygD,EAAOj7C,UAAUm7C,gBAAkB,SAAUx+C,GACrCkN,eAAalN,EAAEyD,OAAQ,cACvBrB,KAAKlJ,OAAOiB,KAAKiE,aAAaqyB,qBAAyD,SAAlCruB,KAAKlJ,OAAOkF,aAAaC,MAC9E+D,KAAKlJ,OAAOiB,KAAKmE,WAAWo1B,UAAUxmB,eAAalN,EAAEyD,OAAQ,WAGrE66C,EAAOj7C,UAAUszC,aAAe,SAAUvxC,GACjBhD,KAAKlJ,OAAO8I,aAAajC,OAAO,SAAUC,GAC3D,OAAOA,EAAEhG,eAEMD,QAAUqI,KAAKlJ,OAAO0lD,cAAgBx8C,KAAKlJ,OAAOuC,eACjEiX,YAAUtQ,KAAKlJ,OAAOqc,QAAQmE,uBAAuB,UAAU,IAAK,qBAG5E4kC,EAAOj7C,UAAU6I,QAAU,WACvB9J,KAAKyK,uBAMTyxC,EAAOj7C,UAAU4B,cAAgB,WAC7B,MAAO,UAEJq5C,KC9EPO,GAA+B,WAI/B,SAASA,EAAc3lD,GACnB2L,OAAKC,OAAOg6C,iBACZ18C,KAAKlJ,OAASA,EA0BlB,OAlBA2lD,EAAcx7C,UAAU4wB,kBAAoB,SAAU8qB,EAAGC,GACrD,OAAO58C,KAAKlJ,OAAOiB,KAAKi6B,oBAAoBH,kBAAkB8qB,EAAGC,IAOrEH,EAAcx7C,UAAU6I,QAAU,aAOlC2yC,EAAcx7C,UAAU4B,cAAgB,WACpC,MAAO,iBAEJ45C,0BnClCO,oCAIK,wHAYG,4IAcF,sCAID,uCAIC,qJAcA,2BAEC,wCAEY,qSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}