{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('null')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem,\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        selection.fill = selection.fill === 'null' ?\n                            treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                            : selection.fill;\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","containerWidth","containerHeight","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","isDrilled","itemArea","itemSelect","itemTemplate","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"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"}