{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('_');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#F8F9FA',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            if (this.treemap.drillDownView && isNullOrUndefined(this.treemap.currentLevel)\n                && index > 0 || this.treemap.drillDownView\n                && index > (this.treemap.currentLevel + 1)) {\n                continue;\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this.treemap.totalRect ? convertToContainer(this.treemap.totalRect) : this.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this.treemap.currentLevel) {\n                if (this.treemap.enableBreadcrumb) {\n                    var re = /_/gi;\n                    connectorText = '_' + this.treemap.breadcrumbConnector + '_';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '_' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('_') > 0) {\n                    childLevel = childItemLevel.split('_').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('_');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('_').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '_' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('_');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '_' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '_' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent);\n                this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                    (!isNullOrUndefined(drillLevel) && this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            if (this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                this.drilledLegendItems = {\n                                    name: this.drilledItems[this.drilledItems.length - 1]['data']['levelOrderName'],\n                                    data: this.drilledItems[this.drilledItems.length - 1]['data']\n                                };\n                            }\n                            else {\n                                this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            }\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    if (!isNullOrUndefined(startEvent.childItems) && !startEvent.cancel) {\n                        this.layout.onDemandProcess(startEvent.childItems);\n                    }\n                    else {\n                        this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                        this.layout.renderLayoutItems(newDrillItem);\n                    }\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property('.')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs);\n        if (!eventArgs.cancel && eventArgs._changePosition !== this.treemap.legendSettings.position) {\n            this.treemap.legendSettings.position = eventArgs._changePosition;\n        }\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this.treemap.trigger(legendItemRendering, eventArgs);\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","themeStyle","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","this_1","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","targetEle","layoutID","templateID","drillLength","rightClick","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}