{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/model/theme.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                totalRect = this.treemap.totalRect;\n            }\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.themeEffect();\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    /**\n     * To change font styles of map based on themes\n     */\n    TreeMap.prototype.themeEffect = function () {\n        var theme = this.theme.toLowerCase();\n        switch (theme) {\n            case 'material':\n            case 'bootstrap':\n            case 'fabric':\n            case 'highcontrastlight':\n                this.setTextStyle('#424242', null);\n                break;\n            case 'highcontrast':\n                this.setTextStyle('#FFFFFF', null);\n                break;\n            case 'materialdark':\n            case 'bootstrapdark':\n            case 'fabricdark':\n                this.setTextStyle('#FFFFFF', '#DADADA');\n                break;\n        }\n    };\n    TreeMap.prototype.setTextStyle = function (color, darkColor) {\n        this.titleSettings.textStyle.color = this.titleSettings.textStyle.color || color;\n        this.titleSettings.subtitleSettings.textStyle.color = this.titleSettings.subtitleSettings.textStyle.color || color;\n        this.legendSettings.textStyle.color = this.legendSettings.textStyle.color || (!isNullOrUndefined(darkColor) ? darkColor : color);\n        this.legendSettings.titleStyle.color = this.legendSettings.titleStyle.color || color;\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var themes = this.theme.toLowerCase();\n        var color = (themes.indexOf('dark')) > -1 || themes === 'highcontrast' ? '#000000' : '#FFFFFF';\n        this.background = this.background ? this.background : color;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if (isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else {\n            borderElement.setAttribute('fill', this.background);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color, groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var templateID = this.element.id + '_Label_Template_Group';\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                        this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","backgroundColor","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","TreeMap","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","themeEffect","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","theme","toLowerCase","setTextStyle","darkColor","subtitleSettings","titleStyle","childElementCount","secondaryElement","legendGroup","insertBefore","themes","background","borderElement","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","mouseDown","notify","moveArgs","drillMouseMove","cursor","startEvent","endEvent","targetEle","newDrillItem","layoutID","templateID","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","Theme","mapsTitleFont","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","legendFillColor","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}