{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/model/constants.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                tooltipFillOpacity: 0.75,\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                tooltipFillOpacity: 0.75,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = textStyle.fontFamily || this_1.treemap.themeStyle.labelFontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function () {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            if (this.isBlazor) {\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            eventBlazorArgs = { cancel: false, name: itemMove, item: item, mouseEvent: e };\n            this.trigger(itemMove, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.tooltipSettings.textStyle.fontFamily\n                    || this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.tooltipSettings.textStyle.color\n                    || this.treemap.themeStyle.tooltipFontColor;\n                this.tooltipSettings.textStyle.opacity = this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        var width = this.treemap.tooltipSettings.border.width;\n        var color = this.treemap.tooltipSettings.border.color;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.tooltipSettings.opacity || this.treemap.themeStyle.tooltipFillOpacity;\n            this.svgTooltip.fill = this.treemap.tooltipSettings.fill || this.treemap.themeStyle.tooltipFillColor;\n            this.svgTooltip.border.width = (width === 0) ? this.treemap.themeStyle.borderWidth : width;\n            this.svgTooltip.border.color = (color === '#808080') ? this.treemap.themeStyle.borderColor : color;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","tooltipFillOpacity","legendTitleColor","legendTextColor","labelFontFamily","tooltipTextOpacity","legendFontSize","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","removeChild","firstChild","hasChildNodes","parentNode","resetBlazorTemplate","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","eventBlazorArgs","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"oEAYA,SACgBA,GAAeC,EAAOC,GAClC,MAAc,QAAVD,OAA4BE,KAAVF,GACa,IAAxBA,EAAMG,QAAQ,KAAeF,EAAgB,IAAOG,SAASJ,EAAO,IAAMI,SAASJ,EAAO,IAE9F,KAyDX,QAAgBK,GAAYC,EAAMC,GAC9B,GAAIC,GAAgBC,SAASC,eAAe,qBAiB5C,OAhBsB,QAAlBF,IACAA,EAAgBG,gBAAc,QAAUC,GAAI,uBAC5CH,SAASI,KAAKC,YAAYN,IAE9BA,EAAcO,UAAYT,EAC1BE,EAAcQ,MAAMC,SAAW,WAC/BT,EAAcQ,MAAME,SAAWX,EAAKY,KACpCX,EAAcQ,MAAMI,WAAab,EAAKa,WACtCZ,EAAcQ,MAAMK,UAAYd,EAAKc,UACrCb,EAAcQ,MAAMM,WAAaf,EAAKe,WACtCd,EAAcQ,MAAMO,WAAa,SACjCf,EAAcQ,MAAMQ,IAAM,OAC1BhB,EAAcQ,MAAMS,KAAO,IAC3BjB,EAAcQ,MAAMU,WAAa,SAEjClB,EAAcQ,MAAMW,WAAa,SAC1B,GAAIC,IAAKpB,EAAcqB,YAAarB,EAAcsB,cA2B7D,QAAgBC,GAASC,EAAU1B,EAAMC,GACrC,GAAI0B,GAAQ3B,EACRa,EAAOd,EAAYC,EAAMC,GAAM2B,KACnC,IAAIf,EAAOa,EAEP,IAAK,GAAIG,GADQ7B,EAAK8B,OACI,EAAGD,GAAK,IAAKA,EAGnC,GAFAF,EAAQ3B,EAAK+B,UAAU,EAAGF,GAAK,OAC/BhB,EAAOd,EAAY4B,EAAO1B,GAAM2B,QACpBF,GAAYC,EAAMG,OAAS,EAInC,MAHIH,GAAMG,OAAS,IACfH,EAAQ,KAELA,CAInB,OAAOA,GAgBX,QAAgBK,GAAaC,EAAUC,EAAWC,EAAUC,GACxD,GAAIC,GACAC,CACJ,QAAQJ,GACJ,IAAK,OACDG,EAAIJ,EAASI,CACb,MACJ,KAAK,SACDA,EAAc,UAATD,EAAqBH,EAASL,MAAQ,EAAIO,EAASP,MAAQ,EAC1DK,EAASI,EAAKJ,EAASL,MAAQ,EAAMO,EAASP,MAAQ,CAC5D,MACJ,KAAK,MACDS,EAAc,UAATD,EAAqBH,EAASL,MAAQK,EAASK,EAAIH,EAASP,MAC3DK,EAASI,EAAIJ,EAASL,MAASO,EAASP,MAItD,MADAU,GAAc,UAATF,EAAoBH,EAASK,EAAKH,EAASI,OAAS,EAAON,EAASK,EAAIL,EAASM,OAAS,EAAKJ,EAASI,OAAS,EAC/G,GAAIC,IAASH,EAAGC,GAE3B,QAAgBG,GAAgBC,EAAUC,EAAe3C,GACrD,GAAI4C,EAUJ,QATAA,EAAaF,EAASG,WAAWF,EAAe3C,IACrC8C,eAAe,uCAAwC,YAAa,YAC/EF,EAAWlC,MAAM,eAAiB,OAClCkC,EAAWlC,MAAM,oBAAsB,OACvCkC,EAAWlC,MAAM,yBAA2B,OAC5CkC,EAAWlC,MAAM,uBAAyB,OAC1CkC,EAAWlC,MAAM,sBAAwB,OACzCkC,EAAWlC,MAAM,mBAAqB,OACtCkC,EAAWlC,MAAM,kBAAoB,OAC9BkC,EAOX,QAAgBG,GAAkBC,EAAS/C,EAAMgD,EAAOC,EAAQC,OAC5C,KAAZA,IAAsBA,GAAU,EACpC,IAeIC,GAEAb,EACAK,EAlBAD,GACAU,YAAapD,EAAKY,KAClByC,aAAcrD,EAAKc,UACnBwC,cAAetD,EAAKe,WACpBwC,cAAevD,EAAKa,WACpB2C,cAAeT,EAAQU,OACvBC,UAAaX,EAAQW,UACrBC,QAAW3D,EAAK2D,QAChBC,oBAAqBb,EAAQc,SAC7BxD,GAAM0C,EAAQ1C,GACd+B,EAAKW,EAAQX,EACbC,EAAKU,EAAQV,EACbyB,KAAQd,GAERjD,EAA+B,gBAAjBgD,GAAQhD,KAAoBgD,EAAQhD,KAAOmD,EAAUH,EAAQhD,KAAKgD,EAAQhD,KAAK8B,OAAS,GAAKkB,EAAQhD,KAAK,GAExH0C,EAAW,GAAIsB,eAAY,GAK/B,KAFsBC,oBAAkBjE,KAAUiE,oBAAkBjB,EAAQkB,gBACvElE,EAAKmE,OAAOnB,EAAQkB,cAAc,KAAO,EAC1B,CAChB,GACIE,OAAiB,EAErBA,GAHmBpE,EAGWqE,MAAM,IACpC,KAAK,GAAIC,GAAI,EAAGA,EAAIF,EAAetC,OAAQwC,IAAK,CAC5C,GAAIC,IAAkE,IAArDH,EAAeE,GAAGH,OAAOnB,EAAQkB,gBAA0BD,oBAAkBjB,EAAQkB,eAC1EE,EAAeE,GAAvCtB,EAAQkB,aAGZ,IAFAvB,EAAkB,GAAIK,EAAQ1C,GAAK,IAAMgE,EACzC1B,EAAaH,EAAgBC,EAAUC,EAAe4B,GAClDD,EAAI,GAAM,GAAW,IAANA,EAAS,CAExBC,EAAYA,EAAUC,QADb,OACyB,SAEtC,GAAI3D,GAAOd,EAAYwE,EAAWtE,EAClC0C,GAAiB,EAAU,IAAN2B,EAAU3B,EAAiB,EAAI9B,EAAKe,MAAQe,EAAiB,EAAI9B,EAAKe,MAZjF,EAaVsB,EAAO1C,YAAYoC,QAIvBA,GAAaH,EAAgBC,EAAUC,EAAe3C,GACtDkD,EAAO1C,YAAYoC,EAEvB,IAA4B,gBAAjBI,GAAQhD,MAAqBgD,EAAQhD,KAAK8B,OAAS,EAAG,CAC7D,IAAK,GAAID,GAAI,EAAG4C,EAAMzB,EAAQhD,KAAK8B,OAAQD,EAAI4C,EAAK5C,IAChDU,EAAUxC,EAAYiD,EAAQhD,KAAK6B,GAAI5B,GAAa,OACpDmD,EAAeV,EAASgC,aACpBrC,EAAKW,EAAQX,EAAG/B,GAAM0C,EAAQ1C,GAC9BgC,EAAMU,IAAcnB,EAAIU,GACzBS,EAAQhD,KAAK6B,IAChBe,EAAWpC,YAAY4C,EAE3BF,GAAO1C,YAAYoC,GAEvB,MAAOA,GAEX,QAAgB+B,GAAWrE,GACvB,MAAOH,UAASC,eAAeE,GAGnC,QAAgBsE,GAAaC,EAAGC,GAC5B,MAAOD,GAAU,SAAMC,EAAU,OAAI,EAAID,EAAU,OAAIC,EAAU,OAAI,GAAK,EAE9E,QAAgBC,GAAeC,EAAQC,EAAUC,EAAaC,GAK1D,IAAK,GAFDC,GAFAC,GAAU,EACVC,EAAO,GAEPC,EAAOJ,EAAQK,iBACV3D,EAAI,EAAGA,EAAImD,EAAOlD,OAAQD,IAE/B,GADAuD,EAAOD,EAAQM,OAAO5D,GAAKsD,EAAQM,OAAO5D,GAAG6D,UAAYH,EAAKI,UAAYJ,EAAKI,UAAYR,EAAQS,gBAC/FZ,EAAOnD,KAAOqD,EAAYE,KAC1BE,GAASJ,EAAYE,IAAUvD,IAAMmD,EAAOlD,OAAS,EAAI,GAAK,QACjDmD,EAAU,CACnBI,GAAU,CACV,OAIZ,MAAOA,GAEX,QAAgBQ,GAAaC,GACzB,GAAIC,EACJ,IAAID,EAAM,CACN,GAAIE,GAAOC,OAAOD,KAAKF,EACvBC,GAAW,GAAIE,OACf,KAAK,GAAIpE,GAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B,GAAIiE,EAAKE,EAAKnE,aAAeqE,OAAO,CAChCH,EAAiB,OAAID,EAAKE,EAAKnE,IAC/BkE,EAAc,IAAIC,EAAKnE,EACvB,QAIZ,MAAOkE,GAEX,QAAgBI,GAAoBL,EAAMM,EAAOC,EAAMC,GACnD,GAAa,UAATD,EAAkB,CAClBD,EAAMG,KAAKT,EAAqB,eAChC,IAAIC,GAAWF,EAAaC,GAAc,MAC1C,IAAIC,GAAYA,EAASjE,OAAS,EAAG,CACjC,IAASD,EAAI,EAAGA,EAAIkE,EAASjE,OAAQD,KACqB,IAAlDuE,EAAMvG,QAAQkG,EAASlE,GAAmB,iBAC1CuE,EAAMG,KAAKR,EAASlE,GAAmB,eAG/C,KAAK,GAAI2E,GAAI,EAAGA,EAAIT,EAASjE,OAAQ0E,IACjCL,EAAoBJ,EAASS,GAAIJ,EAAOC,EAAMC,QAIrD,IAAa,WAATD,EACiC,gBAA3BP,GAAqB,iBAA6D,IAA3CM,EAAMvG,QAAQiG,EAAqB,kBACjFM,EAAMG,KAAKT,EAAqB,gBAChCK,EAAoBL,EAAa,OAAGM,EAAOC,EAAMC,QAGpD,IAAa,QAATD,EAGL,IAAK,GAFDI,GAAaX,EAAqB,eAAEzB,MAAM,KAAK,GAC/CqC,MAAc,GACT7E,EAAI,EAAGA,EAAIyE,EAAQK,OAAOC,YAAY9E,OAAQD,KACnD6E,EAAcJ,EAAQK,OAAOC,YAAY/E,mBACLhC,QAAQ4G,IAAe,IAAuD,IAAlDL,EAAMvG,QAAQ6G,EAA4B,iBACtGN,EAAMG,KAAKG,EAA4B,oBAK/CN,GAAMG,KAAKT,EAAqB,eAEpC,OAAOM,GAOX,QAAgBS,GAAoBC,GAChC,GAAIC,GAAa,IACjB,KAEQ5G,SAAS6G,iBAAiBF,GAAUhF,SACpCiF,EAAaE,UAAQ9G,SAAS+G,cAAcJ,GAAUrG,UAAU0G,SAGxE,MAAOC,GACHL,EAAaE,UAAQH,GAEzB,MAAOC,GAKX,QAAgBM,GAAeC,EAASC,EAASzB,GAM7C,IALA,GAAI0B,GAAenH,gBAAc,OAC7BC,GAAIiH,EACJE,OAAQ,6CAERC,EAAgBJ,EAAQxF,OACrB4F,EAAgB,GACnBF,EAAahH,YAAY8G,EAAQ,IACjCI,GAIJ,KAAK,GAFDC,GAAeH,EAAa/G,UAC5BuF,EAAOC,OAAOD,KAAKF,GACdjE,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B8F,EAAeA,EAAanD,QAAQ,GAAIoD,QAAO,MAAQ5B,EAAKnE,GAAK,KAAM,KAAMiE,EAAKE,EAAKnE,GAAGgG,YAG9F,OADAL,GAAa/G,UAAYkH,EAClBH,EAEX,QAAgBM,GAAkBC,EAAMpH,EAAUqH,EAAW5F,EAAM+C,GAC/D,GAAIlD,GAAW,GAAIO,IAAS,EAAG,GAI3BH,GADc8C,EAAQmC,QAAQW,wBAChB,aAAT7F,EAAuB+C,EAAQ+C,SAAS7F,EAAI,GACjDC,EAAc,aAATF,EAAuB+C,EAAQ+C,SAAS5F,EAAI,CAYrD,OAXAL,GAASI,EAAK8F,KAAKC,IAAI/F,GAAM1B,EAASd,QAAQ,SAAW,EAAKkI,EAAK1F,EALrD,EAKqE1B,EAASd,QAAQ,UAAY,EACrDkI,EAAK1F,EAAI0F,EAAKnG,MAASoG,EAAUpG,MAAxFmG,EAAK1F,GAAM0F,EAAKnG,MAAQ,EAAMoG,EAAUpG,MAAQ,KALrC,GAMXuD,EAAQkD,iBAAgD,uBAA5BlD,EAAQmD,iBACL,uBAA5BnD,EAAQmD,gBAIXrG,EAASK,EAAI6F,KAAKC,IAAI9F,GAAM3B,EAASd,QAAQ,QAAU,EAAe,aAATuC,EAAsB2F,EAAKzF,EAAIyF,EAAKzF,EAAI0F,EAAUzF,OACzG5B,EAASd,QAAQ,WAAa,EAC2BkI,EAAKzF,EAAIyF,EAAKxF,OAAUyF,EAAUzF,OAD/C,aAATH,EAAuB2F,EAAKzF,GAAMyF,EAAKxF,OAAS,EAAMyF,EAAUzF,OAAS,GACzGwF,EAAKzF,EAAKyF,EAAKxF,OAAS,EAAKyF,EAAUzF,OAAS,IALzDN,EAASK,EAAI6F,KAAKC,IAAKL,EAAKzF,EAAIyF,EAAKxF,OAAUyF,EAAUzF,OAT/C,GAgBPN,EAEX,QAAgBsG,GAAejB,EAASkB,GACpC,GAAI3H,GAAO,GAAIS,IAAK,EAAG,EAKvB,OAJAkH,GAAchI,YAAY8G,GAC1BzG,EAAK0B,OAAS+E,EAAQmB,aACtB5H,EAAKe,MAAQ0F,EAAQoB,YACrBvI,SAASC,eAAekH,EAAQhH,IAAIqI,SAC7B9H,EAEX,QAAgB+H,GAAQb,GACpB,OAAQA,EAAKnG,MAAQmG,EAAK1F,IAAM0F,EAAKxF,OAASwF,EAAKzF,GAEvD,QAAgBuG,GAAgBC,GAC5B,GAAIC,GAAYC,EAAmBF,GAC/BlH,EAAQmH,EAAUnH,MAClBW,EAASwG,EAAUxG,MAEvB,OADa4F,MAAKc,IAAIrH,EAAOW,GAGjC,QAAgByG,GAAmBjB,GAC/B,GAAI1F,GAAI0F,EAAK1F,EACTC,EAAIyF,EAAKzF,CAGb,QACID,EAAGA,EACHC,EAAGA,EACHV,MALQmG,EAAKnG,MAKES,EACfE,OALSwF,EAAKxF,OAKGD,GAGzB,QAAgB4G,GAAcH,GAC1B,GAAII,GAAUJ,EAAU1G,EACpB+G,EAAUL,EAAUzG,CAGxB,QACID,EAAG8G,EACH7G,EAAG8G,EACHxH,MAAOuH,EALCJ,EAAUnH,MAMlBW,OAAQ6G,EALCL,EAAUxG,QAQ3B,QAAgB8G,GAAiBC,EAAOC,EAAOjC,GAC3C,GAAIkC,GAAclC,EAAQW,wBACtBwB,EAAcnC,EAAQoC,cAAcC,YAAYF,YAChDG,EAActC,EAAQoC,cAAcC,YAAYC,YAChDC,EAAYvC,EAAQoC,cAAcI,gBAAgBD,UAClDE,EAAazC,EAAQoC,cAAcI,gBAAgBC,WACnDC,EAAYR,EAAYrI,KAAOsI,EAAcM,EAC7CE,EAAYT,EAAYtI,IAAM0I,EAAcC,CAChD,OAAO,IAAIrH,IAAU8G,EAAQU,EAAaT,EAAQU,GAEtD,QAAgBC,GAASC,EAAcC,EAAY1K,EAAOkG,GACtD,GAAI7B,GAEAH,EADAyG,IAEJ,IAAIpG,oBAAkBmG,IAAgBnG,oBAAkBvE,IAAU4K,MAAM5K,GACpE,MAAO,KAEX,KAAK,GAAImC,GAAI,EAAGA,EAAIsI,EAAarI,OAAQD,IAAK,CAC1C,GAAI0I,IAAe,EACfC,EAAY9K,CACXuE,qBAAkBkG,EAAatI,GAAG4I,OAAUxG,oBAAkBkG,EAAatI,GAAG6I,KAC3EzG,oBAAkBkG,EAAatI,GAAGnC,QAW/BuE,oBAAkBkG,EAAatI,GAAG4I,OAAUxG,oBAAkBkG,EAAatI,GAAG6I,MACjFzG,oBAAmBkG,EAAatI,YAC/BnC,GAASyK,EAAatI,GAAG4I,MAAQN,EAAatI,GAAG6I,IAAMhL,GAAWyK,EAAatI,GAAGnC,QAAU0K,KACzFD,EAAatI,GAAGnC,QAAU0K,IAC1BG,GAAe,GAGfxG,EAD0D,mBAA1DkC,OAAO0E,UAAU9C,SAAS+C,KAAKT,EAAatI,GAAGoB,OACvCsH,EAA8DJ,EAAatI,GAAGoB,MAAM,GAArE4H,EAAiBV,EAAatI,GAAI2I,GAGlDL,EAAatI,GAAGoB,OApB1BvD,GAASyK,EAAatI,GAAG4I,MAAQN,EAAatI,GAAG6I,IAAMhL,GAAWyK,EAAatI,GAAGnC,QAAU0K,IAC7FG,GAAe,EAEXxG,EAD0D,mBAA1DkC,OAAO0E,UAAU9C,SAAS+C,KAAKT,EAAatI,GAAGoB,OACvCsH,EAA8DJ,EAAatI,GAAGoB,MAAM,GAArE4H,EAAiBV,EAAatI,GAAI2I,GAGlDL,EAAatI,GAAGoB,QAkB7BvD,GAASyK,EAAatI,GAAG4I,MAAQ/K,GAASyK,EAAatI,GAAG6I,IAAQP,EAAatI,GAAGnC,QAAU0K,KAC1FnG,oBAAkBkG,EAAatI,GAAGiJ,cAAgB7G,oBAAkBkG,EAAatI,GAAGkJ,aAAehH,IACvGH,EAAUoH,EAAkBpF,EAAiBuE,EAAatI,GAAIkC,EAAMrE,KAE1D,KAATqE,GAAeE,oBAAkBF,KAC/BE,oBAAkBkG,EAAatI,GAAG4I,OAASxG,oBAAkBkG,EAAatI,GAAG6I,KAC7EzG,oBAAkBkG,EAAatI,GAAGiJ,aAAe7G,oBAAkBkG,EAAatI,GAAGkJ,aACnF9G,oBAAkBkG,EAAatI,GAAGnC,SACrCqE,EAAkE,mBAA1DkC,OAAO0E,UAAU9C,SAAS+C,KAAKT,EAAatI,GAAGoB,OACnDkH,EAAatI,GAAGoB,MAAM,GAAKkH,EAAatI,GAAGoB,OAEnDW,EAAWK,oBAAkBL,GAAqB,IAAVA,EACxCyG,EAAM9D,KAAKxC,GAEf,IAAK,GAAIyC,GAAI6D,EAAMvI,OAAS,EAAG0E,GAAK,EAAGA,IAEnCA,GADAzC,EAAOsG,EAAM7D,KACC,EAAIA,CAEtB,QAASzC,KAAMA,EAAMH,QAASA,GAElC,QAAgBoH,GAAkBpF,EAAiBuE,EAAclH,EAAOgI,GACpE,GAAIrH,GAAU,CAKd,OAJKqH,IAAcd,EAAaM,MAAQQ,GAAcd,EAAaO,KAE/D9G,GADaqH,EAAad,EAAaM,OAASN,EAAaO,GAAKP,EAAaM,OAC3DN,EAAaY,WAAaZ,EAAaW,YAAeX,EAAaW,YAEpFlH,EAAQiE,WAEnB,QAAgBgD,GAAiBX,EAAUxK,GAEvC,MADmBwL,GAAgBhB,EAAUxK,GAGjD,QAAgByL,GAASC,EAAGC,EAAGvG,GAC3B,MAAO,IAAMwG,EAAeF,GAAKE,EAAeD,GAAKC,EAAexG,GAExE,QAAgBoG,GAAgBhB,EAAUxK,GACtC,GACI6L,EAWJ,OAVIC,QAAO9L,KAAWwK,EAASO,KACnBP,EAASjH,MAAM,GAElBuI,OAAO9L,KAAWwK,EAASQ,GACxBR,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAIvCqJ,GADRI,EAAME,EAAiBD,OAAO9L,GAAQwK,IACjBkB,EAAGG,EAAIF,EAAGE,EAAIzG,GAK3C,QAAgB2G,GAAiB/L,EAAOwK,GACpC,GAAIwB,GAAiBxB,EAASO,KAC1BkB,EAAazB,EAASQ,GACtBkB,EAAU,EAEVC,EAAOF,EAAaD,CAExBE,IACWlM,EAAQgM,GAAkBG,CACrC,IAAIC,GACAC,CACJ,IAAI7B,EAASjH,MAAMnB,QAAU,EACzBgK,EAAgD,MAAhC5B,EAASjH,MAAM,GAAG+I,OAAO,GAAa9B,EAASjH,MAAM,GAAKgJ,EAAe/B,EAASjH,MAAM,IACxG8I,EAAoE,MAAxD7B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAAGkK,OAAO,GACzD9B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAAKmK,EAAe/B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,QAErG,CACDgK,EAAgD,MAAhC5B,EAASjH,MAAM,GAAG+I,OAAO,GAAa9B,EAASjH,MAAM,GAAKgJ,EAAe/B,EAASjH,MAAM,IACxG8I,EAAoE,MAAxD7B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAAGkK,OAAO,GACzD9B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAAKmK,EAAe/B,EAASjH,MAAMiH,EAASjH,MAAMnB,OAAS,GAOtG,KAAK,GAND+C,GAAIgH,GAAQ3B,EAASjH,MAAMnB,OAAS,GAGpCoK,EAAWhC,EAASjH,MAAMnB,OAAS,EACnCqK,KACAC,KACK5F,EAAI,EAAGA,EAAI0F,EAAU1F,IAG1B4F,GAAetH,EADX4G,EADAlF,EAAI3B,EAEa5B,MAAOiH,EAASjH,MAAMuD,IAC3C2F,EAAsB5F,KAAK6F,EAE/B,KAAK,GAAIvK,GAAI,EAAGA,EAAIsK,EAAsBrK,OAAQD,IAC1C6J,GAAkBhM,GAASA,GAASyM,EAAsBtK,GAAM,GAAW,IAANA,GAGrEkK,EAF2D,MAAhDI,EAAsBtK,GAAU,MAAEmK,OAAO,GAChDG,EAAsBtK,GAAU,MAAIoK,EAAeE,EAAsBtK,GAAU,OAEvF+J,EAAUlM,EAAQyM,EAAsBtK,GAAM,EAAI,EAAIsG,KAAKC,KAAK1I,EAAQyM,EAAsBtK,GAAM,GAAKgD,IAClGnF,EAAQyM,EAAsBtK,GAAM,GAAKgD,GAE3CsH,EAAsBtK,GAAM,GAAKnC,GAASA,GAASiM,GAAc9J,IAAOsK,EAAsBrK,OAAS,IAG5GgK,EAF2D,MAAhDK,EAAsBtK,GAAU,MAAEmK,OAAO,GAChDG,EAAsBtK,GAAU,MAAIoK,EAAeE,EAAsBtK,GAAU,OAEvF+J,EAAUlM,EAAQyM,EAAsBtK,GAAM,EAC1C,EAAIsG,KAAKC,KAAK1I,EAAQyM,EAAsBtK,GAAM,GAAKgD,IAAMnF,EAAQyM,EAAsBtK,GAAM,GAAKgD,GAE1GhD,IAAMsK,EAAsBrK,OAAS,GAAKD,EAAIsK,EAAsBrK,QAChEqK,EAAsBtK,GAAM,GAAKnC,GAASA,GAASyM,EAAsBtK,EAAI,GAAM,IAGnFiK,EAF2D,MAAhDK,EAAsBtK,GAAU,MAAEmK,OAAO,GAChDG,EAAsBtK,GAAU,MAAIoK,EAAeE,EAAsBtK,GAAU,OAEvFkK,EAAgE,MAApDI,EAAsBtK,EAAI,GAAU,MAAEmK,OAAO,GACrDG,EAAsBtK,EAAI,GAAU,MAAIoK,EAAeE,EAAsBtK,EAAI,GAAU,OAC/F+J,EAAUzD,KAAKC,IAAK1I,EAAQyM,EAAsBtK,EAAI,GAAM,GAAMgD,GAKlF,MAAOwH,GAAmBT,EAASE,EAAeC,GAEtD,QAAgBM,GAAmBT,EAASU,EAAUC,GAClD,GAAIR,GAAYQ,EAAKlI,MAAM,KAAK,GAC5BmI,EAAYF,EAASjI,MAAM,KAAK,GAChC+G,EAAIqB,EAAcb,EAAS9L,SAAS0M,EAAUE,OAAO,EAAG,GAAI,IAAK5M,SAASiM,EAAUW,OAAO,EAAG,GAAI,KAClGrB,EAAIoB,EAAcb,EAAS9L,SAAS0M,EAAUE,OAAO,EAAG,GAAI,IAAK5M,SAASiM,EAAUW,OAAO,EAAG,GAAI,KAClG5H,EAAI2H,EAAcb,EAAS9L,SAAS0M,EAAUE,OAAO,EAAG,GAAI,IAAK5M,SAASiM,EAAUW,OAAO,EAAG,GAAI,IACtG,OAAO,IAAIC,IAAWvB,EAAGC,EAAGvG,GAEhC,QAAgB2H,GAAcb,EAASU,EAAUC,GAC7C,GAAIV,GAAOU,EAAOD,CAClB,OAAOnE,MAAKyE,MAAON,EAAYT,EAAOD,GAE1C,QAAgBiB,GAASC,EAAcC,EAAW9M,GAK9C,IAAK,GADDD,GAHAgN,EAAiBD,EAAU1I,MAAM,KACjC1C,EAAQ,GACRsL,KAEKpL,EAAI,EAAG4C,EAAMuI,EAAelL,OAAQD,EAAI4C,EAAK5C,IAClD7B,EAAOgN,EAAenL,GAClB9B,EAAY4B,EAAMuL,OAAOlN,GAAOC,GAAM2B,MAAQkL,EAC9CnL,EAAQA,EAAMuL,QAAkB,KAAVvL,EAAe,GAAK,KAAO3B,GAGnC,KAAV2B,GACAsL,EAAgB1G,KAAK9E,EAASqL,EAAcnL,EAAO1B,IACnD0B,EAAQ3B,IAGRiN,EAAgB1G,KAAK9E,EAASqL,EAAc9M,EAAMC,IAClDD,EAAO,IAGX2B,GAASE,IAAM4C,EAAM,GACrBwI,EAAgB1G,KAAK9E,EAASqL,EAAcnL,EAAO1B,GAG3D,OAAOgN,GAEX,QAAgBE,GAASzL,EAAUC,EAAO1B,GACtC,GACImN,MACAC,EAAgB,EAChBC,EAAavN,EAAY4B,EAAO1B,GAAM2B,MACtC2L,EAAc5L,EAAMG,MACxB,IAAIJ,GAAY4L,EAEZ,MADAF,GAAW7G,KAAK5E,GACTyL,CAGP,KAAK,GAAIvL,GAAIF,EAAMG,OAAQD,EAAIwL,EAAexL,IAAK,CAC/C,GAAI2L,GAAc7L,EAAM8L,MAAMJ,EAAexL,EAE7C,KADAyL,EAAavN,EAAYyN,EAAavN,GAAM2B,QAC1BF,EAAU,CAGxB,GAFA0L,EAAW7G,KAAKiH,GAChBH,GAAiBG,EAAY1L,OACzByL,IAAgBF,EAChB,MAAOD,EAEXvL,GAAI0L,EAAc,GAI9B,MAAOH,GAKX,QAAgBM,GAAKhM,EAAUiM,EAAW3N,EAAMC,GAC5C,GACIkC,GAAWpC,EAAYC,EAAMC,EAEjC,OADYkC,GAASP,MAAQF,GAAYS,EAASI,OAASoL,EAAa,IAAM3N,EAGlF,QAAgB4N,GAAY/I,EAAGC,GAC3B,MAAID,GAAY,WAAMC,EAAY,SACvB,EAEFD,EAAY,SAAIC,EAAY,SAC1B,GAEH,EAEZ,QAAgB+I,GAAiBC,EAAU1L,EAAM+C,GAQ7C,IAAK,GALDmC,GAKKd,EAAI,EAAGA,EAAIsH,EAAShM,OAAQ0E,IAGjCuH,EAFAzG,EAAUwG,EAAStH,GAAGwH,WAAW,GACvB7I,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IAAa,SAExEyJ,EAAStH,GAAGyH,UAAUtF,OAAOvG,GAC7BoE,GAAK,EAGb,QAAgBuH,GAAazG,EAAStE,GAClCsE,EAAQ4G,aAAa,UAAWlL,EAAiB,SACjDsE,EAAQ4G,aAAa,OAAQlL,EAAc,MAC3CsE,EAAQ4G,aAAa,SAAUlL,EAAgB,OAAS,OACxDsE,EAAQ4G,aAAa,eAAgBlL,EAAgB,OAAS,OAElE,QAAgBmL,GAAcC,EAAQtI,EAAMX,GACxC,GAAIlB,oBAAkBmK,GAClB,MAAO,KAGX,KAAK,GAAIC,GAAK,EAAGC,EADNrI,OAAOD,KAAKF,GACSuI,EAAKC,EAAOxM,OAAQuM,IAAM,CACtD,GAAIE,GAAMD,EAAOD,EACjBD,GAASA,EAAO/J,MAAM,KAAOkK,EAAM,KAAKC,KAAKC,EAAY3I,EAAKyI,GAAMpJ,GAAS0C,YAEjF,MAAOuG,GAEX,QAAgBK,GAAY/O,EAAOyF,GAU/B,OAPIA,EAAQiJ,SAAW9D,MAAMkB,OAAO9L,IACfyF,EAAQuJ,KAAKC,iBAAkBP,OAAQjJ,EAAQiJ,OAAQQ,YAAazJ,EAAQ0J,uBAChErD,OAAO9L,IAGtBA,IAEiB,GAavC,QAAgBoP,GAAiBpP,GAC7B,MAAO,IAAM4L,EAAe5L,EAAM0L,GAAKE,EAAe5L,EAAM2L,GAAKC,EAAe5L,EAAMoF,GAG1F,QAAgBwG,GAAe5L,GAC3B,GAAIqP,GAAMrP,EAAMmI,SAAS,GACzB,OAAsB,KAAfkH,EAAIjN,OAAe,IAAMiN,EAAMA,EAG1C,QAAgBC,GAAkBD,GAC9B,GAAIE,GAAS,4CAA4CC,KAAKH,EAC9D,OAAOE,GAAS,GAAItC,IAAW7M,SAASmP,EAAO,GAAI,IAAKnP,SAASmP,EAAO,GAAI,IAAKnP,SAASmP,EAAO,GAAI,KACjG,GAAItC,IAAW,IAAK,IAAK,KAGjC,QAAgBV,GAAehJ,GAC3B,GAAIqE,EACJrE,GAAkB,gBAAVA,EAA0B,QAAUA,GAC5CqE,EAAUnH,SAASC,eAAe,uBAC1BM,MAAMuC,MAAQA,EACtBA,EAAQkM,OAAOC,iBAAiB9H,GAASrE,KACzC,IACIoM,GADM,uGACWH,KAAKjM,EAC1B,OAAO6L,GAAiB,GAAInC,IAAW7M,SAASuP,EAAW,GAAI,IAAKvP,SAASuP,EAAW,GAAI,IAAKvP,SAASuP,EAAW,GAAI,MAG7H,QAAgBC,GAAWrN,EAAUsN,EAAO1O,EAAM2O,EAAKxM,EAASrB,GAC5D,GACI8N,GAAc,GAAIzL,eAAY,IAC9B0L,EAAOC,EAAkB1N,EAAUpB,EAAM0O,EAAOvM,EAASwM,GACzDI,EAAcH,EAAY,OAASC,EAAKG,cAAcH,EAAKI,aAE/D,OADAF,GAAY1B,aAAa,aAAcvM,GAChCiO,EAGX,QAAgBD,GAAkB1N,EAAUpB,EAAM0O,EAAOvM,EAASwM,GAC9D,GAAIO,GACAF,EAAe,OACfG,EAAanP,EAAKe,MAClBqO,EAAcpP,EAAK0B,OACnB2N,EAASjO,EAASI,EAClB8N,EAASlO,EAASK,EAClBD,EAAIJ,EAASI,GAAM2N,EAAa,EAChC1N,EAAIL,EAASK,GAAM2N,EAAc,CACrC,QAAQV,GACJ,IAAK,SACL,IAAK,SACDM,EAAe,UACfO,QAAMpN,GAAWqN,GAAML,EAAa,EAAGM,GAAML,EAAc,EAAGM,GAAML,EAAQM,GAAML,GAClF,MACJ,KAAK,eACDJ,EAAa,KAAYG,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KAC3FC,GAAWF,EAAc,GAChCG,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,UACDA,EAAa,KAAY1N,EAAI,IAAM8N,EAAS,MAC5BD,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC7CD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAC9C5N,EAAI,IAAM8N,EAAS,KACnCC,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,YACDA,EAAa,KAAY1N,EAAI,KAAO8N,GAAWF,EAAc,GAAM,OAClDC,EAAUF,EAAa,GAAM,KAAOG,GAAWF,EAAc,GAAM,OACnEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE5N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,MACzC5N,EAAI,KAAO8N,GAAWF,EAAc,GAAM,KAC1DG,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,WACDA,EAAa,KAAY1N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,MAClDC,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE5N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,KACzDG,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,mBACDA,EAAa,MAAaG,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MAC5EC,EAAS,KAAOC,EAAUF,EAAc,GAAM,OAC7CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,OAClEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,KACnFG,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,WAID,IAAK,GAFDW,OAAS,GACTC,MAAS,GACJ9O,EAAI,EAAGA,GAAK,EAAGA,IACpB6O,EAAUV,EAAa,EAAK7H,KAAKyI,IAAKzI,KAAK0I,GAAK,KAJ3C,GAImDhP,IACxD8O,EAAUX,EAAa,EAAK7H,KAAK2I,IAAK3I,KAAK0I,GAAK,KAL3C,GAKmDhP,IAEpDkO,EADM,IAANlO,EACa,MAAaqO,EAASQ,GAAU,KAAOP,EAASQ,GAAU,IAG1DZ,EAAW7C,OAAO,MAAagD,EAASQ,GAAU,KAAOP,EAASQ,GAAU,IAGjGZ,GAAaA,EAAW7C,OAAO,KAC/BkD,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,OACDA,EAAa,MAAQ9N,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GACxH,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GACjH,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,MAAQN,EAASI,EAAI,KACrGJ,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,KACpH6N,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,QACDA,EAAa,KAAY1N,EAAI,IAAM8N,EAAS,OAAmBD,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC3FD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KACpFC,GAAWF,EAAc,GAC9BG,QAAMpN,GAAWyN,EAAKV,GACtB,MACJ,KAAK,QACDF,EAAe,QACfO,QAAMpN,GAAW+N,KAAQvB,EAAKjN,OAAU0N,EAAarO,MAASoO,EAAY3N,EAAGA,EAAGC,EAAGA,IAG3F,OAASwN,aAAc9M,EAAS6M,aAAcA,GAElD,QAAgBmB,GAAalL,EAAMmL,GAE/B,IAAK,GADDD,IAAe,EACVxK,EAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIyK,EAAqB,iBAAMnL,EAAKU,GAAmB,eAAG,CACtDwK,GAAe,CACf,OAGR,MAAOA,GAeX,QACgBE,GAAYC,EAAYzR,GACpC,GAAIyR,EAAWrP,OAAS,EACpB,IAAK,GAAID,GAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAK,CACxC,GAAIoP,GAAOE,EAAWtP,EACtBuP,GAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,iBAI1H,QAAgBI,GAAaF,EAAYzR,GACrC,GAAIyR,EAAWrP,OAAS,EACpB,IAAK,GAAI0E,GAAI,EAAGA,EAAI2K,EAAWrP,OAAQ0E,IAAK,CACxC,GAAIyK,GAAOE,EAAW3K,EACtB4K,GAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,eAE9G,KAAK,GADDK,GAAYL,EAAsB,gBAAY,SAAEnP,OAC3CyP,EAAI,EAAGA,EAAID,EAAWC,IAC3BH,EAASH,EAAsB,gBAAY,SAAEM,GAAIN,EAAmB,aAAGA,EAAsB,gBAAGA,EAA0B,oBAAGA,EAA0B,sBAKvK,QAAgBG,GAAS9J,EAASvD,EAAMH,EAAS4N,EAAaC,GAC1DnK,EAAQ4G,aAAa,OAAQnK,GAC7BuD,EAAQ4G,aAAa,UAAWtK,GAChC0D,EAAQ4G,aAAa,SAAUsD,GAC/BlK,EAAQ4G,aAAa,eAAgBuD,GAEzC,QAAgBC,GAA6BP,EAAY7J,EAASnC,GAC9D+L,EAAYC,EAAY,aAExBtD,EAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAE9F,QAAgByM,GAAe9P,EAAQmP,EAAM9L,GAEzC,IAAK,GADD0M,GACKhQ,EAAI,EAAGA,EAAIC,EAAQD,IAExB,IAAK,GADDiQ,GAAa3M,EAAQ4M,oBAAoBC,kBAAkBnQ,GAAe,WAAEC,OACvE0E,EAAI,EAAGA,EAAIsL,EAAYtL,IAC5B,GAAIrB,EAAQ4M,oBAAoBC,kBAAkBnQ,GAAe,WAAE2E,GAAmB,iBAAMyK,EAAqB,eAAG,CAChHY,EAAQhQ,CACR,OAIZ,MAAOgQ,GAEX,QAAgBI,GAAed,EAAYU,EAAOK,EAAQC,EAAeC,EAAcxL,EAAayL,GAChGlB,EAAW5K,MACP+L,UAAWH,EAAeI,QAASF,EAAiBR,GAAmB,WACvEW,WAAYH,EAAiBR,GAAgB,QAAGY,eAAgBJ,EAAiBR,GAAoB,YACrGa,eAAgBL,EAAiBR,GAAoB,YACrDO,aAAcA,EAAcO,aAAc/L,EAAYsL,GAAiB,QAAQ,KAC/EU,gBAAiBhM,EAAYsL,GAAiB,QAAW,QACzDW,oBAAqBjM,EAAYsL,GAAiB,QAAU,OAAS,MACrEY,oBAAqBlM,EAAYsL,GAAiB,QAAU,OAAS,QCn4B7E,QAAgBa,IAAcC,GAC1B,GAAItS,GACAuC,CACJ,QAAQ+P,EAAMC,eACV,IAAK,eACDhQ,EAAQ,SACR,MACJ,KAAK,aACDA,EAAQ,SACR,MACJ,KAAK,gBACDA,EAAQ,UAGhB,OAAQ+P,EAAMC,eACV,IAAK,gBACL,IAAK,aACL,IAAK,eACDvS,GACIwS,gBAAiBjQ,EACjBkQ,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,uBAClBC,iBAAkB,UAClBC,mBAAoB,IACpBC,iBAAkB,UAClBC,gBAAiB,UACjBzS,WAAY,2BACZ0S,gBAAiB,qCACjBjC,YAAa,GACbD,YAAa,UAEjB,MACJ,KAAK,eACD9Q,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,uBAClBC,iBAAkB,UAClBC,mBAAoB,IACpBC,iBAAkB,UAClBC,gBAAiB,UACjBzS,WAAY,2BACZ0S,gBAAiB,qCACjBjC,YAAa,GACbD,YAAa,UAEjB,MACJ,KAAK,aACD9Q,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,uBAClBC,iBAAkB,UAClBC,mBAAoB,EACpBI,mBAAoB,GACpBH,iBAAkB,UAClBC,gBAAiB,UACjBzS,WAAY,uBACZJ,SAAU,OACVgT,eAAgB,OAChBF,gBAAiB,gBACjBjC,YAAa,GACbD,YAAa,UAEjB,MACJ,SACI9Q,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,uBAClBC,iBAAkB,UAClBE,iBAAkB,UAClBC,gBAAiB,UACjBzS,WAAY,2BACZ0S,gBAAiB,qCACjBjC,YAAa,GACbD,YAAa,WAIzB,MAAO9Q,GCtGX,GAAImT,IAAwC,WACxC,GAAIC,GAAgB,SAAUrD,EAAG3L,GAI7B,OAHAgP,EAAgB7N,OAAO8N,iBAChBC,uBAA2B9N,QAAS,SAAUuK,EAAG3L,GAAK2L,EAAEuD,UAAYlP,IACvE,SAAU2L,EAAG3L,GAAK,IAAK,GAAImP,KAAKnP,GAAOA,EAAEoP,eAAeD,KAAIxD,EAAEwD,GAAKnP,EAAEmP,MACpDxD,EAAG3L,GAE5B,OAAO,UAAU2L,EAAG3L,GAEhB,QAASqP,KAAOC,KAAKC,YAAc5D,EADnCqD,EAAcrD,EAAG3L,GAEjB2L,EAAE9F,UAAkB,OAAN7F,EAAamB,OAAOqO,OAAOxP,IAAMqP,EAAGxJ,UAAY7F,EAAE6F,UAAW,GAAIwJ,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQlG,EAAKmG,GAC7E,GAA2HjE,GAAvHkE,EAAIC,UAAU9S,OAAQsJ,EAAIuJ,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOzO,OAAO4O,yBAAyBJ,EAAQlG,GAAOmG,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyB3J,EAAI0J,QAAQC,SAASP,EAAYC,EAAQlG,EAAKmG,OACpH,KAAK,GAAI7S,GAAI2S,EAAW1S,OAAS,EAAGD,GAAK,EAAGA,KAAS4O,EAAI+D,EAAW3S,MAAIuJ,GAAKuJ,EAAI,EAAIlE,EAAErF,GAAKuJ,EAAI,EAAIlE,EAAEgE,EAAQlG,EAAKnD,GAAKqF,EAAEgE,EAAQlG,KAASnD,EAChJ,OAAOuJ,GAAI,GAAKvJ,GAAKnF,OAAO+O,eAAeP,EAAQlG,EAAKnD,GAAIA,GAM5D6J,GAAwB,SAAUC,GAElC,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAUoB,EAAQC,GAIlBX,IACIa,WAAS,YACVH,EAAOtK,UAAW,YAAS,IAC9B4J,IACIa,WAAS,IACVH,EAAOtK,UAAW,YAAS,IACvBsK,GACTI,iBAKEC,GAAwB,SAAUJ,GAElC,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAc/D,MAhBAP,IAAUyB,EAAQJ,GAIlBX,IACIa,WAAS,KACVE,EAAO3K,UAAW,WAAQ,IAC7B4J,IACIa,WAAS,KACVE,EAAO3K,UAAW,YAAS,IAC9B4J,IACIa,WAAS,KACVE,EAAO3K,UAAW,UAAO,IAC5B4J,IACIa,WAAS,KACVE,EAAO3K,UAAW,aAAU,IACxB2K,GACTD,iBAKEE,GAAsB,SAAUL,GAEhC,QAASK,KACL,MAAkB,QAAXL,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAoB/D,MAtBAP,IAAU0B,EAAML,GAIhBX,IACIa,WAAS,OACVG,EAAK5K,UAAW,WAAQ,IAC3B4J,IACIa,WAAS,OACVG,EAAK5K,UAAW,YAAS,IAC5B4J,IACIa,WAAS,OACVG,EAAK5K,UAAW,iBAAc,IACjC4J,IACIa,WAAS,WACVG,EAAK5K,UAAW,iBAAc,IACjC4J,IACIa,WAAS,WACVG,EAAK5K,UAAW,gBAAa,IAChC4J,IACIa,WAAS,IACVG,EAAK5K,UAAW,cAAW,IACvB4K,GACTF,iBAKEG,GAAqC,SAAUN,GAE/C,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU2B,EAAqBN,GAI/BX,IACIa,WAAS,KACVI,EAAoB7K,UAAW,WAAQ,IAC1C4J,IACIa,WAAS,KACVI,EAAoB7K,UAAW,kBAAe,IAC1C6K,GACTH,iBAKEI,GAAkC,SAAUP,GAE5C,QAASO,KACL,MAAkB,QAAXP,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU4B,EAAkBP,GAI5BX,IACImB,WAAU7U,KAAM,QAAU0U,KAC3BE,EAAiB9K,UAAW,gBAAa,IAC5C4J,IACIa,WAAS,WACVK,EAAiB9K,UAAW,gBAAa,IACrC8K,GACTD,IAKEG,GAA+B,SAAUT,GAEzC,QAASS,KACL,MAAkB,QAAXT,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAW/D,MAbAP,IAAU8B,EAAeT,GAIzBX,IACImB,WAAU7U,KAAM,QAAU0U,KAC3BI,EAAchL,UAAW,gBAAa,IACzC4J,IACIa,WAAS,WACVO,EAAchL,UAAW,gBAAa,IACzC4J,IACImB,aAAYD,KACbE,EAAchL,UAAW,uBAAoB,IACzCgL,GACTH,IAEEI,GAA8B,SAAUV,GAExC,QAASU,KACL,MAAkB,QAAXV,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,MA5BAP,IAAU+B,EAAcV,GAIxBX,IACIa,WAAS,OACVQ,EAAajL,UAAW,WAAQ,IACnC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,SAAM,IACjC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,YAAS,IACpC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,YAAS,IACpC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,YAAS,IACpC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,iBAAc,IACzC4J,IACIa,WAAS,OACVQ,EAAajL,UAAW,iBAAc,IACzC4J,IACIa,YAAS,IACVQ,EAAajL,UAAW,iBAAc,IAClCiL,GACTP,iBAKEQ,GAAgC,SAAUX,GAE1C,QAASW,KACL,MAAkB,QAAXX,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAmF/D,MArFAP,IAAUgC,EAAgBX,GAI1BX,IACIa,YAAS,IACVS,EAAelL,UAAW,cAAW,IACxC4J,IACIa,WAAS,YACVS,EAAelL,UAAW,WAAQ,IACrC4J,IACIa,WAAS,gBACVS,EAAelL,UAAW,iBAAc,IAC3C4J,IACIa,WAAS,WACVS,EAAelL,UAAW,YAAS,IACtC4J,IACIa,WAAS,KACVS,EAAelL,UAAW,YAAS,IACtC4J,IACIa,WAAS,KACVS,EAAelL,UAAW,aAAU,IACvC4J,IACImB,WAAU7U,KAAM,QAAU0U,KAC3BM,EAAelL,UAAW,gBAAa,IAC1C4J,IACIa,WAAS,OACVS,EAAelL,UAAW,WAAQ,IACrC4J,IACIa,WAAS,IACVS,EAAelL,UAAW,cAAW,IACxC4J,IACIa,WAAS,KACVS,EAAelL,UAAW,iBAAc,IAC3C4J,IACIa,WAAS,KACVS,EAAelL,UAAW,kBAAe,IAC5C4J,IACIa,WAAS,KACVS,EAAelL,UAAW,mBAAgB,IAC7C4J,IACIa,WAAS,OACVS,EAAelL,UAAW,eAAY,IACzC4J,IACImB,WAAUzS,MAAO,UAAWrB,MAAO,GAAKqT,KACzCY,EAAelL,UAAW,aAAU,IACvC4J,IACImB,WAAUzS,MAAO,UAAWrB,MAAO,GAAKqT,KACzCY,EAAelL,UAAW,kBAAe,IAC5C4J,IACImB,aAAYF,KACbK,EAAelL,UAAW,YAAS,IACtC4J,IACImB,WAAU7U,KAAM,QAAU0U,KAC3BM,EAAelL,UAAW,iBAAc,IAC3C4J,IACIa,WAAS,WACVS,EAAelL,UAAW,eAAY,IACzC4J,IACIa,WAAS,SACVS,EAAelL,UAAW,kBAAe,IAC5C4J,IACIa,YAAS,IACVS,EAAelL,UAAW,sBAAmB,IAChD4J,IACIa,WAAS,UACVS,EAAelL,UAAW,oBAAiB,IAC9C4J,IACIa,WAAS,SACVS,EAAelL,UAAW,uBAAoB,IACjD4J,IACIa,WAAS,WACVS,EAAelL,UAAW,gBAAa,IAC1C4J,IACIa,YAAW/S,EAAG,EAAGC,EAAG,KACrBuT,EAAelL,UAAW,eAAY,IACzC4J,IACIa,WAAS,OACVS,EAAelL,UAAW,qBAAkB,IAC/C4J,IACIa,WAAS,OACVS,EAAelL,UAAW,gBAAa,IAC1C4J,IACIa,YAAS,IACVS,EAAelL,UAAW,4BAAyB,IAC/CkL,GACTR,iBAEES,GAAsC,SAAUZ,GAEhD,QAASY,KACL,MAAkB,QAAXZ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAUiC,EAAsBZ,GAIhCX,IACIa,WAAS,OACVU,EAAqBnL,UAAW,iBAAc,IACjD4J,IACIa,WAAS,OACVU,EAAqBnL,UAAW,gBAAa,IACzCmL,GACTT,iBAEEU,GAAkC,SAAUb,GAE5C,QAASa,KACL,MAAkB,QAAXb,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,MAjDAP,IAAUkC,EAAkBb,GAI5BX,IACIa,WAAS,OACVW,EAAiBpL,UAAW,WAAQ,IACvC4J,IACIa,YAAS,IACVW,EAAiBpL,UAAW,eAAY,IAC3C4J,IACImB,aAAYT,KACbc,EAAiBpL,UAAW,aAAU,IACzC4J,IACIa,WAAS,IACVW,EAAiBpL,UAAW,UAAO,IACtC4J,IACIa,WAAS,KACVW,EAAiBpL,UAAW,cAAW,IAC1C4J,IACIa,WAAS,IACVW,EAAiBpL,UAAW,cAAW,IAC1C4J,IACIa,YAAS,IACVW,EAAiBpL,UAAW,iBAAc,IAC7C4J,IACIa,WAAS,OACVW,EAAiBpL,UAAW,gBAAa,IAC5C4J,IACIa,WAAS,OACVW,EAAiBpL,UAAW,kBAAe,IAC9C4J,IACIa,WAAS,YACVW,EAAiBpL,UAAW,oBAAiB,IAChD4J,IACImB,WAAUzS,MAAO,KAAMpC,KAAM,QAAU0U,KACxCQ,EAAiBpL,UAAW,iBAAc,IAC7C4J,IACIa,WAAS,OACVW,EAAiBpL,UAAW,oBAAiB,IAChD4J,IACIa,WAAS,WACVW,EAAiBpL,UAAW,uBAAoB,IACnD4J,IACIa,WAAS,SACVW,EAAiBpL,UAAW,sBAAmB,IAClD4J,IACIyB,gBAAeJ,KAChBG,EAAiBpL,UAAW,mBAAgB,IACxCoL,GACTV,iBAEEY,GAAiC,SAAUf,GAE3C,QAASe,KACL,MAAkB,QAAXf,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,MA5BAP,IAAUoC,EAAiBf,GAI3BX,IACIa,YAAS,IACVa,EAAgBtL,UAAW,cAAW,IACzC4J,IACIa,WAAS,KACVa,EAAgBtL,UAAW,eAAY,IAC1C4J,IACIa,WAAS,OACVa,EAAgBtL,UAAW,aAAU,IACxC4J,IACIa,WAAS,OACVa,EAAgBtL,UAAW,WAAQ,IACtC4J,IACIa,WAAS,OACVa,EAAgBtL,UAAW,cAAW,IACzC4J,IACIa,YAAU,YACXa,EAAgBtL,UAAW,mBAAgB,IAC9C4J,IACImB,aAAYT,KACbgB,EAAgBtL,UAAW,aAAU,IACxC4J,IACImB,WAAU1U,WAAY,KAAMH,KAAM,QAAU0U,KAC7CU,EAAgBtL,UAAW,gBAAa,IACpCsL,GACTZ,iBAEEa,GAAmC,SAAUhB,GAE7C,QAASgB,KACL,MAAkB,QAAXhB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,MAnBAP,IAAUqC,EAAmBhB,GAI7BX,IACIa,YAAS,IACVc,EAAkBvL,UAAW,aAAU,IAC1C4J,IACIa,WAAS,YACVc,EAAkBvL,UAAW,WAAQ,IACxC4J,IACIa,WAAS,QACVc,EAAkBvL,UAAW,cAAW,IAC3C4J,IACImB,aAAYT,KACbiB,EAAkBvL,UAAW,aAAU,IAC1C4J,IACIa,WAAS,SACVc,EAAkBvL,UAAW,WAAQ,IACjCuL,GACTb,iBAEEc,GAAmC,SAAUjB,GAE7C,QAASiB,KACL,MAAkB,QAAXjB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,MAnBAP,IAAUsC,EAAmBjB,GAI7BX,IACIa,YAAS,IACVe,EAAkBxL,UAAW,aAAU,IAC1C4J,IACIa,WAAS,YACVe,EAAkBxL,UAAW,WAAQ,IACxC4J,IACIa,WAAS,QACVe,EAAkBxL,UAAW,cAAW,IAC3C4J,IACImB,aAAYT,KACbkB,EAAkBxL,UAAW,aAAU,IAC1C4J,IACIa,WAAS,SACVe,EAAkBxL,UAAW,WAAQ,IACjCwL,GACTd,iBAKEe,GAA+B,SAAUlB,GAEzC,QAASkB,KACL,MAAkB,QAAXlB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,MAjDAP,IAAUuC,EAAelB,GAIzBX,IACIa,WAAS,OACVgB,EAAczL,UAAW,gBAAa,IACzC4J,IACIa,WAAS,IACVgB,EAAczL,UAAW,eAAY,IACxC4J,IACIa,WAAS,KACVgB,EAAczL,UAAW,mBAAgB,IAC5C4J,IACImB,aAAYT,KACbmB,EAAczL,UAAW,aAAU,IACtC4J,IACIa,WAAS,OACVgB,EAAczL,UAAW,WAAQ,IACpC4J,IACIa,YAAS,IACVgB,EAAczL,UAAW,eAAY,IACxC4J,IACIa,WAAS,IACVgB,EAAczL,UAAW,cAAW,IACvC4J,IACIa,YAAS,IACVgB,EAAczL,UAAW,iBAAc,IAC1C4J,IACIa,WAAS,KACVgB,EAAczL,UAAW,mBAAgB,IAC5C4J,IACIa,WAAS,OACVgB,EAAczL,UAAW,qBAAkB,IAC9C4J,IACIa,WAAS,OACVgB,EAAczL,UAAW,mBAAgB,IAC5C4J,IACIa,WAAS,SACVgB,EAAczL,UAAW,sBAAmB,IAC/C4J,IACImB,WAAUzS,MAAO,KAAMpC,KAAM,QAAU0U,KACxCa,EAAczL,UAAW,kBAAe,IAC3C4J,IACIa,WAAS,YACVgB,EAAczL,UAAW,uBAAoB,IAChD4J,IACIyB,gBAAeJ,KAChBQ,EAAczL,UAAW,mBAAgB,IACrCyL,GACTf,iBF7cE/T,GAAsB,WACtB,QAASA,GAAKM,EAAOW,GACjB6R,KAAKxS,MAAQA,EACbwS,KAAK7R,OAASA,EAElB,MAAOjB,MAaP+U,GAAsB,WACtB,QAASA,GAAKhU,EAAGC,EAAGV,EAAOW,GACvB6R,KAAK/R,EAAIA,EACT+R,KAAK9R,EAAIA,EACT8R,KAAKxS,MAAQA,EACbwS,KAAK7R,OAASA,EAElB,MAAO8T,MAOPC,GAA4B,WAC5B,QAASA,GAAWhW,EAAIyD,EAAMwS,EAAQ3S,EAASmE,EAAMyO,GACjDpC,KAAK9R,EAAIyF,EAAKzF,EACd8R,KAAK/R,EAAI0F,EAAK1F,EACd+R,KAAK7R,OAASwF,EAAKxF,OACnB6R,KAAKxS,MAAQmG,EAAKnG,MAClBwS,KAAK9T,GAAKA,EACV8T,KAAKrQ,KAAOA,EACZqQ,KAAKxQ,QAAUA,EACfwQ,KAAKqC,OAASF,EAAOtT,MACrBmR,KAAK,gBAAkBmC,EAAO3U,MAC9BwS,KAAK,oBAAsBoC,EAE/B,MAAOF,MAGPI,GAA4B,WAC5B,QAASA,GAAWpW,EAAIyD,EAAMnC,EAAOqB,EAAOW,EAAS4S,EAAW/F,GAC5D2D,KAAK9T,GAAKA,EACV8T,KAAKxQ,QAAUA,EACfwQ,KAAKrQ,KAAOA,EACZqQ,KAAKqC,OAASxT,EACdmR,KAAK,gBAAkBxS,EACvBwS,KAAK,oBAAsBoC,EAC3BpC,KAAK3D,EAAIA,EAEb,MAAOiG,MAmCPC,GAA4B,WAC5B,QAASA,GAAWrW,EAAI+B,EAAGC,EAAGoB,EAAQ1D,EAAM2D,EAAWG,EAAUI,OAC3C,KAAdP,IAAwBA,EAAY,IACxCyQ,KAAKzQ,UAAY,GACjByQ,KAAKtQ,SAAW,OAChBsQ,KAAK9T,GAAKA,EACV8T,KAAKpU,KAAOA,EACZoU,KAAKzQ,UAAYA,EACjByQ,KAAK1Q,OAASA,EACd0Q,KAAK/R,EAAIA,EACT+R,KAAK9R,EAAIA,EACT8R,KAAKtQ,SAAWA,EAChBsQ,KAAKlQ,cAAgBA,EAEzB,MAAOyS,MA4BPnU,GAA0B,WAC1B,QAASA,GAASH,EAAGC,GACjB8R,KAAK/R,EAAIA,EACT+R,KAAK9R,EAAIA,EAEb,MAAOE,MAojBPmK,GAA4B,WAC5B,QAASA,GAAWvB,EAAGC,EAAGvG,GACtBsP,KAAKhJ,EAAIA,EACTgJ,KAAK/I,EAAIA,EACT+I,KAAKtP,EAAIA,EAEb,MAAO6H,MA2IPiK,GAA6B,WAC7B,QAASA,GAAY5T,EAASZ,EAAMyU,EAAOC,EAAaC,GACpD3C,KAAK4C,YAAchU,EACnBoR,KAAKhS,KAAOA,GAAQ,MACpBgS,KAAKyC,MAAQA,IAAS,EACtBzC,KAAK0C,YAAcA,EACnB1C,KAAK2C,SAAWA,EAEpB,MAAOH,MG91BPK,GAAkC,SAAUC,EAAG9P,GAC/C,GAAI+P,KACJ,KAAK,GAAIlD,KAAKiD,GAAOjR,OAAO0E,UAAUuJ,eAAetJ,KAAKsM,EAAGjD,IAAM7M,EAAEvH,QAAQoU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCjR,QAAOmR,sBAC3B,IAAK,GAAIvV,GAAI,EAAGoS,EAAIhO,OAAOmR,sBAAsBF,GAAIrV,EAAIoS,EAAEnS,OAAQD,IAASuF,EAAEvH,QAAQoU,EAAEpS,IAAM,IAC1FsV,EAAElD,EAAEpS,IAAMqV,EAAEjD,EAAEpS,IACtB,OAAOsV,IAUPE,GAA6B,WAC7B,QAASA,GAAYlS,GACjBiP,KAAKjP,QAAUA,EAsqBnB,MAnqBAkS,GAAY1M,UAAU2M,mBAAqB,WACvC,GAAIxR,GACAyR,CACJ,IAAIC,GAAWC,YAAcD,GAAWC,WAAW3V,OAAS,EAYxD,GAXAgE,EAAS7B,oBAAkBmQ,KAAKjP,QAAQuS,iBAAiBC,aACpD1T,oBAAkBmQ,KAAKjP,QAAQuS,iBAAiBE,aAChD3T,oBAAkBmQ,KAAKjP,QAAQ0S,eAAgB5T,oBAAkBmQ,KAAKjP,QAAQ0S,cACpC,IAArCzD,KAAKjP,QAAQ0S,aAAa/V,QACyB0V,GAAWC,WAAW,GAA/ErD,KAAK0D,iBAAiBN,GAAWC,WAAW,OAAQ,GACxDF,EAAYQ,YAAW3D,KAAKjP,QAAQ+C,SAAUqP,GAAW,GACpDtT,oBAAkBmQ,KAAKjP,QAAQ4M,sBAAyB9N,oBAAkBmQ,KAAKjP,QAAQoS,YAC3C,UAAzCnD,KAAKjP,QAAQ6S,eAAerX,WAC5B4W,EAAYnD,KAAKjP,QAAQoS,WAG5BtT,oBAAkBmQ,KAAKjP,QAAQ8S,gBAC/BhU,oBAAkBmQ,KAAKjP,QAAQ0S,cAAiB5T,oBAAkBmQ,KAAKjP,QAAQ0S,cACrC,IAArCzD,KAAKjP,QAAQ0S,aAAa/V,SAY3BmC,oBAAkBmQ,KAAKjP,QAAQuS,iBAAiBC,cAChD1T,oBAAkBmQ,KAAKjP,QAAQ0S,cAAgB5T,oBAAkBmQ,KAAKjP,QAAQ0S,cACpC,IAArCzD,KAAKjP,QAAQ0S,aAAa/V,UAChCsS,KAAKjP,QAAQ8S,aAAe7D,KAAKjP,QAAQuS,iBAAiBC,YAE9DvD,KAAK8D,qBAAqBpS,GAAQ0R,GAAWC,WAAW,GAAIF,GAC5DnD,KAAK+D,kBAAkBrS,GAAQ0R,GAAWC,WAAW,QAlBN,CAC/C,GAAIW,GAAQhE,KAAKjP,QAAQ0S,aAAa/V,OAAS,EAC3CO,EAAI+R,KAAKjP,QAAQ0S,aAAaO,GAAa,KAC3C9V,EAAI,GAAI2D,OACZ3D,GAAE8R,KAAKjP,QAAQ0S,aAAaO,GAAa,KAAa,YAAM/V,GACvD4B,oBAAkBmQ,KAAKjP,QAAQuS,iBAAiBC,aAAgBvD,KAAKjP,QAAQkT,mBAC9EjE,KAAKjP,QAAQ8S,aAAe7D,KAAKjP,QAAQ0S,aAAaO,GAAa,KAAc,YAErFhE,KAAK8D,qBAAqB5V,GAAKkV,GAAWC,WAAW,GAAIF,GACzDnD,KAAK+D,kBAAkB7V,GAAKkV,GAAWC,WAAW,MAa9DJ,EAAY1M,UAAUmN,iBAAmB,SAAUhS,EAAMwS,GACrD,GAAInT,GAAUiP,KAAKjP,QACfoT,KACAC,EAAQ3S,EAAaC,GAAc,MACvC,IAAI0S,GAASA,EAAM1W,OAAS,GAA0B,IAArBwW,EAAUxW,OAAc,CACrD,IAAK,GAAID,GAAI,EAAGA,EAAI2W,EAAM1W,OAAQD,IAC1B2W,EAAM3W,GAAe,aAAMsD,EAAQuS,iBAAiBC,YACpDa,EAAM3W,GAAS,OAAMsD,EAAQuS,iBAAiBE,YAC9CY,EAAM3W,GAAc,WAAI,EACxB0W,EAAQC,EAAM3W,GAAc,YAAM2W,EAAM3W,IACxCyW,EAAU/R,KAAKgS,GAGvB,KAAK,GAAI/R,GAAI,EAAGA,EAAIgS,EAAM1W,OAAQ0E,IAC9B4N,KAAK0D,iBAAiBU,EAAMhS,GAAI8R,GAGxC,MAAOA,IAEXjB,EAAY1M,UAAUuN,qBAAuB,SAAUpS,EAAMiC,GACzDqM,KAAKxN,eACLwN,KAAKqE,cACAxU,oBAAkBmQ,KAAKjP,QAAQS,mBAC5BwO,KAAKjP,QAAQuT,WAAW7Y,QAAQ,iBAAmB,EACnDuU,KAAKuE,+BAA+B7S,EAAMiC,IAG1CA,EAAKxF,OAASwF,EAAKxF,OAASwF,EAAKzF,EACjCyF,EAAKnG,MAAQmG,EAAKnG,MAAQmG,EAAK1F,EAC/B+R,KAAKwE,2BAA2B9S,EAAMiC,MAIlDsP,EAAY1M,UAAUgO,+BAAiC,SAAU7S,EAAM+S,GACnE,GACI9Q,GAEA4P,EAGAmB,EACAC,EAPAC,EAAW5E,KAAKjP,QAAQK,iBAExByT,EAAS7E,KAAKjP,QAAQM,OAGtBM,EAAWF,EAAaC,GAAc,MAG1C,IAAIC,GAAYA,EAASjE,OAAS,IAC9BsS,KAAK8E,oBAAoBnT,EAAU8S,GAC/BzE,KAAKjP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAIkE,EAASjE,OAAQD,IACjC8V,EAAa5R,EAASlE,GAAe,WAErCiX,EADgC,IAAlBG,EAAOnX,QAAgB6V,IAAesB,EAAOnX,OACxCkX,EAASF,IAAMG,EAAOtB,GAAYwB,SACrDJ,EAAiC,IAAlBE,EAAOnX,OAAe,EAAImX,EAAOtB,GAAcsB,EAAOtB,GAAYyB,WAC7EH,EAAOtB,GAAYoB,aAAe,EAAIE,EAAOtB,EAAa,GAAGyB,WAAaH,EAAOtB,EAAa,GAAGoB,aAAe,EACpHhR,EAAOhC,EAASlE,GAAS,KACzBkG,EAAO,GAAIsO,IAAKtO,EAAK1F,EAAKyW,EAAM,EAAI/Q,EAAKzF,GAAKyW,EAAgBD,EAAM,GAAK/Q,EAAKnG,MAAQkX,EAAK3Q,KAAKC,IAAIL,EAAKxF,QAAUuW,EAAMC,KACzH3E,KAAKuE,+BAA+B5S,EAASlE,GAAIkG,EAI7D,OAAOjC,IAEXuR,EAAY1M,UAAUuO,oBAAsB,SAAUhU,EAAa6C,GAC/D,GAEIsR,GAFAC,EAAavR,EAAKxF,OAASwF,EAAKnG,MAChC6D,EAAS2O,KAAKjP,QAAQM,OAEtB8T,EAAe,EACfC,EAAc,CAClBtU,GAAYuU,QAAQ,SAAU3T,GAAQ0T,GAAe1T,EAAa,SAClEZ,EAAYuU,QAAQ,SAAUjB,GAC1BA,EAAkB,WAAIc,EAAad,EAAc,OAAIgB,GAEzD,IAAIE,GAA4C,qBAA5BtF,KAAKjP,QAAQuT,WAAsC3Q,EAAKnG,MAAQmG,EAAKxF,OACxD,2BAA5B6R,KAAKjP,QAAQuT,UAClBxT,GAAYyU,KAAK/U,EACjB,KAAK,GAAI/C,GAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,IAAK,CACzC,GAAIoP,GAAO/L,EAAYrD,EACvBoP,GAAiB,WAAuB,IAAlBxL,EAAO3D,SAAmBsS,KAAKjP,QAAQyU,oBACzD3V,oBAAkBmQ,KAAKjP,QAAQK,iBAAiBG,WAChDsL,EAAiB,aAAMxL,EAAO3D,OAAS,EAAImP,EAAiB,aAAMmD,KAAKjP,QAAQM,OAAO3D,QACtF4X,GACAL,EAAeC,EAAaE,EAAetU,EAAYrD,GAAW,OAAKkG,EAAKxF,OACxEgX,GAAgBxR,EAAKnG,QACrBsD,EAAYrD,GAAS,KAAI,GAAIwU,IAAKkD,EAAexR,EAAK1F,EAAG0F,EAAKzF,EAAG+W,EAAYtR,EAAKxF,WAItF8W,EAAeC,EAAaE,EAAetU,EAAYrD,GAAW,OAAKkG,EAAKnG,MACxE2X,GAAgBxR,EAAKxF,SACrB2C,EAAYrD,GAAS,KAAI,GAAIwU,IAAKtO,EAAK1F,EAAGkX,EAAexR,EAAKzF,EAAGyF,EAAKnG,MAAOyX,KAGrFE,GAAgBF,EAChBjF,KAAKxN,YAAYL,KAAKrB,EAAYrD,MAG1CwV,EAAY1M,UAAUiO,2BAA6B,SAAU9S,EAAM+S,GAC/D,GACI9Q,GAIAkJ,EAEAY,EAEAgI,EACAd,EAVAxT,EAAO6O,KAAKjP,QAAQK,iBAEpBC,EAAS2O,KAAKjP,QAAQM,OAItB+S,EAAQ3S,EAAaC,GAAc,MAKvC,IAAI0S,GAASA,EAAM1W,OAAS,IACO,IAA3BsS,KAAKqE,WAAW3W,SAChBsS,KAAKqE,cACLrE,KAAKqE,WAAWlS,KAAKiS,IAEzBpE,KAAK0F,wBAAwBhU,EAAM0S,EAAOK,GACtCzE,KAAKjP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAI2W,EAAM1W,OAAQD,IAE9BgQ,GADAZ,EAAOuH,EAAM3W,IACY,WACzBkG,EAAOkJ,EAAW,MACXA,EAAiB,WAAI1L,EAAKuT,IAAMrT,EAAOoM,GAAOsH,UAAY,EACjEU,GAAW5I,EAAiB,WAAI1L,EAAKsU,QAAUpU,EAAOoM,GAAOkI,cAAgB,EAC7EhB,EAAe3E,KAAKjP,QAAQyU,mBAA+B,IAAV/H,GAAeZ,EAAiB,WAAI,EAAIxL,EAAOoM,IAC5FpM,EAAOoM,GAAOuH,WAAa3T,EAAOoM,GAAOkH,aAAmB,EAAuB,IAAlBtT,EAAO3D,OAAgB,EAAI2D,EAAOoM,IACnGpM,EAAOoM,GAAOuH,WAAa3T,EAAOoM,GAAOkH,aAAmB,EAChEhR,EAAO,GAAIsO,IAAKtO,EAAK1F,EAAIwX,EAAS9R,EAAKzF,GAAKyW,EAAec,GAAU9R,EAAKnG,MAAQiY,EAAS9R,EAAKxF,OAASsX,IACpG5I,EAAiB,YAAKA,EAAa,OAAI,GACxCmD,KAAKwE,2BAA2BJ,EAAM3W,GAAIkG,IAM9DsP,EAAY1M,UAAUmP,wBAA0B,SAAU5W,EAAQ6C,EAAU8S,GACxEzE,KAAK4F,iBAAiBjU,EAAU6C,EAAQiQ,IACxC9S,EAAS4T,KAAK/L,GACdwG,KAAK6F,kBAAkBlU,KAAc8S,OAEzCxB,EAAY1M,UAAUsP,kBAAoB,SAAUnU,EAAMoU,EAAYnS,EAAMoS,GACxE,GAAIrI,GAAahM,EAAKhE,MACtB,IAAmB,IAAfgQ,EAAkB,CACdsI,EAAiBhG,KAAKiG,eAAeH,EAAYnS,EAErD,OADIuS,GAAWH,EAAMjN,OAAOkN,GAGhC,GAAIxY,GAAQiH,EAAgBd,GACxBwS,EAAYzU,EAAK,GACjB0U,EAAW1U,EAAK2H,MAAM,EAAGqE,EAC7B,IAAIsC,KAAKqG,YAAYP,EAAYK,EAAW3Y,GAAQ,CAChD,GAAI8Y,GAASR,EAAWhN,OAAOqN,EAC/B,OAAOnG,MAAK6F,kBAAkBO,EAAUE,EAAQ3S,EAAMoS,GAKtD,IAAK,GAFDQ,GAAmBT,EAAWpY,OAC9B8Y,EAAW,EACN/Y,EAAI,EAAGA,EAAI8Y,EAAkB9Y,GAAK,EACvC+Y,GAAYV,EAAWrY,GAAa,QAExC,IAAIgZ,GAAezG,KAAK0G,QAAQ/S,EAAM6S,GAClCR,EAAiBhG,KAAKiG,eAAeH,EAAYnS,GACjDuS,EAAWH,EAAMjN,OAAOkN,EAC5B,OAAOhG,MAAK6F,kBAAkBnU,KAAU+U,EAAcP,IAG9DjD,EAAY1M,UAAU8P,YAAc,SAAUP,EAAYK,EAAWzY,GACjE,GAA0B,IAAtBoY,EAAWpY,OACX,OAAO,CAGP,IAAI4Y,GAASR,EAAWhN,OAAOqN,EAG/B,OAF4BnG,MAAK2G,mBAAmBb,EAAYpY,IACxCsS,KAAK2G,mBAAmBL,EAAQ5Y,IAIhEuV,EAAY1M,UAAUoQ,mBAAqB,SAAUC,EAAKlZ,GAKtD,IAAK,GAJDmZ,GAAYD,EAAIlZ,OAChBoZ,EAAUC,EAAAA,EACVC,GAAWD,EAAAA,EACXE,EAAU,EACLxZ,EAAI,EAAGA,EAAIoZ,EAAWpZ,GAAK,EAAG,CACnC,GAAIyZ,GAAON,EAAInZ,GAAa,QACxByZ,GAAOJ,IACPA,EAAUI,GAEVA,EAAOF,IACPA,EAAUE,GAEdD,GAAWC,EAIf,MAFanT,MAAKoT,IAAKpT,KAAKqT,IAAI1Z,EAAQ,GAAMsZ,EAAWjT,KAAKqT,IAAIH,EAAS,GAAMlT,KAAKqT,IAAIH,EAAS,IAC7FlT,KAAKqT,IAAI1Z,EAAQ,GAAMoZ,KAGjC7D,EAAY1M,UAAUmQ,QAAU,SAAU/S,EAAMuT,GAC5C,GAAIT,GAAe7R,EAAmBjB,GAClCnG,EAAQiZ,EAAajZ,MACrBW,EAASsY,EAAatY,OACtB4G,EAAU0R,EAAaxY,EACvB+G,EAAUyR,EAAavY,CAC3B,IAAIV,GAASW,EAAQ,CACjB,GAAIkZ,GAAYH,EAAO/Y,CAQvB,OAAO2G,GANHH,GACA1G,EAAG8G,EAAUsS,EACbnZ,EAAG8G,EACHxH,MAJWA,EAAQ6Z,EAKnBlZ,OAAQA,IAKZ,GAAImZ,GAAaJ,EAAO1Z,EAEpBmH,GACA1G,EAAG8G,EACH7G,EAAG8G,EAAUsS,EACb9Z,MAAOA,EACPW,OALYA,EAASmZ,EAOzB,OAAOxS,GAAcH,IAG7BsO,EAAY1M,UAAU0P,eAAiB,SAAUW,EAAKjT,GAYlD,IAAK,GAFD8J,GATA9I,EAAYC,EAAmBjB,GAE/BnG,EAAQmH,EAAUnH,MAClBW,EAASwG,EAAUxG,OACnB4G,EAAUJ,EAAU1G,EACpB+G,EAAUL,EAAUzG,EACpB2Y,EAAYD,EAAIlZ,OAChB2D,EAAS2O,KAAKjP,QAAQM,OACtBF,EAAO6O,KAAKjP,QAAQK,iBAEpBoV,EAAW,EACN/Y,EAAI,EAAGA,EAAIoZ,EAAWpZ,GAAK,EAChC+Y,GAAYI,EAAInZ,GAAa,QAWjC,KAAK,GALDgY,GAEA8B,EAEAC,EARAH,EAAYb,EAAWrY,EACvBmZ,EAAad,EAAWhZ,EACxBia,EAAa1S,EACb2S,EAAa1S,EAEb2S,KAIKla,EAAI,EAAGA,EAAIoZ,EAAWpZ,GAAK,EAAG,CACnC,GAAIoP,GAAO+J,EAAInZ,EAOf,IANAgQ,EAAQZ,EAAiB,WACzBA,EAAiB,WAAuB,IAAlBxL,EAAO3D,SAAkBsS,KAAKjP,QAAQyU,mBAAqB/H,IAAUpM,EAAO3D,QAC9FmC,oBAAkBsB,EAAKI,YAAqBkM,IAAUpM,EAAO3D,QACjE6Z,EAAW3K,EAAaoD,KAAKqE,WAAW,GAAIxH,GAC5C2K,EAAaD,EAAWvH,KAAKjP,QAAQ+C,SAAW+I,EAAa,OAAElJ,KAC/D8R,EAAU5I,EAAiB,WAAI1L,EAAKsU,QAAUpU,EAAOoM,GAAOkI,aACxDnY,GAASW,EAAQ,CACjB,GAAIyZ,GAAKF,EAAa7K,EAAe,SAAIwK,CACzCxK,GAAW,MACP5O,EAAGwZ,EACHvZ,EAAGwZ,EACHla,MAAOia,EAAaJ,EACpBlZ,OAAQyZ,GAEZF,EAAaE,MAEZ,CACD,GAAIC,GAAKJ,EAAa5K,EAAe,SAAIyK,CACzCzK,GAAW,MACP5O,EAAGwZ,EACHvZ,EAAGwZ,EACHla,MAAOqa,EACP1Z,OAAQuZ,EAAaJ,GAEzBG,EAAaI,EAEbhL,EAAa,OAAI,IAAM0K,GAAaxT,KAAKyE,MAAM7E,EAAKzF,EAAKuX,EAAU,IACnE1R,KAAKyE,MAAMgP,EAAWtZ,GAAKsZ,EAAWrZ,OAASqZ,EAAWtZ,KAAO6F,KAAKyE,MAAM7E,EAAK1F,EAAKwX,EAAU,IAChG1R,KAAKyE,MAAMgP,EAAWvZ,GAAKuZ,EAAWha,MAAQga,EAAWvZ,OACzD+R,KAAKxN,YAAYL,KAAK0K,GACtB8K,EAAYxV,KAAK0K,IAGzB,MAAO8K,IAEX1E,EAAY1M,UAAUqP,iBAAmB,SAAUlU,EAAMwV,GAIrD,IAAK,GAHDxJ,GAAahM,EAAKhE,OAElBmN,KACKpN,EAAI,EAAGA,EAAIiQ,EAAYjQ,GAAK,EAAG,CAGpC,IAAK,GAFDqa,GAAepW,EAAKhE,OACpBqa,EAAY,EACPC,EAAM,EAAGA,EAAMF,EAAcE,GAAO,EACzCD,GAAarW,EAAKsW,GAAa,MAInC,KAAK,GAFDC,GAAaf,EAAOa,EACpBG,MAAQ,GACH9V,EAAI,EAAGA,EAAI0V,EAAc1V,KAC9B8V,EAAQxW,EAAKU,IACG,SAAI8V,EAAc,OAAID,EACtCpN,EAAO1I,KAAK+V,GAGpB,MAAOrN,IAEXoI,EAAY1M,UAAU4R,gBAAkB,SAAUC,GAC9C,GACIjF,GADAkF,EAAa,GAAIxW,OAErBwW,GAAaD,EAAW,GAAW,OACnCpI,KAAKjP,QAAQ8S,aAAewE,EAAsB,UAAIA,EAAuB,WAAI,IACjF,IAAIC,GAAsB,GAAIzW,OAC1BhC,qBAAkBwY,EAAsB,WACxCC,EAAsBD,EAGtBC,EAAoBD,EAAsB,YAAMA,GAEpDlF,EAAYQ,YAAW3D,KAAKjP,QAAQ+C,SAAUqP,GAAW,GACpDtT,oBAAkBmQ,KAAKjP,QAAQ4M,sBAAyB9N,oBAAkBmQ,KAAKjP,QAAQoS,aACxFA,EAAYnD,KAAKjP,QAAQoS,UAG7B,KAAK,GADDa,GAAQhE,KAAKjP,QAAQM,OAAO3D,OACvBD,EAAI,EAAGA,EAAIuW,EAAOvW,IAEnBuW,IADaoE,EAAW,GAAe,WAEvCpI,KAAKjP,QAAQM,OAAO2S,GAAShE,KAAKjP,QAAQM,OAAO5D,GAGjDuS,KAAKjP,QAAQM,OAAOkX,OAAOvE,EAAQ,EAAG,EAG9ChE,MAAK8D,qBAAqBwE,EAAqBnF,GAC/CnD,KAAK+D,kBAAkBuE,IAG3BrF,EAAY1M,UAAUwN,kBAAoB,SAAUyE,GAChD,GAEIjc,GAEAwJ,EACA0S,EACAC,EACAC,EAPAC,EAAQ5I,KAGR9N,EAAU8N,KAAKjP,OAKnBiP,MAAK1R,SAAW4D,EAAQ5D,QACxB,IAEIua,GAEApL,EACAqL,EAEAnV,EACAqG,EAGArK,EACAkN,EACAkM,EACAvZ,EAKAwZ,EAEAC,EACAvE,EACAwE,EApBAC,EAAYjX,EAAQgB,QAAQhH,GAG5B+F,EAAOC,EAAQoS,WAGf8E,EAAkBpJ,KAAKjP,QAAQK,iBAAiBgY,gBAOhDC,EAAW,GAEXC,EAAevd,SAASC,eAAekG,EAAQgB,QAAQhH,GAAK,sBAM5DmF,EAASa,EAAQb,MACrB2O,MAAKuJ,YAAcvJ,KAAK1R,SAASkb,aAActd,GAAIid,EAAY,YAAclX,EAAO,WAgHpF,KAAK,GA/GDwX,GAEA/W,EACAyP,EAYAiG,EACAtY,EAZA4Z,EAAgBzd,gBAAc,OAC9BC,GAAIgG,EAAQgB,QAAQhH,GAAK,wBACzByd,UAAW,WACXtW,OAAQ,iEACKnB,EAAQ4B,SAAS5F,EAAI,WACpBgE,EAAQ4B,SAAS7F,EAAI,aACnBiE,EAAQ4B,SAAS3F,OAAS,YAC3B+D,EAAQ4B,SAAStG,MAAQ,QAExCoc,GAAa,EACbzY,EAAOe,EAAQd,iBAgGfyY,EAAS7J,KACJvS,EAAI,EAAGA,EAAIuS,KAAKxN,YAAY9E,OAAQD,KA9F/B,SAAUA,GAGpB,GAFAoP,EAAOgN,EAAOrX,YAAY/E,GAC1BgQ,EAAQZ,EAAiB,WACrBgN,EAAO9Y,QAAQ+Y,eAAiBja,oBAAkBga,EAAO9Y,QAAQ8S,eAC9DpG,EAAQ,GAAKoM,EAAO9Y,QAAQ+Y,eAC5BrM,EAASoM,EAAO9Y,QAAQ8S,aAAe,EAC1C,MAAO,UAEXlQ,GAAOkJ,EAAW,KAClB+M,EAAa/M,EAAiB,WAC9BmM,EAAUG,EAAY,gBAAkB1L,EAAQ,eAAiBhQ,EACjEgc,EAAYI,EAAOvb,SAASkb,aAActd,GAAI8c,EAAU,WACxDtE,GAAOkF,EAAazY,EAAKuT,IAAMrT,EAAOoM,GAAOsH,UAAY,CACzD,IAAIgF,GAAkBF,EAAO9Y,QAAQoS,UAAYvO,EAAmBiV,EAAO9Y,QAAQoS,WAAa0G,EAAO9Y,QAAQ+C,QACpF,gBAAvB5B,EAAQoS,aACR3Q,EAAKnG,MAAQuG,KAAKC,IAAIL,EAAK1F,EAAI0F,EAAKnG,OAASkX,EAC7C/Q,EAAKxF,OAAS4F,KAAKC,IAAIL,EAAKzF,EAAIyF,EAAKxF,QAAUuW,GAEnB,uBAA5BxS,EAAQgC,gBACRP,EAAK1F,EAAK8b,EAAgB9b,EAAI8b,EAAgBvc,MAASmG,EAAKnG,MAAQuG,KAAKC,IAAI+V,EAAgB9b,EAAI0F,EAAK1F,GAErE,uBAA5BiE,EAAQgC,gBACbP,EAAKzF,EAAK6b,EAAgB7b,EAAI6b,EAAgB5b,OAAUwF,EAAKxF,OAAS4F,KAAKC,IAAI+V,EAAgB7b,EAAIyF,EAAKzF,GAEvE,uBAA5BgE,EAAQgC,kBACbP,EAAK1F,EAAK8b,EAAgB9b,EAAI8b,EAAgBvc,MAASmG,EAAKnG,MAAQuG,KAAKC,IAAI+V,EAAgB9b,EAAI0F,EAAK1F,GACtG0F,EAAKzF,EAAK6b,EAAgB7b,EAAI6b,EAAgB5b,OAAUwF,EAAKxF,OAAS4F,KAAKC,IAAI+V,EAAgB7b,EAAIyF,EAAKzF,IAE5G6H,EAAe6T,EAAazY,EAAK4E,aAAe1E,EAAOoM,GAAO1H,aAC9D2S,EAAemB,EAAOnB,aAAakB,EAAY/M,GAC/ClN,EAAO+Y,EAAmB,KAC1BlZ,EAAUkZ,EAAsB,QAChC1O,EAAS4P,EAAazY,EAAK6Y,YAAe3Y,EAAOoM,GAAQwM,YACzD,IAAIC,OAAY,EAEhB,IADAzB,EAAamB,EAAazY,EAAKgZ,WAAc9Y,EAAOoM,GAAQuH,WACxDvH,IAAUoM,EAAO9Y,QAAQ8S,aACzB,GAAIgG,EAAO9Y,QAAQkT,iBAAkB,CAEjCnU,EAAgB,IAAM+Z,EAAO9Y,QAAQqZ,oBAAsB,IAC3DF,EAAYrN,EAAqB,eAAEzM,QAF1B,MAEsCN,GAC/Coa,EAAsB,IAAVzM,EAAc,IAAMyM,EAAYA,MAG5CA,GAAYrN,EAAW,SAIvBgN,GAAO9Y,QAAQkT,mBACfpH,EAAgB,WAAI,GAExBqN,EAAYrN,EAAW,IAmB3B,IAjBAkM,EAAahP,EAAcC,EAAQ6C,EAAW,KAAGgN,EAAO9Y,UAAYmZ,EACpE9B,EAAa3W,EAAaoL,GAAc,OACxCkM,GAAca,GAAcxB,GAAcA,EAAW1a,OAAS,GAAKmc,EAAO9Y,QAAQkD,gBAC7E4I,EAAgB,UACb3K,EAAQmY,UAAYtB,EAAa,OAAS,OAASA,EADlC7W,EAAQmY,UAAYtB,EAAa,OAAS,OAASA,EACJA,EACxEG,EAAaU,EAAazY,EAAKmZ,WAAajZ,EAAOoM,GAAO8M,YAC1DrB,EAAUtc,WAAasc,EAAUtc,YAAcid,EAAO9Y,QAAQyZ,WAAWlL,gBACzE6C,EAASyH,EAAazY,EAAKgR,OAAS9Q,EAAOoM,GAAO0E,OAClD5V,EAAYqd,EACmBzY,EAAKsZ,cADyB,SAAnCpZ,EAAOoM,mBAAqC,UAAgD,WAAnCpM,EAAOoM,mBACtF,YAAc,WAClBqL,EAAmBc,EAAazY,EAAK2X,iBAAmBzX,EAAOoM,GAAOqL,iBACtEpW,EAAWkX,EAAazY,EAAKuZ,cAAgBrZ,EAAOoM,GAAOkN,eAC3D9N,EAAc,SAAMsF,OAAQA,EAAQ3S,QAASA,EAASG,KAAMA,GAC5DgZ,GACIiC,QAAQ,EAAO1Z,KCxeJ,gBDweyBH,QAAS8Y,EAAO9Y,QACpDuB,YAAauK,EAAMgO,YAAahB,EAAOrX,YAAa5D,QAASiO,EAAc,SAE3EgN,EAAO9Y,QAAQ+Z,SAAU,CACXnC,EAAU5X,QAAuB4X,EAAUkC,WAAzD,IAAsEE,GAAkBlI,GAAO8F,GAAY,UAAW,eACtHA,GAAYoC,EAEhBlB,EAAO9Y,QAAQia,QC/eA,gBD+euBrC,EAAW,SAAUsC,GACvD,IAAKA,EAAaL,OAAQ,CACtBvB,EAAW,MAAQ1V,EAAK1F,EAAI,IAAM0F,EAAKzF,EAAI,OAASyF,EAAK1F,EAAI0F,EAAKnG,OAAS,IAAMmG,EAAKzF,EAClF,OAASyF,EAAK1F,EAAI0F,EAAKnG,OAAS,KAAOmG,EAAKzF,EAAIyF,EAAKxF,QAAU,MAAQwF,EAAK1F,EAAI,KAAO0F,EAAKzF,EAAIyF,EAAKxF,QAAU,IACnH0a,EAAc,GAAIvG,IAAW0G,EAAU,YAAarZ,EAAMwS,EAAO3U,MAAO2U,EAAOtT,MAAOW,EAAS,KAAM6Z,EACrG,IAAIrY,GAAO4X,EAAMta,SAAS4c,SAASrC,EACnCY,GAAUrd,YAAY4E,GAClByX,GACAG,EAAMuC,eAAepC,EAAWtV,WAAYgW,EAAWP,EAAWvV,EAAMyV,EAAiBJ,EAASrZ,EAAMpD,EAAUuD,GAElH4C,IACAuW,EAAcL,EAAMwC,eAAe9B,EAAcN,EAASrV,EAAMmV,EAAkBpW,EAAUmK,EAAM+M,GAClGF,EAActd,YAAY6c,IAE9BQ,EAAU3P,aAAa,aAAc+C,EAAW,MAChD4M,EAAU3P,aAAa,YAAa8O,EAAM7X,QAAQsa,SAAW5d,EAAI,GAAGgG,YACpEmV,EAAMW,YAAYnd,YAAYqd,OAM9Bhc,EAERic,GAAc9P,WAAWlM,OAAS,IAClC4b,EAAald,YAAYsd,GACzB4B,uBAAqBtL,KAAKjP,QAAQmC,QAAQhH,GAAK,kBAAmB,iBAAkBmF,EAAOA,EAAO3D,OAAS,IAC3G4d,uBAAqBtL,KAAKjP,QAAQmC,QAAQhH,GAAK,iBAAkB,gBAAiBiF,IAEtF6O,KAAKjP,QAAQwa,UAAUnf,YAAY4T,KAAKuJ,cAE5CtG,EAAY1M,UAAU4U,eAAiB,SAAUvf,EAAMwI,EAAe8U,EAAWvV,EAAMyV,EAAiBJ,EAASrZ,EAAMpD,EAAUuD,GAI1G/D,SAASC,eAAegU,KAAKjP,QAAQmC,QAAQhH,GAAK,sBAC1D8T,KAAKjP,QAAQK,gBAJxB,IAMIrD,GACAyd,EAEAC,EAIAC,EALA9S,KAGA+S,KACAxd,EAAS,CAKb,IAHAyK,GAA8C,IAA3BhN,EAAKH,QAAQ,QAAmBG,EAAKqE,MAAM,QAAU,KACxEwb,EAAazL,KAAK4L,qBAAqBjY,EAAM/H,EAAMsd,EAAWE,GAC9Drb,EAAWpC,EAAYiN,GAAkBA,EAAe,IAAM6S,EAAW,GAAIvC,GACzElJ,KAAKjP,QAAQsZ,UAAW,CACxB,GAAIzW,GAAYjI,EAAYC,EAAMsd,GAC9B2C,EAAmBjgB,EAAKmE,OAAO,QAAUnE,EAAKmE,OAAO,MACzD,IAAI4D,EAAKnG,MAAQoG,EAAUpG,OAASqe,EAAmB,EAAG,CACtD,GAAIte,GAAQ3B,EAAK+B,UAAUke,EAAmB,EAAGjgB,EAAK8B,QAElDoe,EAAkBngB,EADJ,MAC6Bud,EAC/CuC,GAAW,GAAOpe,EAASsG,EAAKnG,MAAQse,EAAgBte,MAnBlD,EAmBmEie,EAAW,GAAIvC,GAAa3b,GAI7G,GADAie,EAAe9X,EAAkBC,EAAMpH,EAAUwB,EAAU,OAAQiS,KAAKjP,UACnElB,oBAAkB+I,GAAiB,CAIpC,IAAK,GAHDmE,MACAgP,EAAQ,KACRC,KACKve,EAAI,EAAGA,EAAImL,EAAelL,OAAQD,IAGvCU,IADAJ,EAAWpC,EADXogB,EAAQ1e,EAAUsG,EAAKnG,MAAQ,EAAIoL,EAAenL,GAAIyb,GACxBA,IACX/a,OACnB6d,EAAU7Z,KAAKpE,EAASP,OACxBuP,EAAW5K,KAAK4Z,EAEpBN,GAAa1O,EACbhP,EAASP,MAAQuG,KAAKoT,IAAIpG,MAAM,KAAMiL,GACtCje,EAASI,OAASA,EAEtB,GAAwB,eAApBib,GAAwD,SAApBA,GAAkD,SAApBA,EAA4B,CAC9F,IAAK,GAAIhX,GAAI,EAAGA,EAAIqZ,EAAW/d,OAAQ0E,IAEnCjE,IADAJ,EAAWpC,EAAY8f,EAAWrZ,GAAI8W,IACnB/a,OACdwF,EAAKxF,OA1CJ,EA0CwBA,GAC1Bwd,EAAUxZ,KAAKsZ,EAAWrZ,GAGlC,IAAwB,SAApBgX,GAA8BqC,EAAW/d,SAAWie,EAAUje,QAAUie,EAAUje,OAAQ,CAC1F,GAAIue,GAAmBN,EAAUje,OAAS,EACtCwe,EAAaP,EAAUM,EAC3BC,GAAaA,EAAWve,UAAU,EAAIue,EAAWxe,OAAS,GAAM,MAChEie,EAAUpD,OAAO0D,GACE,QAAfC,GACAP,EAAUxZ,KAAK+Z,QAKvBR,GAAWD,EACXE,EAAUxZ,KAAKuZ,EAGnB/c,GADc,GAAI4T,IAAWyG,EAAU,QAASwC,EAAavd,EAAGud,EAAatd,EAAG,QAASyd,EAAW,GAAI,GAAI7b,GAC7EoZ,EAAWA,EAAUra,OAASmR,KAAKmM,kBAAkBxc,GAAOyE,IAE/F6O,EAAY1M,UAAUmS,aAAe,SAAUkB,EAAY/M,GACvD,GAAI9L,GAAUiP,KAAKjP,QACfqb,EAAWxC,EAAa7Y,EAAQK,iBAAiBzB,KAAOoB,EAAQM,OAAOwL,EAAiB,YAAGlN,KAC3F0c,EAAczC,EAAa7Y,EAAQK,iBAAiB5B,QAAUuB,EAAQM,OAAOwL,EAAiB,YAAGrN,OAChGK,qBAAkBuT,GAAWkJ,oBAC1BlJ,GAAWkJ,kBAAkB5e,OAAS,IACtC0V,GAAWC,WAAaD,GAAWkJ,kBAG3C,IAAIjI,GAAa5S,EAAa2R,GAAWC,WAAW,IAAY,OAC5DtN,EAAe6T,EAAa7Y,EAAQK,iBAAiB2E,aACrDhF,EAAQM,OAAOwL,EAAiB,YAAG9G,YACvC,IAAIA,EAAarI,OAAS,EAAG,CACzB,GAAI6e,GAASzW,EAASC,EAAc8G,EAAW,KAAEmD,KAAKjP,QAAQyb,qBAAsB3P,EAAW,KAAEmD,KAAKjP,QAAQ0b,qBAAsB5P,EAAW,KAAEmD,KAAKjP,QAAQS,iBAC9J4a,GAAYvc,oBAAkB0c,EAAa,MAAsBxb,EAAQK,iBAAiBzB,KAA1C4c,EAAa,KAC7DF,EAAcE,EAAgB,YAG9B,KAAK,GAAI9e,GAAI,EAAGA,EAAI4W,EAAW3W,OAAQD,IAC/B4W,EAAW5W,GAAmB,iBAAMoP,EAAqB,eAAE5M,MAAM,KAAK,KACtEmc,EAAYvc,oBAAkBuc,GAAwBvc,oBAAkBkB,EAAQ2b,gBAC5B3b,EAAQ4b,QAAQjf,OAAS,EACzEqD,EAAQ4b,QAAQlf,EAAIsD,EAAQ4b,QAAQjf,QAAU,UAD9C2W,EAAW5W,GAAS,KAAEsD,EAAQ2b,gBADQN,EAMtD,QAASzc,KAAMyc,EAAU5c,QAAS6c,IAKtCpJ,EAAY1M,UAAU4V,kBAAoB,SAAUtd,GAChD,GAAI+d,GAAiB/d,EAEjBge,EAAWjS,EAAkB/C,EADjC+U,EAAqC,gBAAnBA,EAAoC7R,OAAOC,iBAAiBjP,SAASI,KAAM,MAAM2S,gBAAkB8N,GAGrH,OADe7Y,MAAKyE,OAAoB,IAAbqU,EAAS7V,EAAuB,IAAb6V,EAAS5V,EAAuB,IAAb4V,EAASnc,GAAW,MAClE,IAAM,QAAU,SAEvCuS,EAAY1M,UAAU6U,eAAiB,SAAU9B,EAAcN,EAASrV,EAAMpH,EAAUmG,EAAUmK,EAAM+M,GACpG,GAAIkD,GACAC,EACAC,EACAra,EACAsa,EACAC,EAAatD,EAAaZ,EAAU,iBAAmBA,EAAU,kBACjEmE,EAAiBvD,EAAa,iBAAmB,iBACrD,IAAI/Z,oBAAkB6C,EAAoB,WAEtC,IAAK,GADDd,GAAOC,OAAOD,KAAKiL,EAAW,MACzBpP,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7BiF,EAAWA,EAAStC,QAAQ,GAAIoD,QAAO,MAAQ5B,EAAKnE,GAAK,KAAM,KAAMoP,EAAW,KAAEjL,EAAKnE,GAAGgG,YAUlG,OAPAd,GAAaF,EAAoBC,GACjCoa,EAAkBna,EAAWkK,EAAW,KAAG,KAAM,KAAMmD,KAAKjP,QAAQmC,QAAQhH,GAAKihB,GAAgB,GACjGJ,EAAW9Z,EAAe6Z,EAAiBI,EAAYrQ,EAAW,MAClEmQ,EAAe7Y,EAAe4Y,EAAUzD,GACxC2D,EAAmBvZ,EAAkBC,EAAMpH,EAAUygB,EAAc,WAAYhN,KAAKjP,SACpFgc,EAASzgB,MAAMS,KAAOkgB,EAAiBhf,EAAI,KAC3C8e,EAASzgB,MAAMQ,IAAMmgB,EAAiB/e,EAAI,KACnC6e,GAEX9J,EAAY1M,UAAUqV,qBAAuB,SAAUjY,EAAM/H,EAAMsd,EAAWpb,GAC1E,GAAIsf,GACA9f,EAAWqG,EAAKnG,MAAQ,EAC5B,QAAQM,GACJ,IAAK,OACDsf,GAAa9T,EAAKhM,EAAUqG,EAAKxF,OAAQvC,EAAMsd,GAC/C,MACJ,KAAK,OACDkE,GAAa/f,EAAUC,EAAW,EAAI1B,EAAMsd,GAC5C,MACJ,KAAK,aACDkE,EAAY3U,EAASnL,EAAU1B,EAAMsd,EACrC,MACJ,KAAK,OACDkE,EAAYrU,EAASzL,EAAU1B,EAAMsd,GAG7C,MAAOkE,IAEJnK,KElrBPoK,GAA6B,WAK7B,QAASA,GAAYC,GACjBtN,KAAKsN,QAAUA,EA+GnB,MAzGAD,GAAY9W,UAAUgX,MAAQ,SAAU7T,GACpC,GAAIkP,GAAQ5I,IACZA,MAAKwN,YAAczS,OAAO0S,KAAK,GAAI,QAAS,UAAY1S,OAAO2S,YAAc,UAAY3S,OAAO4S,WAAa,cAC7G3N,KAAKwN,YAAYI,OAAO,EAAG,GAC3B5N,KAAKwN,YAAYK,SAASC,OAAOC,WAAYD,OAAOE,YACpD,IAAIC,IACArD,QAAQ,EAAOsD,YAAalO,KAAKmO,eAAezU,GAAWxI,KDR9C,cCUjB8O,MAAKsN,QAAQtC,QDVI,cCUiBiD,EAAU,WACnCA,EAASrD,QACV4C,QAAYS,EAASC,YAAatF,EAAM4E,gBASpDH,EAAY9W,UAAU4X,eAAiB,SAAUzU,GAC7C,GAAI0U,GAAMniB,gBAAc,MAiBxB,OAhBIyN,GACIA,YAAoB5H,OACpB4H,EAAS2L,QAAQ,SAAU/Z,GACvB8iB,EAAIhiB,YAAYmE,EAAWjF,GAAO+iB,WAAU,MAG3C3U,YAAoB4U,SACzBF,EAAIhiB,YAAYsN,EAAS2U,WAAU,IAGnCD,EAAIhiB,YAAYmE,EAAWmJ,GAAU2U,WAAU,IAInDD,EAAIhiB,YAAY4T,KAAKsN,QAAQpa,QAAQmb,WAAU,IAE5CD,GAOXf,EAAY9W,UAAUgY,OAAS,SAAUvgB,EAAMwgB,EAAUC,GACrD,GAAI7F,GAAQ5I,KACR9M,EAAUjH,gBAAc,UACxBC,GAAI,aACJwiB,OACIlhB,MAASwS,KAAKsN,QAAQqB,cAAcnhB,MAAMiG,WAC1CtF,OAAU6R,KAAKsN,QAAQqB,cAAcxgB,OAAOsF,cAGhDmb,IAAeC,UAAQC,UAAUrb,WAAWhI,QAAQ,mBAAqB,EAC7EgjB,GAAc5e,oBAAkB4e,GAAeM,qBAAmBC,UAAYP,CAC9E,IAAIQ,GAAU,sFACVjP,KAAKsN,QAAQ/B,UAAU2D,UACvB,SACA9T,EAAML,OAAOoU,IAAIC,gBAAgB,GAAIC,MAAc,QAATrhB,GAAkBihB,KAC3D,GAAKK,gBAAiBC,kBAAkBvP,KAAKsN,QAAQ/B,aAAevd,KAAM,kBAC/E,IAAa,QAATA,EACAgS,KAAKwP,gBAAgBhB,EAAUxgB,EAAMoN,EAAKwT,OAEzC,CACD,GAAIa,GAAU,GAAIC,OACdC,EAAQzc,EAAQ0c,WAAW,KAC/BH,GAAQI,kBAGJ,GAFAF,EAAMG,UAAUL,EAAS,EAAG,GAC5B1U,OAAOoU,IAAIY,gBAAgB3U,GACd,QAATpN,EAAgB,CAChB,GAAIgiB,GAAa,GAAIC,eACjBC,EAAchd,EAAQid,UAAU,cAAc/f,QAAQ,aAAc,qBACxE4f,GAAWI,aAAa3B,YAAcA,EACtCyB,EAAcA,EAAY7W,MAAM6W,EAAYzkB,QAAQ,KAAO,GAC3DukB,EAAWK,MAAMC,MAAMC,SAAST,UAAU,GAAIU,aAAUN,GAAc,EAAG,EAAItH,EAAM0E,QAAQqB,cAAcnhB,MAAQ,GAAKob,EAAM0E,QAAQqB,cAAcxgB,QAC9IygB,IACAoB,EAAWS,KAAKjC,EAAW,QAC3BwB,EAAWU,eAIf9H,GAAM4G,gBAAgBhB,EAAUxgB,EAAMkF,EAAQid,UAAU,aAAa/f,QAAQ,YAAa,sBAAuBwe,IAGzHa,EAAQkB,IAAMvV,IAStBiS,EAAY9W,UAAUiZ,gBAAkB,SAAUhB,EAAUxgB,EAAMoN,EAAKwT,GACnE3iB,gBAAc,KACVyiB,OACIkC,SAAYpC,EAAW,IAAMxgB,EAAK6iB,oBAClClU,KAAQvB,KAEb0V,cAAc,GAAIC,YAAWnC,EAAa,QAAU,QACnDoC,KAAMjW,OACNkW,SAAS,EACTC,YAAY,MAGb7D,MJxHX,SAAW8D,GAEPA,EAAMC,eACF3kB,KAAM,OACNC,WAAY,SACZmC,MAAO,UACPlC,UAAW,SACXC,WAAY,6BAEjBukB,UAAUA,YKVb,IAAI1R,IAAwC,WACxC,GAAIC,GAAgB,SAAUrD,EAAG3L,GAI7B,OAHAgP,EAAgB7N,OAAO8N,iBAChBC,uBAA2B9N,QAAS,SAAUuK,EAAG3L,GAAK2L,EAAEuD,UAAYlP,IACvE,SAAU2L,EAAG3L,GAAK,IAAK,GAAImP,KAAKnP,GAAOA,EAAEoP,eAAeD,KAAIxD,EAAEwD,GAAKnP,EAAEmP,MACpDxD,EAAG3L,GAE5B,OAAO,UAAU2L,EAAG3L,GAEhB,QAASqP,KAAOC,KAAKC,YAAc5D,EADnCqD,EAAcrD,EAAG3L,GAEjB2L,EAAE9F,UAAkB,OAAN7F,EAAamB,OAAOqO,OAAOxP,IAAMqP,EAAGxJ,UAAY7F,EAAE6F,UAAW,GAAIwJ,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQlG,EAAKmG,GAC7E,GAA2HjE,GAAvHkE,EAAIC,UAAU9S,OAAQsJ,EAAIuJ,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOzO,OAAO4O,yBAAyBJ,EAAQlG,GAAOmG,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyB3J,EAAI0J,QAAQC,SAASP,EAAYC,EAAQlG,EAAKmG,OACpH,KAAK,GAAI7S,GAAI2S,EAAW1S,OAAS,EAAGD,GAAK,EAAGA,KAAS4O,EAAI+D,EAAW3S,MAAIuJ,GAAKuJ,EAAI,EAAIlE,EAAErF,GAAKuJ,EAAI,EAAIlE,EAAEgE,EAAQlG,EAAKnD,GAAKqF,EAAEgE,EAAQlG,KAASnD,EAChJ,OAAOuJ,GAAI,GAAKvJ,GAAKnF,OAAO+O,eAAeP,EAAQlG,EAAKnD,GAAIA,GAE5D6L,GAAkC,SAAUC,EAAG9P,GAC/C,GAAI+P,KACJ,KAAK,GAAIlD,KAAKiD,GAAOjR,OAAO0E,UAAUuJ,eAAetJ,KAAKsM,EAAGjD,IAAM7M,EAAEvH,QAAQoU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCjR,QAAOmR,sBAC3B,IAAK,GAAIvV,GAAI,EAAGoS,EAAIhO,OAAOmR,sBAAsBF,GAAIrV,EAAIoS,EAAEnS,OAAQD,IAASuF,EAAEvH,QAAQoU,EAAEpS,IAAM,IAC1FsV,EAAElD,EAAEpS,IAAMqV,EAAEjD,EAAEpS,IACtB,OAAOsV,IA4BPsO,GAAyB,SAAUvQ,GAKnC,QAASuQ,GAAQziB,EAASsE,GACtB,GAAI0V,GAAQ9H,EAAOtK,KAAKwJ,KAAMpR,EAASsE,IAAY8M,IAOnD,OALA4I,GAAM6F,YAAc,aAEpB7F,EAAMnF,gBAENmF,EAAMpD,oBAAqB,EACpBoD,EA6+BX,MAz/BAnJ,IAAU4R,EAASvQ,GAcnBuQ,EAAQ9a,UAAU+a,UAAY,WAC1B,GAAI1I,GAAQ5I,IAEZA,MAAK8K,SAAW/P,OAAa,OAC7BiF,KAAKgL,QFrEK,QEqEWja,QAASiP,KAAK8K,SAAW,KAAO9K,MAAQ,WACzD4I,EAAM2I,sBACN3I,EAAM4I,eACN5I,EAAM6I,YACN7I,EAAM8I,aACN9I,EAAM+I,gBAGdN,EAAQ9a,UAAUqb,OAAS,WACvBxO,GAAWC,WAAa,KACxBD,GAAWkJ,kBAAoB,KAC/BlJ,GAAWyO,cAAgB,KAC3B7R,KAAK8R,yBACL9R,KAAK+R,cACL/R,KAAKwK,WAAa7L,GAAcqB,KAAKpB,OACrCoB,KAAKgS,eACLhS,KAAKiS,YAAYjS,KAAKkS,cAAe,QAAS,KAAM,MAC/CriB,oBAAkBuT,GAAWC,cAC9BD,GAAWkJ,kBAAoBlJ,GAAWC,YAE9CrD,KAAKmS,sBAITd,EAAQ9a,UAAU4b,mBAAqB,WACnC,GACIC,GACAC,EACAC,EACAC,EAJA3J,EAAQ5I,IAKRA,MAAKwS,qBAAsBC,gBAC3BL,EAAapS,KAAKwS,WAClBH,EAAcrS,KAAK0S,gBAAiBC,SAAQ3S,KAAK0S,MAAQ,GAAIC,SAC3CP,EAAWQ,aAAaP,GAC9BQ,KAAK,SAAU7f,GACvB4V,EAAM4J,WAAaxf,EAAU,OAC7B4V,EAAMkK,2BAGL9S,KAAKwS,qBAAsBhQ,KAChC+P,EAAYvS,KAAKwS,YACjBF,EAAa,GAAIS,QAAKR,EAAU3P,YAAa2P,EAAUvkB,KAAMukB,EAAU9P,MAAO8P,EAAU7P,cAC7EsQ,UAAY,SAAUC,GAC7BrK,EAAM4J,WAAaU,KAAKC,MAAM,IAAMF,EAAO,KAAK,GAChDrK,EAAMkK,yBAEVR,EAAWc,KAAKb,EAAU5P,WAG1B3C,KAAK8S,yBAGbzB,EAAQ9a,UAAUuc,sBAAwB,WACtC9S,KAAKqT,iBACDrT,KAAKrC,qBAAuBqC,KAAK4D,eAAe0P,SAChDtT,KAAKrC,oBAAoB4V,eAE7BvT,KAAKzN,OAAO2Q,qBACZlD,KAAK9M,QAAQ9G,YAAY4T,KAAKuL,WAC9BvL,KAAKwT,gBACLxT,KAAKgL,QF5HO,UE4HWja,QAASiP,KAAK8K,SAAW,KAAO9K,OACvDA,KAAKyT,kBAETpC,EAAQ9a,UAAUkb,UAAY,WAC1B,GAAIzR,KAAKuL,UAAW,CAChB,KAAOvL,KAAKuL,UAAU3R,WAAWlM,OAAS,GACtCsS,KAAKuL,UAAUmI,YAAY1T,KAAKuL,UAAUoI,aAEzC3T,KAAKuL,UAAUqI,iBAAmB5T,KAAKuL,UAAUsI,YAClDtf,SAAOyL,KAAKuL,WAGhBvL,KAAK5O,iBAAiBsZ,eACtBoJ,sBAAoB9T,KAAK9M,QAAQhH,GAAK,iBAAkB,gBAE5D,KAAK,GAAIuB,GAAI,EAAGA,EAAIuS,KAAK3O,OAAO3D,OAAQD,IAChCuS,KAAK3O,OAAO5D,GAAGkd,gBACfmJ,sBAAoB9T,KAAK9M,QAAQhH,GAAK,kBAAmB,iBAGjE,IAAI6nB,GAAiB/T,KAAK9M,QAAQ/F,YAC9B6mB,EAAkBhU,KAAK9M,QAAQ9F,YACnC4S,MAAK2O,cAAgB,GAAIzhB,IAAK7B,EAAe2U,KAAKxS,MAAOumB,IAAmBA,GAAkB,IAAK1oB,EAAe2U,KAAK7R,OAAQ6lB,IAAoBA,GAAmB,KACtKhU,KAAKuL,UAAYvL,KAAK1R,SAASmjB,WAC3BvlB,GAAI8T,KAAK9M,QAAQhH,GAAK,OACtBsB,MAAOwS,KAAK2O,cAAcnhB,MAC1BW,OAAQ6R,KAAK2O,cAAcxgB,UAMnCkjB,EAAQ9a,UAAUgb,oBAAsB,WACpC,GAAwB,KAApBvR,KAAK9M,QAAQhH,GAAW,CACxB,GAAI6Q,GAAahR,SAASwR,uBAAuB,aAAa7P,MAC9DsS,MAAK9M,QAAQhH,GAAK,mBAAqB6Q,EAE3CiD,KAAK1R,SAAW,GAAIsB,eAAYoQ,KAAK9M,QAAQhH,IAC7C8T,KAAKzN,OAAS,GAAI0Q,IAAYjD,OAElCqR,EAAQ9a,UAAUub,uBAAyB,WACvC,GAAIxI,GAAevd,SAASC,eAAegU,KAAK9M,QAAQhH,GAAK,qBAI7D,IAHIod,GAAgBA,EAAa2K,kBAAoB,GACjD3K,EAAa/U,SAEb1E,oBAAkB9D,SAASC,eAAegU,KAAK9M,QAAQhH,GAAK,uBAAwB,CACpF,GAAIgoB,GAAmBjoB,gBAAc,OACjCC,GAAI8T,KAAK9M,QAAQhH,GAAK,qBACtBmH,OAAQ,iCAEZ2M,MAAK9M,QAAQ9G,YAAY8nB,KAGjC7C,EAAQ9a,UAAUid,cAAgB,WAC1BxT,KAAKrC,qBAAuBqC,KAAK4D,eAAe0P,SAAWtT,KAAKrC,oBAAoBwW,aAAenU,KAAKzN,OAAOgX,aAC/GvJ,KAAKuL,UAAU6I,aAAapU,KAAKzN,OAAOgX,YAAavJ,KAAKrC,oBAAoBwW,cAOtF9C,EAAQ9a,UAAUyb,aAAe,WAC7B,GAAIxkB,GAAQwS,KAAKmC,OAAO3U,MACpB6mB,EAAgBrU,KAAKuL,UAAUzY,cAAc,IAAMkN,KAAK9M,QAAQhH,GAAK,kBACzE,KAAK8T,KAAKmC,OAAO3U,MAAQ,GAAMwS,KAAKsU,YAActU,KAAKwK,WAAW1L,kBAAqBjP,oBAAkBwkB,GAAgB,CACrH,GAAIE,GAAa,GAAIrS,IAAWlC,KAAK9M,QAAQhH,GAAK,kBAAmB8T,KAAKsU,YAActU,KAAKwK,WAAW1L,gBAAiBkB,KAAKmC,OAAQ,EAAG,GAAIF,IAAKzU,EAAQ,EAAGA,EAAQ,EAAGwS,KAAK2O,cAAcnhB,MAAQA,EAAOwS,KAAK2O,cAAcxgB,OAASX,GACtOwS,MAAKuL,UAAUnf,YAAY4T,KAAK1R,SAASkmB,cAAcD,QAElDF,IACLA,EAAcva,aAAa,OAAQkG,KAAKsU,YAActU,KAAKwK,WAAW1L,kBAG9EuS,EAAQ9a,UAAU0b,YAAc,SAAUwC,EAAOzmB,EAAM0mB,EAAQC,GAC3D,GACIxmB,GADA7B,EAAQmoB,EAAMvL,UAGd1b,EAASwS,KAAK2O,cAAcnhB,MAAQwS,KAAK4U,OAAOC,MAAQ7U,KAAK4U,OAAO7nB,IAGxE,IAFA0nB,EAAMvL,UAAUtc,WAAaoT,KAAKwK,WAAW5d,YAAc6nB,EAAMvL,UAAUtc,WAC3E6nB,EAAMvL,UAAUzc,KAAOuT,KAAKwK,WAAWhe,UAAYioB,EAAMvL,UAAUzc,KAC/DgoB,EAAM7oB,KAAM,CACRiE,oBAAkB8kB,KAClBA,EAAW3U,KAAK1R,SAASkb,aAActd,GAAI8T,KAAK9M,QAAQhH,GAAK,iBAEjE,IAAI4oB,GAAeznB,EAASG,EAAOinB,EAAM7oB,KAAMU,GAC3CyoB,EAAcppB,EAAYmpB,EAAcxoB,GAExC0oB,EAAapnB,EADLiC,oBAAkB6kB,GAAW,GAAIzS,IAAKjC,KAAK4U,OAAO7nB,KAAMiT,KAAK4U,OAAO9nB,IAAKkT,KAAK2O,cAAcnhB,MAAOwS,KAAK2O,cAAcxgB,QAAUumB,EACxGD,EAAM3mB,UAAWinB,EAAa/mB,GAC9DY,EAAU,GAAI2T,IAAWvC,KAAK9M,QAAQhH,GAAK,YAAc8B,EAAMgnB,EAAW/mB,EAAG+mB,EAAW9mB,EAAG,QAAS4mB,GACpGG,EAAc,GAAIhT,IAAK+S,EAAW/mB,EAAG+mB,EAAW9mB,EAAG6mB,EAAYvnB,MAAOunB,EAAY5mB,QAClF+E,EAAUvE,EAAkBC,EAAStC,EAAOA,EAAMuC,QAAmB,UAATb,EAAmBgS,KAAKwK,WAAWzL,eAAiBiB,KAAKwK,WAAWxL,mBAAoB2V,EACxJzhB,GAAQ4G,aAAa,aAAc2a,EAAMS,aAAeT,EAAM7oB,MAC9DsH,EAAQ4G,aAAa,YAAakG,KAAKqL,UAAqB,UAATrd,EAAmB,EAAI,IAAIyF,aAChE,UAATzF,IAAqBymB,EAAMU,iBAAiBvpB,MAAmB,aAAToC,KACvDG,EAAU6R,KAAK2O,cAAcxgB,OAAS8mB,EAAY/mB,EAlBvC,GAkB0D8R,KAAK4U,OAAOQ,OACjFpV,KAAKlM,SAAW,GAAImO,IAAKjC,KAAK4U,OAAO7nB,KAAMkoB,EAAY/mB,EAnB5C,GAmB8DV,EAAOW,IAEvE,aAATH,GAAuBymB,EAAMU,iBAAiBvpB,KAC9CoU,KAAKiS,YAAYwC,EAAMU,iBAAkB,WAAYF,EAAaN,GAGlE3U,KAAKuL,UAAUnf,YAAYuoB,OAI/BxmB,GAAU6R,KAAK2O,cAAcxgB,OAAS6R,KAAK4U,OAAO9nB,IAAMkT,KAAK4U,OAAOQ,OACpEpV,KAAKlM,SAAW,GAAImO,IAAKjC,KAAK4U,OAAO7nB,KAAMiT,KAAK4U,OAAO9nB,IAAKU,EAAOW,IAG3EkjB,EAAQ9a,UAAU8c,eAAiB,WAC/B,GACIriB,GADA4X,EAAQ5I,IAGZ,IADAA,KAAKwS,WAAaxS,KAAKwS,YAClB3iB,oBAAkBmQ,KAAKwS,aAAexS,KAAKwS,WAAW9kB,OAAS,GAAKsS,KAAKxO,gBAAiB,CAQ3F,GAPA4R,GAAWC,cACXrD,KAAKwS,WAAW6C,IAAI,SAAU3jB,GAC1BA,EAAKkX,EAAMpX,iBAAoBE,EAAKkX,EAAMpX,iBAAoBE,EAAKkX,EAAMpX,iBAAiBiC,WACtF/B,EAAKkX,EAAMpX,mBAEnBwO,KAAK5O,iBAAiBG,UAAYyO,KAAK5O,iBAAiBG,WAAayO,KAAKxO,gBAC1EwO,KAAKsV,0BACsB,IAAvBtV,KAAK3O,OAAO3D,OAAc,CAC1B,GAAI6nB,GAAS,GAAI1jB,OACjB0jB,GAAc,MAAI,EAClBvkB,EAAOgP,KAAK5O,iBAAiBG,UAC7BgkB,EAAOvkB,KACP,KAASvD,EAAI,EAAGA,EAAIuS,KAAKwS,WAAW9kB,OAAQD,IAAK,CAC7C,GAAI2W,GAAQ3S,EAAauO,KAAKwS,WAAW/kB,IAAY,MACjDuS,MAAKwF,oBAAsBpB,GAASA,EAAM1W,OAAS,EACnD0W,EAAMiB,QAAQ,SAAUmQ,EAAaC,GAC7BD,EAAYxkB,IACZukB,EAAOvkB,GAAMmB,MACToR,WAAY,EAAGrS,KAAMskB,EAAYxkB,GAAO0kB,eAAgBF,EAAYxkB,GAAMyC,WAC1E/B,KAAM8jB,EAAaG,OAAQH,EAAY5M,EAAMpX,qBAMrDwO,KAAKwS,WAAW/kB,GAAGuD,IACnBukB,EAAOvkB,GAAMmB,MACToR,WAAY,EAAGrS,KAAM8O,KAAKwS,WAAW/kB,GAAGuD,GAAO0kB,eAAgB1V,KAAKwS,WAAW/kB,GAAGuD,GAAMyC,WAAY/B,KAAMsO,KAAKwS,WAAW/kB,GAC1HkoB,OAAQ3V,KAAKwS,WAAW/kB,GAAGuS,KAAKxO,mBAKhD4R,GAAWC,WAAWlR,KAAKojB,OAE1B,CACD,GAAIvV,KAAKwF,mBAAoB,CACzBpC,GAAWyO,iBACXzO,GAAWyO,cAAgBlO,YAAW3D,KAAKwS,WAAYpP,GAAWyO,eAAe,EACjF,KAAK,GAAIpkB,GAAI,EAAGA,EAAI2V,GAAWyO,cAAcnkB,OAAQD,IACjDuS,KAAK4V,wBAAwBxS,GAAWyO,cAAcpkB,GAAIA,EAE9D2V,IAAWC,WAAaD,GAAWyO,kBAGnC7R,MAAK6V,sBACDzS,GAAWC,WAAW3V,OAAS,GAC/BsS,KAAK8V,iBAAiB1S,GAAWC,WAAW3V,OAAS,EAG7DsD,GAAOgP,KAAK3O,OAAO,GAAGC,UAErB0O,KAAKwF,oBACNxF,KAAK+V,gBAAgB3S,GAAWC,WAAW,GAAGrS,GAAO,YAIjEqgB,EAAQ9a,UAAU+e,wBAA0B,WACxC,GAAIlR,EACJpE,MAAKwS,WAAaxS,KAAKwS,UACvB,KAAK,GAAI/kB,GAAI,EAAGA,EAAIuS,KAAKwS,WAAW9kB,OAAQD,IAAK,CAE7C,IADA2W,EAAQ3S,EAAauO,KAAKwS,WAAW/kB,IAAY,SACpC2W,EAAM1W,OAAQ,CACvBsS,KAAKwF,oBAAqB,CAC1B,OAEK/X,IAAMuS,KAAKwS,WAAW9kB,OAAS,IACpCsS,KAAKwF,oBAAqB,KAItC6L,EAAQ9a,UAAUqf,wBAA0B,SAAUlkB,EAAMwL,GACxD,GACI8Y,GAGAC,EAIA9b,EARAyO,EAAQ5I,KAGRmE,EAAU,GAAItS,QAEdb,EAAOgP,KAAK5O,iBAAiBG,UAAYyO,KAAK5O,iBAAiBG,UAAYyO,KAAKxO,eAMpF,IAFA2S,EAAU1S,EAAaC,IACvBskB,EAAY7R,EAAUA,EAAgB,OAAI,OACzB6R,EAAUtoB,OAAS,EAAG,CACnCyM,EAAMgK,EAAa,GACnB,KAAK,GAAI1W,GAAI,EAAGA,EAAIuS,KAAK3O,OAAO3D,OAAQD,IAChC0M,IAAQ6F,KAAK3O,OAAO5D,GAAG6D,YACf0O,KAAK3O,OAAO5D,GACpBwoB,EAAaxoB,EAGrB,KAAK,GAAI2E,GAAI,EAAGA,EAAI4jB,EAAUtoB,OAAQ0E,IAAK,CACvC4jB,EAAU5jB,GAAS,KAAI4jB,EAAU5jB,GAAGpB,GACpCglB,EAAU5jB,GAAmB,gBAAoB,IAAf6jB,EAAmBD,EAAU5jB,GAAS,KACpEV,EAAqB,eAAI,IAAMskB,EAAU5jB,GAAS,MAAK,EAC3D,IAAI8jB,GAAiBF,EAAU5jB,GAAmB,eAC9C+jB,MAAa,EACbD,GAAenmB,OAAO,KAAO,IAC7BomB,EAAaD,EAAejmB,MAAM,KAAKvC,OAAS,GAEpDsoB,EAAU5jB,GAAe,WAAIvC,oBAAkBomB,GAAcE,IAAenW,KAAK3O,OAAO3D,OAClFsS,KAAK3O,OAAO3D,OAASyoB,EAAaF,EACrB,IAAfA,IACAD,EAAU5jB,GAAW,OAAIV,GAE7BskB,EAAU5jB,GAAc,UAAI+H,EAC5B6b,EAAU5jB,GAAS,KAAI4jB,EAAU5jB,GACjC4jB,EAAU5jB,GAAc,WAAI,EAC5B4jB,EAAU5jB,GAAW,OAAI4jB,EAAU5jB,GAAG4N,KAAKxO,iBAE/CwkB,EAAU3Q,QAAQ,SAAUmQ,GACxB5M,EAAMgN,wBAAwBJ,EAAatY,KAGnD,GAAIA,IAAckG,GAAWyO,cAAcnkB,OAAS,EAAG,CAEnD,IAAK,GADD0oB,GAAahT,GAAWyO,cAAc,GAAG7R,KAAK3O,OAAO,GAAGC,WACnD6L,EAAI,EAAGA,EAAIiG,GAAWyO,cAAcnkB,OAAQyP,IACjD6Y,EAAYvkB,EAAa2R,GAAWyO,cAAc1U,IAAY,OACpD,IAANA,GAAW6Y,IACXA,EAAU3Q,QAAQ,SAAUmQ,GAAeY,EAAWjkB,KAAKqjB,KAC3DpS,GAAWyO,cAActJ,OAAOpL,EAAG,GACnCA,GAAK,EAGbiZ,GAAahT,GAAWyO,cAAc,GAAG7R,KAAK3O,OAAO,GAAGC,UACxD,KAAK,GAAI+kB,GAAI,EAAGA,EAAID,EAAW1oB,OAAQ2oB,IACnClS,EAAQnE,KAAK3O,OAAO,GAAGC,WAAa8kB,EACpCA,EAAWC,GAAW,OAAIlS,IAOtCkN,EAAQ9a,UAAUgX,MAAQ,SAAUrhB,GACd,GAAImhB,IAAYrN,MACtBuN,MAAMrhB,IAOtBmlB,EAAQ9a,UAAUgY,OAAS,SAAUvgB,EAAMwgB,EAAUC,GACjC,GAAIpB,IAAYrN,MACtBuO,OAAOvgB,EAAMwgB,EAAUC,IAGrC4C,EAAQ9a,UAAUsf,oBAAsB,WACpC7V,KAAKwS,WAAaxS,KAAKwS,UAIvB,KACK,GAJDlhB,GAEAglB,KAEK7oB,EAAI,EAAGA,EAAIuS,KAAK3O,OAAO3D,OAAS,EAAGD,IAAK,CAC7C6D,EAAY0O,KAAK3O,OAAO5D,GAAKuS,KAAK3O,OAAO5D,GAAG6D,UAAY0O,KAAK5O,iBAAiBG,SAC9E,IAAIglB,GAAQ,GAAI1kB,OAChB0kB,GAAa,MAAI9oB,EACjB8oB,EAAMjlB,MACN8R,GAAWC,WAAWlR,KAAKokB,EAC3B,KAAK,GAAInkB,GAAI,EAAGA,EAAI4N,KAAKwS,WAAW9kB,OAAQ0E,IAAK,CAC7C,GAAIojB,MACAgB,EAAY,EAChB,IAAIxW,KAAKwS,WAAWpgB,GAAGd,GAAY,CAC/B,GAAImlB,GAASzW,KAAKwS,WAAWpgB,GAAGd,EAChC,IAAU,IAAN7D,EACA,IAAK,GAAI0P,GAAI,EAAGA,GAAK1P,EAAG0P,IAAK,CACzB,GAAIuZ,GAAmB1W,KAAK3O,OAAO8L,GAAK6C,KAAK3O,OAAO8L,GAAG7L,UAAYA,CACnEklB,IAAcxW,KAAKwS,WAAWpgB,GAAGskB,IAAuBvZ,IAAM1P,EAAK,GAAK,KAG1E6oB,EAAW5oB,OAAS,IACG,IADC4oB,EAAW7qB,QAAQ+qB,GACjCC,KACZjB,EAAkB,KAAIiB,EACtBjB,EAA4B,gBAAK,GAA0BiB,GAAU,GACrEjB,EAAwB,WAAI/nB,EAC5B+nB,EAAuB,WAAI,EAC3BA,EAAuB,UAAIlkB,EAC3BkkB,EAAkB,KAAIxV,KAAKwS,WAAWpgB,GACtCgR,GAAWC,WAAWD,GAAWC,WAAW3V,OAAS,GAAG4D,GAAWa,KAAKqjB,GACxEc,EAAWnkB,KAAK,GAA0BskB,QAM9DpF,EAAQ9a,UAAUuf,iBAAmB,SAAUa,GAM3C,IAAK,GALDC,GACAC,EAAc7W,KAAK3O,OAAOslB,GAAS3W,KAAK3O,OAAOslB,GAAOrlB,UAAY0O,KAAK5O,iBAAiBG,UACxFulB,EAAW9W,KAAK3O,OAAOslB,EAAQ,GAAGrlB,UAClCkkB,EAAcpS,GAAWC,WAAWsT,GAAOE,GAC3CE,EAAe3T,GAAWC,WAAWsT,EAAQ,GAAGG,GAC3CrpB,EAAI,EAAGA,EAAI+nB,EAAY9nB,OAAQD,IAAK,CACzCmpB,EAAcpB,EAAY/nB,GAAmB,cAC7C,KAAK,GAAI2E,GAAI,EAAGA,EAAI2kB,EAAarpB,OAAQ0E,IAErC,GADA2kB,EAAa3kB,GAAGykB,GAAehnB,oBAAkBknB,EAAa3kB,GAAGykB,OAAqBE,EAAa3kB,GAAGykB,IACtC,IAA5DD,EAAYnrB,QAAQsrB,EAAa3kB,GAAmB,gBAAW,CAC3DvC,oBAAkB2lB,EAAY/nB,GAAW,UACzC+nB,EAAY/nB,GAAW,OAAIspB,EAAa3kB,IAE5C2kB,EAAa3kB,GAAGykB,GAAa1kB,KAAKqjB,EAAY/nB,GAC9C,QAIZuS,KAAK+V,gBAAgB3S,GAAWC,WAAWD,GAAWC,WAAW3V,OAAS,GAAGmpB,GAAc,SAC3FzT,GAAWC,WAAWkF,OAAOoO,EAAO,GAC/BA,EAAQ,EAAK,GACd3W,KAAK8V,iBAAiBa,EAAQ,IAGtCtF,EAAQ9a,UAAUwf,gBAAkB,SAAUjlB,EAAa9C,GAyBvD,IAAK,GAvBDoX,GAIAnV,EACAuT,EANAoF,EAAQ5I,KAORgX,EAAW,GAAInlB,QAgBfgY,EAAS7J,KACJvS,EAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,KAhB1B,SAAUA,GACpB2X,EAAc,EACd5B,EAAY1S,EAAYrD,GAAc,UACtCwC,EAAQa,EAAYrD,GAAmB,eAAEwC,MAAM,KAC/C4Z,EAAO2I,WAAWnN,QAAQ,SAAU3T,GAC5Bf,EAAeV,EAAOa,EAAYrD,GAAmB,eAAGiE,EAAMkX,KAC9DxD,GAAe6R,WAAWvlB,EAAKkX,EAAMpX,qBAGhC,WAATxD,IACAgpB,EAASxT,GAAa1S,EACtBA,EAAYrD,GAAW,OAAIupB,GAE/BlmB,EAAYrD,GAAW,OAAI2X,GAInB3X,IAMhB4jB,EAAQ9a,UAAUib,aAAe,WAC7B0F,eAAa3iB,OAAOyL,KAAK9M,QAAS,QAAS8M,KAAKmX,gBAChDD,eAAa3iB,OAAOyL,KAAK9M,QAAS,WAAY8M,KAAKoX,sBACnDF,eAAa3iB,OAAOyL,KAAK9M,QAAS,cAAe8M,KAAKqX,qBACtDH,eAAa3iB,OAAOyL,KAAK9M,QAAS2b,UAAQyI,gBAAiBtX,KAAKuX,oBAChEL,eAAa3iB,OAAOyL,KAAK9M,QAAS2b,UAAQ2I,eAAgBxX,KAAKyX,oBAC/DP,eAAa3iB,OAAOyL,KAAK9M,QAAS2b,UAAQ6I,cAAe1X,KAAK2X,mBAC9DT,eAAa3iB,OAAOyL,KAAK9M,QAAS,0BAA2B8M,KAAK4X,qBAClE7c,OAAO8c,oBAAoB,SAAU7X,KAAK8X,kBAK9CzG,EAAQ9a,UAAUmb,WAAa,WAC3BwF,eAAa5G,IAAItQ,KAAK9M,QAAS,QAAS8M,KAAKmX,eAAgBnX,MAC7DkX,eAAa5G,IAAItQ,KAAK9M,QAAS,WAAY8M,KAAKoX,qBAAsBpX,MACtEkX,eAAa5G,IAAItQ,KAAK9M,QAAS,cAAe8M,KAAKqX,oBAAqBrX,MACxEkX,eAAa5G,IAAItQ,KAAK9M,QAAS2b,UAAQyI,gBAAiBtX,KAAKuX,mBAAoBvX,MACjFkX,eAAa5G,IAAItQ,KAAK9M,QAAS2b,UAAQ2I,eAAgBxX,KAAKyX,mBAAoBzX,MAChFkX,eAAa5G,IAAItQ,KAAK9M,QAAS2b,UAAQ6I,cAAe1X,KAAK2X,kBAAmB3X,MAC9EkX,eAAa5G,IAAItQ,KAAK9M,QAAS,0BAA2B8M,KAAK4X,oBAAqB5X,MACpFjF,OAAOgd,iBAAiB,SAAU/X,KAAK8X,gBAAgBE,KAAKhY,QAKhEqR,EAAQ9a,UAAUob,WAAa,WAC3B3R,KAAK1F,KAAO,GAAI2d,yBAKpB5G,EAAQ9a,UAAUwb,YAAc,WAC5B/R,KAAK9M,QAAQ4G,aAAa,aAAckG,KAAKkV,aAAe,mBAC5DlV,KAAK9M,QAAQ4G,aAAa,WAAYkG,KAAKqL,SAAS5X,aAKxD4d,EAAQ9a,UAAUuhB,gBAAkB,SAAU9kB,GAC1C,GAAI4V,GAAQ5I,KACRiT,GACA/hB,KF3bQ,SE4bR0Z,QAAQ,EACRsN,aAAclY,KAAK2O,cACnBwJ,YAAa,GAAIjrB,IAAK,EAAG,GACzB6D,QAASiP,KAAK8K,SAAW,KAAO9K,KAEhCA,MAAK6N,UACLuK,aAAapY,KAAK6N,UAElB7N,KAAK9M,QAAQ2G,UAAUwe,SAAS,eAChCrY,KAAK6N,SAAWyK,WAAW,WACvB1P,EAAM4I,eACN5I,EAAM6I,YACN7I,EAAM2P,YAAa,EACnB3P,EAAM8I,aACNuB,EAAKkF,YAAcvP,EAAM+F,cACzB/F,EAAMoC,QF3cF,SE2ckBiI,EAAM,WACxBrK,EAAMgJ,YAEX,OAGXP,EAAQ9a,UAAU4gB,eAAiB,SAAUnkB,GACzC,GAEI2V,GAEA6P,EAHAC,EADYzlB,EAAEqN,OACOnU,GAIrBwsB,GAAc9N,QAAQ,EAAO1Z,KFrftB,QEqfmCH,QAASiP,KAAM2Y,WAAY3lB,GACrE4lB,GAAoBhO,QAAQ,EAAO1Z,KFtf5B,QEsfyCynB,WAAY3lB,EAEhE,IADAgN,KAAKgL,QFvfM,QEufShL,KAAK8K,SAAW8N,EAAkBF,GAClDD,EAAShtB,QAAQ,gBAAkB,EAAG,CAOtC,GANAuH,EAAE6lB,iBACFL,EAAYvB,WAAWwB,EAASxoB,MAAM,KAAK,IAC3C0Y,GACIiC,QAAQ,EAAO1Z,KFtgBR,YEsgByBH,QAASiP,KAAMnD,KAAMmD,KAAKzN,OAAOC,YAAYgmB,GAAYG,WAAY3lB,EACrGuQ,WAAYvD,KAAKzN,OAAOC,YAAYgmB,GAAuB,WAAGhV,UAAWxD,KAAKzN,OAAOC,YAAYgmB,GAAiB,MAElHxY,KAAK8K,SAAU,CACDnC,EAAU5X,OACxB4X,GADmD9F,GAAO8F,GAAY,YAG1E3I,KAAKgL,QF7gBM,YE6gBarC,GAE5B,GACImQ,GADAC,GAAM,GAAIC,OAAOC,iBAEhBppB,qBAAkBmQ,KAAKkZ,gBACnBrpB,oBAAkBipB,IAAoBC,EAAMD,EAAkB,KAC/D9Y,KAAKoX,qBAAqBpkB,GAE9B8lB,EAAkBC,IAG1B1H,EAAQ9a,UAAU6gB,qBAAuB,SAAUpkB,GAC/C,GAAImmB,IAAoBvO,QAAQ,EAAO1Z,KF1gBtB,cE0gByCH,QAASiP,KAAM2Y,WAAY3lB,GACjFomB,GAA0BxO,QAAQ,EAAO1Z,KF3gB5B,cE2gB+CynB,WAAY3lB,EAC5EgN,MAAKgL,QF5gBY,cE4gBShL,KAAK8K,SAAWsO,EAAwBD,IAGtE9H,EAAQ9a,UAAU8gB,oBAAsB,SAAUrkB,GAC9C,GAAIqmB,IAAmBzO,QAAQ,EAAO1Z,KF3gBtB,aE2gBwCH,QAASiP,KAAM2Y,WAAY3lB,GAC/EsmB,GAAyB1O,QAAQ,EAAO1Z,KF5gB5B,aE4gB8CynB,WAAY3lB,EAC1EgN,MAAKgL,QF7gBW,aE6gBShL,KAAK8K,SAAWwO,EAAuBD,IAGpEhI,EAAQ9a,UAAUghB,mBAAqB,SAAUvkB,GACzCA,EAAEqN,OAAOnU,GAAGT,QAAQ,gBAAkB,IACtCuU,KAAKuZ,WAAY,GAErBvZ,KAAKwZ,OAAO3K,UAAQyI,gBAAiBtkB,IAEzCqe,EAAQ9a,UAAUkhB,mBAAqB,SAAUzkB,GAC7C,GAEI2V,GACA8Q,EACA5c,EAHA4b,EADYzlB,EAAEqN,OACOnU,GAIrBwtB,GAAa9O,QAAQ,EAAO1Z,KFvhBjB,YEuhBkCH,QAASiP,KAAM2Y,WAAY3lB,GACxE2mB,GAAmB/O,QAAQ,EAAO1Z,KFxhBvB,YEwhBwCynB,WAAY3lB,EACnEgN,MAAKgL,QFzhBU,YEyhBShL,KAAK8K,SAAW6O,EAAiBD,EACzD,IAAItR,EACAqQ,GAAShtB,QAAQ,gBAAkB,IAEnC2c,EAAa3W,EADboL,EAAOmD,KAAKzN,OAAOC,YAAYykB,WAAWwB,EAASxoB,MAAM,KAAK,MACtB,OACxC+P,KAAK9M,QAAQ5G,MAAMstB,QAAW/c,EAAiB,YAAKuL,GAAcA,EAAW1a,OAAS,GAAKsS,KAAK/L,gBAC5F,UAAY,OAChB0U,GAAciC,QAAQ,EAAO1Z,KFpjBnB,WEojBmCH,QAASiP,KAAMnD,KAAMA,EAAM8b,WAAY3lB,GACpFymB,GAAoB7O,QAAQ,EAAO1Z,KFrjBzB,WEqjByC2L,KAAMA,EAAM8b,WAAY3lB,GAC3EgN,KAAKgL,QFtjBK,WEsjBahL,KAAK8K,SAAW2O,EAAkB9Q,IAE7D3I,KAAKwZ,OAAO3K,UAAQ2I,eAAgBxkB,IAExCqe,EAAQ9a,UAAUsjB,4BAA8B,SAAUC,EAAWjd,GAOjE,IAAK,GALDkd,GACA5c,EACAvR,EAEAouB,EADcnd,EAAqB,eACX5M,MAAM,KACzBgK,EAAK,EAAGggB,EAAKpoB,OAAOD,KAAKooB,GAAY/f,EAAKggB,EAAGvsB,OAAQuM,IAEtD+f,EADJ7c,EAAI8c,EAAGhgB,MACc6f,IACjBC,EAAaruB,SAASyR,EAAG,IACzBvR,EAAOkuB,EAGf,QAASC,WAAYA,EAAYG,kBAAmBtuB,EAAMouB,UAAWA,IAEzE3I,EAAQ9a,UAAU4jB,iCAAmC,SAAUL,EAAWM,EAAkBvd,EAAMwd,GAS9F,IAAK,GALDzuB,GAEA0uB,EACAC,EAFA1a,EAAI,EAGJ2a,EAAiBxa,KAAKzN,OAAOC,YAAY,GAAmB,eAAEvC,MAAM,KAAKvC,OACpE+sB,EAAI,EAAGA,EAAID,EAAgBC,IAChCF,EAAc,IAANE,EAAUL,EAA4B,UAAEK,GAAKF,EAAQ,IAAMH,EAA4B,UAAEK,EAErG5a,GAAI2a,EAAiB,EAAIA,EAAiB3a,CAC1C,KAAK,GAAI5F,GAAK,EAAGggB,EAAKpoB,OAAe,OAAEmO,KAAKzN,OAAOC,aAAcyH,EAAKggB,EAAGvsB,OAAQuM,KAC7EqgB,EAAaL,EAAGhgB,IACgC,eAAEhK,MAAM,KACrC,KAAOmqB,EAA4B,UAAE,KACpDxuB,EAAa,IAANiU,EAAUhQ,oBAAkB0qB,GAASA,EAAQH,EAA4B,UAAEva,GAC9Ewa,EAAcE,EAAQA,EAAQ,IAAMH,EAA4B,UAAEva,MACzDya,EAA2B,iBACpCta,KAAKyD,aAAatR,MAAOjB,KAAMopB,EAA2B,eAAG5oB,KAAM4oB,IAEnED,GAAc,IADdxa,GAEShD,EAAiB,aAEtB0d,EADA3uB,EAAOA,EAAO,IAAMwuB,EAA4B,UAAEva,IAMlE,OAAOwa,IAEXhJ,EAAQ9a,UAAUmkB,uCAAyC,SAAUN,EAAkBvd,EAAMpP,GACzF,GAAIktB,GACAC,EAAe,GAAI/oB,OAcvB,OAbQuoB,GAA6B,WAAI,IAC/Bpa,KAAKyD,aAAahW,GAAS,KAAc,aAC/CktB,EAAkB3a,KAAKyD,aAAahW,GAAS,KAAU,QAC5B,WAAI,EAC/BmtB,EAAaD,EAAgB3a,KAAKyD,aAAahW,GAAS,KAAa,aAC9DktB,GAEP3a,KAAKyD,aAAa8E,OAAO9a,EAAGuS,KAAKyD,aAAa/V,SAEzC0sB,EAA6B,aAAOpa,KAAKyD,aAAa/V,OAAS,GACjE0sB,EAA6B,aAAMvd,EAAiB,aACvD+d,EAAa/d,EAAgB,YAAMA,IAEhC+d,GAGXvJ,EAAQ9a,UAAUohB,kBAAoB,SAAU3kB,GAC5C,GAGImQ,GACA0X,EACAC,EAEArd,EAEAZ,EAGAkd,EAEAK,EACAW,EAfAnS,EAAQ5I,KACRgb,EAAYhoB,EAAEqN,OACdoY,EAAWuC,EAAU9uB,GAIrBmuB,GAAc,EAEdO,EAAe,GAAI/oB,QAGnBopB,EAAWjb,KAAK9M,QAAQhH,GAAK,YAAc8T,KAAKsE,WAAa,UAE7D4W,EAAalb,KAAK9M,QAAQhH,GAAK,uBAGnC,IAAIusB,EAAShtB,QAAQ,gBAAkB,GAAKuU,KAAK/L,kBAAoB+L,KAAKmb,eAAgB,CACtFnoB,EAAE6lB,iBACFpb,EAAQwZ,WAAWwB,EAASxoB,MAAM,KAAK,IACvC4M,EAAOmD,KAAKzN,OAAOC,YAAYiL,EAC/B,IAAIqc,GAAYkB,EAAU3uB,SAQ1B,IAPI2T,KAAKiE,mBACLmW,EAAmBpa,KAAK6Z,4BAA4BC,EAAWjd,GAC/Dkd,EAAaK,EAA6B,WACrCpa,KAAK8J,gBAA8C,IAA7BgQ,EAAU/pB,OAAO,SACxCsqB,EAAcra,KAAKma,iCAAiCL,EAAWM,EAAkBvd,EAAMwd,KAGpE,IAAvBra,KAAK3O,OAAO3D,SAAiBmP,EAAiB,YAAKpL,EAAaoL,GAAc,QAC9EpL,EAAaoL,GAAc,OAAEnP,OAAS,EAAG,CACzC,GAAIsS,KAAKyD,aAAa/V,OAAS,EAAG,CAC9BmP,EAAOwd,EAAcra,KAAKyD,aAAazD,KAAKyD,aAAa/V,OAAS,GAAS,KAAImP,CAC/E,KAAK,GAAIpP,GAAI,EAAGA,EAAIuS,KAAKyD,aAAa/V,OAAQD,IAAK,CAC/C,IAAKoC,oBAAkBkqB,GAAa,CAChC,GAAIqB,GAAcpb,KAAKyD,aAAa/V,MAEpC,IADAktB,EAAe5a,KAAK0a,uCAAuCN,EAAkBvd,EAAMpP,GAC/E2tB,IAAgBpb,KAAKyD,aAAa/V,OAAQ,CAC1CD,GAAK,CACL,QAGR,GAAIoP,EAAqB,iBAAMmD,KAAKyD,aAAahW,GAAS,OAAM4sB,GAAexqB,oBAAkBkqB,GAAa,CAC/E,IAAvBld,EAAiB,YAAWA,EAAa,OAAEA,EAAgB,oBAAc/K,QACzE+K,EAAgB,WAAMA,EAAkB,UACnCA,EAAgB,UAIjB+d,EAAa/d,EAAgB,YAAMA,GAHnC+d,EAAe/d,EAAa,SAOhCA,EAAgB,WAAI,EACpBA,EAAa,OAAa,WAAI,EAC9BA,EAAOA,EAAa,OACpB+d,EAAa/d,EAAgB,YAAMA,IAEvCmD,KAAKyD,aAAa8E,OAAO9a,EAAG,GAC5BA,GAAK,CACL,OAEKA,IAAMuS,KAAKyD,aAAa/V,OAAS,GAAKmC,oBAAkBkqB,KAC7Dld,EAAgB,WAAI,EACpB+d,EAAa/d,EAAgB,YAAMA,SAK3CA,GAAgB,WAAI,EACpB+d,EAAa/d,EAAgB,YAAMA,EAUvC,IARAge,GACIjQ,QAAQ,EAAO1Z,KFpuBX,aEouB6BH,QAASiP,KAAMnD,KAAM+d,EAAc1nB,QAAS8nB,EAC7EzX,WAAYvD,KAAKiE,kBAAiD,IAA7BjE,KAAKyD,aAAa/V,SAAiBmC,oBAAkBkqB,GACtF/Z,KAAKyD,aAAazD,KAAKyD,aAAa/V,OAAS,GAAS,KAAc,WAAImP,EAAiB,WAC7F2G,UAAWxD,KAAKiE,kBAAiD,IAA7BjE,KAAKyD,aAAa/V,SAAiBmC,oBAAkBkqB,GACrF/Z,KAAKyD,aAAazD,KAAKyD,aAAa/V,OAAS,GAAS,KAAQ,KAAImP,EAAW,KACjFwe,WAAwB,IAAZroB,EAAEsoB,MAA4BlT,WAAY,MAEtDpI,KAAK8K,SAAU,CACD+P,EAAW9pB,OACzB8pB,GADoDhY,GAAOgY,GAAa,YAG5E7a,KAAKgL,QF/uBG,aE+uBiB6P,EAAY,SAAU5P,GAC3CrC,EAAM/E,aAAehH,EAAgB,WAAKhN,oBAAkBkqB,GAAcld,EAAiB,YACrFhN,oBAAkBkqB,IAAenR,EAAM3E,kBAAoBpH,EAAgB,UAAKkd,EAAa,KAC9F9O,EAAaL,SACV7e,SAASC,eAAeivB,IACxBlvB,SAASC,eAAeivB,GAAU1mB,SAEtC4O,EAAYQ,YAAWiF,EAAM9U,SAAUqP,GAAW,GAC9CyF,EAAMhF,eAAe0P,UAAYzjB,oBAAkB+Y,EAAMjL,uBACpD9N,oBAAkB+qB,KACnBhS,EAAMjL,oBAAoBwW,YAAYoH,YAAc,GACpD3S,EAAMjL,oBAAoBwW,YAAc,KACxCvL,EAAMjL,oBAAoB6d,eAAiB,EAC3C5S,EAAMjL,oBAAoB8d,gBAAkB,EACxC7S,EAAM3E,mBAAqBpU,oBAAkBkqB,GAC7CnR,EAAM8S,oBACFxqB,KAAM0X,EAAMnF,aAAamF,EAAMnF,aAAa/V,OAAS,GAAS,KAAkB,eAChFgE,KAAMkX,EAAMnF,aAAamF,EAAMnF,aAAa/V,OAAS,GAAS,MAIlEkb,EAAM8S,oBAAuBxqB,KAAM2L,EAAqB,eAAGnL,KAAMmL,GAErE+L,EAAMjL,oBAAoB4V,gBAE9BpQ,EAAatT,oBAAkB+Y,EAAMzF,WAA+BA,EAAlByF,EAAMzF,WAExDpX,SAASC,eAAekvB,IACxBnvB,SAASC,eAAekvB,GAAY3mB,SAEnC1E,oBAAkBob,EAAa7C,aAAgB6C,EAAaL,QAI7DhC,EAAMrW,OAAOuR,qBAAqB8W,EAAczX,GAChDyF,EAAMrW,OAAOwR,kBAAkB6W,IAJ/BhS,EAAMrW,OAAO4V,gBAAgB8C,EAAa7C,eAQtD0S,GAAalQ,QAAQ,EAAO1Z,KFjxBtB,WEixBsCH,QAASiP,KAAMxN,YAAawN,KAAKzN,OAAOC,aACpFuoB,GAAmBnQ,QAAQ,EAAO1Z,KFlxB5B,WEkxB4CsB,YAAawN,KAAKzN,OAAOC,aAC3EwN,KAAKgL,QFnxBC,WEmxBiBhL,KAAK8K,SAAWiQ,EAAiBD,IAE/CT,GAAexqB,oBAAkBkqB,IAClC/Z,KAAKyD,aAAatR,MAAOjB,KAAM2L,EAAqB,eAAGnL,KAAMmL,KAK7EmD,KAAKuZ,WAAY,EACjBvZ,KAAKwZ,OAAO3K,UAAQ6I,cAAe1kB,IAEvCqe,EAAQ9a,UAAUqhB,oBAAsB,SAAU5kB,GAC1CgN,KAAK2b,sBACL3b,KAAK2b,qBAAqBC,gBAE1B5b,KAAKrC,qBACLqC,KAAKrC,oBAAoBke,2BAE7BpiB,EAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoByC,MACtFA,KAAK8b,yBACLhf,EAAYkD,KAAK8b,uBAAuBC,yBAA0B,aAClE/b,KAAK8b,uBAAuBE,YAAc,KAQlD3K,EAAQ9a,UAAU0lB,gBAAkB,WAChC,GAAIC,KAyBJ,OAxBIlc,MAAKmc,gBAAgB7I,SACrB4I,EAAQ/pB,MACJiqB,OAAQ,iBACRnJ,MAAOjT,QAGXA,KAAKqc,kBAAkBC,QACvBJ,EAAQ/pB,MACJiqB,OAAQ,mBACRnJ,MAAOjT,QAGXA,KAAKuc,kBAAkBD,QACvBJ,EAAQ/pB,MACJiqB,OAAQ,mBACRnJ,MAAOjT,QAGXA,KAAK4D,eAAe0P,SACpB4I,EAAQ/pB,MACJiqB,OAAQ,gBACRnJ,MAAOjT,QAGRkc,GAMX7K,EAAQ9a,UAAUimB,kBAAoB,SAAUC,EAASC,GAErD,IAAK,GADD9K,IAAS,EACJ3X,EAAK,EAAGggB,EAAKpoB,OAAOD,KAAK6qB,GAAUxiB,EAAKggB,EAAGvsB,OAAQuM,IAExD,OADWggB,EAAGhgB,IAEV,IAAK,aACD+F,KAAKgS,cACL,MACJ,KAAK,SACL,IAAK,QACL,IAAK,aACL,IAAK,SACL,IAAK,gBACL,IAAK,kBACL,IAAK,mBACL,IAAK,iBACDJ,GAAS,EAIjBA,IACA5R,KAAKyR,YACLzR,KAAK4R,WAMbP,EAAQ9a,UAAUomB,cAAgB,WAC9B,MAAO,WAKXtL,EAAQ9a,UAAUma,QAAU,WACxB1Q,KAAKwR,eACL1Q,EAAOvK,UAAUma,QAAQla,KAAKwJ,OAMlCqR,EAAQ9a,UAAUqmB,eAAiB,WAC/B,MAAO,IAEXzc,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,YAAS,IAC/B4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,aAAU,IAChC4J,IACImB,aAAYT,KACbwQ,EAAQ9a,UAAW,aAAU,IAChC4J,IACImB,aAAYJ,KACbmQ,EAAQ9a,UAAW,aAAU,IAChC4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,iBAAc,IACpC4J,IACIa,WAAS,aACVqQ,EAAQ9a,UAAW,YAAS,IAC/B4J,IACImB,aAAYC,KACb8P,EAAQ9a,UAAW,oBAAiB,IACvC4J,IACIa,WAAS,eACVqQ,EAAQ9a,UAAW,iBAAc,IACpC4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,iBAAc,IACpC4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,YAAS,IAC/B4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,sBAAmB,IACzC4J,IACIa,WAAS,KACVqQ,EAAQ9a,UAAW,0BAAuB,IAC7C4J,IACIa,WAAS,KACVqQ,EAAQ9a,UAAW,0BAAuB,IAC7C4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,qBAAkB,IACxC4J,IACIa,gBACDqQ,EAAQ9a,UAAW,cAAW,IACjC4J,IACIa,WAAS,uBACVqQ,EAAQ9a,UAAW,sBAAmB,IACzC4J,IACIa,YAAS,IACVqQ,EAAQ9a,UAAW,sBAAmB,IACzC4J,IACIa,YAAS,IACVqQ,EAAQ9a,UAAW,uBAAoB,IAC1C4J,IACIa,WAAS,QACVqQ,EAAQ9a,UAAW,0BAAuB,IAC7C4J,IACIa,YAAS,IACVqQ,EAAQ9a,UAAW,oBAAiB,IACvC4J,IACImB,aAAYI,KACb2P,EAAQ9a,UAAW,uBAAoB,IAC1C4J,IACImB,aAAYK,KACb0P,EAAQ9a,UAAW,uBAAoB,IAC1C4J,IACIyB,gBAAeI,KAChBqP,EAAQ9a,UAAW,aAAU,IAChC4J,IACImB,aAAYS,KACbsP,EAAQ9a,UAAW,wBAAqB,IAC3C4J,IACImB,aAAYQ,KACbuP,EAAQ9a,UAAW,wBAAqB,IAC3C4J,IACImB,aAAYO,KACbwP,EAAQ9a,UAAW,sBAAmB,IACzC4J,IACImB,aAAYG,KACb4P,EAAQ9a,UAAW,qBAAkB,IACxC4J,IACIa,YAAS,IACVqQ,EAAQ9a,UAAW,2BAAwB,IAC9C4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,kBAAe,IACrC4J,IACIa,WAAS,IACVqQ,EAAQ9a,UAAW,eAAY,IAClC4J,IACIa,WAAS,OACVqQ,EAAQ9a,UAAW,aAAU,IAChC4J,IACI0c,WACDxL,EAAQ9a,UAAW,WAAQ,IAC9B4J,IACI0c,WACDxL,EAAQ9a,UAAW,kBAAe,IACrC4J,IACI0c,WACDxL,EAAQ9a,UAAW,aAAU,IAChC4J,IACI0c,WACDxL,EAAQ9a,UAAW,oBAAiB,IACvC4J,IACI0c,WACDxL,EAAQ9a,UAAW,iBAAc,IACpC4J,IACI0c,WACDxL,EAAQ9a,UAAW,eAAY,IAClC4J,IACI0c,WACDxL,EAAQ9a,UAAW,mBAAgB,IACtC4J,IACI0c,WACDxL,EAAQ9a,UAAW,oBAAiB,IACvC4J,IACI0c,WACDxL,EAAQ9a,UAAW,uBAAoB,IAC1C4J,IACI0c,WACDxL,EAAQ9a,UAAW,gBAAa,IACnC4J,IACI0c,WACDxL,EAAQ9a,UAAW,eAAY,IAClC4J,IACI0c,WACDxL,EAAQ9a,UAAW,YAAS,IAC/B4J,IACI0c,WACDxL,EAAQ9a,UAAW,kBAAe,IACrC4J,IACI0c,WACDxL,EAAQ9a,UAAW,iBAAc,IACpC4J,IACI0c,WACDxL,EAAQ9a,UAAW,gBAAa,IACnC4J,IACI0c,WACDxL,EAAQ9a,UAAW,aAAU,IAChC4J,IACI0c,WACDxL,EAAQ9a,UAAW,0BAAuB,IAC7C4J,IACI0c,WACDxL,EAAQ9a,UAAW,sBAAmB,IACzC8a,EAAUlR,IACN2c,yBACDzL,IAEL0L,aAKE3Z,GAA4B,WAC5B,QAASA,MAET,MAAOA,MC5jCPP,GAAkC,SAAUC,EAAG9P,GAC/C,GAAI+P,KACJ,KAAK,GAAIlD,KAAKiD,GAAOjR,OAAO0E,UAAUuJ,eAAetJ,KAAKsM,EAAGjD,IAAM7M,EAAEvH,QAAQoU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCjR,QAAOmR,sBAC3B,IAAK,GAAIvV,GAAI,EAAGoS,EAAIhO,OAAOmR,sBAAsBF,GAAIrV,EAAIoS,EAAEnS,OAAQD,IAASuF,EAAEvH,QAAQoU,EAAEpS,IAAM,IAC1FsV,EAAElD,EAAEpS,IAAMqV,EAAEjD,EAAEpS,IACtB,OAAOsV,IAUPia,GAA+B,WAC/B,QAASA,GAAcjsB,GACnBiP,KAAKid,KAAO,EACZjd,KAAKkd,iBAAmB,GAAIjb,IAAK,EAAG,EAAG,EAAG,GAC1CjC,KAAKmd,YAAc,EACnBnd,KAAKyb,gBAAkB,EACvBzb,KAAKwb,eAAiB,EACtBxb,KAAKod,aAAe,EACpBpd,KAAKqd,6BACLrd,KAAKsd,eAAiB,GAAIrb,IAAK,EAAG,EAAG,EAAG,GACxCjC,KAAKjP,QAAUA,EACfiP,KAAK+X,mBA47BT,MAv7BAiF,GAAczmB,UAAUgd,aAAe,WACnC,GAAI3K,GAAQ5I,IACZA,MAAKud,8BACLvd,KAAKpC,qBACLoC,KAAKwd,eACLxd,KAAKyd,cACLzd,KAAK0d,cAAgB,EACrB1d,KAAKwb,eAAiB,EACtBxb,KAAKyb,gBAAkB,EACvBzb,KAAK2d,YAAc3d,KAAKjP,QAAQzC,SAASsvB,aACzC5d,KAAKjP,QAAQwa,UAAUnf,YAAY4T,KAAK2d,YACxC,IAAIhV,EAKJ,IAJAA,GACIiC,QAAQ,EAAO1Z,KHyCE,kBGzCqBH,QAASiP,KAAKjP,QAAS8sB,gBAAiB7d,KAAKjP,QAAQ6S,eAAerX,SAC1GA,SAAUyT,KAAKjP,QAAQ6S,eAAerX,UAEtCyT,KAAKjP,QAAQ+Z,SAAU,CACTnC,EAAU5X,OACxB4X,GADmD9F,GAAO8F,GAAY,YAG1E3I,KAAKjP,QAAQia,QHkCQ,kBGlCiBrC,EAAW,SAAUsC,GAClDA,EAAaL,QAAUK,EAAa4S,kBAAoBjV,EAAM7X,QAAQ6S,eAAerX,WACtFqc,EAAM7X,QAAQ6S,eAAerX,SAAW0e,EAAa4S,iBAEzDjV,EAAMkV,wBACFlV,EAAMhL,kBAAkBlQ,OAAS,GACjCkb,EAAMmV,gBAMlBf,EAAczmB,UAAUunB,sBAAwB,WAC5C,GAAIlV,GAAQ5I,KACRjP,EAAUiP,KAAKjP,QACfitB,EAASjtB,EAAQ6S,cAMrB,IALA5D,KAAKie,4BAA4B7a,GAAWC,WAAW,KAClDrD,KAAKjP,QAAQ4b,QAAQjf,OAAS,IAAMmC,oBAAkBmQ,KAAKjP,QAAQ2b,kBAC/B,IAAlC1M,KAAKpC,kBAAkBlQ,QAC1BsS,KAAKke,uBAAuB9a,GAAWC,WAAW,GAAI,UAEtDrD,KAAKpC,kBAAkBlQ,OAAS,EAAG,CACnC,GAEInB,GAAWyxB,EAAOzxB,SAClB4xB,EAAcH,EAAOvJ,MAAM7oB,KAC3BwyB,EAAiBJ,EAAOK,WACxBC,EAAaN,EAAO/rB,KACpB6J,EAAS,EACTC,EAAS,EACTwiB,EAAQ,EACRC,EAAQ,EACR3iB,EAAcmiB,EAAOniB,YACrBD,EAAaoiB,EAAOpiB,WACpB6iB,KACAjT,KACAkT,EAAwC,SAAvBV,EAAOvP,YAAyC,QAAbliB,GAAmC,WAAbA,GACzD,SAAbA,GAAuBwE,EAAQ4d,cAAcnhB,OAASuD,EAAQ4d,cAAcxgB,OAC9E,aAAe,WAAc6vB,EAAOvP,YAItCkQ,EAAeX,EAAOxwB,MAAME,OAAS,EAAMswB,EAAOxwB,MAAM/B,QAAQ,MAAQ,EAAMsF,EAAQ4d,cAAcnhB,MAAQ,IAC1GypB,WAAW+G,EAAOxwB,OAASypB,WAAW+G,EAAOxwB,OAAS,KACxDoxB,EAAgBZ,EAAO7vB,OAAOT,OAAS,EAAMswB,EAAO7vB,OAAO1C,QAAQ,MAAQ,EAC1EsF,EAAQ4d,cAAcxgB,OAAS,IAAO8oB,WAAW+G,EAAO7vB,QAAU8oB,WAAW+G,EAAO7vB,QAAU,IACnGiwB,GAAexxB,WAAamE,EAAQyZ,WAAW5d,YAAcwxB,EAAexxB,WAC5EwxB,EAAe3xB,KAAOsE,EAAQyZ,WAAWhL,gBAAkB4e,EAAe3xB,IAC1E,IAAIoyB,GAAkBlzB,EAAYwyB,EAAaC,GAC3CU,EAAW,EACXC,EAAW,EACXC,EAAehB,EAAOgB,YAGNhB,GAAO9U,UACRlJ,KAAKpC,kBAAkBlQ,MAG1C,IAFAswB,EAAO9U,UAAUzc,KAAOsE,EAAQyZ,WAAWhL,gBAAkBwe,EAAO9U,UAAUzc,KAC9EuxB,EAAO9U,UAAUtc,WAAamE,EAAQyZ,WAAW5d,YAAcoxB,EAAO9U,UAAUtc,WAC7D,YAAf0xB,EAA0B,CAC1BK,EAAe9uB,oBAAkB8uB,GAAgB5tB,EAAQ+C,SAAStG,MAAQmxB,EAC1EC,EAAgB/uB,oBAAkB+uB,GAAiB7tB,EAAQ+C,SAAS3F,OAASywB,CAE7E,KAAK,GADDxsB,GAAI,EACC3E,EAAI,EAAGA,EAAIuS,KAAKpC,kBAAkBlQ,OAAQD,IAAK,CACpD,GAAIwxB,GAAajf,KAAKpC,kBAAkBnQ,EACpCoC,qBAAkBmQ,KAAKyd,WAAWzd,KAAKid,SACvCjd,KAAKyd,WAAWzd,KAAKid,OAAUiC,KAAOlf,KAAKid,KAAO,EAAIrb,eAE1D,IAAIud,GAAiBxzB,EAAYszB,EAAuB,WAAGjB,EAAO9U,UAElE,IADAlJ,KAAKod,aAAerpB,KAAKoT,IAAInH,KAAKod,aAAc+B,EAAe3xB,OACrD,IAANC,EACAqxB,EAAWhjB,EA/BL,GA+B8BF,EAAa,EACjDmjB,EAAWhjB,EA/BN,GA+B4B8iB,EAAgB1wB,QAAU0N,EAAcsjB,EAAehxB,OAAS0N,EAAc,EACxGsjB,EAAehxB,OAAS,OAE9B,CACD,GAAIixB,GAAWD,EAAehxB,OAAS0N,EAAesjB,EAAehxB,OAAS0N,CAC9E,IAAsB,eAAlB6iB,EAAgC,CAChC,GAAIW,GAAiB7T,EAAapZ,EAAI,GAAGnE,EAAIud,EAAapZ,EAAI,GAAG5E,MAtD/D,GAsDsFoO,CACxF,IAAKyjB,EAAgBL,EAAeG,EAAe3xB,MAASmxB,EAAa,CACrE,GAAIW,IAAiB9T,EAAapZ,EAAI,GAAGlE,EAAKuwB,EAAcrsB,EAAI,GAAGlE,EAAK2N,EAAc,EAClF2P,EAAapZ,EAAI,GAAGlE,EAAKuwB,EAAcrsB,EAAI,GAAGlE,EAAK2N,EAAc,GAxCxE,EAyCQyjB,GAAgBF,EAAWR,GAC5B5e,KAAKuf,iBACLntB,EAAI,EACJqsB,KACAjT,KACA1P,EAASgjB,EACT/iB,EAASgjB,IAGTjjB,EAAU2iB,EAAc,GAAK,EAC7B1iB,EAAUujB,EAAiBF,EAAU,OAIzCtjB,GAAUujB,EAAiBzjB,EAAa,EACxCG,EAAU0iB,EAAcrsB,EAAI,GAAIlE,MAGnC,CACD,GAAIsxB,GAAgBhU,EAAapZ,EAAI,GAAGlE,EAAIuwB,EAAcrsB,EAAI,GAAGlE,EAAK2N,EAAc,EAChF2P,EAAapZ,EAAI,GAAGlE,EAAIuwB,EAAcrsB,EAAI,GAAGlE,EAAK2N,EAAc,CACpE,IAAK2jB,EA9DJ,GA8DiCJ,EAAWR,EAAc,CACvD,GAAIa,GAAiBjU,EAAapZ,EAAI,GAAGnE,EAAI+R,KAAKod,aAhFpD,EAiFOqC,GAAgBT,EAAeG,EAAe3xB,MAASmxB,GACxD7iB,EAASgjB,EACT/iB,EAASgjB,EACTvT,KACAiT,KACAze,KAAKuf,iBACLntB,EAAI,IAGJ0J,EAAS2jB,EAAiB7jB,EAAa,EACvCG,EAAU0iB,EAAc,GAAK,OAIjC3iB,GAAS2iB,EAAcrsB,EAAI,GAAGnE,EAC9B8N,EAASyjB,EA/EZ,GA+E0C3jB,EAAc,GAIjE0iB,EAAQziB,EAAUF,EAAa,EAAKojB,EACpCR,EAAQziB,EAAUojB,EAAehxB,OAAS,EAC1CswB,EAActsB,MAAOlE,EAAG6N,EAAQ5N,EAAG6N,IACnCyP,EAAarZ,MAAOlE,EAAGswB,EAAOrwB,EAAGswB,EAAOhxB,MAAO2xB,EAAe3xB,MAAOW,OAASgxB,EAAehxB,OAAS,IACtG6R,KAAKyd,WAAWzd,KAAKid,MAAkB,WAAE9qB,MACrCutB,YAAaT,EAAuB,WAAG/rB,QAAS+rB,EAA4B,gBAC5EU,OAAS1xB,EAAG6N,EAAQ5N,EAAG6N,GACvB6jB,MAAQ3xB,EAAGswB,EAAOrwB,EAAGswB,GACrBqB,KAAMZ,EAAuB,WAC7Ba,KAAMb,EAAuB,WAC7Bhd,MACIhU,EAAGwwB,EAAcrsB,GAAGnE,EAAK2N,EAAa,EACtC1N,EAAIuwB,EAAcrsB,GAAGlE,EAAK2N,EAAc,EAAO2iB,EAAQW,EAAehxB,OACjEswB,EAAcrsB,GAAGlE,EAAK2N,EAAc,EAAO2iB,EAAQW,EAAehxB,OACvEX,MAAOuG,KAAKC,IAAKyqB,EAAcrsB,GAAGnE,EAAK2N,EAAa,GAAO2iB,EAAQY,EAAe3xB,QAClFW,OAAU0N,EAAcsjB,EAAehxB,OAAU0N,EAAcsjB,EAAehxB,UAGtFiE,IAEJ,GAAI2K,GAAaiD,KAAKyd,WAAW,GAAe,UAChD1gB,GAAWsI,QAAQ,SAAU0a,EAAWtiB,GACpC,GAAIuiB,GAAa,GAAI/d,IAAK8d,EAAgB,KAAK,EAAGA,EAAgB,KAAK,EAAGA,EAAgB,KAAS,MAAGA,EAAgB,KAAU,OAClH,KAAVtiB,IACAqhB,EAAWkB,EAAW/xB,EACtB8wB,EAAWiB,EAAW9xB,GAE1B0a,EAAM4S,eAAiBznB,KAAKoT,IAAIyB,EAAM4S,eAAgBznB,KAAKC,IAAI8qB,GAAYkB,EAAW/xB,EAAI+xB,EAAWxyB,SACrGob,EAAM6S,gBAAkB1nB,KAAKoT,IAAIyB,EAAM6S,gBAAiB1nB,KAAKC,IAAI+qB,GAAYiB,EAAW9xB,EAAI8xB,EAAW7xB,YAE3GwwB,EAAgB3e,KAAKwb,eAAiBmD,EAAe3e,KAAKwb,eAAiBmD,EAC3EC,EAAiB5e,KAAKyb,gBAAkBmD,EAAgB5e,KAAKyb,gBAAkBmD,EAC/E5e,KAAKsd,gBACDrvB,EAAG8O,EAAW,GAAS,KAAK,EAAG7O,EAAG6O,EAAW,GAAS,KAAK,EAC3DvP,MAAOmxB,EAAaxwB,OAAQywB,OAG/B,CACD,GACIqB,GACAC,EAFAC,EAAkBnC,EAAO9U,UAGzBkX,EAAiBpgB,KAAKpC,kBAAkBlQ,MAC5CuyB,GAAiC,eAAlBvB,EAAmC7uB,oBAAkB8uB,GAAiB5tB,EAAQ+C,SAAStG,MAAQ4yB,EACzGzB,EAAcyB,EAAmBvwB,oBAAkB8uB,GAhJ1C,GAgJwEA,EACtFuB,EAAkC,eAAlBxB,EAAmC7uB,oBAAkB+uB,GAjJvD,GAiJsFA,EAC/F/uB,oBAAkB+uB,GAAkB7tB,EAAQ+C,SAAS3F,OAASiyB,EAAmBxB,EAAewB,EACrGtB,EAAW,EACXC,EAAWF,EAAgB1wB,OAjIjB,EAyIV,KAAK,GANDkyB,GAAYrC,EAAOvT,cACnB6V,EAAa,EACbC,EAAa,EACbC,EAAcxC,EAAOyC,iBACrBC,EAAgB,EAChBC,EAAe,EACVlzB,EAAI,EAAGA,EAAIuS,KAAKpC,kBAAkBlQ,OAAQD,IAAK,CACpDqxB,EAA8B,eAAlBJ,EAAmCI,EAAWmB,EAAenB,EACzEC,EAA8B,eAAlBL,EAAkCK,EAAYA,EAAWmB,CACrE,IAAIU,GAAa5gB,KAAKpC,kBAAkBnQ,GAAe,WACnDozB,EAAe,GAAI3zB,IAAK,EAAG,EACX,UAAhBszB,EACAK,EAAel1B,EAAYi1B,EAAYT,GAElB,SAAhBK,EAELK,EAAel1B,EADfi1B,EAAavzB,EAA4B,eAAlBqxB,EAAiCuB,EAAcC,EAAeU,EAAYT,GAC1DA,GAGvCS,EAAa,GAEjBF,EAAgB3sB,KAAKoT,IAAIuZ,EAAeG,EAAa1yB,QACrDwyB,EAAe5sB,KAAKoT,IAAIwZ,EAAcE,EAAarzB,OAC/CqzB,EAAarzB,MAAQ,GAAKqzB,EAAa1yB,OAAS,IAC1B,eAAlBuwB,GACAH,EAAQO,EAAYmB,EAAc,EAClCzB,EAAuB,UAAd6B,EAA0BtB,EAAWmB,EAAgBW,EAAa1yB,OAAS,EA3B5E,GA4BH4wB,EA5BG,KA+BRR,EAAuB,UAAd8B,EAAyBvB,EAAY+B,EAAarzB,MAAQ,EA/B3D,GAgCDsxB,EAAWmB,EAAcY,EAAarzB,MAAQ,EAhC7C,GAiCRgxB,EAAQO,EAAYmB,EAAe,EAAMW,EAAa1yB,OAAS,IAG7D,IAANV,IACA6yB,EAAgC,eAAlB5B,EAAkCI,EAA0B,UAAduB,EACxD9B,EAASsC,EAAarzB,MAAQ,EAAKsxB,EACvCyB,EAAgC,eAAlB7B,EAAiD,UAAd2B,EAAyBtB,EACtEP,EAASqC,EAAa1yB,OAAS,EAAK4wB,GAExCtxB,IAAM2yB,EAAiB,IACvBzB,EAAiC,eAAlBD,EAAkC3qB,KAAKC,IAAK8qB,EAAWmB,EAAeK,GAChFL,EAAcU,EA5CP,GA6CZ/B,EAAkC,eAAlBF,EAAmCwB,EAAgBQ,EAAgB,EA7CvE,GA8CR3sB,KAAKC,IAAK+qB,EAAWmB,EAAgBK,IAE7CvgB,KAAKud,2BAA2BprB,MAC5BxC,KAAMqQ,KAAKpC,kBAAkBnQ,GAAe,WAAGQ,EAAG6wB,EAAU5wB,EAAG6wB,EAC/DvxB,MAAOyyB,EAAa9xB,OAAQ+xB,EAAchtB,QAAS8M,KAAKpC,kBAAkBnQ,GAAoB,gBAC9F7B,KAAMg1B,EAAYrC,MAAOA,EAAOC,MAAOA,EACvCsC,UAAWD,EAAarzB,MAAOuzB,WAAYF,EAAa1yB,OACxDuD,KAAMsO,KAAKpC,kBAAkBnQ,GAAe,aAGpDuS,KAAKsd,gBAAmBrvB,EAAGqyB,EAAYpyB,EAAGqyB,EAAY/yB,MAAOmxB,EAAaxwB,OAAQywB,MAI9F5B,EAAczmB,UAAUgpB,eAAiB,WACrCvf,KAAKid,OACDptB,oBAAkBmQ,KAAKyd,WAAWzd,KAAKid,SACvCjd,KAAKyd,WAAWzd,KAAKid,OAAUiC,KAAOlf,KAAKid,KAAO,EAAIrb,iBAG9Dob,EAAczmB,UAAU0nB,4BAA8B,SAAUvsB,GAC5D,GAAI0S,GAAQ3S,EAAaC,GAAc,MACvC,IAAI0S,GAASA,EAAM1W,OAAS,IACxBsS,KAAKghB,qBAAqB5c,GACtBpE,KAAKjP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAI2W,EAAM1W,OAAQD,IAC9BuS,KAAKie,4BAA4B7Z,EAAM3W,KAKvDuvB,EAAczmB,UAAU2nB,uBAAyB,SAAUxsB,EAAM1D,GAC7D,GAAIoW,GACA6c,CACJ,KAAKpxB,oBAAkBmQ,KAAKjP,QAAQ0S,eACS,IAArCzD,KAAKjP,QAAQ0S,aAAa/V,SAAiBmC,oBAAkBmQ,KAAKjP,QAAQuS,iBAAiBE,YACxF3T,oBAAkBmQ,KAAKjP,QAAQ2qB,oBAElC,IAAK,GADD1pB,GAAQP,EAAaC,GAAc,OAC9ByL,EAAI,EAAGA,EAAInL,EAAMtE,OAAQyP,IAC9B,GAAInL,EAAMmL,GAAS,OAAM6C,KAAKjP,QAAQuS,iBAAiBE,UAAW,CAC9DxR,EAAMmL,GAAc,WAAKnL,EAAMmL,GAAc,UAC7CzL,EAAOM,EAAMmL,GACb6C,KAAKjP,QAAQ8S,aAAe7D,KAAKjP,QAAQuS,iBAAiBC,WAC1D0d,EAAkBjhB,KAAKjP,QAAQ4b,QAAQjf,OAAS,EAAIsS,KAAKjP,QAAQ4b,QAAQxP,EAAI6C,KAAKjP,QAAQ4b,QAAQjf,QAC9FsE,EAAMmL,GAAS,KAAE6C,KAAKjP,QAAQ2b,eAClC,OAKhB,GAAI1M,KAAKjP,QAAQkD,kBAAoBpE,oBAAkBmQ,KAAKjP,QAAQ2qB,oBAAqB,CACrF,GAAItoB,GAAe4M,KAAKjP,QAAQ2qB,kBAChCuF,GAAkB7tB,EAAmB,KAAW,QAAQ,KAEpDgR,EADAhR,EAAmB,KAAa,UACxB3B,EAAa2B,EAAmB,MAAW,OAI3C3B,EADY2B,EAAmB,KAAU,QACL,WAIhDgR,GAAQ3S,EAAaC,GAAc,MAEvC,IACIwvB,EACJ,IAAI9c,GAASA,EAAM1W,OAAS,EAAG,CAC3B,IAAK,GAAID,GAAI,EAAGA,EAAI2W,EAAM1W,OAAQD,KAC1BoC,oBAAkBuU,EAAM3W,GAAS,KAAEuS,KAAKjP,QAAQ6S,eAAeud,kBAC/D/c,EAAM3W,GAAS,KAAEuS,KAAKjP,QAAQ6S,eAAeud,mBAC7CD,EAAa9c,EAAM3W,GAAS,KAAEuS,KAAKjP,QAAQ6S,eAAewd,WACtDhd,EAAM3W,GAAS,KAAEuS,KAAKjP,QAAQ6S,eAAewd,WAAahd,EAAM3W,GAAS,OAC/DuS,KAAKjP,QAAQ6S,eAAeyd,uBACtCrhB,KAAKshB,iBAAiBthB,KAAKpC,kBAAmBsjB,IAE9ClhB,KAAKpC,kBAAkBzL,MACnB+uB,WAAYA,EACZK,WAAYvhB,KAAKjP,QAAQ4b,QAAQjf,OAAS,EAAKmC,oBAAkBmQ,KAAKjP,QAAQ8S,cACtD7D,KAAKjP,QAAQ4b,QAAQlf,EAAIuS,KAAKjP,QAAQ4b,QAAQjf,QAAhEuzB,EACF7c,EAAM3W,GAAS,KAAEuS,KAAKjP,QAAQ2b,gBAClC8U,cACAC,SAAUrd,EAAM3W,GAAW,SAM3C,IADAuS,KAAKpC,kBAAkB2H,KAAK/L,GACxBwG,KAAKjP,QAAQ4b,QAAQjf,OAAS,EAC9B,IAAK,GAAI0E,GAAI,EAAGA,EAAI4N,KAAKpC,kBAAkBlQ,OAAQ0E,IAC/C4N,KAAKpC,kBAAkBxL,GAAe,WAAKvC,oBAAkBmQ,KAAKjP,QAAQ8S,cAClD7D,KAAKjP,QAAQ4b,QAAQva,EAAI4N,KAAKjP,QAAQ4b,QAAQjf,QAAhEuzB,IAMtBjE,EAAczmB,UAAUyqB,qBAAuB,SAAUtvB,GACrD,GAAIgwB,GACA/xB,EACAkH,EACA2e,EACAoL,EAEAhX,EAEA7T,EACAwN,EAGAvN,EAEA2rB,EACAC,EACAC,EACAC,EACAC,EACA5rB,EACA6rB,EAGAC,EACAC,EACAC,EAlBAC,GAAkB,EAGlBjxB,EAAO6O,KAAKjP,QAAQK,iBACpBC,EAAS2O,KAAKjP,QAAQM,OAEtB9E,EAAWyT,KAAKjP,QAAQ6S,eAAerX,SAQvC81B,GAAiB,EACjBC,EAAc,CAIlBtiB,MAAKuiB,iBAAmB,IACxB,KAAK,GAAI90B,GAAI,EAAGA,EAAIiE,EAAKhE,OAAQD,IAAK,CAClCkC,EAAO,GACPwG,GAAe,EACf6rB,GAAU,EACVK,GAAiB,EACjB7M,EAAc9jB,EAAKjE,GAAS,KAC5B8V,EAAa7R,EAAKjE,GAAe,UAGjC,KAAK,GAAIwM,GAAK,EAAGuoB,EADjBzsB,GADA6T,EAA6C,IAA/B5J,KAAKjP,QAAQM,OAAO3D,QAAgB6V,IAAevD,KAAKjP,QAAQM,OAAO3D,QACzDyD,EAAK4E,aAAe1E,EAAOkS,GAAYxN,aACnBkE,EAAKuoB,EAAe90B,OAAQuM,IAAM,CAC9E,GAAInE,GAAW0sB,EAAevoB,EAuB9B,IAtBA0nB,EAAkB,KAClB9qB,EAAaO,OAAOoe,EAAYxV,KAAKjP,QAAQ0b,sBAC7CzW,EAAawf,EAAYxV,KAAKjP,QAAQyb,qBACtC1W,EAASxK,MAASuE,oBAAkBiG,EAASxK,OAAqCwK,EAASxK,MAArCwK,EAASxK,MAAMmI,YAChE5D,oBAAkBiG,EAASO,QAAUxG,oBAAkBiG,EAASQ,KACjEO,GAAcf,EAASO,MAAQQ,GAAcf,EAASQ,IAAMR,EAAS2sB,YACrEL,GAAkB,EAClBJ,GAAU,EACVF,EAAchsB,EAASO,KAAO,MAAQP,EAASQ,GAC/CsqB,EAAc/wB,oBAAkBiG,EAASvI,OAA0BuI,EAASO,KAAO,MAAQP,EAASQ,GAAlDR,EAASvI,MAC3DoC,EAAOE,oBAAkBiG,EAASjH,OAASc,EAAOmG,EAASjH,MAC3D6yB,EAAY1hB,KAAK0iB,mBAAmBZ,KAE9BjyB,oBAAkBiG,EAASxK,QAAU0K,IAAeF,EAASxK,OAASwK,EAAS2sB,aACrFL,GAAkB,EAClBjsB,GAAe,EACf2rB,EAAchsB,EAASxK,MAAMmI,WAC7BmtB,EAAc/wB,oBAAkBiG,EAASvI,OAA0BuI,EAASxK,MAAMmI,WAAhCqC,EAASvI,MAC3DoC,EAAOE,oBAAkBiG,EAASjH,OAASc,EACY,mBAAnDkC,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,OAA8BiH,EAASjH,MAAM,GAAKiH,EAASjH,MACvG6yB,EAAY1hB,KAAK0iB,mBAAmBZ,IAEpCM,GAAmBvyB,oBAAkBiG,EAASxK,QAAUwK,EAASa,YAAcb,EAASY,YAChD,gBAArCsJ,KAAKjP,QAAQ6S,eAAe3R,KAAwB,CACvD,GAAI0wB,MACAC,MAAW,EAEf,IADAP,GAAiB,EACsC,mBAAnDxwB,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,OACxC,IAAK,GAAIg0B,GAAI,EAAGA,EAAI/sB,EAASjH,MAAMnB,OAAQm1B,IAAK,CAGxCC,GAAeC,WADDF,GADA,KAAO/sB,EAASjH,MAAMnB,OAAS,IACb,KACM+F,WAAY5E,MAAOiH,EAASjH,MAAMg0B,GAC5EF,GAAOxwB,KAAK2wB,OAGf,CACD,GAAIA,IAAeC,UAAW,KAAMl0B,MAAOc,GACvCqzB,GAAeD,UAAW,OAAQl0B,MAAOc,EAC7CgzB,GAAOxwB,KAAK2wB,GACZH,EAAOxwB,KAAK6wB,GAEhBpB,EAAkB,QAAbr1B,GAAmC,WAAbA,EAAwB,OAAS,KAC5Ds1B,EAAkB,QAAbt1B,GAAmC,WAAbA,EAAwB,KAAO,OAC1Dq2B,GACI12B,GAAI,cAAgBqX,EAAa,eAAiBvD,KAAK0d,cAAe7V,GAAI,KAAMD,GAAI,KAAMga,GAAIA,EAAIC,GAAIA,GAE1GF,EAAkB3hB,KAAKjP,QAAQzC,SAAS20B,aAAa,iBAAkBL,EAAUD,GAAQ/oB,WAAW,GAC7C,mBAAnD/H,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,SACxC8yB,EAAgB/nB,WAAW,GAAGE,aAAa,eAAgBhE,EAASY,WAAWjD,YAC/EkuB,EAAgB/nB,WAAW,GAAGE,aAAa,eAAgBhE,EAASa,WAAWlD,aAEnFuM,KAAK2d,YAAYvxB,YAAYu1B,GAC7B3hB,KAAK0d,gBAETqE,IAAc/hB,KAAKjP,QAAQ6S,eAAeyd,uBACtCrhB,KAAKshB,iBAAiBthB,KAAKpC,kBAAmBgjB,GAC9Cc,GAAaA,EAAmB,SAAKU,IAAoBL,GACzDK,GAAkB,EAClBzyB,EAA4D,mBAAnDkC,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,QAAiCgB,oBAAkB8xB,IAC7F9xB,oBAAkBiG,EAASxK,OAAS0U,KAAKkjB,oBAAoBptB,EAAUwsB,GAAe3yB,EAC7FqQ,KAAKpC,kBAAkBzL,MACnB2vB,YAAaA,EACbZ,WAAYN,EAAYW,WAAY5xB,EAAM6xB,cAC1CG,gBAAkB9xB,oBAAkB8xB,GAAqC9xB,oBAAkBiG,EAASxK,OAC9F0U,KAAKmjB,qBAAuB,KADqBxB,EACfzwB,KAAMQ,EAAKjE,GAAS,KAC5D+B,QAASwQ,KAAKjP,QAAQ6S,eAAepU,QAAS4N,YAAa4C,KAAKjP,QAAQ6S,eAAezB,OAAOtT,MAC9FwO,YAAa2C,KAAKjP,QAAQ6S,eAAezB,OAAO3U,QAEpDwS,KAAKpC,kBAAkBoC,KAAKpC,kBAAkBlQ,OAAS,GAAe,WAAEyE,KAAKT,EAAKjE,IAClF60B,KAEKF,IAAoBL,IACzBK,GAAkB,EAClBpiB,KAAKpC,kBAAkB8jB,EAAiB,OAAe,WAAEvvB,KAAKT,EAAKjE,KAElEu0B,GAAYK,GAAmBlsB,GAC5BtG,oBAAkBiG,EAASO,OAASxG,oBAAkBiG,EAASQ,KAC5DzG,oBAAkBiG,EAASY,aAC9B7G,oBAAkBiG,EAASa,aAAe9G,oBAAkBiG,EAASxK,SACpEuE,oBAAkBiG,EAASjH,SAC5BozB,EAA+D,mBAAnDpwB,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,OAC9CiH,EAASjH,MAAM,GAAKiH,EAASjH,MACnCqzB,EAAeryB,oBAAkBiG,EAASvI,OAA0B,SAAjBuI,EAASvI,MACxDsC,oBAAkBmQ,KAAKuiB,oBACvBviB,KAAKpC,kBAAkBzL,MACnB2vB,YAAaI,EAAaV,cAC1BN,WAAYgB,EAAaX,WAAYU,IAEzCE,EAAaniB,KAAKpC,kBAAkBlQ,OACpCsS,KAAKuiB,iBAAmBviB,KAAKpC,kBAAkBukB,EAAa,GAC5DG,KAEJtiB,KAAKpC,kBAAkBukB,EAAa,GAAe,WAAEhwB,KAAKT,EAAKjE,QAMnFuvB,EAAczmB,UAAU+qB,iBAAmB,SAAUrjB,EAAkBrS,GAEnE,IAAK,GADDm2B,IAAc,EACTt0B,EAAI,EAAGA,EAAIwQ,EAAiBvQ,OAAQD,IACzC,GAAIwQ,EAAiBxQ,GAAe,aAAM7B,EAAM,CAC5Cm2B,GAAc,CACd,OAMR,MAAOA,IAEX/E,EAAczmB,UAAUmsB,mBAAqB,SAAU9B,GACnD,GAAIwC,GACAC,CACJ,IAAsC,IAAlCrjB,KAAKpC,kBAAkBlQ,OACvB01B,GAAiB,MAGjB,KAAK,GAAIhxB,GAAI,EAAGA,EAAI4N,KAAKpC,kBAAkBlQ,OAAQ0E,IAAK,CACpD,GAAIwuB,IAAe5gB,KAAKpC,kBAAkBxL,GAAgB,YAAG,CACzDgxB,GAAiB,EACjBC,EAAYjxB,CACZ,OAEKA,IAAM4N,KAAKpC,kBAAkBlQ,OAAS,IAC3C01B,GAAiB,GAI7B,OAASE,QAASF,EAAgB93B,MAAO+3B,IAM7CrG,EAAczmB,UAAUwnB,WAAa,WACjC,GAGIpuB,GAEAgyB,EALA5wB,EAAUiP,KAAKjP,QACfitB,EAASjtB,EAAQ6S,eACjBgO,EAAS7gB,EAAQzC,SAIjBi1B,EAAWvF,EAAO9U,SAItB,IAHAlJ,KAAKmU,YAAcvC,EAAOpI,aAActd,GAAI6E,EAAQmC,QAAQhH,GAAK,kBACjE8T,KAAKwjB,qBACLxjB,KAAKyjB,oBACe,YAAhBzF,EAAO/rB,KACP+N,KAAK0jB,eAAe1jB,KAAKmd,iBAGzB,KAAK,GAAI1vB,GAAI,EAAGA,EAAIuS,KAAKud,2BAA2B7vB,OAAQD,IAAK,CAC7D,GAAIk2B,GAAS5yB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EACjDm2B,EAAS7yB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EAAI,QACrDoP,EAAOmD,KAAKud,2BAA2B9vB,EAE3CkC,IADAgyB,EAAkB9kB,EAAc,SACP,QAAU8kB,EAAgBz1B,GAAK,IAAM2Q,EAAW,IACzE,IAAI6X,GAAS,GAAIzS,IAAKpF,EAAQ,EAAGA,EAAQ,EAAGA,EAAY,MAAGA,EAAa,QACpE2O,EAAe,GAAIpd,IAASyO,EAAY,MAAGA,EAAY,OACvDgnB,EAAc,GAAI3hB,IAAWyhB,EAAQh0B,EAAMquB,EAAO8F,YAAa9F,EAAOxuB,QAASklB,EAC/E1U,MAAKjP,QAAQsZ,YAC2B,SAApCtZ,EAAQ6S,eAAerX,UAA2D,UAApCwE,EAAQ6S,eAAerX,UAC7B,SAApCwE,EAAQ6S,eAAerX,UACpByT,KAAKjP,QAAQ4d,cAAcnhB,OAASwS,KAAKjP,QAAQ4d,cAAcxgB,QACtE01B,EAAY31B,EAAK8R,KAAK+jB,UAAU71B,EAAI8R,KAAKkd,iBAAiBhvB,EAAI8R,KAAKkd,iBAAiB/uB,QAC7E6R,KAAK+jB,UAAU71B,EAAI21B,EAAY11B,QAAU4F,KAAKC,IAAIgM,KAAKkd,iBAAiBhvB,EAAI21B,EAAY31B,GAC/Fsd,EAAatd,EAAK8R,KAAK+jB,UAAU71B,EAAI8R,KAAKkd,iBAAiBhvB,EAAI8R,KAAKkd,iBAAiB/uB,OAC9E6R,KAAK+jB,YAAgBlnB,EAAiB,WAAI,EAC3C9I,KAAKC,IAAIgM,KAAKkd,iBAAiBhvB,EAAIsd,EAAatd,KAGtD21B,EAAY51B,EAAK+R,KAAK+jB,UAAU91B,EAAI+R,KAAKkd,iBAAiBjvB,EAAI+R,KAAKkd,iBAAiB1vB,OAC7EwS,KAAK+jB,UAAU91B,EAAI41B,EAAYr2B,OAChCuG,KAAKC,IAAIgM,KAAKkd,iBAAiBjvB,EAAI41B,EAAY51B,GACrDud,EAAavd,EAAK+R,KAAK+jB,UAAU91B,EAAI+R,KAAKkd,iBAAiBjvB,EAAI+R,KAAKkd,iBAAiB1vB,MAC/EwS,KAAK+jB,UAAU91B,EAAI8F,KAAKC,IAAIgM,KAAKkd,iBAAiBjvB,EAAIud,EAAavd,KAIjFU,EADc,GAAI4T,IAAWqhB,EAAQpY,EAAavd,EAAGud,EAAatd,EAAG,SAAU2O,EAAW,KAAG,GAAI,IAClE0mB,EAAUA,EAAS10B,OAASmR,KAAKjP,QAAQyZ,WAAWnL,gBAAiBW,KAAKmU,aACzGnU,KAAKmU,YAAY/nB,YAAYwlB,EAAO4C,cAAcqP,MAI9D7G,EAAczmB,UAAUytB,yBAA2B,SAAUjnB,EAAYknB,EAASlzB,EAASitB,GACvF,GAAIS,GAAgB1hB,EAAkB,MAClCyO,EAAezO,EAAiB,KAEhChP,EAAWpC,EADEoR,EAAwB,YACFihB,EAAO9U,UAa9C,OAZAuV,GAAcxwB,EAAK+R,KAAK+jB,UAAU91B,EAAI+R,KAAKkd,iBAAiBjvB,EAAI+R,KAAKkd,iBAAiB1vB,OAC/EwS,KAAK+jB,UAAU91B,EAAIg2B,GAAWlwB,KAAKC,IAAIgM,KAAKkd,iBAAiBjvB,EAAIwwB,EAAcxwB,GACtFud,EAAavd,EAAK+R,KAAK+jB,UAAU91B,EAAI+R,KAAKkd,iBAAiBjvB,EAAI+R,KAAKkd,iBAAiB1vB,OAC9EwS,KAAK+jB,UAAU91B,EAAIF,EAASP,MAAQy2B,GAAWlwB,KAAKC,IAAIgM,KAAKkd,iBAAiBjvB,EAAIud,EAAavd,IAC9D,SAApC8C,EAAQ6S,eAAerX,UAA2D,UAApCwE,EAAQ6S,eAAerX,UAC7B,SAApCwE,EAAQ6S,eAAerX,UACpByT,KAAKjP,QAAQ4d,cAAcnhB,OAASwS,KAAKjP,QAAQ4d,cAAcxgB,UACtEswB,EAAcvwB,EAAK8R,KAAK+jB,UAAU71B,EAAI8R,KAAKkd,iBAAiBhvB,EAAI8R,KAAKkd,iBAAiB/uB,OAChF6R,KAAK+jB,UAAU71B,EAAI6F,KAAKC,IAAID,KAAKC,IAAIgM,KAAKkd,iBAAiBhvB,GAAKuwB,EAAcvwB,GAAM8vB,EAAOniB,YAAc,EAC/G2P,EAAatd,EAAK8R,KAAK+jB,UAAU71B,EAAI8R,KAAKkd,iBAAiBhvB,EAAI8R,KAAKkd,iBAAiB/uB,OAC/E6R,KAAK+jB,UAAU71B,EAAI6F,KAAKC,IAAID,KAAKC,IAAIgM,KAAKkd,iBAAiBhvB,GAAKsd,EAAatd,KAE9EuwB,cAAeA,EAAejT,aAAcA,IAGzDwR,EAAczmB,UAAUmtB,eAAiB,SAAUzG,GAC/C,GAKIiH,GACAC,EAIAxb,EAVAC,EAAQ5I,KACRjP,EAAUiP,KAAKjP,QAEfitB,EAASjtB,EAAQ6S,eACjBwgB,EAAY,GAAIl3B,IAAK8wB,EAAOpiB,WAAYoiB,EAAOniB,aAI/C+V,EAAS7gB,EAAQzC,SACjBw1B,EAAc9F,EAAO8F,WAEzB,IAAI7G,GAAQ,GAAKA,EAAOjd,KAAKyd,WAAW/vB,OAAQ,CACxC3B,SAASC,eAAegU,KAAKmU,YAAYjoB,KACzCH,SAASC,eAAegU,KAAKmU,YAAYjoB,IAAIqI,QAmCjD,KAAK,GAjCD8vB,GAAkC,mBAAjBrG,EAAO7iB,OAA+C,iBAAjB6iB,EAAO7iB,OAA6C,UAAjB6iB,EAAO7iB,MAChGmpB,EAAgBD,EAAgBx0B,oBAAkBmuB,EAAOruB,MAAQ,UAAYquB,EAAOruB,KAAOm0B,EAAYj1B,MACvG01B,EAAgBF,GAAuC,IAAtBP,EAAYt2B,MAAe,EAAwBs2B,EAAYt2B,MA8BhGqc,EAAS7J,KACJvS,EAAI,EAAGA,EAAIuS,KAAKyd,WAAWR,GAAkB,WAAEvvB,OAAQD,KA9BlD,SAAUA,GACpB,GAAIsP,GAAa8M,EAAO4T,WAAWR,GAAkB,WAAExvB,GACnDsQ,EAAgB6T,EAAOpI,aAActd,GAAI6E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACjFmzB,EAAa7jB,EAAwB,YACrCynB,EAAUzzB,EAAQmC,QAAQhH,GAAK,uBAAyBuB,EACxDm2B,EAAS7yB,EAAQmC,QAAQhH,GAAK,sBAAwBuB,EACtDgxB,EAAgB1hB,EAAkB,MAClCyO,EAAezO,EAAiB,IAUpC,IATIhM,EAAQsZ,YACR8Z,EAAoBta,EAAOma,yBAAyBjnB,EAzBlD,GAyBuEhM,EAASitB,GAClFS,EAAgB0F,EAAiC,cACjD3Y,EAAe2Y,EAAgC,cAEnDxb,GACIiC,QAAQ,EAAO1Z,KH/iBF,sBG+iB6BH,QAASA,EAASpB,KAAMoN,EAAiB,KACnF5B,MAAO6iB,EAAO7iB,MAAOspB,SAAUzG,EAAOyG,UAEtC5a,EAAO9Y,QAAQ+Z,SAAU,CACTnC,EAAU5X,OAA1B,IAAmCga,GAAkBlI,GAAO8F,GAAY,WACxEA,GAAYoC,EAEhBlB,EAAO9Y,QAAQia,QHtjBE,sBGsjB2BrC,EAAW,SAAUsC,GAC7D,GAAI1c,GAAgB,GAAI+T,IAAWkiB,EAASvZ,EAAatb,KAAM40B,EAAeF,EAAgBtnB,EAAiB,KAAIunB,EAAetG,EAAOxuB,QAAS,GAClJuO,GAAc3R,YAAY8O,EAAWujB,EAAexT,EAAa9P,MAAOipB,EAAWnZ,EAAawZ,SAAUl2B,EAAeqyB,IAEzHjyB,EADAu1B,EAAc,GAAI3hB,IAAWqhB,EAAQpY,EAAavd,EAAGud,EAAatd,EAAG,QAAS0yB,EAAY,GAAI,IAC/D5C,EAAO9U,UAAW8U,EAAO9U,UAAUra,OAAS+Z,EAAM7X,QAAQyZ,WAAWnL,gBAAiBtB,GACrH6K,EAAMuL,YAAY/nB,YAAY2R,MAK1BtQ,EAEZ,IAAIi3B,OAAc,EAGlB,IAAkB,IAAd1kB,KAAKid,KAAY,CACjB,GAAI0H,GAAc1H,EAAO,EAAK,IAAMjd,KAAKyd,WAAW/vB,OAChDk3B,EAAa5G,EAAO9U,UACpB2b,EAAiBl5B,EAAYg5B,EAAYC,GACzCE,EAAa9kB,KAAKsd,eAAervB,EAAI+R,KAAKsd,eAAe9vB,MAASq3B,EAAer3B,SAxD/E,GA0DFu3B,EAAc/kB,KAAKsd,eAAervB,EAAI+R,KAAKsd,eAAe9vB,MAC1Dw3B,EAAQhlB,KAAKsd,eAAepvB,EAAI8R,KAAKsd,eAAenvB,WA3DlD,GA4DF82B,EAAYF,EA5DV,GA4DgCF,EAAer3B,MAAQ,GAC7Dk3B,GAAc9S,EAAOpI,aAActd,GAAI6E,EAAQmC,QAAQhH,GAAK,wBAC5D,IAAIg5B,GAAkBtT,EAAOpI,aAActd,GAAI6E,EAAQmC,QAAQhH,GAAK,8BAChEi5B,EAAmBvT,EAAOpI,aAActd,GAAI6E,EAAQmC,QAAQhH,GAAK,+BACjEk5B,EAAY,MAAQL,EAAa,IAAMC,EAAO,OAASD,EAhErD,IAgE2E,KAAOC,KACpF,OAASD,EAjEP,IAiE6B,KAAOC,KAAiB,MACvDK,EAAW,MAAQP,EAAY,IAAME,EAAO,OAASF,EAlEnD,IAkEwE,KAAOE,KACjF,OAASF,EAnEP,IAmE4B,KAAOE,KAAiB,MACtDM,EAAkB,GAAIhjB,IAAWvR,EAAQmC,QAAQhH,GAAK,aAAc,UAAW,EAAG,UAAW,EAAG,GAAIm5B,EACxGH,GAAgB94B,YAAYwlB,EAAO1G,SAASoa,GAC5C,IAAIC,GAAsB,GAAIrjB,IAAWnR,EAAQmC,QAAQhH,GAAK,kBAAmB,iBAAmB,EAAG,GAAI+V,IAAK6iB,IAA0BE,KAAsBx3B,GAAWy2B,IAAc,GACzLiB,GAAgB94B,YAAYwlB,EAAO4C,cAAc+Q,IACjDvlB,KAAKwlB,WAAWN,EAChB,IAAIO,GAAmB,GAAInjB,IAAWvR,EAAQmC,QAAQhH,GAAK,cAAe,UAAW,EAAG,UAAW,EAAG,GAAIk5B,EAC1GD,GAAiB/4B,YAAYwlB,EAAO1G,SAASua,GAC7C,IAAIC,GAAuB,GAAIxjB,IAAWnR,EAAQmC,QAAQhH,GAAK,mBAAoB,iBAAmB,EAAG,GAAI+V,IAAM8iB,EA3E7G,GA2EmIC,IA3EnI,GAAA,IA2EoK,GAC1KG,GAAiB/4B,YAAYwlB,EAAO4C,cAAckR,IAClD1lB,KAAKwlB,WAAWL,GAChBT,EAAYt4B,YAAY84B,GACxBR,EAAYt4B,YAAY+4B,EACxB,IAAIQ,IACAz5B,GAAM6E,EAAQmC,QAAQhH,GAAK,eAC3B+B,EAAKg3B,EACL/2B,EAAK82B,EAAQH,EAAe12B,OAAS,EACrCwB,KAAQ,UACRV,YAAa,OACbC,aAAc01B,EAAWj4B,UACzBwC,cAAey1B,EAAWh4B,WAC1BwC,cAAew1B,EAAWl4B,WAC1B2C,cAAe,SACfE,UAAa,GACbC,QAAW,EACXC,oBAAqB,GAEzBi1B,GAAYt4B,YAAYwlB,EAAOnjB,WAAWk3B,EAAiBhB,IAC3D3kB,KAAKmU,YAAY/nB,YAAYs4B,MAIzC1H,EAAczmB,UAAUitB,mBAAqB,WACzC,GAAIzyB,GAAUiP,KAAKjP,QACfitB,EAASjtB,EAAQ6S,eACjBua,EAAcH,EAAOvJ,MAAM7oB,KAE3Bsd,EAAY8U,EAAOK,WAGnBtwB,EAAWpC,EADH0B,EAAU2S,KAAKsd,eAAe9vB,SAAwB2wB,EAAajV,GAC7CA,EAClClJ,MAAKkd,iBAAmB,GAAIjb,IAAMjC,KAAKsd,eAAervB,EALxC,GAKuD+R,KAAKsd,eAAepvB,EAL3E,GAKyFH,EAASI,OAAU6R,KAAKsd,wBAAwCtd,KAAKsd,yBAAyCvvB,EAASI,QACzM,gBAAhB6vB,EAAO/rB,KAAyB,EAAmB,IAAd+N,KAAKid,KANjC,GAMyD,GACvE,IAAI1uB,GAAgB,GAAI2T,IAAWnR,EAAQmC,QAAQhH,GAAK,iBAAkB8xB,EAAO1J,WAAY0J,EAAO7b,OAAQ,EAAGnC,KAAKkd,iBAAkB,IAClI0I,EAAe70B,EAAQzC,SAASkmB,cAAcjmB,EAClDq3B,GAAat5B,MAAMu5B,cAAgB,OACnC7lB,KAAKmU,YAAY/nB,YAAYw5B,GAC7B5lB,KAAK8lB,mBAAmB/0B,EAASiP,KAAKkd,iBAAiB1vB,MAAOwS,KAAKkd,iBAAiB/uB,OAAQ6vB,GAC5Fhe,KAAKmU,YAAYra,aAAa,YAAa,eAAiBkG,KAAK+jB,UAAU91B,GAAO+R,KAAKkd,iBAAmB,GAAK,KAC1Gld,KAAK+jB,UAAU71B,GAAO8R,KAAKkd,iBAAmB,GAAK,MACxDnsB,EAAQwa,UAAUnf,YAAY4T,KAAKmU,cAEvC6I,EAAczmB,UAAUktB,kBAAoB,WACxC,GAAI1yB,GAAUiP,KAAKjP,QACfitB,EAASjtB,EAAQ6S,eACjBsF,EAAY8U,EAAOK,WACnBF,EAAcH,EAAOvJ,MAAM7oB,KAG3Bm6B,EAAY14B,EAAU2S,KAAKsd,eAAe9vB,SAAwB2wB,EAAajV,GAC/Enb,EAAWpC,EAAYo6B,EAAW7c,EAClCiV,IAEAxvB,EADc,GAAI4T,IAAWxR,EAAQmC,QAAQhH,GAAK,eAAiB8T,KAAKsd,iBAAqBtd,KAAKsd,eAAe9vB,MAAQ,EAAIwS,KAAKsd,eAAepvB,EAAKH,EAASI,OAAS,IAAoB,SAAU43B,EAAW,IAClL7c,EAAWA,EAAUra,OAASmR,KAAKjP,QAAQyZ,WAAWpL,iBAAkBY,KAAKmU,cAMpH6I,EAAczmB,UAAUyvB,yBAA2B,SAAUhzB,GACzD,GAAIjC,GAAUiP,KAAKjP,QACfsP,EAASrN,EAAEqN,OACX4lB,EAAgBl1B,EAAQmC,QAAQhH,GAAK,qBACzCmU,GAAWrN,EAAEhF,KAAKvC,QAAQ,UAAY,EAClCM,SAASm6B,iBAAiBlzB,EAAEmzB,eAAe,GAAGC,QAASpzB,EAAEmzB,eAAe,GAAGE,SADpChmB,CAE3C,IAAIimB,GACAtI,EAASjtB,EAAQ6S,cACrB,IAAIvD,EAAOnU,GAAGT,QAAQ,gBAAkB,GAAKuyB,EAAO1K,SAAWtT,KAAKud,2BAA2B7vB,OAAS,EAAG,CACvG,GAAI8nB,OAAc,GACdwK,MAAa,GAEbtuB,MAAO,GACP/B,MAAO,GACP0S,MAAS,GACTkkB,MAAc,GACdxoB,MAAgB,EACpBuoB,GAAav1B,EAAQwB,OAAOC,YAAYykB,WAAW5W,EAAOnU,GAAG+D,MAAM,KAAK,IAExE,KAAK,GADDu2B,GAAUz1B,EAAQwa,UAAU1X,wBACvBpG,EAAI,EAAGA,EAAIuS,KAAKpC,kBAAkBlQ,OAAQD,IAAK,CACpD+nB,EAAcxV,KAAKpC,kBAAkBnQ,GAErCuyB,GADAjiB,EAAgBhS,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACrDoG,uBAC3B,IAAI4yB,GAAS,GAAIxkB,IAAKlO,KAAKC,IAAIgsB,EAAWjzB,KAAOy5B,EAAQz5B,MAAOgH,KAAKC,IAAIgsB,EAAWlzB,IAAM05B,EAAQ15B,KAAMkzB,EAAWxyB,MAAOwyB,EAAW7xB,OAIrI,IAHAwB,EAAOoO,EAAc2oB,aAAa,QAClCrkB,EAAS2b,EAAO8F,YAAYj1B,MAC5B03B,EAAcvI,EAAO8F,YAAYt2B,OAC5BqC,oBAAkB2lB,EAAwB,YAAI,CAC/C9jB,EAAO8jB,EAAwB,UAC/B,KAAK,GAAIpjB,GAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIV,EAAKU,GAAmB,iBAAMk0B,EAA2B,eAAG,CAC5DtmB,KAAK2mB,uBAAuB3I,EAAQruB,EAAM0S,EAAQ4jB,EAAeM,EAAaE,EAC9E,cAOhBzmB,MAAK6b,4BAGbmB,EAAczmB,UAAUowB,uBAAyB,SAAU3I,EAAQruB,EAAM0S,EAAQnW,EAAIq6B,EAAa5yB,GAC9F,GAAI3C,GACA6X,EACA+d,EACA5B,CAeIh0B,GAVU,gBAFsB,SAAvBgtB,EAAOvP,YAA+C,QAApBuP,EAAOzxB,UAA0C,WAApByxB,EAAOzxB,SACjF,aAAe,WAAayxB,EAAOvP,aAEhCuP,EAAO6I,gBASD,OAFPD,EAAOjzB,EAAK1F,EAAK0F,EAAKnG,MAAQ,GAER,KADtBw3B,EAAOrxB,EAAKzF,EAAKyF,EAAY,QACM,OAASizB,EAbxC,IAawD,KAAO5B,EAd9D,IAeD,OAAS4B,EAdT,IAcyB,KAAO5B,EAf/B,IAegD,MAP9C,OAFP4B,EAAOjzB,EAAK1F,EAAK0F,EAAKnG,MAAQ,GAER,KADtBw3B,EAAOrxB,EAAKzF,GACuB,OAAS04B,EAPxC,IAOwD,KAAO5B,EAR9D,IASD,OAAS4B,EART,IAQyB,KAAO5B,EAT/B,IASgD,MAUpDhH,EAAO6I,gBASD,OAFPD,EAAOjzB,EAAK1F,GAEU,KADtB+2B,EAAOrxB,EAAKzF,EAAKyF,EAAKxF,OAAS,GACI,OAASy4B,EA3BxC,IA2BwD,KAAO5B,EA5B9D,IA6BD,OAAS4B,EA5BT,IA4ByB,KAAO5B,EA7B/B,IA6BgD,MAP9C,OAFP4B,EAAOjzB,EAAK1F,EAAK0F,EAAW,OAEN,KADtBqxB,EAAOrxB,EAAKzF,EAAKyF,EAAKxF,OAAS,GACI,OAASy4B,EArBxC,IAqBwD,KAAO5B,EAtB9D,IAuBD,OAAS4B,EAtBT,IAsByB,KAAO5B,EAvB/B,IAuBgD,MAS7Dnc,EAAc,GAAIvG,IAAWpW,EAAIyD,EAAM42B,EAAalkB,EAAQ,EAAG,GAAIrR,GACnEgP,KAAKjP,QAAQwa,UAAUnf,YAAY4T,KAAKjP,QAAQzC,SAAS4c,SAASrC,KAEtEmU,EAAczmB,UAAUuvB,mBAAqB,SAAU/0B,EAASvD,EAAOW,EAAQ6vB,GAC3E,GAAI/vB,GACAC,EAEAiV,EAEA2jB,GADJ3jB,EAAYQ,YAAW5S,EAAQ+C,SAAUqP,GAAW,IAC9BlV,EAClB84B,EAAQ5jB,EAAUjV,EAClBoZ,EAAanE,EAAUhV,OACvBkZ,EAAYlE,EAAU3V,MACtB0L,EAAanI,EAAQ4d,cAAcnhB,MACnCw5B,EAAcj2B,EAAQ4d,cAAcxgB,OACpC5B,EAA+B,SAApByxB,EAAOzxB,SAAuB2M,EAAa8tB,EAAe,QAAU,SAAWhJ,EAAOzxB,QACrG,IAAwB,UAApByxB,EAAOzxB,SACPyT,KAAK+jB,UAAY/F,EAAOnwB,aAEvB,CACD,OAAQtB,GACJ,IAAK,MACL,IAAK,SACD4W,EAAUhV,OAAUmZ,EAAanZ,EACjCF,EAAKiL,EAAa,EAAM1L,EAAQ,EAChCU,EAAkB,QAAb3B,EAAsBw6B,EAASA,EAAQ5jB,EAAUhV,OAnBpD,GAoBFgV,EAAUjV,EAAkB,QAAb3B,EAAsBw6B,EAAQ54B,EApB3C,GAoB8D44B,CAChE,MACJ,KAAK,OACL,IAAK,QACD5jB,EAAU3V,MAAS6Z,EAAY7Z,EAC/BS,EAAkB,SAAb1B,EAAuBu6B,EAAQA,EAAQ3jB,EAAU3V,MACtDU,EAAK84B,EAAc,EAAM74B,EAAS,EAClCgV,EAAUlV,EAAkB,SAAb1B,EAAuBu6B,EAAQt5B,EAAQs5B,EAG9D,OAAQ9I,EAAOlwB,WACX,IAAK,OACgB,QAAbvB,GAAmC,WAAbA,EACtB0B,EAAIkV,EAAUlV,EAGdC,EAAIiV,EAAUjV,CAElB,MACJ,KAAK,MACgB,QAAb3B,GAAmC,WAAbA,EACtB0B,EAAIiL,EAAa1L,EAGjBU,EAAI84B,EAAc74B,EAI9B6R,KAAKjP,QAAQoS,UAAYA,EACzBnD,KAAK+jB,UAAY,GAAI31B,IAASH,EAAGC,KAGzC8uB,EAAczmB,UAAU0wB,eAAiB,SAAUj0B,GAC/CgN,KAAKgmB,yBAAyBhzB,GAC9BolB,aAAapY,KAAKoY,cAClBpY,KAAKoY,aAAeE,WAAWtY,KAAK6b,yBAAyB7D,KAAKhY,MAAO,MAK7Egd,EAAczmB,UAAUslB,yBAA2B,WAC3C9vB,SAASC,eAAegU,KAAKjP,QAAQmC,QAAQhH,GAAK,wBAClDH,SAASC,eAAegU,KAAKjP,QAAQmC,QAAQhH,GAAK,uBAAuBqI,UAMjFyoB,EAAczmB,UAAU2wB,eAAiB,SAAUl0B,GAC/CgN,KAAKmd,YAAenqB,EAAEqN,OAAOnU,GAAGT,QAAQ,gBAAkB,EAAMuU,KAAKmd,YAAc,EAC9End,KAAKmd,YAAc,EACxBnd,KAAK+d,cAKTf,EAAczmB,UAAUivB,WAAa,SAAUtyB,GAC3CgkB,eAAa5G,IAAIpd,EAAS2b,UAAQyI,gBAAiBtX,KAAKknB,eAAgBlnB,OAK5Egd,EAAczmB,UAAUwhB,iBAAmB,WACnC/X,KAAKjP,QAAQo2B,cAGjBnnB,KAAKjP,QAAQq2B,GAAGvY,UAAQ2I,eAAgBxX,KAAKgmB,yBAA0BhmB,MACvEA,KAAKjP,QAAQq2B,GAAGvY,UAAQ6I,cAAe1X,KAAKinB,eAAgBjnB,QAKhEgd,EAAczmB,UAAUshB,oBAAsB,WACtC7X,KAAKjP,QAAQo2B,cAGjBnnB,KAAKjP,QAAQs2B,IAAIxY,UAAQ2I,eAAgBxX,KAAKgmB,0BAC9ChmB,KAAKjP,QAAQs2B,IAAIxY,UAAQ6I,cAAe1X,KAAKinB,kBAKjDjK,EAAczmB,UAAUomB,cAAgB,WACpC,MAAO,iBAOXK,EAAczmB,UAAUma,QAAU,SAAU3f,GAIxCiP,KAAK6X,uBAKTmF,EAAczmB,UAAU2sB,oBAAsB,SAAUptB,EAAUwsB,GAC9D,GAAIrB,GACAqG,EAAQ,4BACZ,KAAKz3B,oBAAkBiG,EAASjH,QAA6D,mBAAnDgD,OAAO0E,UAAU9C,SAAS+C,KAAKV,EAASjH,OAA6B,CAC3G,GAAI04B,GAAavnB,KAAKjP,QAAQzC,SAASsvB,aACnC4J,EAAmBz7B,SAAS07B,gBAAgBH,EAAO,kBAEnD/6B,EAAWyT,KAAKjP,QAAQ6S,eAAerX,SACvCq1B,MAAK,GACLC,MAAK,EACTD,GAAkB,QAAbr1B,GAAmC,WAAbA,EAAwB,MAAQ,IAC3Ds1B,EAAkB,QAAbt1B,GAAmC,WAAbA,EAAwB,IAAM,MACzDi7B,EAAiB1tB,aAAa,KAAM,UAAYwoB,GAChDkF,EAAiB1tB,aAAa,KAAM,MACpC0tB,EAAiB1tB,aAAa,KAAM,MACpC0tB,EAAiB1tB,aAAa,KAAM8nB,EAAK,KACzC4F,EAAiB1tB,aAAa,KAAM+nB,EAAK,IACzC,KAAK,GAAInxB,GAAI,EAAGA,EAAIoF,EAASjH,MAAMnB,OAAQgD,IAAK,CAC5C,GAAIg3B,GAAc,KAAO5xB,EAASjH,MAAMnB,OAAS,GAC7Ci6B,EAAU57B,SAAS07B,gBAAgBH,EAAO,OAC9CK,GAAQ7tB,aAAa,SAAUpJ,EAAIg3B,EAAc,KACjDC,EAAQ7tB,aAAa,aAAchE,EAASjH,MAAM6B,IAClDi3B,EAAQ7tB,aAAa,eAhBX,GAgBmCrG,YAC7C+zB,EAAiBp7B,YAAYu7B,GAEjCJ,EAAWn7B,YAAYo7B,GACvBxnB,KAAKmjB,qBAAuBqE,CAC5B,IAAI34B,GAAQ,eAAsByzB,EAAc,GAChDtiB,MAAK2d,YAAYvxB,YAAYo7B,GAC7BvG,EAAkBpyB,EAEtB,MAAOoyB,IAEJjE,KCl9BP4K,GAAkC,WAClC,QAASA,GAAiB11B,GACtB8N,KAAKK,OAAS,YACdL,KAAK6nB,YAAc,YACnB7nB,KAAK+b,4BACL/b,KAAK8nB,6BACL9nB,KAAK+nB,kBACL/nB,KAAKjP,QAAUmB,EACf8N,KAAK+X,mBAoLT,MA5KA6P,GAAiBrxB,UAAUyxB,UAAY,SAAUh1B,GAC7C,GACIi1B,GAEAtf,EAEA8Q,EAEA5c,EAEAymB,EACA4E,EACAh1B,EACAi1B,EAZAp3B,EAAUiP,KAAKjP,QAEf0nB,EAAWzlB,EAAEqN,OAAOnU,GAEpB8F,KAEAo2B,EAAYpoB,KAAKjP,QAAQsrB,kBAEzBgM,KAKAC,EAAkBtoB,KAAKjP,QAAQw3B,sBACnC,IAAI9P,EAAShtB,QAAQ,gBAAkB,KAAM68B,GAAkBA,EAAgBE,cAAgB/P,IAC3F,GAAIzY,KAAKgc,cAAgBvD,EAAU,CAC/ByP,EAAiBn8B,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQuT,WAAa,UACjG,IAAImkB,GAAoB18B,SAASwR,uBAAuB,mBACxDV,GAAOmD,KAAKjP,QAAQwB,OAAOC,YAAYykB,WAAWwB,EAASxoB,MAAM,KAAK,IAClEwN,OAAQ,EACZ,IAAIuC,KAAKjP,QAAQ6S,eAAe0P,QAAS,CACjCvW,EAAaiD,KAAKjP,QAAQ4M,oBAAoBC,iBAElDH,GAAQD,EADOwC,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBlQ,OACjCmP,EAAM9L,GACvCiP,KAAKhC,aAAoD,YAArCgC,KAAKjP,QAAQ6S,eAAe3R,KAAqBlG,SAASC,eAAe,gCAAkCyR,GAAS1R,SAASC,eAAe,0BAA4ByR,GAClK,OAAtBuC,KAAKhC,cAA0BsqB,GAAkBtoB,KAAKhC,aAAa0oB,aAAa,QAAU4B,EAAgBI,eAgBrG1oB,KAAK+nB,eAAer6B,OAAS,GAAKsS,KAAK+nB,eAAe/nB,KAAK+nB,eAAer6B,OAAS,GAAmB,iBAAMsS,KAAKhC,eACtHV,EAA6B0C,KAAK+b,yBAA0B/b,KAAK+nB,eAAgBh3B,GACjFiP,KAAKgc,YAAc,IAjBfsM,GAAkBtoB,KAAKhC,eAAiBsqB,EAAgBtqB,aAUnDgC,KAAK+nB,eAAer6B,OAAS,GAAKsS,KAAK+nB,eAAe/nB,KAAK+nB,eAAer6B,OAAS,GAAmB,iBAAMsS,KAAKhC,eACtHV,EAA6B0C,KAAK+b,yBAA0B/b,KAAK+nB,eAAgBh3B,GACjFiP,KAAKgc,YAAc,KAXnBhc,KAAK+nB,eAAe51B,MAAO41B,eAAgB/nB,KAAKhC,eAChDlB,EAAYkD,KAAK+b,yBAA0B,aAC3C/b,KAAK+b,yBAAyB5pB,MAAO+L,UAAW8B,KAAKhC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgD,KAAKhC,aAAcoqB,EAAUz4B,KAAMy4B,EAAU54B,QAAS44B,EAAUjmB,OAAOtT,MAAOu5B,EAAUjmB,OAAO3U,MAAMiG,YAC9GuM,KAAKK,OAAS,aAa1B,GADA8nB,EAASp2B,EAAoB8K,KAAUurB,EAAUn2B,KAAMlB,IACnDiP,KAAKjP,QAAQ6S,eAAe0P,WAAUgV,KAAkBtoB,KAAKhC,cAAegC,KAAKhC,aAAa0oB,aAAa,QAAU4B,EAAgBI,iBACrI,GAAI1oB,KAAKjP,QAAQ6S,eAAe0P,UAAUgV,GAAkBtoB,KAAKhC,eAAiBsqB,EAAgBtqB,cA4B9FiqB,GAAmB,MA5BuG,CAC1H,IAASx6B,EAAI,EAAGA,EAAIy6B,EAAejU,kBAAmBxmB,IAAK,CACvDyF,EAAUg1B,EAAetuB,WAAWnM,GACpC61B,GAAU,EACVzmB,EAAO9L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,GACxD,KAASmC,EAAI,EAAGA,EAAIq2B,EAAkB/6B,OAAQ0E,IAC1C,GAAIc,EAAQhH,KAAOu8B,EAAkBr2B,GAAGlG,GAAI,CACxCo3B,GAAU,CACV,OAGJ6E,EAAO18B,QAAQoR,EAAqB,iBAAM,GAAKymB,IAC/C+E,EAAkBl2B,KAAKe,GACvBlB,EAAMG,KAAK0K,IAGnBpD,EAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,EAC1F,KAAK,GAAIoM,GAAI,EAAGA,EAAIkrB,EAAkB36B,OAAQyP,IAE1CxD,GADAzG,EAAUm1B,EAAkBlrB,IACPvD,WAAW,IAAMuI,OAAQimB,EAAUjmB,OAAQxS,KAAMy4B,EAAUz4B,KAAMH,QAAS44B,EAAU54B,UACzG0D,EAAQ2G,UAAUyW,IAAI,oBACtBtQ,KAAKgc,YAAcvD,CAEvB9P,IAAciC,QAAQ,EAAO1Z,KJpD1B,gBIoD+CH,QAASA,EAASiB,MAAOA,EAAO0H,SAAU2uB,GAC5F5O,GAAoB7O,QAAQ,EAAO1Z,KJrDhC,gBIqDqDc,MAAOA,EAAO0H,SAAU2uB,GAChFt3B,EAAQia,QJtDL,gBIsD4Bja,EAAQ+Z,SAAW2O,EAAkB9Q,SAQ/E,IAAI8P,EAAShtB,QAAQ,kBAAoB,GAAKgtB,EAAShtB,QAAQ,kBAAoB,GACpF,GAAIuU,KAAKjP,QAAQ6S,eAAe0P,WAAYgV,GAAkBA,EAAgBI,iBAAmBjQ,MAAqB6P,GAAkBA,EAAgBK,gBAAkBlQ,GAAkB,CACxL,GAGImQ,GAHAnrB,MAAQ,GACR+a,MAAY,GACZjV,MAAa,GAEbyX,EAAYjvB,SAASC,eAAeysB,EACf,eAArBzY,KAAK6nB,aACL5qB,EAAa+C,KAAK8nB,0BAA2B,aAEjD9nB,KAAK6nB,YAAc,YACnBpqB,EAA6C,YAArCuC,KAAKjP,QAAQ6S,eAAe3R,KAAqBglB,WAAWwB,EAASxoB,MAAM,KAAK,IAAMgnB,WAAWwB,EAASxoB,MAAM,KAAK,GAI7H,KAAK,GAHDyN,GAAasC,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAE/P,OACrFqP,EAAaiD,KAAKjP,QAAQ4M,oBAAoBC,kBAC9C0kB,EAAc52B,SAAS+sB,EAASA,EAAS/qB,OAAS,GAAI,IACjDD,EAAI,EAAGA,EAAIiQ,EAAYjQ,IAC5B,IAAK,GAAI2E,GAAI,EAAGA,EAAI4N,KAAKjP,QAAQwB,OAAOC,YAAY9E,OAAQ0E,IACxD,GAAI4N,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAEhQ,GAAmB,iBAAMuS,KAAKjP,QAAQwB,OAAOC,YAAYJ,GAAmB,eAAG,CACvJomB,EAAYpmB,EACZmR,EAAavD,KAAKjP,QAAQwB,OAAOC,YAAYJ,GAAe,UAC5D,IAAIy2B,GAAU98B,SAASC,eAAe,yBAA2BuX,EAAa,eAAiBiV,EAAY,YACjG,KAAN/qB,IACAuS,KAAK8nB,6BACLjqB,EAAemC,KAAK8nB,0BAA2BxF,EAAalwB,EAAG4oB,EAAW6N,EAAS7oB,KAAKjP,QAAQwB,OAAOC,YAAauK,GACpH6rB,EAAW5oB,KAAK8nB,0BAA0Bp6B,OAC1CsS,KAAK8nB,0BAA0Bc,EAAW,GAAoB,iBAAME,cAExE9rB,EAASge,EAAWoN,EAAUz4B,KAAMy4B,EAAU54B,QAAS44B,EAAUjmB,OAAOtT,MAAOu5B,EAAUjmB,OAAO3U,MAAMiG,YACtGuJ,EAAS6rB,EAAST,EAAUz4B,KAAMy4B,EAAU54B,QAAS44B,EAAUjmB,OAAOtT,MAAOu5B,EAAUjmB,OAAO3U,MAAMiG,YACpGm1B,EAAW5oB,KAAK8nB,0BAA0Bp6B,OAC1CsS,KAAK8nB,0BAA0Bc,EAAW,GAAoB,gBAAY,SAAEz2B,KAAK02B,SAO7FP,IAAkBtoB,KAAKhC,cAAegC,KAAKhC,aAAa0oB,aAAa,QAAU4B,EAAgBI,iBAC3FJ,EAAkBtoB,KAAKhC,eAAiBsqB,EAAgBtqB,aAAuBgC,KAAKjP,QAAQ6S,eAAe0P,UAC3G7Z,EAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAGxE,cAArBiP,KAAK6nB,aAA+C,cAAhB7nB,KAAKK,SAA2BL,KAAKjP,QAAQ6S,eAAe0P,SAC7FgV,GAAkBtoB,KAAKhC,cAAegC,KAAKhC,aAAa0oB,aAAa,QAAU4B,EAAgBI,iBAC3FJ,EAAkBtoB,KAAKhC,eAAiBsqB,EAAgBtqB,cAAuBsqB,GAAkBA,EAAgBS,gBACjHjsB,EAAYkD,KAAK+b,yBAA0B,aAC3C/b,KAAK+b,6BAIQ,cAArB/b,KAAK6nB,aAA+B7nB,KAAKjP,QAAQ6S,eAAe0P,SAChErW,EAAa+C,KAAK8nB,0BAA2B,aAEjD9nB,KAAKgc,YAAc,GACnBiM,GAAmB,CAEvB,OAAOA,IAKXL,EAAiBrxB,UAAUwhB,iBAAmB,WACtC/X,KAAKjP,QAAQo2B,aAGjBnnB,KAAKjP,QAAQq2B,GAAGvY,UAAQ2I,eAAgBxX,KAAKgoB,UAAWhoB,OAK5D4nB,EAAiBrxB,UAAUshB,oBAAsB,WACzC7X,KAAKjP,QAAQo2B,aAGjBnnB,KAAKjP,QAAQs2B,IAAIxY,UAAQ2I,eAAgBxX,KAAKgoB,YAKlDJ,EAAiBrxB,UAAUomB,cAAgB,WACvC,MAAO,oBAOXiL,EAAiBrxB,UAAUma,QAAU,SAAUxe,GAC3C8N,KAAK6X,uBAEF+P,KAMPoB,GAAkC,WAClC,QAASA,GAAiB92B,GACtB8N,KAAKipB,4BACLjpB,KAAKkpB,6BACLlpB,KAAKmpB,aAAc,EACnBnpB,KAAK+oB,cAAe,EACpB/oB,KAAKjP,QAAUmB,EACf8N,KAAK+X,mBAwKT,MAlKAiR,GAAiBzyB,UAAUgjB,UAAY,SAAUvmB,GAC7C,GACI2V,GACA8Q,EAIA5c,EAGAqrB,EACAh1B,EACAi1B,EAXAnN,EAAYhoB,EAAEqN,OAGdtP,EAAUiP,KAAKjP,QACfiB,KACAymB,EAAWuC,EAAU9uB,GAErBu8B,KAKAW,EAAYr4B,EAAQwrB,kBACpB8M,EAAkBrpB,KAAKjP,QAAQ+qB,uBAC/Bb,EAAWlqB,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQuT,WAAa,SACvE,IAAImU,EAAShtB,QAAQ,gBAAkB,EAEnC,GADAuH,EAAE6lB,iBACE7Y,KAAKwoB,cAAgB/P,GAAYzY,KAAK+oB,aAAc,CACpDb,EAAiBn8B,SAASC,eAAeivB,GACzCpe,EAAO9L,EAAQwB,OAAOC,YAAYykB,WAAWwB,EAASxoB,MAAM,KAAK,IAC7DwN,OAAQ,EACZ,IAAIuC,KAAKjP,QAAQ6S,eAAe0P,QAAS,CACrCtT,KAAKmpB,aAAc,CACnB,IAAIG,GAAWtpB,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBlQ,OAC9DqP,EAAaiD,KAAKjP,QAAQ4M,oBAAoBC,iBAClDoC,MAAKhC,iBAAexS,GACpBsR,EAAYkD,KAAKipB,yBAA0B,aACvCI,IACAA,EAAgBxB,YAAc,YAC9BwB,EAAgBtN,6BAEpBte,EAAQD,EAAe8rB,EAAUzsB,EAAM9L,GACvCiP,KAAKhC,aAAoD,YAArCgC,KAAKjP,QAAQ6S,eAAe3R,KAAqBlG,SAASC,eAAe,gCAAkCyR,GAAS1R,SAASC,eAAe,0BAA4ByR,GAClK,OAAtBuC,KAAKhC,eACLgC,KAAK2oB,cAAgB3oB,KAAKhC,aAAa0oB,aAAa,MACpD1mB,KAAKipB,yBAAyB92B,MAAO+L,UAAW8B,KAAKhC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgD,KAAKhC,aAAcorB,EAAUz5B,KAAMy5B,EAAU55B,QAAS45B,EAAUjnB,OAAOtT,MAAOu6B,EAAUjnB,OAAO3U,MAAMiG,aAGtH00B,EAASp2B,EAAoB8K,KAAUusB,EAAUn3B,KAAMlB,EACvD,KAAK,GAAItD,GAAI,EAAGA,EAAIy6B,EAAejU,kBAAmBxmB,IAClDyF,EAAUg1B,EAAetuB,WAAWnM,GACpCoP,EAAO9L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IACpDk4B,EAAO18B,QAAQoR,EAAqB,iBAAM,IAC1C4rB,EAAkBt2B,KAAKe,GACvBlB,EAAMG,KAAK0K,GAGnBpD,GAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAC1FiP,KAAKwoB,YAAc/P,CAEnB,KAAK,GADD4P,GAAoBt8B,SAASwR,uBAAuB,oBAC/CJ,EAAI,EAAGA,EAAIsrB,EAAkB/6B,OAAQyP,IAAK,CAE/C,GADAjK,EAAUu1B,EAAkBtrB,GACxBkrB,EAAkB36B,OAAS,EAC3B,IAAK,GAAI0E,GAAI,EAAGA,EAAIi2B,EAAkB36B,OAAQ0E,IACtCi2B,EAAkBj2B,GAAGlG,KAAOgH,EAAQhH,IACpCm8B,EAAkBj2B,GAAGyH,UAAUtF,OAAO,oBAE1CoF,EAAazG,EAAQ0G,WAAW,IAAMuI,OAAQinB,EAAUjnB,OAAQxS,KAAMy5B,EAAUz5B,KAAMH,QAAS45B,EAAU55B,UACzG0D,EAAQ2G,UAAUyW,IAAI,wBAI1B3W,GAAazG,EAAQ0G,WAAW,IAAMuI,OAAQinB,EAAUjnB,OAAQxS,KAAMy5B,EAAUz5B,KAAMH,QAAS45B,EAAU55B,UACzG0D,EAAQ2G,UAAUyW,IAAI,mBAE1B3H,IAAciC,QAAQ,EAAO1Z,KJtPvB,eIsP2CH,QAASA,EAASiB,MAAOA,EAAO0H,SAAU+uB,GAC3FhP,GAAoB7O,QAAQ,EAAO1Z,KJvP7B,eIuPiDc,MAAOA,EAAO0H,SAAU+uB,GAC/E13B,EAAQia,QJxPF,eIwPwBja,EAAQ+Z,SAAW2O,EAAkB9Q,QAIvE7L,GAAYkD,KAAKipB,yBAA0B,aAC3CjpB,KAAKhC,iBAAexS,GACpBwU,KAAKmpB,aAAc,EACnBnpB,KAAK2oB,cAAgB,GACrBlvB,EAAiB1N,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAC1FiP,KAAKwoB,YAAc,OAGtB,IAAI/P,EAAShtB,QAAQ,kBAAoB,GAAKgtB,EAAShtB,QAAQ,kBAAoB,EAAG,CACnFsR,EAAaiD,KAAKjP,QAAQ4M,oBAAoBC,iBAClD,IAAIoC,KAAKjP,QAAQ6S,eAAe0P,SAAWtT,KAAK0oB,iBAAmBjQ,GAAYzY,KAAKmpB,YAAa,CAC7F,GAGII,GAHA9rB,MAAQ,GACR+a,MAAY,GACZjV,MAAa,EAEjBvD,MAAK0oB,eAAiBjQ,EACtBzY,KAAK+oB,cAAe,CACpB,IAAIzG,GAAc52B,SAAS+sB,EAASA,EAAS/qB,OAAS,GAAI,IACtD87B,EAAcz9B,SAASC,eAAeysB,EAC1Cxb,GAAa+C,KAAKkpB,0BAA2B,aACzCG,IACAA,EAAgBxB,YAAc,aAElCpqB,EAA6C,YAArCuC,KAAKjP,QAAQ6S,eAAe3R,KAAqBglB,WAAWwB,EAASxoB,MAAM,KAAK,IAAMgnB,WAAWwB,EAASxoB,MAAM,KAAK,GAE7H,KAAK,GADDyN,GAAasC,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAE/P,OAChFyP,EAAI,EAAGA,EAAIO,EAAYP,IAC5B,IAAK,GAAIkZ,GAAI,EAAGA,EAAIrW,KAAKjP,QAAQwB,OAAOC,YAAY9E,OAAQ2oB,IACxD,GAAIrW,KAAKjP,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAEN,GAAmB,iBAAM6C,KAAKjP,QAAQwB,OAAOC,YAAY6jB,GAAmB,eAAG,CACvJmC,EAAYnC,EACZ9S,EAAavD,KAAKjP,QAAQwB,OAAOC,YAAY6jB,GAAe,UAC5D,IAAIwS,GAAU98B,SAASC,eAAe,yBAA2BuX,EAAa,eAAiBiV,EAAY,YACjG,KAANrb,IACAU,EAAemC,KAAKkpB,0BAA2B5G,EAAajM,EAAGmT,EAAaX,EAAS7oB,KAAKjP,QAAQwB,OAAOC,YAAauK,GACtHwsB,EAAWvpB,KAAKkpB,0BAA0Bx7B,OAC1CsS,KAAKkpB,0BAA0BK,EAAW,GAAoB,iBAAMT,cAExE9rB,EAASwsB,EAAaJ,EAAUz5B,KAAMy5B,EAAU55B,QAAS45B,EAAUjnB,OAAOtT,MAAOu6B,EAAUjnB,OAAO3U,MAAMiG,YACxGuJ,EAAS6rB,EAASO,EAAUz5B,KAAMy5B,EAAU55B,QAAS45B,EAAUjnB,OAAOtT,MAAOu6B,EAAUjnB,OAAO3U,MAAMiG,YACpG81B,EAAWvpB,KAAKkpB,0BAA0Bx7B,OAC1CsS,KAAKkpB,0BAA0BK,EAAW,GAAoB,gBAAY,SAAEp3B,KAAK02B,QAM7F5rB,GAAa+C,KAAKkpB,0BAA2B,aACzCG,IACAA,EAAgBxB,YAAc,aAElC7nB,KAAK+oB,cAAe,EACpB/oB,KAAK0oB,eAAiB,KAOlCM,EAAiBzyB,UAAUwhB,iBAAmB,WACtC/X,KAAKjP,QAAQo2B,aAGjBnnB,KAAKjP,QAAQq2B,GAAGvY,UAAQyI,gBAAiBtX,KAAKuZ,UAAWvZ,OAK7DgpB,EAAiBzyB,UAAUshB,oBAAsB,WACzC7X,KAAKjP,QAAQo2B,aAGjBnnB,KAAKjP,QAAQs2B,IAAIxY,UAAQyI,gBAAiBtX,KAAKuZ,YAKnDyP,EAAiBzyB,UAAUomB,cAAgB,WACvC,MAAO,oBAOXqM,EAAiBzyB,UAAUma,QAAU,SAAUxe,GAC3C8N,KAAK6X,uBAEFmR,KCvXPnmB,GAAkC,SAAUC,EAAG9P,GAC/C,GAAI+P,KACJ,KAAK,GAAIlD,KAAKiD,GAAOjR,OAAO0E,UAAUuJ,eAAetJ,KAAKsM,EAAGjD,IAAM7M,EAAEvH,QAAQoU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCjR,QAAOmR,sBAC3B,IAAK,GAAIvV,GAAI,EAAGoS,EAAIhO,OAAOmR,sBAAsBF,GAAIrV,EAAIoS,EAAEnS,OAAQD,IAASuF,EAAEvH,QAAQoU,EAAEpS,IAAM,IAC1FsV,EAAElD,EAAEpS,IAAMqV,EAAEjD,EAAEpS,IACtB,OAAOsV,IASP0mB,GAAgC,WAChC,QAASA,GAAev3B,GACpB8N,KAAKjP,QAAUmB,EACf8N,KAAKmc,gBAAkBnc,KAAKjP,QAAQorB,gBACpCnc,KAAK0pB,UAAY1pB,KAAKjP,QAAQmC,QAAQhH,GAAK,kBAC3C8T,KAAK+X,mBAwLT,MArLA0R,GAAelzB,UAAUozB,cAAgB,SAAU32B,GAC/C,GACIkC,GACAC,EACAkL,EACAupB,EACAC,EALAjhB,EAAQ5I,MAMqB,IAA7BhN,EAAEhF,KAAKvC,QAAQ,UACfuU,KAAK8pB,SAAU,EAEf50B,GADA00B,EAAW52B,GACMmzB,eAAe,GAAGjxB,MACnCC,EAAQy0B,EAASzD,eAAe,GAAGhxB,MACnCkL,EAASupB,EAASvpB,SAGlBL,KAAK8pB,QAA4B,UAAlB92B,EAAE+2B,YACjB70B,EAAQlC,EAAEkC,MACVC,EAAQnC,EAAEmC,MACVkL,EAASrN,EAAEqN,OAEf,IAAI/U,GAGA0+B,EACAn8B,EAIAo8B,EAPAxR,EAAWpY,EAAOnU,GAClB2Q,KAIAqtB,KACAC,IAEJ,IAAI1R,EAAShtB,QAAQ,gBAAkB,GAEnC,GADAoR,EAAOmD,KAAKjP,QAAQwB,OAAOC,YAAYykB,WAAWwB,EAASxoB,MAAM,KAAK,MACjEJ,oBAAkBgN,GAwCnB,GAvCgBA,EAAW,KAC3BvR,EAAQuR,EAAa,OACrBqtB,EAAcrtB,EAAW,KACzBotB,EAAaptB,EAAc,QAAQ,KAE/BstB,EADAnqB,KAAKjP,QAAQsZ,WACKtQ,EAAciG,KAAKmc,gBAAgBniB,OAAQkwB,EAAalqB,KAAKjP,UACvEsJ,EAAY/O,EAAO0U,KAAKjP,SAAW,MAAQiP,KAAKjP,QAAQS,gBAAgBiC,aAG9DsG,EAAciG,KAAKmc,gBAAgBniB,OAAQkwB,EAAalqB,KAAKjP,UACvEiP,KAAKjP,QAAQS,gBAAgBiC,WAAa,MAAQ4G,EAAY/O,EAAO0U,KAAKjP,UAElFhF,SAASC,eAAegU,KAAK0pB,WAC7BM,EAAaj+B,SAASC,eAAegU,KAAK0pB,YAG1CM,EAAa/9B,gBAAc,OACvBC,GAAI8T,KAAKjP,QAAQmC,QAAQhH,GAAK,kBAC9Byd,UAAW,sBACXtW,OAAQ,4CAEZtH,SAASC,eAAegU,KAAKjP,QAAQmC,QAAQhH,GAAK,sBAAsBE,YAAY49B,IAExFn8B,EAAWoH,EAAiBC,EAAOC,EAAO6K,KAAKjP,QAAQwa,WACvD1d,EAASK,EAAK8R,KAAKmc,yBAA4BtuB,EAASK,EAAI,GAAKL,EAASK,EAC1E8R,KAAKmc,gBAAgBjT,UAAUtc,WAAaoT,KAAKmc,gBAAgBjT,UAAUtc,YACpEoT,KAAKjP,QAAQyZ,WAAW5d,WAC/BoT,KAAKmc,gBAAgBjT,UAAUra,MAAQmR,KAAKmc,gBAAgBjT,UAAUra,OAC/DmR,KAAKjP,QAAQyZ,WAAWtL,iBAC/Bc,KAAKmc,gBAAgBjT,UAAU1Z,QAAUwQ,KAAKmc,gBAAgBjT,UAAU1Z,QACxEq6B,GACIjf,QAAQ,EAAO1Z,KLxCL,mBKwC6B2L,KAAMA,EAC7CjO,SACIf,SAAUA,EAAUjC,KAAMu+B,EAAgBz4B,KAAMw4B,EAChDhhB,UAAWlJ,KAAKmc,gBAAgBjT,UAAWxW,SAAUsN,KAAKmc,gBAAgBzpB,UAE9E3B,QAASiP,KAAKjP,QACdmC,QAASmN,EAAQsI,UAAW3V,GAE5BgN,KAAKjP,QAAQ+Z,SAAU,CACvB,GAAIsf,IACAxf,QAAQ,EACR/c,SAAUg8B,EAAWj7B,QAAkB,SACvChD,KAAMi+B,EAAWj7B,QAAc,KAC/Bsa,UAAW2gB,EAAWj7B,QAAmB,UACzC8C,KAAMm4B,EAAWj7B,QAAc,KAC/B8D,SAAUm3B,EAAWj7B,QAAkB,SACvCsC,KLxDM,mBK0DV8O,MAAKjP,QAAQia,QL1DH,mBK0D6Bof,EAAe,SAAUnX,GAC5DrK,EAAMyhB,WAAW,KAAMJ,EAAYD,EAAYI,SAInDpqB,MAAKjP,QAAQia,QL/DH,mBK+D6B6e,EAAY,SAAU5W,GACzDrK,EAAMyhB,WAAWR,EAAYI,EAAYD,SAMrDhqB,MAAK4b,iBAGb6N,EAAelzB,UAAU8zB,WAAa,SAAUR,EAAYI,EAAYD,EAAYrhB,GAChF,GAAIiC,GACAqI,EACAzlB,EAAQwS,KAAKjP,QAAQorB,gBAAgBha,OAAO3U,MAC5CqB,EAAQmR,KAAKjP,QAAQorB,gBAAgBha,OAAOtT,KAC3CgB,qBAAkBg6B,IAMnBjf,EAASjC,EAAUiC,OACnBqI,EAAOtK,IALPiC,EADQif,EAAWjf,OAEnBqI,EAFuCpQ,GAAOgnB,GAAa,WAE1Cj7B,SAMhBgc,EAqBD5K,KAAK4b,iBApBL5b,KAAKsqB,WAAa,GAAIC,YAClBjO,QAAQ,EACRkO,OAAQ,GACR94B,KAAMuhB,EAAW,KACjBvgB,SAAUugB,EAAe,SACzBwX,QAASxX,EAAW,KACpByX,UACA78B,SAAUolB,EAAe,SACzBtG,SAAUsd,GACVU,WAAY3qB,KAAKjP,QAAQ+C,SACzBoV,UAAW+J,EAAgB,UAC3B2X,gBAAkB15B,KAAM,kBAAmBpC,OAAQkR,KAAKjP,QAAQorB,mBAEpEnc,KAAKsqB,WAAW96B,QAAUwQ,KAAKjP,QAAQorB,gBAAgB3sB,SAAWwQ,KAAKjP,QAAQyZ,WAAWrL,mBAC1Fa,KAAKsqB,WAAW36B,KAAOqQ,KAAKjP,QAAQorB,gBAAgBxsB,MAAQqQ,KAAKjP,QAAQyZ,WAAWvL,iBACpFe,KAAKsqB,WAAWnoB,OAAO3U,MAAmB,IAAVA,EAAewS,KAAKjP,QAAQyZ,WAAWnN,YAAc7P,EACrFwS,KAAKsqB,WAAWnoB,OAAOtT,MAAmB,YAAVA,EAAuBmR,KAAKjP,QAAQyZ,WAAWpN,YAAcvO,EAC7FmR,KAAKsqB,WAAWO,SAASb,KAMjCP,EAAelzB,UAAU0wB,eAAiB,SAAUj0B,GAChDgN,KAAK2pB,cAAc32B,GACnBolB,aAAapY,KAAKoY,cAClBpY,KAAKoY,aAAeE,WAAWtY,KAAK4b,cAAc5D,KAAKhY,MAAO,MAElEypB,EAAelzB,UAAUqlB,cAAgB,WACjC7vB,SAASwR,uBAAuB,uBAAuB7P,OAAS,GAChE3B,SAASwR,uBAAuB,uBAAuB,GAAGhJ,UAMlEk1B,EAAelzB,UAAUwhB,iBAAmB,WACpC/X,KAAKjP,QAAQo2B,cAGjBnnB,KAAKjP,QAAQq2B,GAAGvY,UAAQ2I,eAAgBxX,KAAK2pB,cAAe3pB,MAC5DA,KAAKjP,QAAQq2B,GAAGvY,UAAQ6I,cAAe1X,KAAKinB,eAAgBjnB,QAKhEypB,EAAelzB,UAAUshB,oBAAsB,WACvC7X,KAAKjP,QAAQo2B,cAGjBnnB,KAAKjP,QAAQs2B,IAAIxY,UAAQ2I,eAAgBxX,KAAK2pB,eAC9C3pB,KAAKjP,QAAQs2B,IAAIxY,UAAQ6I,cAAe1X,KAAKinB,kBAKjDwC,EAAelzB,UAAUomB,cAAgB,WACrC,MAAO,kBAOX8M,EAAelzB,UAAUma,QAAU,SAAUxe,GAIzC8N,KAAK6X,uBAEF4R,WC5MXqB,IAAcC,OAAOC,GAAsBC,GAAqBC,GAAwBC,wTNMtE,gBAKE,uBAKK,8BAKE,6BAKH,wBAKF,0BAKI,+BAKC,mCAKG,+BAKP,uBAKD,mBAKH,sBAKM,2BAKD,yBAKD,kCAKU,wCAKJ,2BAKT"}