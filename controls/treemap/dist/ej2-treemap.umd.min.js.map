{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/model/theme.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                totalRect = this.treemap.totalRect;\n            }\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.themeEffect();\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    /**\n     * To change font styles of map based on themes\n     */\n    TreeMap.prototype.themeEffect = function () {\n        var theme = this.theme.toLowerCase();\n        switch (theme) {\n            case 'material':\n            case 'bootstrap':\n            case 'fabric':\n            case 'highcontrastlight':\n                this.setTextStyle('#424242', null);\n                break;\n            case 'highcontrast':\n                this.setTextStyle('#FFFFFF', null);\n                break;\n            case 'materialdark':\n            case 'bootstrapdark':\n            case 'fabricdark':\n                this.setTextStyle('#FFFFFF', '#DADADA');\n                break;\n        }\n    };\n    TreeMap.prototype.setTextStyle = function (color, darkColor) {\n        this.titleSettings.textStyle.color = this.titleSettings.textStyle.color || color;\n        this.titleSettings.subtitleSettings.textStyle.color = this.titleSettings.subtitleSettings.textStyle.color || color;\n        this.legendSettings.textStyle.color = this.legendSettings.textStyle.color || !isNullOrUndefined(darkColor) ? darkColor : color;\n        this.legendSettings.titleStyle.color = this.legendSettings.titleStyle.color || color;\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var themes = this.theme.toLowerCase();\n        var color = (themes.indexOf('dark')) > -1 || themes === 'highcontrast' ? '#000000' : '#FFFFFF';\n        this.background = this.background ? this.background : color;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if (isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else {\n            borderElement.setAttribute('fill', this.background);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color, groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var templateID = this.element.id + '_Label_Template_Group';\n        if (document.getElementById(templateID)) {\n            document.getElementById(templateID).remove();\n        }\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + totalRect.height);\n                    totalRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var formatFunction;\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            toolTipHeader = item['name'];\n            value = item['weight'];\n            this.currentTime = new Date().getTime();\n            toolTipData = item['data'];\n            markerFill = item['options']['fill'];\n            tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                    this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n            if (document.getElementById(this.tooltipId)) {\n                tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                tooltipEle = createElement('div', {\n                    id: this.treemap.element.id + '_TreeMapTooltip',\n                    className: 'EJ2-TreeMap-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n            }\n            location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n            location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n            tootipArgs = {\n                cancel: false, name: tooltipRendering, item: item,\n                options: {\n                    location: location, text: tooltipContent, data: toolTipData,\n                    textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                },\n                treemap: this.treemap,\n                element: target, eventArgs: e\n            };\n            this.treemap.trigger(tooltipRendering, tootipArgs);\n            if (!tootipArgs.cancel) {\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    header: '',\n                    data: tootipArgs.options['data'],\n                    template: tootipArgs.options['template'],\n                    content: tootipArgs.options['text'],\n                    shapes: [],\n                    location: tootipArgs.options['location'],\n                    palette: [markerFill],\n                    areaBounds: this.treemap.areaRect,\n                    textStyle: tootipArgs.options['textStyle']\n                });\n                this.svgTooltip.appendTo(tooltipEle);\n            }\n            else {\n                this.removeTooltip();\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","mouseMove","legendItemRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","backgroundColor","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","TreeMap","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","themeEffect","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","theme","toLowerCase","setTextStyle","darkColor","subtitleSettings","titleStyle","childElementCount","secondaryElement","legendGroup","insertBefore","themes","background","borderElement","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","_loop_1","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","startEvent","endEvent","targetEle","newDrillItem","layoutID","templateID","textContent","widthIncrement","heightIncrement","drilledLegendItems","notify","moveArgs","cursor","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","Theme","mapsTitleFont","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","legendFillColor","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","mouseDown","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","currentTime","Date","getTime","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}