{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            if (leaf.labelTemplate) {\n                for (var i = 0; i < templateGroup.childElementCount; i++) {\n                    updateBlazorTemplate(templateGroup.children[i].id, 'LabelTemplate');\n                }\n            }\n            else {\n                for (var j = 0; j < templateGroup.childElementCount; j++) {\n                    updateBlazorTemplate(templateGroup.children[j].id, 'HeaderTemplate');\n                }\n            }\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        _this.svgTooltip = new Tooltip({\n                            enable: true,\n                            header: '',\n                            data: observedArgs.options['data'],\n                            template: observedArgs.options['template'],\n                            content: observedArgs.options['text'],\n                            shapes: [],\n                            location: observedArgs.options['location'],\n                            palette: [markerFill],\n                            areaBounds: _this.treemap.areaRect,\n                            textStyle: observedArgs.options['textStyle']\n                        });\n                        _this.svgTooltip.opacity = _this.treemap.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                        updateBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                    else {\n                        _this.removeTooltip();\n                        resetBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            resetBlazorTemplate(this.treemap.element.id + 'Template', 'Template');\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","childElementCount","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","targetEle","layoutID","templateID","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","resetBlazorTemplate","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"6dAYA,SACgBA,EAAeC,EAAOC,GAClC,OAAc,OAAVD,QAA4BE,IAAVF,GACa,IAAxBA,EAAMG,QAAQ,KAAeF,EAAgB,IAAOG,SAASJ,EAAO,IAAMI,SAASJ,EAAO,IAE9F,KAyDX,SAAgBK,EAAYC,EAAMC,GAC9B,IAAIC,EAAgBC,SAASC,eAAe,sBAiB5C,OAhBsB,OAAlBF,IACAA,EAAgBG,gBAAc,QAAUC,GAAI,uBAC5CH,SAASI,KAAKC,YAAYN,IAE9BA,EAAcO,UAAYT,EAC1BE,EAAcQ,MAAMC,SAAW,WAC/BT,EAAcQ,MAAME,SAAWX,EAAKY,KACpCX,EAAcQ,MAAMI,WAAab,EAAKa,WACtCZ,EAAcQ,MAAMK,UAAYd,EAAKc,UACrCb,EAAcQ,MAAMM,WAAaf,EAAKe,WACtCd,EAAcQ,MAAMO,WAAa,SACjCf,EAAcQ,MAAMQ,IAAM,OAC1BhB,EAAcQ,MAAMS,KAAO,IAC3BjB,EAAcQ,MAAMU,WAAa,SAEjClB,EAAcQ,MAAMW,WAAa,SAC1B,IAAIC,GAAKpB,EAAcqB,YAAarB,EAAcsB,cA2B7D,SAAgBC,EAASC,EAAU1B,EAAMC,GACrC,IAAI0B,EAAQ3B,EACRa,EAAOd,EAAYC,EAAMC,GAAM2B,MACnC,GAAIf,EAAOa,EAEP,IAAK,IAAIG,EADQ7B,EAAK8B,OACI,EAAGD,GAAK,IAAKA,EAGnC,GAFAF,EAAQ3B,EAAK+B,UAAU,EAAGF,GAAK,OAC/BhB,EAAOd,EAAY4B,EAAO1B,GAAM2B,QACpBF,GAAYC,EAAMG,OAAS,EAInC,OAHIH,EAAMG,OAAS,IACfH,EAAQ,KAELA,EAInB,OAAOA,EAgBX,SAAgBK,EAAaC,EAAUC,EAAWC,EAAUC,GACxD,IAAIC,EACAC,EACJ,OAAQJ,GACJ,IAAK,OACDG,EAAIJ,EAASI,EACb,MACJ,IAAK,SACDA,EAAc,UAATD,EAAqBH,EAASL,MAAQ,EAAIO,EAASP,MAAQ,EAC1DK,EAASI,EAAKJ,EAASL,MAAQ,EAAMO,EAASP,MAAQ,EAC5D,MACJ,IAAK,MACDS,EAAc,UAATD,EAAqBH,EAASL,MAAQK,EAASK,EAAIH,EAASP,MAC3DK,EAASI,EAAIJ,EAASL,MAASO,EAASP,MAItD,OADAU,EAAc,UAATF,EAAoBH,EAASK,EAAKH,EAASI,OAAS,EAAON,EAASK,EAAIL,EAASM,OAAS,EAAKJ,EAASI,OAAS,EAC/G,IAAIC,GAASH,EAAGC,GAE3B,SAAgBG,EAAgBC,EAAUC,EAAe3C,GACrD,IAAI4C,EAUJ,OATAA,EAAaF,EAASG,WAAWF,EAAe3C,IACrC8C,eAAe,uCAAwC,YAAa,YAC/EF,EAAWlC,MAAM,eAAiB,OAClCkC,EAAWlC,MAAM,oBAAsB,OACvCkC,EAAWlC,MAAM,yBAA2B,OAC5CkC,EAAWlC,MAAM,uBAAyB,OAC1CkC,EAAWlC,MAAM,sBAAwB,OACzCkC,EAAWlC,MAAM,mBAAqB,OACtCkC,EAAWlC,MAAM,kBAAoB,OAC9BkC,EAOX,SAAgBG,EAAkBC,EAAS/C,EAAMgD,EAAOC,EAAQC,QAC5C,IAAZA,IAAsBA,GAAU,GACpC,IAeIC,EAEAb,EACAK,EAlBAD,GACAU,YAAapD,EAAKY,KAClByC,aAAcrD,EAAKc,UACnBwC,cAAetD,EAAKe,WACpBwC,cAAevD,EAAKa,WACpB2C,cAAeT,EAAQU,OACvBC,UAAaX,EAAQW,UACrBC,QAAW3D,EAAK2D,QAChBC,oBAAqBb,EAAQc,SAC7BxD,GAAM0C,EAAQ1C,GACd+B,EAAKW,EAAQX,EACbC,EAAKU,EAAQV,EACbyB,KAAQd,GAERjD,EAA+B,iBAAjBgD,EAAQhD,KAAoBgD,EAAQhD,KAAOmD,EAAUH,EAAQhD,KAAKgD,EAAQhD,KAAK8B,OAAS,GAAKkB,EAAQhD,KAAK,GAExH0C,EAAW,IAAIsB,cAAY,IAK/B,IAFsBC,oBAAkBjE,KAAUiE,oBAAkBjB,EAAQkB,gBACvElE,EAAKmE,OAAOnB,EAAQkB,cAAc,KAAO,EAC1B,CAChB,IACIE,OAAiB,EAErBA,EAHmBpE,EAGWqE,MAAM,KACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAetC,OAAQwC,IAAK,CAC5C,IAAIC,GAAkE,IAArDH,EAAeE,GAAGH,OAAOnB,EAAQkB,gBAA0BD,oBAAkBjB,EAAQkB,eAC1EE,EAAeE,GAAvCtB,EAAQkB,cAGZ,GAFAvB,EAAkB,GAAIK,EAAQ1C,GAAK,IAAMgE,EACzC1B,EAAaH,EAAgBC,EAAUC,EAAe4B,GAClDD,EAAI,GAAM,GAAW,IAANA,EAAS,CAExBC,EAAYA,EAAUC,QADb,OACyB,SAEtC,IAAI3D,EAAOd,EAAYwE,EAAWtE,GAClC0C,EAAiB,EAAU,IAAN2B,EAAU3B,EAAiB,EAAI9B,EAAKe,MAAQe,EAAiB,EAAI9B,EAAKe,MAZjF,EAaVsB,EAAO1C,YAAYoC,SAIvBA,EAAaH,EAAgBC,EAAUC,EAAe3C,GACtDkD,EAAO1C,YAAYoC,GAEvB,GAA4B,iBAAjBI,EAAQhD,MAAqBgD,EAAQhD,KAAK8B,OAAS,EAAG,CAC7D,IAAK,IAAID,EAAI,EAAG4C,EAAMzB,EAAQhD,KAAK8B,OAAQD,EAAI4C,EAAK5C,IAChDU,EAAUxC,EAAYiD,EAAQhD,KAAK6B,GAAI5B,GAAY,OACnDmD,EAAeV,EAASgC,aACpBrC,EAAKW,EAAQX,EAAG/B,GAAM0C,EAAQ1C,GAC9BgC,EAAMU,EAAS,EAAKnB,EAAIU,GACzBS,EAAQhD,KAAK6B,IAChBe,EAAWpC,YAAY4C,GAE3BF,EAAO1C,YAAYoC,GAEvB,OAAOA,EAEX,SAAgB+B,EAAWrE,GACvB,OAAOH,SAASC,eAAeE,GAGnC,SAAgBsE,EAAaC,EAAGC,GAC5B,OAAOD,EAAU,SAAMC,EAAU,OAAI,EAAID,EAAU,OAAIC,EAAU,OAAI,GAAK,EAE9E,SAAgBC,EAAeC,EAAQC,EAAUC,EAAaC,GAK1D,IAAK,IAFDC,EAFAC,GAAU,EACVC,EAAO,GAEPC,EAAOJ,EAAQK,iBACV3D,EAAI,EAAGA,EAAImD,EAAOlD,OAAQD,IAE/B,GADAuD,EAAOD,EAAQM,OAAO5D,GAAKsD,EAAQM,OAAO5D,GAAG6D,UAAYH,EAAKI,UAAYJ,EAAKI,UAAYR,EAAQS,gBAC/FZ,EAAOnD,KAAOqD,EAAYE,KAC1BE,GAASJ,EAAYE,IAAUvD,IAAMmD,EAAOlD,OAAS,EAAI,GAAK,QACjDmD,EAAU,CACnBI,GAAU,EACV,MAIZ,OAAOA,EAEX,SAAgBQ,EAAaC,GACzB,IAAIC,EACJ,GAAID,EAAM,CACN,IAAIE,EAAOC,OAAOD,KAAKF,GACvBC,EAAW,IAAIE,OACf,IAAK,IAAIpE,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B,GAAIiE,EAAKE,EAAKnE,cAAeqE,MAAO,CAChCH,EAAiB,OAAID,EAAKE,EAAKnE,IAC/BkE,EAAc,IAAIC,EAAKnE,GACvB,OAIZ,OAAOkE,EAEX,SAAgBI,EAAoBL,EAAMM,EAAOC,EAAMC,GACnD,GAAa,UAATD,EAAkB,CAClBD,EAAMG,KAAKT,EAAqB,gBAChC,IAAIC,EAAWF,EAAaC,GAAc,OAC1C,GAAIC,GAAYA,EAASjE,OAAS,EAAG,CACjC,IAAK,IAAID,EAAI,EAAGA,EAAIkE,EAASjE,OAAQD,KACqB,IAAlDuE,EAAMvG,QAAQkG,EAASlE,GAAmB,iBAC1CuE,EAAMG,KAAKR,EAASlE,GAAmB,gBAG/C,IAAK,IAAI2E,EAAI,EAAGA,EAAIT,EAASjE,OAAQ0E,IACjCL,EAAoBJ,EAASS,GAAIJ,EAAOC,EAAMC,SAIrD,GAAa,WAATD,EACiC,iBAA3BP,EAAqB,iBAA6D,IAA3CM,EAAMvG,QAAQiG,EAAqB,kBACjFM,EAAMG,KAAKT,EAAqB,gBAChCK,EAAoBL,EAAa,OAAGM,EAAOC,EAAMC,SAGpD,GAAa,QAATD,EAGA,CAAA,IAFDI,EAAaX,EAAqB,eAAEzB,MAAM,KAAK,GAC/CqC,OAAc,EAClB,IAAS7E,EAAI,EAAGA,EAAIyE,EAAQK,OAAOC,YAAY9E,OAAQD,KACnD6E,EAAcJ,EAAQK,OAAOC,YAAY/E,IACP,eAAEhC,QAAQ4G,IAAe,IAAuD,IAAlDL,EAAMvG,QAAQ6G,EAA4B,iBACtGN,EAAMG,KAAKG,EAA4B,qBAK/CN,EAAMG,KAAKT,EAAqB,gBAEpC,OAAOM,EAOX,SAAgBS,EAAoBC,GAChC,IAAIC,EAAa,KACjB,IAEQ5G,SAAS6G,iBAAiBF,GAAUhF,SACpCiF,EAAaE,UAAQ9G,SAAS+G,cAAcJ,GAAUrG,UAAU0G,SAGxE,MAAOC,GACHL,EAAaE,UAAQH,GAEzB,OAAOC,EAKX,SAAgBM,EAAeC,EAASC,EAASzB,GAK7C,IAJA,IAAI0B,EAAenH,gBAAc,OAC7BC,GAAIiH,EACJE,OAAQ,6CAELH,EAAQxF,OAAS,GACpB0F,EAAahH,YAAY8G,EAAQ,IAIrC,IAAK,IAFDI,EAAeF,EAAa/G,UAC5BuF,EAAOC,OAAOD,KAAKF,GACdjE,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B6F,EAAeA,EAAalD,QAAQ,IAAImD,OAAO,MAAQ3B,EAAKnE,GAAK,KAAM,KAAMiE,EAAKE,EAAKnE,GAAG+F,aAG9F,OADAJ,EAAa/G,UAAYiH,EAClBF,EAEX,SAAgBK,EAAkBC,EAAMnH,EAAUoH,EAAW3F,EAAM+C,GAC/D,IAAIlD,EAAW,IAAIO,GAAS,EAAG,GAI3BH,GADc8C,EAAQmC,QAAQU,wBAChB,aAAT5F,EAAuB+C,EAAQ8C,SAAS5F,EAAI,GACjDC,EAAc,aAATF,EAAuB+C,EAAQ8C,SAAS3F,EAAI,EAYrD,OAXAL,EAASI,EAAK6F,KAAKC,IAAI9F,GAAM1B,EAASd,QAAQ,SAAW,EAAKiI,EAAKzF,EALrD,EAKqE1B,EAASd,QAAQ,UAAY,EACrDiI,EAAKzF,EAAIyF,EAAKlG,MAASmG,EAAUnG,MAAxFkG,EAAKzF,GAAMyF,EAAKlG,MAAQ,EAAMmG,EAAUnG,MAAQ,KALrC,GAMXuD,EAAQiD,iBAAgD,uBAA5BjD,EAAQkD,iBACL,uBAA5BlD,EAAQkD,gBAIXpG,EAASK,EAAI4F,KAAKC,IAAI7F,GAAM3B,EAASd,QAAQ,QAAU,EAAe,aAATuC,EAAsB0F,EAAKxF,EAAIwF,EAAKxF,EAAIyF,EAAUxF,OACzG5B,EAASd,QAAQ,WAAa,EAC2BiI,EAAKxF,EAAIwF,EAAKvF,OAAUwF,EAAUxF,OAD/C,aAATH,EAAuB0F,EAAKxF,GAAMwF,EAAKvF,OAAS,EAAMwF,EAAUxF,OAAS,GACzGuF,EAAKxF,EAAKwF,EAAKvF,OAAS,EAAKwF,EAAUxF,OAAS,IALzDN,EAASK,EAAI4F,KAAKC,IAAKL,EAAKxF,EAAIwF,EAAKvF,OAAUwF,EAAUxF,OAT/C,GAgBPN,EAEX,SAAgBqG,EAAehB,EAASiB,GACpC,IAAI1H,EAAO,IAAIS,GAAK,EAAG,GAKvB,OAJAiH,EAAc/H,YAAY8G,GAC1BzG,EAAK0B,OAAS+E,EAAQkB,aACtB3H,EAAKe,MAAQ0F,EAAQmB,YACrBtI,SAASC,eAAekH,EAAQhH,IAAIoI,SAC7B7H,EAEX,SAAgB8H,EAAQb,GACpB,OAAQA,EAAKlG,MAAQkG,EAAKzF,IAAMyF,EAAKvF,OAASuF,EAAKxF,GAEvD,SAAgBsG,EAAgBC,GAC5B,IAAIC,EAAYC,EAAmBF,GAC/BjH,EAAQkH,EAAUlH,MAClBW,EAASuG,EAAUvG,OAEvB,OADa2F,KAAKc,IAAIpH,EAAOW,GAGjC,SAAgBwG,EAAmBjB,GAC/B,IAAIzF,EAAIyF,EAAKzF,EACTC,EAAIwF,EAAKxF,EAGb,OACID,EAAGA,EACHC,EAAGA,EACHV,MALQkG,EAAKlG,MAKES,EACfE,OALSuF,EAAKvF,OAKGD,GAGzB,SAAgB2G,EAAcH,GAC1B,IAAII,EAAUJ,EAAUzG,EACpB8G,EAAUL,EAAUxG,EAGxB,OACID,EAAG6G,EACH5G,EAAG6G,EACHvH,MAAOsH,EALCJ,EAAUlH,MAMlBW,OAAQ4G,EALCL,EAAUvG,QAQ3B,SAAgB6G,EAAiBC,EAAOC,EAAOhC,GAC3C,IAAIiC,EAAcjC,EAAQU,wBACtBwB,EAAclC,EAAQmC,cAAcC,YAAYF,YAChDG,EAAcrC,EAAQmC,cAAcC,YAAYC,YAChDC,EAAYtC,EAAQmC,cAAcI,gBAAgBD,UAClDE,EAAaxC,EAAQmC,cAAcI,gBAAgBC,WACnDC,EAAYR,EAAYpI,KAAOqI,EAAcM,EAC7CE,EAAYT,EAAYrI,IAAMyI,EAAcC,EAChD,OAAO,IAAIpH,GAAU6G,EAAQU,EAAaT,EAAQU,GAEtD,SAAgBC,EAASC,EAAcC,EAAYzK,EAAOkG,GACtD,IAAI7B,EAEAH,EADAwG,KAEJ,GAAInG,oBAAkBkG,IAAgBlG,oBAAkBvE,IAAU2K,MAAM3K,GACpE,OAAO,KAEX,IAAK,IAAImC,EAAI,EAAGA,EAAIqI,EAAapI,OAAQD,IAAK,CAC1C,IAAIyI,GAAe,EACfC,EAAY7K,EACXuE,oBAAkBiG,EAAarI,GAAG2I,OAAUvG,oBAAkBiG,EAAarI,GAAG4I,KAC3ExG,oBAAkBiG,EAAarI,GAAGnC,QAW/BuE,oBAAkBiG,EAAarI,GAAG2I,OAAUvG,oBAAkBiG,EAAarI,GAAG4I,MACjFxG,oBAAmBiG,EAAarI,GAAQ,SACvCnC,GAASwK,EAAarI,GAAG2I,MAAQN,EAAarI,GAAG4I,IAAM/K,GAAWwK,EAAarI,GAAGnC,QAAUyK,KACzFD,EAAarI,GAAGnC,QAAUyK,IAC1BG,GAAe,GAGfvG,EAD0D,mBAA1DkC,OAAOyE,UAAU9C,SAAS+C,KAAKT,EAAarI,GAAGoB,OACvCqH,EAA8DJ,EAAarI,GAAGoB,MAAM,GAArE2H,EAAiBV,EAAarI,GAAI0I,GAGlDL,EAAarI,GAAGoB,OApB1BvD,GAASwK,EAAarI,GAAG2I,MAAQN,EAAarI,GAAG4I,IAAM/K,GAAWwK,EAAarI,GAAGnC,QAAUyK,IAC7FG,GAAe,EAEXvG,EAD0D,mBAA1DkC,OAAOyE,UAAU9C,SAAS+C,KAAKT,EAAarI,GAAGoB,OACvCqH,EAA8DJ,EAAarI,GAAGoB,MAAM,GAArE2H,EAAiBV,EAAarI,GAAI0I,GAGlDL,EAAarI,GAAGoB,QAkB7BvD,GAASwK,EAAarI,GAAG2I,MAAQ9K,GAASwK,EAAarI,GAAG4I,IAAQP,EAAarI,GAAGnC,QAAUyK,KAC1FlG,oBAAkBiG,EAAarI,GAAGgJ,cAAgB5G,oBAAkBiG,EAAarI,GAAGiJ,aAAe/G,IACvGH,EAAUmH,EAAkBnF,EAAiBsE,EAAarI,GAAIkC,EAAMrE,KAE1D,KAATqE,GAAeE,oBAAkBF,KAC/BE,oBAAkBiG,EAAarI,GAAG2I,OAASvG,oBAAkBiG,EAAarI,GAAG4I,KAC7ExG,oBAAkBiG,EAAarI,GAAGgJ,aAAe5G,oBAAkBiG,EAAarI,GAAGiJ,aACnF7G,oBAAkBiG,EAAarI,GAAGnC,SACrCqE,EAAkE,mBAA1DkC,OAAOyE,UAAU9C,SAAS+C,KAAKT,EAAarI,GAAGoB,OACnDiH,EAAarI,GAAGoB,MAAM,GAAKiH,EAAarI,GAAGoB,OAEnDW,EAAWK,oBAAkBL,GAAqB,IAAVA,EACxCwG,EAAM7D,KAAKxC,GAEf,IAAK,IAAIyC,EAAI4D,EAAMtI,OAAS,EAAG0E,GAAK,EAAGA,IAEnCA,GADAzC,EAAOqG,EAAM5D,KACC,EAAIA,EAEtB,OAASzC,KAAMA,EAAMH,QAASA,GAElC,SAAgBmH,EAAkBnF,EAAiBsE,EAAcjH,EAAO+H,GACpE,IAAIpH,EAAU,EACd,GAAKoH,GAAcd,EAAaM,MAAQQ,GAAcd,EAAaO,GAAK,CAEpE7G,GADaoH,EAAad,EAAaM,OAASN,EAAaO,GAAKP,EAAaM,OAC3DN,EAAaY,WAAaZ,EAAaW,YAAeX,EAAaW,WAE3F,OAAOjH,EAAQgE,WAEnB,SAAgBgD,EAAiBX,EAAUvK,GAEvC,OADmBuL,EAAgBhB,EAAUvK,GAGjD,SAAgBwL,EAASC,EAAGC,EAAGtG,GAC3B,MAAO,IAAMuG,EAAeF,GAAKE,EAAeD,GAAKC,EAAevG,GAExE,SAAgBmG,EAAgBhB,EAAUvK,GACtC,IACI4L,EAWJ,OAVIC,OAAO7L,KAAWuK,EAASO,KACnBP,EAAShH,MAAM,GAElBsI,OAAO7L,KAAWuK,EAASQ,GACxBR,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,GAIvCoJ,GADRI,EAAME,EAAiBD,OAAO7L,GAAQuK,IACjBkB,EAAGG,EAAIF,EAAGE,EAAIxG,GAK3C,SAAgB0G,EAAiB9L,EAAOuK,GACpC,IAAIwB,EAAiBxB,EAASO,KAC1BkB,EAAazB,EAASQ,GACtBkB,EAAU,EAEVC,EAAOF,EAAaD,EAExBE,GACWjM,EAAQ+L,GAAkBG,EACrC,IAAIC,EACAC,EACJ,GAAI7B,EAAShH,MAAMnB,QAAU,EACzB+J,EAAgD,MAAhC5B,EAAShH,MAAM,GAAG8I,OAAO,GAAa9B,EAAShH,MAAM,GAAK+I,EAAe/B,EAAShH,MAAM,IACxG6I,EAAoE,MAAxD7B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,GAAGiK,OAAO,GACzD9B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,GAAKkK,EAAe/B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,QAErG,CACD+J,EAAgD,MAAhC5B,EAAShH,MAAM,GAAG8I,OAAO,GAAa9B,EAAShH,MAAM,GAAK+I,EAAe/B,EAAShH,MAAM,IACxG6I,EAAoE,MAAxD7B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,GAAGiK,OAAO,GACzD9B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,GAAKkK,EAAe/B,EAAShH,MAAMgH,EAAShH,MAAMnB,OAAS,IAOtG,IAAK,IAND+C,EAAI+G,GAAQ3B,EAAShH,MAAMnB,OAAS,GAGpCmK,EAAWhC,EAAShH,MAAMnB,OAAS,EACnCoK,KACAC,KACK3F,EAAI,EAAGA,EAAIyF,EAAUzF,IAG1B2F,GAAerH,EADX2G,EADAjF,EAAI3B,EAEa5B,MAAOgH,EAAShH,MAAMuD,IAC3C0F,EAAsB3F,KAAK4F,GAE/B,IAAK,IAAItK,EAAI,EAAGA,EAAIqK,EAAsBpK,OAAQD,IAC1C4J,GAAkB/L,GAASA,GAASwM,EAAsBrK,GAAM,GAAW,IAANA,GAGrEiK,EAF2D,MAAhDI,EAAsBrK,GAAU,MAAEkK,OAAO,GAChDG,EAAsBrK,GAAU,MAAImK,EAAeE,EAAsBrK,GAAU,OAEvF8J,EAAUjM,EAAQwM,EAAsBrK,GAAM,EAAI,EAAIqG,KAAKC,KAAKzI,EAAQwM,EAAsBrK,GAAM,GAAKgD,IAClGnF,EAAQwM,EAAsBrK,GAAM,GAAKgD,GAE3CqH,EAAsBrK,GAAM,GAAKnC,GAASA,GAASgM,GAAc7J,IAAOqK,EAAsBpK,OAAS,IAG5G+J,EAF2D,MAAhDK,EAAsBrK,GAAU,MAAEkK,OAAO,GAChDG,EAAsBrK,GAAU,MAAImK,EAAeE,EAAsBrK,GAAU,OAEvF8J,EAAUjM,EAAQwM,EAAsBrK,GAAM,EAC1C,EAAIqG,KAAKC,KAAKzI,EAAQwM,EAAsBrK,GAAM,GAAKgD,IAAMnF,EAAQwM,EAAsBrK,GAAM,GAAKgD,GAE1GhD,IAAMqK,EAAsBpK,OAAS,GAAKD,EAAIqK,EAAsBpK,QAChEoK,EAAsBrK,GAAM,GAAKnC,GAASA,GAASwM,EAAsBrK,EAAI,GAAM,IAGnFgK,EAF2D,MAAhDK,EAAsBrK,GAAU,MAAEkK,OAAO,GAChDG,EAAsBrK,GAAU,MAAImK,EAAeE,EAAsBrK,GAAU,OAEvFiK,EAAgE,MAApDI,EAAsBrK,EAAI,GAAU,MAAEkK,OAAO,GACrDG,EAAsBrK,EAAI,GAAU,MAAImK,EAAeE,EAAsBrK,EAAI,GAAU,OAC/F8J,EAAUzD,KAAKC,IAAKzI,EAAQwM,EAAsBrK,EAAI,GAAM,GAAMgD,GAKlF,OAAOuH,EAAmBT,EAASE,EAAeC,GAEtD,SAAgBM,EAAmBT,EAASU,EAAUC,GAClD,IAAIR,EAAYQ,EAAKjI,MAAM,KAAK,GAC5BkI,EAAYF,EAAShI,MAAM,KAAK,GAChC8G,EAAIqB,EAAcb,EAAS7L,SAASyM,EAAUE,OAAO,EAAG,GAAI,IAAK3M,SAASgM,EAAUW,OAAO,EAAG,GAAI,KAClGrB,EAAIoB,EAAcb,EAAS7L,SAASyM,EAAUE,OAAO,EAAG,GAAI,IAAK3M,SAASgM,EAAUW,OAAO,EAAG,GAAI,KAClG3H,EAAI0H,EAAcb,EAAS7L,SAASyM,EAAUE,OAAO,EAAG,GAAI,IAAK3M,SAASgM,EAAUW,OAAO,EAAG,GAAI,KACtG,OAAO,IAAIC,GAAWvB,EAAGC,EAAGtG,GAEhC,SAAgB0H,EAAcb,EAASU,EAAUC,GAC7C,IAAIV,EAAOU,EAAOD,EAClB,OAAOnE,KAAKyE,MAAON,EAAYT,EAAOD,GAE1C,SAAgBiB,EAASC,EAAcC,EAAW7M,GAK9C,IAAK,IADDD,EAHA+M,EAAiBD,EAAUzI,MAAM,KACjC1C,EAAQ,GACRqL,KAEKnL,EAAI,EAAG4C,EAAMsI,EAAejL,OAAQD,EAAI4C,EAAK5C,IAClD7B,EAAO+M,EAAelL,GAClB9B,EAAY4B,EAAMsL,OAAOjN,GAAOC,GAAM2B,MAAQiL,EAC9ClL,EAAQA,EAAMsL,QAAkB,KAAVtL,EAAe,GAAK,KAAO3B,GAGnC,KAAV2B,GACAqL,EAAgBzG,KAAK9E,EAASoL,EAAclL,EAAO1B,IACnD0B,EAAQ3B,IAGRgN,EAAgBzG,KAAK9E,EAASoL,EAAc7M,EAAMC,IAClDD,EAAO,IAGX2B,GAASE,IAAM4C,EAAM,GACrBuI,EAAgBzG,KAAK9E,EAASoL,EAAclL,EAAO1B,IAG3D,OAAO+M,EAEX,SAAgBE,EAASxL,EAAUC,EAAO1B,GACtC,IACIkN,KACAC,EAAgB,EAChBC,EAAatN,EAAY4B,EAAO1B,GAAM2B,MACtC0L,EAAc3L,EAAMG,OACxB,GAAIJ,GAAY2L,EAEZ,OADAF,EAAW5G,KAAK5E,GACTwL,EAGP,IAAK,IAAItL,EAAIF,EAAMG,OAAQD,EAAIuL,EAAevL,IAAK,CAC/C,IAAI0L,EAAc5L,EAAM6L,MAAMJ,EAAevL,GAE7C,IADAwL,EAAatN,EAAYwN,EAAatN,GAAM2B,QAC1BF,EAAU,CAGxB,GAFAyL,EAAW5G,KAAKgH,GAChBH,GAAiBG,EAAYzL,OACzBwL,IAAgBF,EAChB,OAAOD,EAEXtL,EAAIyL,EAAc,GAI9B,OAAOH,EAKX,SAAgBM,EAAK/L,EAAUgM,EAAW1N,EAAMC,GAC5C,IACIkC,EAAWpC,EAAYC,EAAMC,GAEjC,OADYkC,EAASP,MAAQF,GAAYS,EAASI,OAASmL,EAAa,IAAM1N,EAGlF,SAAgB2N,EAAY9I,EAAGC,GAC3B,OAAID,EAAY,WAAMC,EAAY,SACvB,EAEFD,EAAY,SAAIC,EAAY,SAC1B,GAEH,EAEZ,SAAgB8I,EAAiBC,EAAUzL,EAAM+C,GAQ7C,IAAK,IALDmC,EAKKd,EAAI,EAAGA,EAAIqH,EAAS/L,OAAQ0E,IAGjCsH,EAFAxG,EAAUuG,EAASrH,GAAGuH,WAAW,GACvB5I,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IAAa,SAExEwJ,EAASrH,GAAGwH,UAAUtF,OAAOtG,GAC7BoE,GAAK,EAGb,SAAgBsH,EAAaxG,EAAStE,GAClCsE,EAAQ2G,aAAa,UAAWjL,EAAiB,SACjDsE,EAAQ2G,aAAa,OAAQjL,EAAc,MAC3CsE,EAAQ2G,aAAa,SAAUjL,EAAgB,OAAS,OACxDsE,EAAQ2G,aAAa,eAAgBjL,EAAgB,OAAS,OAElE,SAAgBkL,EAAcC,EAAQrI,EAAMX,GACxC,GAAIlB,oBAAkBkK,GAClB,OAAO,KAGX,IAAK,IAAIC,EAAK,EAAGC,EADNpI,OAAOD,KAAKF,GACSsI,EAAKC,EAAOvM,OAAQsM,IAAM,CACtD,IAAIE,EAAMD,EAAOD,GACjBD,EAASA,EAAO9J,MAAM,KAAOiK,EAAM,KAAKC,KAAKC,EAAY1I,EAAKwI,GAAMnJ,GAASyC,YAEjF,OAAOuG,EAEX,SAAgBK,EAAY9O,EAAOyF,GAU/B,OAPIA,EAAQgJ,SAAW9D,MAAMkB,OAAO7L,IACfyF,EAAQsJ,KAAKC,iBAAkBP,OAAQhJ,EAAQgJ,OAAQQ,YAAaxJ,EAAQyJ,sBAC/EC,CAAetD,OAAO7L,IAGtBA,IAEiB,GAavC,SAAgBoP,EAAiBpP,GAC7B,MAAO,IAAM2L,EAAe3L,EAAMyL,GAAKE,EAAe3L,EAAM0L,GAAKC,EAAe3L,EAAMoF,GAG1F,SAAgBuG,EAAe3L,GAC3B,IAAIqP,EAAMrP,EAAMkI,SAAS,IACzB,OAAsB,IAAfmH,EAAIjN,OAAe,IAAMiN,EAAMA,EAG1C,SAAgBC,EAAkBD,GAC9B,IAAIE,EAAS,4CAA4CC,KAAKH,GAC9D,OAAOE,EAAS,IAAIvC,GAAW5M,SAASmP,EAAO,GAAI,IAAKnP,SAASmP,EAAO,GAAI,IAAKnP,SAASmP,EAAO,GAAI,KACjG,IAAIvC,GAAW,IAAK,IAAK,KAGjC,SAAgBV,EAAe/I,GAC3B,IAAIqE,EACJrE,EAAkB,gBAAVA,EAA0B,QAAUA,GAC5CqE,EAAUnH,SAASC,eAAe,uBAC1BM,MAAMuC,MAAQA,EACtBA,EAAQkM,OAAOC,iBAAiB9H,GAASrE,MACzC,IACIoM,EADM,uGACWH,KAAKjM,GAC1B,OAAO6L,EAAiB,IAAIpC,GAAW5M,SAASuP,EAAW,GAAI,IAAKvP,SAASuP,EAAW,GAAI,IAAKvP,SAASuP,EAAW,GAAI,MAG7H,SAAgBC,EAAWrN,EAAUsN,EAAO1O,EAAM2O,EAAKxM,EAASrB,GAC5D,IACI8N,EAAc,IAAIzL,cAAY,IAC9B0L,EAAOC,EAAkB1N,EAAUpB,EAAM0O,EAAOvM,EAASwM,GACzDI,EAAcH,EAAY,OAASC,EAAKG,cAAcH,EAAKI,cAE/D,OADAF,EAAY3B,aAAa,aAActM,GAChCiO,EAGX,SAAgBD,EAAkB1N,EAAUpB,EAAM0O,EAAOvM,EAASwM,GAC9D,IAAIO,EACAF,EAAe,OACfG,EAAanP,EAAKe,MAClBqO,EAAcpP,EAAK0B,OACnB2N,EAASjO,EAASI,EAClB8N,EAASlO,EAASK,EAClBD,EAAIJ,EAASI,GAAM2N,EAAa,EAChC1N,EAAIL,EAASK,GAAM2N,EAAc,EACrC,OAAQV,GACJ,IAAK,SACL,IAAK,SACDM,EAAe,UACfO,QAAMpN,GAAWqN,GAAML,EAAa,EAAGM,GAAML,EAAc,EAAGM,GAAML,EAAQM,GAAML,IAClF,MACJ,IAAK,eACDJ,EAAa,KAAYG,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KAC3FC,GAAWF,EAAc,GAChCG,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,UACDA,EAAa,KAAY1N,EAAI,IAAM8N,EAAS,MAC5BD,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC7CD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAC9C5N,EAAI,IAAM8N,EAAS,KACnCC,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,YACDA,EAAa,KAAY1N,EAAI,KAAO8N,GAAWF,EAAc,GAAM,OAClDC,EAAUF,EAAa,GAAM,KAAOG,GAAWF,EAAc,GAAM,OACnEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE5N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,MACzC5N,EAAI,KAAO8N,GAAWF,EAAc,GAAM,KAC1DG,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,WACDA,EAAa,KAAY1N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,MAClDC,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE5N,EAAI,KAAO8N,EAAUF,EAAc,GAAM,KACzDG,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,mBACDA,EAAa,MAAaG,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MAC5EC,EAAS,KAAOC,EAAUF,EAAc,GAAM,OAC7CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,OAClEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,KACnFG,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,WAID,IAAK,IAFDW,OAAS,EACTC,OAAS,EACJ9O,EAAI,EAAGA,GAAK,EAAGA,IACpB6O,EAAUV,EAAa,EAAK9H,KAAK0I,IAAK1I,KAAK2I,GAAK,KAJ3C,GAImDhP,IACxD8O,EAAUX,EAAa,EAAK9H,KAAK4I,IAAK5I,KAAK2I,GAAK,KAL3C,GAKmDhP,IAEpDkO,EADM,IAANlO,EACa,MAAaqO,EAASQ,GAAU,KAAOP,EAASQ,GAAU,IAG1DZ,EAAW9C,OAAO,MAAaiD,EAASQ,GAAU,KAAOP,EAASQ,GAAU,KAGjGZ,EAAaA,EAAW9C,OAAO,KAC/BmD,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,OACDA,EAAa,MAAQ9N,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GACxH,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GACjH,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,MAAQN,EAASI,EAAI,KACrGJ,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,KACpH6N,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,QACDA,EAAa,KAAY1N,EAAI,IAAM8N,EAAS,OAAmBD,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC3FD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KACpFC,GAAWF,EAAc,GAC9BG,QAAMpN,GAAWyN,EAAKV,IACtB,MACJ,IAAK,QACDF,EAAe,QACfO,QAAMpN,GAAW+N,KAAQvB,EAAKjN,OAAU0N,EAAarO,MAASoO,EAAY3N,EAAGA,EAAGC,EAAGA,IAG3F,OAASwN,aAAc9M,EAAS6M,aAAcA,GAElD,SAAgBmB,EAAalL,EAAMmL,GAE/B,IAAK,IADDD,GAAe,EACVxK,EAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIyK,EAAqB,iBAAMnL,EAAKU,GAAmB,eAAG,CACtDwK,GAAe,EACf,MAGR,OAAOA,EAeX,SACgBE,EAAYC,EAAYzR,GACpC,GAAIyR,EAAWrP,OAAS,EACpB,IAAK,IAAID,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAK,CACxC,IAAIoP,EAAOE,EAAWtP,GACtBuP,EAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,iBAI1H,SAAgBI,EAAaF,EAAYzR,GACrC,GAAIyR,EAAWrP,OAAS,EACpB,IAAK,IAAI0E,EAAI,EAAGA,EAAI2K,EAAWrP,OAAQ0E,IAAK,CACxC,IAAIyK,EAAOE,EAAW3K,GACtB4K,EAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,gBAE9G,IAAK,IADDK,EAAYL,EAAsB,gBAAY,SAAEnP,OAC3CyP,EAAI,EAAGA,EAAID,EAAWC,IAC3BH,EAASH,EAAsB,gBAAY,SAAEM,GAAIN,EAAmB,aAAGA,EAAsB,gBAAGA,EAA0B,oBAAGA,EAA0B,sBAKvK,SAAgBG,EAAS9J,EAASvD,EAAMH,EAAS4N,EAAaC,GAC1DnK,EAAQ2G,aAAa,OAAQlK,GAC7BuD,EAAQ2G,aAAa,UAAWrK,GAChC0D,EAAQ2G,aAAa,SAAUuD,GAC/BlK,EAAQ2G,aAAa,eAAgBwD,GAEzC,SAAgBC,EAA6BP,EAAY7J,EAASnC,GAC9D+L,EAAYC,GAEZvD,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAE9F,SAAgByM,EAAe9P,EAAQmP,EAAM9L,GAEzC,IAAK,IADD0M,EACKhQ,EAAI,EAAGA,EAAIC,EAAQD,IAExB,IAAK,IADDiQ,EAAa3M,EAAQ4M,oBAAoBC,kBAAkBnQ,GAAe,WAAEC,OACvE0E,EAAI,EAAGA,EAAIsL,EAAYtL,IAC5B,GAAIrB,EAAQ4M,oBAAoBC,kBAAkBnQ,GAAe,WAAE2E,GAAmB,iBAAMyK,EAAqB,eAAG,CAChHY,EAAQhQ,EACR,MAIZ,OAAOgQ,EAEX,SAAgBI,EAAed,EAAYU,EAAOK,EAAQC,EAAeC,EAAcxL,EAAayL,GAChGlB,EAAW5K,MACP+L,UAAWH,EAAeI,QAASF,EAAiBR,GAAmB,WACvEW,WAAYH,EAAiBR,GAAgB,QAAGY,eAAgBJ,EAAiBR,GAAoB,YACrGa,eAAgBL,EAAiBR,GAAoB,YACrDO,aAAcA,EAAcO,aAAc/L,EAAYsL,GAAiB,QAAQ,KAC/EU,gBAAiBhM,EAAYsL,GAAiB,QAAW,QACzDW,oBAAqBjM,EAAYsL,GAAiB,QAAU,OAAS,MACrEY,oBAAqBlM,EAAYsL,GAAiB,QAAU,OAAS,QCj4B7E,SAAgBa,GAAcC,GAC1B,IAAItS,EACAuC,EACJ,OAAQ+P,EAAMC,eACV,IAAK,eACDhQ,EAAQ,UACR,MACJ,IAAK,aACDA,EAAQ,UACR,MACJ,IAAK,gBACDA,EAAQ,UAGhB,OAAQ+P,EAAMC,eACV,IAAK,gBACL,IAAK,aACL,IAAK,eACDvS,GACIwS,gBAAiBjQ,EACjBkQ,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjBxS,WAAY,4BAEhB,MACJ,IAAK,eACDN,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjBxS,WAAY,4BAEhB,MACJ,IAAK,aACDN,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBG,mBAAoB,EACpBC,mBAAoB,GACpBH,iBAAkB,UAClBC,gBAAiB,UACjBxS,WAAY,uBACZJ,SAAU,OACV+S,eAAgB,OAChBC,gBAAiB,iBAErB,MACJ,QACIlT,GACIwS,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjBxS,WAAY,4BAIxB,OAAON,EClFX,IAUWmT,GAAc,cAKdC,GAAgB,gBAKhBC,GAAa,aAKbC,GAAW,WAKXC,GAAe,eAKfC,GAAgB,gBAKhBC,GAAmB,mBAKnBC,GAAY,YAKZC,GAAW,WAUXC,GAAc,cAKdC,GAAa,aAKbC,GAAY,YAKZC,GAAsB,sBAKtBC,GAAkB,kBAKlBC,GAAS,SAKTC,GAAc,qCCjGrBC,GAAwC,WACxC,IAAIC,EAAgB,SAAUrE,EAAG3L,GAI7B,OAHAgQ,EAAgB7O,OAAO8O,iBAChBC,wBAA2B9O,OAAS,SAAUuK,EAAG3L,GAAK2L,EAAEuE,UAAYlQ,IACvE,SAAU2L,EAAG3L,GAAK,IAAK,IAAImQ,KAAKnQ,EAAOA,EAAEoQ,eAAeD,KAAIxE,EAAEwE,GAAKnQ,EAAEmQ,MACpDxE,EAAG3L,IAE5B,OAAO,SAAU2L,EAAG3L,GAEhB,SAASqQ,IAAOC,KAAKC,YAAc5E,EADnCqE,EAAcrE,EAAG3L,GAEjB2L,EAAE/F,UAAkB,OAAN5F,EAAamB,OAAOqP,OAAOxQ,IAAMqQ,EAAGzK,UAAY5F,EAAE4F,UAAW,IAAIyK,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQnH,EAAKoH,GAC7E,IAA2HjF,EAAvHkF,EAAIC,UAAU9T,OAAQqJ,EAAIwK,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOzP,OAAO4P,yBAAyBJ,EAAQnH,GAAOoH,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyB5K,EAAI2K,QAAQC,SAASP,EAAYC,EAAQnH,EAAKoH,QACpH,IAAK,IAAI7T,EAAI2T,EAAW1T,OAAS,EAAGD,GAAK,EAAGA,KAAS4O,EAAI+E,EAAW3T,MAAIsJ,GAAKwK,EAAI,EAAIlF,EAAEtF,GAAKwK,EAAI,EAAIlF,EAAEgF,EAAQnH,EAAKnD,GAAKsF,EAAEgF,EAAQnH,KAASnD,GAChJ,OAAOwK,EAAI,GAAKxK,GAAKlF,OAAO+P,eAAeP,EAAQnH,EAAKnD,GAAIA,GAO5D8K,GAAwB,SAAUC,GAElC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,OAVAP,GAAUoB,EAAQC,GAIlBX,IACIa,WAAS,YACVH,EAAOvL,UAAW,aAAS,GAC9B6K,IACIa,WAAS,IACVH,EAAOvL,UAAW,aAAS,GACvBuL,GACTI,iBAKEC,GAAwB,SAAUJ,GAElC,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAc/D,OAhBAP,GAAUyB,EAAQJ,GAIlBX,IACIa,WAAS,KACVE,EAAO5L,UAAW,YAAQ,GAC7B6K,IACIa,WAAS,KACVE,EAAO5L,UAAW,aAAS,GAC9B6K,IACIa,WAAS,KACVE,EAAO5L,UAAW,WAAO,GAC5B6K,IACIa,WAAS,KACVE,EAAO5L,UAAW,cAAU,GACxB4L,GACTD,iBAKEE,GAAsB,SAAUL,GAEhC,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAoB/D,OAtBAP,GAAU0B,EAAML,GAIhBX,IACIa,WAAS,OACVG,EAAK7L,UAAW,YAAQ,GAC3B6K,IACIa,WAAS,OACVG,EAAK7L,UAAW,aAAS,GAC5B6K,IACIa,WAASxB,KACV2B,EAAK7L,UAAW,kBAAc,GACjC6K,IACIa,WAAS,WACVG,EAAK7L,UAAW,kBAAc,GACjC6K,IACIa,WAAS,WACVG,EAAK7L,UAAW,iBAAa,GAChC6K,IACIa,WAAS,IACVG,EAAK7L,UAAW,eAAW,GACvB6L,GACTF,iBAKEG,GAAqC,SAAUN,GAE/C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,OAVAP,GAAU2B,EAAqBN,GAI/BX,IACIa,WAAS,KACVI,EAAoB9L,UAAW,YAAQ,GAC1C6K,IACIa,WAAS,KACVI,EAAoB9L,UAAW,mBAAe,GAC1C8L,GACTH,iBAKEI,GAAkC,SAAUP,GAE5C,SAASO,IACL,OAAkB,OAAXP,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,OAVAP,GAAU4B,EAAkBP,GAI5BX,IACImB,WAAU7V,KAAM,QAAU0V,KAC3BE,EAAiB/L,UAAW,iBAAa,GAC5C6K,IACIa,WAAS,WACVK,EAAiB/L,UAAW,iBAAa,GACrC+L,GACTD,IAKEG,GAA+B,SAAUT,GAEzC,SAASS,IACL,OAAkB,OAAXT,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAW/D,OAbAP,GAAU8B,EAAeT,GAIzBX,IACImB,WAAU7V,KAAM,QAAU0V,KAC3BI,EAAcjM,UAAW,iBAAa,GACzC6K,IACIa,WAAS,WACVO,EAAcjM,UAAW,iBAAa,GACzC6K,IACImB,aAAYD,KACbE,EAAcjM,UAAW,wBAAoB,GACzCiM,GACTH,IAEEI,GAA8B,SAAUV,GAExC,SAASU,IACL,OAAkB,OAAXV,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,OA5BAP,GAAU+B,EAAcV,GAIxBX,IACIa,WAAS,OACVQ,EAAalM,UAAW,YAAQ,GACnC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,UAAM,GACjC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,aAAS,GACpC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,aAAS,GACpC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,aAAS,GACpC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,kBAAc,GACzC6K,IACIa,WAAS,OACVQ,EAAalM,UAAW,kBAAc,GACzC6K,IACIa,YAAS,IACVQ,EAAalM,UAAW,kBAAc,GAClCkM,GACTP,iBAKEQ,GAAgC,SAAUX,GAE1C,SAASW,IACL,OAAkB,OAAXX,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAmF/D,OArFAP,GAAUgC,EAAgBX,GAI1BX,IACIa,YAAS,IACVS,EAAenM,UAAW,eAAW,GACxC6K,IACIa,WAAS,YACVS,EAAenM,UAAW,YAAQ,GACrC6K,IACIa,WAAS,gBACVS,EAAenM,UAAW,kBAAc,GAC3C6K,IACIa,WAAS,WACVS,EAAenM,UAAW,aAAS,GACtC6K,IACIa,WAAS,KACVS,EAAenM,UAAW,aAAS,GACtC6K,IACIa,WAAS,KACVS,EAAenM,UAAW,cAAU,GACvC6K,IACImB,WAAU7V,KAAM,QAAU0V,KAC3BM,EAAenM,UAAW,iBAAa,GAC1C6K,IACIa,WAAS,OACVS,EAAenM,UAAW,YAAQ,GACrC6K,IACIa,WAAS,IACVS,EAAenM,UAAW,eAAW,GACxC6K,IACIa,WAAS,KACVS,EAAenM,UAAW,kBAAc,GAC3C6K,IACIa,WAAS,KACVS,EAAenM,UAAW,mBAAe,GAC5C6K,IACIa,WAAS,KACVS,EAAenM,UAAW,oBAAgB,GAC7C6K,IACIa,WAAS,OACVS,EAAenM,UAAW,gBAAY,GACzC6K,IACImB,WAAUzT,MAAO,UAAWrB,MAAO,GAAKqU,KACzCY,EAAenM,UAAW,cAAU,GACvC6K,IACImB,WAAUzT,MAAO,UAAWrB,MAAO,GAAKqU,KACzCY,EAAenM,UAAW,mBAAe,GAC5C6K,IACImB,aAAYF,KACbK,EAAenM,UAAW,aAAS,GACtC6K,IACImB,WAAU7V,KAAM,QAAU0V,KAC3BM,EAAenM,UAAW,kBAAc,GAC3C6K,IACIa,WAAS,WACVS,EAAenM,UAAW,gBAAY,GACzC6K,IACIa,WAAS,SACVS,EAAenM,UAAW,mBAAe,GAC5C6K,IACIa,YAAS,IACVS,EAAenM,UAAW,uBAAmB,GAChD6K,IACIa,WAAS,UACVS,EAAenM,UAAW,qBAAiB,GAC9C6K,IACIa,WAAS,SACVS,EAAenM,UAAW,wBAAoB,GACjD6K,IACIa,WAAS,WACVS,EAAenM,UAAW,iBAAa,GAC1C6K,IACIa,YAAW/T,EAAG,EAAGC,EAAG,KACrBuU,EAAenM,UAAW,gBAAY,GACzC6K,IACIa,WAAS,OACVS,EAAenM,UAAW,sBAAkB,GAC/C6K,IACIa,WAAS,OACVS,EAAenM,UAAW,iBAAa,GAC1C6K,IACIa,YAAS,IACVS,EAAenM,UAAW,6BAAyB,GAC/CmM,GACTR,iBAEES,GAAsC,SAAUZ,GAEhD,SAASY,IACL,OAAkB,OAAXZ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,OAVAP,GAAUiC,EAAsBZ,GAIhCX,IACIa,WAAS,OACVU,EAAqBpM,UAAW,kBAAc,GACjD6K,IACIa,WAAS,OACVU,EAAqBpM,UAAW,iBAAa,GACzCoM,GACTT,iBAEEU,GAAkC,SAAUb,GAE5C,SAASa,IACL,OAAkB,OAAXb,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,OAjDAP,GAAUkC,EAAkBb,GAI5BX,IACIa,WAAS,OACVW,EAAiBrM,UAAW,YAAQ,GACvC6K,IACIa,YAAS,IACVW,EAAiBrM,UAAW,gBAAY,GAC3C6K,IACImB,aAAYT,KACbc,EAAiBrM,UAAW,cAAU,GACzC6K,IACIa,WAAS,IACVW,EAAiBrM,UAAW,WAAO,GACtC6K,IACIa,WAAS,KACVW,EAAiBrM,UAAW,eAAW,GAC1C6K,IACIa,WAAS,IACVW,EAAiBrM,UAAW,eAAW,GAC1C6K,IACIa,YAAS,IACVW,EAAiBrM,UAAW,kBAAc,GAC7C6K,IACIa,WAAS,OACVW,EAAiBrM,UAAW,iBAAa,GAC5C6K,IACIa,WAAS,OACVW,EAAiBrM,UAAW,mBAAe,GAC9C6K,IACIa,WAAS,YACVW,EAAiBrM,UAAW,qBAAiB,GAChD6K,IACImB,WAAUzT,MAAO,KAAMpC,KAAM,QAAU0V,KACxCQ,EAAiBrM,UAAW,kBAAc,GAC7C6K,IACIa,WAAS,OACVW,EAAiBrM,UAAW,qBAAiB,GAChD6K,IACIa,WAAS,WACVW,EAAiBrM,UAAW,wBAAoB,GACnD6K,IACIa,WAAS,SACVW,EAAiBrM,UAAW,uBAAmB,GAClD6K,IACIyB,gBAAeJ,KAChBG,EAAiBrM,UAAW,oBAAgB,GACxCqM,GACTV,iBAEEY,GAAiC,SAAUf,GAE3C,SAASe,IACL,OAAkB,OAAXf,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,OA5BAP,GAAUoC,EAAiBf,GAI3BX,IACIa,YAAS,IACVa,EAAgBvM,UAAW,eAAW,GACzC6K,IACIa,WAAS,KACVa,EAAgBvM,UAAW,gBAAY,GAC1C6K,IACIa,WAAS,OACVa,EAAgBvM,UAAW,cAAU,GACxC6K,IACIa,WAAS,YACVa,EAAgBvM,UAAW,YAAQ,GACtC6K,IACIa,WAAS,MACVa,EAAgBvM,UAAW,eAAW,GACzC6K,IACIa,YAAU,YACXa,EAAgBvM,UAAW,oBAAgB,GAC9C6K,IACImB,aAAYT,KACbgB,EAAgBvM,UAAW,cAAU,GACxC6K,IACImB,WAAU1V,WAAY4T,GAAa/T,KAAM,QAAU0V,KACpDU,EAAgBvM,UAAW,iBAAa,GACpCuM,GACTZ,iBAEEa,GAAmC,SAAUhB,GAE7C,SAASgB,IACL,OAAkB,OAAXhB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,OAnBAP,GAAUqC,EAAmBhB,GAI7BX,IACIa,YAAS,IACVc,EAAkBxM,UAAW,cAAU,GAC1C6K,IACIa,WAAS,YACVc,EAAkBxM,UAAW,YAAQ,GACxC6K,IACIa,WAAS,QACVc,EAAkBxM,UAAW,eAAW,GAC3C6K,IACImB,aAAYT,KACbiB,EAAkBxM,UAAW,cAAU,GAC1C6K,IACIa,WAAS,SACVc,EAAkBxM,UAAW,YAAQ,GACjCwM,GACTb,iBAEEc,GAAmC,SAAUjB,GAE7C,SAASiB,IACL,OAAkB,OAAXjB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,OAnBAP,GAAUsC,EAAmBjB,GAI7BX,IACIa,YAAS,IACVe,EAAkBzM,UAAW,cAAU,GAC1C6K,IACIa,WAAS,YACVe,EAAkBzM,UAAW,YAAQ,GACxC6K,IACIa,WAAS,QACVe,EAAkBzM,UAAW,eAAW,GAC3C6K,IACImB,aAAYT,KACbkB,EAAkBzM,UAAW,cAAU,GAC1C6K,IACIa,WAAS,SACVe,EAAkBzM,UAAW,YAAQ,GACjCyM,GACTd,iBAKEe,GAA+B,SAAUlB,GAEzC,SAASkB,IACL,OAAkB,OAAXlB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,OAjDAP,GAAUuC,EAAelB,GAIzBX,IACIa,WAAS,OACVgB,EAAc1M,UAAW,iBAAa,GACzC6K,IACIa,WAAS,IACVgB,EAAc1M,UAAW,gBAAY,GACxC6K,IACIa,WAAS,KACVgB,EAAc1M,UAAW,oBAAgB,GAC5C6K,IACImB,aAAYT,KACbmB,EAAc1M,UAAW,cAAU,GACtC6K,IACIa,WAAS,OACVgB,EAAc1M,UAAW,YAAQ,GACpC6K,IACIa,YAAS,IACVgB,EAAc1M,UAAW,gBAAY,GACxC6K,IACIa,WAAS,IACVgB,EAAc1M,UAAW,eAAW,GACvC6K,IACIa,YAAS,IACVgB,EAAc1M,UAAW,kBAAc,GAC1C6K,IACIa,WAAS,KACVgB,EAAc1M,UAAW,oBAAgB,GAC5C6K,IACIa,WAAS,OACVgB,EAAc1M,UAAW,sBAAkB,GAC9C6K,IACIa,WAAS,OACVgB,EAAc1M,UAAW,oBAAgB,GAC5C6K,IACIa,WAAS,SACVgB,EAAc1M,UAAW,uBAAmB,GAC/C6K,IACImB,WAAUzT,MAAO,KAAMpC,KAAM,QAAU0V,KACxCa,EAAc1M,UAAW,mBAAe,GAC3C6K,IACIa,WAAS,YACVgB,EAAc1M,UAAW,wBAAoB,GAChD6K,IACIyB,gBAAeJ,KAChBQ,EAAc1M,UAAW,oBAAgB,GACrC0M,GACTf,iBH9cE/U,GAAsB,WAKtB,OAJA,SAAcM,EAAOW,GACjB6S,KAAKxT,MAAQA,EACbwT,KAAK7S,OAASA,MAelB8U,GAAsB,WAOtB,OANA,SAAchV,EAAGC,EAAGV,EAAOW,GACvB6S,KAAK/S,EAAIA,EACT+S,KAAK9S,EAAIA,EACT8S,KAAKxT,MAAQA,EACbwT,KAAK7S,OAASA,MASlB+U,GAA4B,WAa5B,OAZA,SAAoBhX,EAAIyD,EAAMwT,EAAQ3T,EAASkE,EAAM0P,GACjDpC,KAAK9S,EAAIwF,EAAKxF,EACd8S,KAAK/S,EAAIyF,EAAKzF,EACd+S,KAAK7S,OAASuF,EAAKvF,OACnB6S,KAAKxT,MAAQkG,EAAKlG,MAClBwT,KAAK9U,GAAKA,EACV8U,KAAKrR,KAAOA,EACZqR,KAAKxR,QAAUA,EACfwR,KAAKqC,OAASF,EAAOtU,MACrBmS,KAAK,gBAAkBmC,EAAO3V,MAC9BwT,KAAK,oBAAsBoC,MAK/BE,GAA4B,WAU5B,OATA,SAAoBpX,EAAIyD,EAAMnC,EAAOqB,EAAOW,EAAS4T,EAAW/G,GAC5D2E,KAAK9U,GAAKA,EACV8U,KAAKxR,QAAUA,EACfwR,KAAKrR,KAAOA,EACZqR,KAAKqC,OAASxU,EACdmS,KAAK,gBAAkBxT,EACvBwT,KAAK,oBAAsBoC,EAC3BpC,KAAK3E,EAAIA,MAqCbkH,GAA4B,WAc5B,OAbA,SAAoBrX,EAAI+B,EAAGC,EAAGoB,EAAQ1D,EAAM2D,EAAWG,EAAUI,QAC3C,IAAdP,IAAwBA,EAAY,IACxCyR,KAAKzR,UAAY,GACjByR,KAAKtR,SAAW,OAChBsR,KAAK9U,GAAKA,EACV8U,KAAKpV,KAAOA,EACZoV,KAAKzR,UAAYA,EACjByR,KAAK1R,OAASA,EACd0R,KAAK/S,EAAIA,EACT+S,KAAK9S,EAAIA,EACT8S,KAAKtR,SAAWA,EAChBsR,KAAKlR,cAAgBA,MA8BzB1B,GAA0B,WAK1B,OAJA,SAAkBH,EAAGC,GACjB8S,KAAK/S,EAAIA,EACT+S,KAAK9S,EAAIA,MAojBboK,GAA4B,WAM5B,OALA,SAAoBvB,EAAGC,EAAGtG,GACtBsQ,KAAKjK,EAAIA,EACTiK,KAAKhK,EAAIA,EACTgK,KAAKtQ,EAAIA,MA6Ib8S,GAA6B,WAQ7B,OAPA,SAAqB5U,EAASZ,EAAMyV,EAAOC,EAAaC,GACpD3C,KAAK4C,YAAchV,EACnBoS,KAAKhT,KAAOA,GAAQ,MACpBgT,KAAKyC,MAAQA,IAAS,EACtBzC,KAAK0C,YAAcA,EACnB1C,KAAK2C,SAAWA,MIn1BpBE,GAA6B,WAC7B,SAASA,EAAY9S,GACjBiQ,KAAKjQ,QAAUA,EAwqBnB,OArqBA8S,EAAYvN,UAAUwN,mBAAqB,WACvC,IAAIpS,EACAqS,EACJ,GAAI/C,KAAKjQ,QAAQiT,cAAgBhD,KAAKjQ,QAAQiT,aAAatW,OAAS,EAYhE,GAXAgE,EAAS7B,oBAAkBmR,KAAKjQ,QAAQkT,iBAAiBC,aACpDrU,oBAAkBmR,KAAKjQ,QAAQkT,iBAAiBE,aAChDtU,oBAAkBmR,KAAKjQ,QAAQqT,eAAgBvU,oBAAkBmR,KAAKjQ,QAAQqT,cACpC,IAArCpD,KAAKjQ,QAAQqT,aAAa1W,QAC6BsT,KAAKjQ,QAAQiT,aAAa,GAAvFhD,KAAKqD,iBAAiBrD,KAAKjQ,QAAQiT,aAAa,OAAQ,GAC5DD,EAAYO,YAAWtD,KAAKjQ,QAAQ8C,SAAUkQ,GAAW,GACpDlU,oBAAkBmR,KAAKjQ,QAAQ4M,sBAAyB9N,oBAAkBmR,KAAKjQ,QAAQgT,YAC3C,UAAzC/C,KAAKjQ,QAAQwT,eAAehY,WAC5BwX,EAAY/C,KAAKjQ,QAAQgT,WAG5BlU,oBAAkBmR,KAAKjQ,QAAQyT,gBAC/B3U,oBAAkBmR,KAAKjQ,QAAQqT,cAAiBvU,oBAAkBmR,KAAKjQ,QAAQqT,cACrC,IAArCpD,KAAKjQ,QAAQqT,aAAa1W,SAY3BmC,oBAAkBmR,KAAKjQ,QAAQkT,iBAAiBC,cAChDrU,oBAAkBmR,KAAKjQ,QAAQqT,cAAgBvU,oBAAkBmR,KAAKjQ,QAAQqT,cACpC,IAArCpD,KAAKjQ,QAAQqT,aAAa1W,UAChCsT,KAAKjQ,QAAQyT,aAAexD,KAAKjQ,QAAQkT,iBAAiBC,YAE9DlD,KAAKyD,qBAAqB/S,GAAQsP,KAAKjQ,QAAQiT,aAAa,GAAID,GAChE/C,KAAK0D,kBAAkBhT,GAAQsP,KAAKjQ,QAAQiT,aAAa,QAlBV,CAC/C,IAAIW,EAAQ3D,KAAKjQ,QAAQqT,aAAa1W,OAAS,EAC3CO,EAAI+S,KAAKjQ,QAAQqT,aAAaO,GAAa,KAC3CzW,EAAI,IAAI2D,OACZ3D,EAAE8S,KAAKjQ,QAAQqT,aAAaO,GAAa,KAAa,YAAM1W,GACvD4B,oBAAkBmR,KAAKjQ,QAAQkT,iBAAiBC,aAAgBlD,KAAKjQ,QAAQ6T,mBAC9E5D,KAAKjQ,QAAQyT,aAAexD,KAAKjQ,QAAQqT,aAAaO,GAAa,KAAc,YAErF3D,KAAKyD,qBAAqBvW,GAAK8S,KAAKjQ,QAAQiT,aAAa,GAAID,GAC7D/C,KAAK0D,kBAAkBxW,GAAK8S,KAAKjQ,QAAQiT,aAAa,MAalEH,EAAYvN,UAAU+N,iBAAmB,SAAU3S,EAAMmT,GACrD,IAAI9T,EAAUiQ,KAAKjQ,QACf+T,KACAC,EAAQtT,EAAaC,GAAc,OACvC,GAAIqT,GAASA,EAAMrX,OAAS,GAA0B,IAArBmX,EAAUnX,OAAc,CACrD,IAAK,IAAID,EAAI,EAAGA,EAAIsX,EAAMrX,OAAQD,IAC1BsX,EAAMtX,GAAe,aAAMsD,EAAQkT,iBAAiBC,YACpDa,EAAMtX,GAAS,OAAMsD,EAAQkT,iBAAiBE,YAC9CY,EAAMtX,GAAc,WAAI,EACxBqX,EAAQC,EAAMtX,GAAc,YAAMsX,EAAMtX,IACxCoX,EAAU1S,KAAK2S,IAGvB,IAAK,IAAI1S,EAAI,EAAGA,EAAI2S,EAAMrX,OAAQ0E,IAC9B4O,KAAKqD,iBAAiBU,EAAM3S,GAAIyS,GAGxC,OAAOA,GAEXhB,EAAYvN,UAAUmO,qBAAuB,SAAU/S,EAAMgC,GACzDsN,KAAKxO,eACLwO,KAAKgE,cACAnV,oBAAkBmR,KAAKjQ,QAAQS,mBAC5BwP,KAAKjQ,QAAQkU,WAAWxZ,QAAQ,iBAAmB,EACnDuV,KAAKkE,+BAA+BxT,EAAMgC,IAG1CA,EAAKvF,OAASuF,EAAKvF,OAASuF,EAAKxF,EACjCwF,EAAKlG,MAAQkG,EAAKlG,MAAQkG,EAAKzF,EAC/B+S,KAAKmE,2BAA2BzT,EAAMgC,MAIlDmQ,EAAYvN,UAAU4O,+BAAiC,SAAUxT,EAAM0T,GACnE,IACI1R,EAEAwQ,EAGAmB,EACAC,EAPAC,EAAWvE,KAAKjQ,QAAQK,iBAExBoU,EAASxE,KAAKjQ,QAAQM,OAGtBM,EAAWF,EAAaC,GAAc,OAG1C,GAAIC,GAAYA,EAASjE,OAAS,IAC9BsT,KAAKyE,oBAAoB9T,EAAUyT,GAC/BpE,KAAKjQ,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIkE,EAASjE,OAAQD,IACjCyW,EAAavS,EAASlE,GAAe,WAErC4X,EADgC,IAAlBG,EAAO9X,QAAgBwW,IAAesB,EAAO9X,OACxC6X,EAASF,IAAMG,EAAOtB,GAAYwB,SACrDJ,EAAiC,IAAlBE,EAAO9X,OAAe,EAAI8X,EAAOtB,GAAcsB,EAAOtB,GAAYyB,WAC7EH,EAAOtB,GAAYoB,aAAe,EAAIE,EAAOtB,EAAa,GAAGyB,WAAaH,EAAOtB,EAAa,GAAGoB,aAAe,EACpH5R,EAAO/B,EAASlE,GAAS,KACzBiG,EAAO,IAAIuP,GAAKvP,EAAKzF,EAAKoX,EAAM,EAAI3R,EAAKxF,GAAKoX,EAAgBD,EAAM,GAAK3R,EAAKlG,MAAQ6X,EAAKvR,KAAKC,IAAIL,EAAKvF,QAAUkX,EAAMC,KACzHtE,KAAKkE,+BAA+BvT,EAASlE,GAAIiG,GAI7D,OAAOhC,GAEXmS,EAAYvN,UAAUmP,oBAAsB,SAAU3U,EAAa4C,GAC/D,IAEIkS,EAFAC,EAAanS,EAAKvF,OAASuF,EAAKlG,MAChC6D,EAAS2P,KAAKjQ,QAAQM,OAEtByU,EAAe,EACfC,EAAc,EAClBjV,EAAYkV,QAAQ,SAAUtU,GAAQqU,GAAerU,EAAa,SAClEZ,EAAYkV,QAAQ,SAAUjB,GAC1BA,EAAkB,WAAIc,EAAad,EAAc,OAAIgB,IAEzD,IAAIE,EAA4C,qBAA5BjF,KAAKjQ,QAAQkU,WAAsCvR,EAAKlG,MAAQkG,EAAKvF,OACxD,2BAA5B6S,KAAKjQ,QAAQkU,WAClBnU,EAAYoV,KAAK1V,GACjB,IAAK,IAAI/C,EAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,IAAK,CACzC,IAAIoP,EAAO/L,EAAYrD,GACvBoP,EAAiB,WAAuB,IAAlBxL,EAAO3D,SAAmBsT,KAAKjQ,QAAQoV,oBACzDtW,oBAAkBmR,KAAKjQ,QAAQK,iBAAiBG,WAChDsL,EAAiB,aAAMxL,EAAO3D,OAAS,EAAImP,EAAiB,aAAMmE,KAAKjQ,QAAQM,OAAO3D,QACtFuY,GACAL,EAAeC,EAAaE,EAAejV,EAAYrD,GAAW,OAAKiG,EAAKvF,OACxE2X,GAAgBpS,EAAKlG,QACrBsD,EAAYrD,GAAS,KAAI,IAAIwV,GAAK6C,EAAepS,EAAKzF,EAAGyF,EAAKxF,EAAG0X,EAAYlS,EAAKvF,WAItFyX,EAAeC,EAAaE,EAAejV,EAAYrD,GAAW,OAAKiG,EAAKlG,MACxEsY,GAAgBpS,EAAKvF,SACrB2C,EAAYrD,GAAS,KAAI,IAAIwV,GAAKvP,EAAKzF,EAAG6X,EAAepS,EAAKxF,EAAGwF,EAAKlG,MAAOoY,KAGrFE,GAAgBF,EAChB5E,KAAKxO,YAAYL,KAAKrB,EAAYrD,MAG1CoW,EAAYvN,UAAU6O,2BAA6B,SAAUzT,EAAM0T,GAC/D,IACI1R,EAIAmJ,EAEAY,EAEA2I,EACAd,EAVAnU,EAAO6P,KAAKjQ,QAAQK,iBAEpBC,EAAS2P,KAAKjQ,QAAQM,OAItB0T,EAAQtT,EAAaC,GAAc,OAKvC,GAAIqT,GAASA,EAAMrX,OAAS,IACO,IAA3BsT,KAAKgE,WAAWtX,SAChBsT,KAAKgE,cACLhE,KAAKgE,WAAW7S,KAAK4S,IAEzB/D,KAAKqF,wBAAwB3U,EAAMqT,EAAOK,GACtCpE,KAAKjQ,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIsX,EAAMrX,OAAQD,IAE9BgQ,GADAZ,EAAOkI,EAAMtX,IACY,WACzBiG,EAAOmJ,EAAW,MACXA,EAAiB,WAAI1L,EAAKkU,IAAMhU,EAAOoM,GAAOiI,UAAY,EACjEU,GAAWvJ,EAAiB,WAAI1L,EAAKiV,QAAU/U,EAAOoM,GAAO6I,cAAgB,EAC7EhB,EAAetE,KAAKjQ,QAAQoV,mBAA+B,IAAV1I,GAAeZ,EAAiB,WAAI,EAAIxL,EAAOoM,IAC5FpM,EAAOoM,GAAOkI,WAAatU,EAAOoM,GAAO6H,aAAmB,EAAuB,IAAlBjU,EAAO3D,OAAgB,EAAI2D,EAAOoM,IACnGpM,EAAOoM,GAAOkI,WAAatU,EAAOoM,GAAO6H,aAAmB,EAChE5R,EAAO,IAAIuP,GAAKvP,EAAKzF,EAAImY,EAAS1S,EAAKxF,GAAKoX,EAAec,GAAU1S,EAAKlG,MAAQ4Y,EAAS1S,EAAKvF,OAASiY,IACpGvJ,EAAiB,YAAKA,EAAa,OAAI,GACxCmE,KAAKmE,2BAA2BJ,EAAMtX,GAAIiG,IAM9DmQ,EAAYvN,UAAU+P,wBAA0B,SAAUvX,EAAQ6C,EAAUyT,GACxEpE,KAAKuF,iBAAiB5U,EAAU4C,EAAQ6Q,IACxCzT,EAASuU,KAAK3M,GACdyH,KAAKwF,kBAAkB7U,KAAcyT,OAEzCvB,EAAYvN,UAAUkQ,kBAAoB,SAAU9U,EAAM+U,EAAY/S,EAAMgT,GACxE,IAAIhJ,EAAahM,EAAKhE,OACtB,GAAmB,IAAfgQ,EAAkB,CAClB,IAAIiJ,EAAiB3F,KAAK4F,eAAeH,EAAY/S,GAErD,OADImT,EAAWH,EAAM7N,OAAO8N,GAGhC,IAAInZ,EAAQgH,EAAgBd,GACxBoT,EAAYpV,EAAK,GACjBqV,EAAWrV,EAAK0H,MAAM,EAAGsE,GAC7B,GAAIsD,KAAKgG,YAAYP,EAAYK,EAAWtZ,GAAQ,CAChD,IAAIyZ,EAASR,EAAW5N,OAAOiO,GAC/B,OAAO9F,KAAKwF,kBAAkBO,EAAUE,EAAQvT,EAAMgT,GAKtD,IAAK,IAFDQ,EAAmBT,EAAW/Y,OAC9ByZ,EAAW,EACN1Z,EAAI,EAAGA,EAAIyZ,EAAkBzZ,GAAK,EACvC0Z,GAAYV,EAAWhZ,GAAa,SAExC,IAAI2Z,EAAepG,KAAKqG,QAAQ3T,EAAMyT,GAElCN,GADAF,EAAiB3F,KAAK4F,eAAeH,EAAY/S,GACtCgT,EAAM7N,OAAO8N,IAC5B,OAAO3F,KAAKwF,kBAAkB9U,KAAU0V,EAAcP,IAG9DhD,EAAYvN,UAAU0Q,YAAc,SAAUP,EAAYK,EAAWpZ,GACjE,GAA0B,IAAtB+Y,EAAW/Y,OACX,OAAO,EAGP,IAAIuZ,EAASR,EAAW5N,OAAOiO,GAG/B,OAF4B9F,KAAKsG,mBAAmBb,EAAY/Y,IACxCsT,KAAKsG,mBAAmBL,EAAQvZ,IAIhEmW,EAAYvN,UAAUgR,mBAAqB,SAAUC,EAAK7Z,GAKtD,IAAK,IAJD8Z,EAAYD,EAAI7Z,OAChB+Z,EAAUC,EAAAA,EACVC,GAAWD,EAAAA,EACXE,EAAU,EACLna,EAAI,EAAGA,EAAI+Z,EAAW/Z,GAAK,EAAG,CACnC,IAAIoa,EAAON,EAAI9Z,GAAa,SACxBoa,EAAOJ,IACPA,EAAUI,GAEVA,EAAOF,IACPA,EAAUE,GAEdD,GAAWC,EAIf,OAFa/T,KAAKgU,IAAKhU,KAAKiU,IAAIra,EAAQ,GAAMia,EAAW7T,KAAKiU,IAAIH,EAAS,GAAM9T,KAAKiU,IAAIH,EAAS,IAC7F9T,KAAKiU,IAAIra,EAAQ,GAAM+Z,KAGjC5D,EAAYvN,UAAU+Q,QAAU,SAAU3T,EAAMmU,GAC5C,IAAIT,EAAezS,EAAmBjB,GAClClG,EAAQ4Z,EAAa5Z,MACrBW,EAASiZ,EAAajZ,OACtB2G,EAAUsS,EAAanZ,EACvB8G,EAAUqS,EAAalZ,EAC3B,GAAIV,GAASW,EAAQ,CACjB,IAAI6Z,EAAYH,EAAO1Z,EAQvB,OAAO0G,GALH5G,EAAG6G,EAAUkT,EACb9Z,EAAG6G,EACHvH,MAJWA,EAAQwa,EAKnB7Z,OAAQA,IAKZ,IAAI8Z,EAAaJ,EAAOra,EAQxB,OAAOqH,GALH5G,EAAG6G,EACH5G,EAAG6G,EAAUkT,EACbza,MAAOA,EACPW,OALYA,EAAS8Z,KAUjCpE,EAAYvN,UAAUsQ,eAAiB,SAAUW,EAAK7T,GAYlD,IAAK,IAFD+J,EATA/I,EAAYC,EAAmBjB,GAE/BlG,EAAQkH,EAAUlH,MAClBW,EAASuG,EAAUvG,OACnB2G,EAAUJ,EAAUzG,EACpB8G,EAAUL,EAAUxG,EACpBsZ,EAAYD,EAAI7Z,OAChB2D,EAAS2P,KAAKjQ,QAAQM,OACtBF,EAAO6P,KAAKjQ,QAAQK,iBAEpB+V,EAAW,EACN1Z,EAAI,EAAGA,EAAI+Z,EAAW/Z,GAAK,EAChC0Z,GAAYI,EAAI9Z,GAAa,SAW5B,IALD2Y,EAEA8B,EAEAC,EARAH,EAAYb,EAAWhZ,EACvB8Z,EAAad,EAAW3Z,EACxB4a,EAAatT,EACbuT,EAAatT,EAEbuT,KAIJ,IAAS7a,EAAI,EAAGA,EAAI+Z,EAAW/Z,GAAK,EAAG,CACnC,IAAIoP,EAAO0K,EAAI9Z,GAOf,GANAgQ,EAAQZ,EAAiB,WACzBA,EAAiB,WAAuB,IAAlBxL,EAAO3D,SAAkBsT,KAAKjQ,QAAQoV,mBAAqB1I,IAAUpM,EAAO3D,QAC9FmC,oBAAkBsB,EAAKI,YAAqBkM,IAAUpM,EAAO3D,QACjEwa,EAAWtL,EAAaoE,KAAKgE,WAAW,GAAInI,GAC5CsL,EAAaD,EAAWlH,KAAKjQ,QAAQ8C,SAAWgJ,EAAa,OAAEnJ,KAC/D0S,EAAUvJ,EAAiB,WAAI1L,EAAKiV,QAAU/U,EAAOoM,GAAO6I,aACxD9Y,GAASW,EAAQ,CACjB,IAAIoa,EAAKF,EAAaxL,EAAe,SAAImL,EACzCnL,EAAW,MACP5O,EAAGma,EACHla,EAAGma,EACH7a,MAAO4a,EAAaJ,EACpB7Z,OAAQoa,GAEZF,EAAaE,MAEZ,CACD,IAAIC,EAAKJ,EAAavL,EAAe,SAAIoL,EACzCpL,EAAW,MACP5O,EAAGma,EACHla,EAAGma,EACH7a,MAAOgb,EACPra,OAAQka,EAAaJ,GAEzBG,EAAaI,EAEb3L,EAAa,OAAI,IAAMqL,GAAapU,KAAKyE,MAAM7E,EAAKxF,EAAKkY,EAAU,IACnEtS,KAAKyE,MAAM4P,EAAWja,GAAKia,EAAWha,OAASga,EAAWja,KAAO4F,KAAKyE,MAAM7E,EAAKzF,EAAKmY,EAAU,IAChGtS,KAAKyE,MAAM4P,EAAWla,GAAKka,EAAW3a,MAAQ2a,EAAWla,OACzD+S,KAAKxO,YAAYL,KAAK0K,GACtByL,EAAYnW,KAAK0K,IAGzB,OAAOyL,GAEXzE,EAAYvN,UAAUiQ,iBAAmB,SAAU7U,EAAMmW,GAIrD,IAAK,IAHDnK,EAAahM,EAAKhE,OAElBmN,KACKpN,EAAI,EAAGA,EAAIiQ,EAAYjQ,GAAK,EAAG,CAGpC,IAAK,IAFDgb,EAAe/W,EAAKhE,OACpBgb,EAAY,EACPC,EAAM,EAAGA,EAAMF,EAAcE,GAAO,EACzCD,GAAahX,EAAKiX,GAAa,OAInC,IAAK,IAFDC,EAAaf,EAAOa,EACpBG,OAAQ,EACHzW,EAAI,EAAGA,EAAIqW,EAAcrW,KAC9ByW,EAAQnX,EAAKU,IACG,SAAIyW,EAAc,OAAID,EACtC/N,EAAO1I,KAAK0W,GAGpB,OAAOhO,GAEXgJ,EAAYvN,UAAUwS,gBAAkB,SAAUC,GAC9C,IACIhF,EADAiF,EAAa,IAAInX,OAErBmX,EAAaD,EAAW,GAAW,OACnC/H,KAAKjQ,QAAQyT,aAAewE,EAAsB,UAAIA,EAAuB,WAAI,KACjF,IAAIC,EAAsB,IAAIpX,OAC1BhC,oBAAkBmZ,EAAsB,WACxCC,EAAsBD,EAGtBC,EAAoBD,EAAsB,YAAMA,GAEpDjF,EAAYO,YAAWtD,KAAKjQ,QAAQ8C,SAAUkQ,GAAW,GACpDlU,oBAAkBmR,KAAKjQ,QAAQ4M,sBAAyB9N,oBAAkBmR,KAAKjQ,QAAQgT,aACxFA,EAAY/C,KAAKjQ,QAAQgT,WAG7B,IAAK,IADDY,EAAQ3D,KAAKjQ,QAAQM,OAAO3D,OACvBD,EAAI,EAAGA,EAAIkX,EAAOlX,IAAK,CAExBkX,IADaoE,EAAW,GAAe,WAEvC/H,KAAKjQ,QAAQM,OAAOsT,GAAS3D,KAAKjQ,QAAQM,OAAO5D,GAGjDuT,KAAKjQ,QAAQM,OAAO6X,OAAOvE,EAAQ,EAAG,GAG9C3D,KAAKyD,qBAAqBwE,EAAqBlF,GAC/C/C,KAAK0D,kBAAkBuE,IAG3BpF,EAAYvN,UAAUoO,kBAAoB,SAAUyE,GAChD,IAEI5c,EAGA6c,EACAC,EACAC,EAPAC,EAAQvI,KAGR9O,EAAU8O,KAAKjQ,QAKnBiQ,KAAK1S,SAAW4D,EAAQ5D,SACxB,IAEIkb,EAEA/L,EACAgM,EAEA/V,EACAqG,EAGApK,EACAkN,EACA6M,EACAla,EAKAma,EAEAC,EACAvE,EACAwE,EApBAC,EAAY5X,EAAQgB,QAAQhH,GAG5B+F,EAAOC,EAAQ+S,WAGf8E,EAAkB/I,KAAKjQ,QAAQK,iBAAiB2Y,gBAOhDC,EAAW,GAEXC,EAAele,SAASC,eAAekG,EAAQgB,QAAQhH,GAAK,sBAM5DmF,EAASa,EAAQb,OACrB2P,KAAKkJ,YAAclJ,KAAK1S,SAAS6b,aAAcje,GAAI4d,EAAY,YAAc7X,EAAO,YA4GpF,IAAK,IA3GDmY,EAEA1X,EACAyQ,EAYA4F,EACAjZ,EAZAua,EAAgBpe,gBAAc,OAC9BC,GAAIgG,EAAQgB,QAAQhH,GAAK,wBACzBoe,UAAW,WACXjX,OAAQ,iEACKnB,EAAQ2B,SAAS3F,EAAI,WACpBgE,EAAQ2B,SAAS5F,EAAI,aACnBiE,EAAQ2B,SAAS1F,OAAS,YAC3B+D,EAAQ2B,SAASrG,MAAQ,QAExC+c,GAAa,EACbpZ,EAAOe,EAAQd,iBAGfoZ,EAAU,SAAU/c,GAGpB,GAFAoP,EAAO4N,EAAOjY,YAAY/E,GAC1BgQ,EAAQZ,EAAiB,WACrB4N,EAAO1Z,QAAQ2Z,eAAiB7a,oBAAkB4a,EAAO1Z,QAAQyT,eAC9D/G,EAAQ,GAAKgN,EAAO1Z,QAAQ2Z,eAC5BjN,EAASgN,EAAO1Z,QAAQyT,aAAe,EAC1C,MAAO,WAEX9Q,EAAOmJ,EAAW,KAClB0N,EAAa1N,EAAiB,WAC9B8M,EAAUG,EAAY,gBAAkBrM,EAAQ,eAAiBhQ,EACjE2c,EAAYK,EAAOnc,SAAS6b,aAAcje,GAAIyd,EAAU,WACxDtE,GAAOkF,EAAapZ,EAAKkU,IAAMhU,EAAOoM,GAAOiI,UAAY,EACzD,IAAIiF,EAAkBF,EAAO1Z,QAAQgT,UAAYpP,EAAmB8V,EAAO1Z,QAAQgT,WAAa0G,EAAO1Z,QAAQ8C,SACpF,eAAvB3B,EAAQ+S,aACRvR,EAAKlG,MAAQsG,KAAKC,IAAIL,EAAKzF,EAAIyF,EAAKlG,OAAS6X,EAC7C3R,EAAKvF,OAAS2F,KAAKC,IAAIL,EAAKxF,EAAIwF,EAAKvF,QAAUkX,GAEnB,uBAA5BnT,EAAQ+B,gBACRP,EAAKzF,EAAK0c,EAAgB1c,EAAI0c,EAAgBnd,MAASkG,EAAKlG,MAAQsG,KAAKC,IAAI4W,EAAgB1c,EAAIyF,EAAKzF,GAErE,uBAA5BiE,EAAQ+B,gBACbP,EAAKxF,EAAKyc,EAAgBzc,EAAIyc,EAAgBxc,OAAUuF,EAAKvF,OAAS2F,KAAKC,IAAI4W,EAAgBzc,EAAIwF,EAAKxF,GAEvE,uBAA5BgE,EAAQ+B,kBACbP,EAAKzF,EAAK0c,EAAgB1c,EAAI0c,EAAgBnd,MAASkG,EAAKlG,MAAQsG,KAAKC,IAAI4W,EAAgB1c,EAAIyF,EAAKzF,GACtGyF,EAAKxF,EAAKyc,EAAgBzc,EAAIyc,EAAgBxc,OAAUuF,EAAKvF,OAAS2F,KAAKC,IAAI4W,EAAgBzc,EAAIwF,EAAKxF,IAE7Fqc,EAAapZ,EAAK2E,aAAezE,EAAOoM,GAAO3H,aAC9DuT,EAAeoB,EAAOpB,aAAakB,EAAY1N,GAC/ClN,EAAO0Z,EAAmB,KAC1B7Z,EAAU6Z,EAAsB,QAChCtP,EAASwQ,EAAapZ,EAAKyZ,YAAevZ,EAAOoM,GAAQoN,aACzD,IAAIC,OAAY,EAEhB,GADA1B,EAAamB,EAAapZ,EAAK4Z,WAAc1Z,EAAOoM,GAAQkI,WACxDlI,IAAUgN,EAAO1Z,QAAQyT,aACzB,GAAIiG,EAAO1Z,QAAQ6T,iBAAkB,CAEjC9U,EAAgB,IAAM2a,EAAO1Z,QAAQia,oBAAsB,IAC3DF,EAAYjO,EAAqB,eAAEzM,QAF1B,MAEsCN,GAC/Cgb,EAAsB,IAAVrN,EAAc,IAAMqN,EAAYA,OAG5CA,EAAYjO,EAAW,UAIvB4N,EAAO1Z,QAAQ6T,mBACf/H,EAAgB,WAAI,GAExBiO,EAAYjO,EAAW,KAE3B6M,EAAa5P,EAAcC,EAAQ8C,EAAW,KAAG4N,EAAO1Z,UAAY+Z,EACpE/B,EAAatX,EAAaoL,GAAc,OACxC6M,GAAca,GAAcxB,GAAcA,EAAWrb,OAAS,GAAK+c,EAAO1Z,QAAQiD,gBAC7E6I,EAAgB,UACb3K,EAAQ+Y,UAAYvB,EAAa,OAAS,OAASA,EADlCxX,EAAQ+Y,UAAYvB,EAAa,OAAS,OAASA,EACJA,GACxEG,EAAaU,EAAapZ,EAAK+Z,WAAa7Z,EAAOoM,GAAO0N,aAChDve,WAAa6d,EAAO1Z,QAAQqa,WAAW5L,iBAAmBqK,EAAUjd,WAC9EuW,EAASoH,EAAapZ,EAAKgS,OAAS9R,EAAOoM,GAAO0F,OAClD5W,EAAYge,EACmBpZ,EAAKka,cADyB,SAAnCha,EAAOoM,GAAsB,gBAAe,UAAgD,WAAnCpM,EAAOoM,GAAsB,gBAC5G,YAAc,WAClBgM,EAAmBc,EAAapZ,EAAKsY,iBAAmBpY,EAAOoM,GAAOgM,iBACtE/W,EAAW6X,EAAapZ,EAAKma,cAAgBja,EAAOoM,GAAO8N,eAC3D1O,EAAc,SAAMsG,OAAQA,EAAQ3T,QAASA,EAASG,KAAMA,GAC5D2Z,GACIkC,QAAQ,EAAOta,KAAMwO,GAAe3O,QAAS0Z,EAAO1Z,QACpDuB,YAAauK,EAAM4O,YAAahB,EAAOjY,YAAa5D,QAASiO,EAAc,SAE/E4N,EAAO1Z,QAAQ2a,QAAQhM,GAAe4J,EAAW,SAAUqC,GACvD,IAAKA,EAAaH,OAAQ,CACtBxB,EAAW,MAAQtW,EAAKzF,EAAI,IAAMyF,EAAKxF,EAAI,OAASwF,EAAKzF,EAAIyF,EAAKlG,OAAS,IAAMkG,EAAKxF,EAClF,OAASwF,EAAKzF,EAAIyF,EAAKlG,OAAS,KAAOkG,EAAKxF,EAAIwF,EAAKvF,QAAU,MAAQuF,EAAKzF,EAAI,KAAOyF,EAAKxF,EAAIwF,EAAKvF,QAAU,IACnHqb,EAAc,IAAIlG,GAAWqG,EAAU,YAAaha,EAAMwT,EAAO3V,MAAO2V,EAAOtU,MAAOW,EAAS,KAAMwa,GACrG,IAAIhZ,EAAOuY,EAAMjb,SAASsd,SAASpC,GACnCY,EAAUhe,YAAY4E,GAClBoY,GACAG,EAAMsC,eAAenC,EAAWlW,WAAY4W,EAAWP,EAAWnW,EAAMqW,EAAiBJ,EAASha,EAAMpD,EAAUuD,GAElH4C,IACAkX,EAAcL,EAAMuC,eAAe7B,EAAcN,EAASjW,EAAM+V,EAAkB/W,EAAUmK,GAC5FwN,EAAcje,YAAYwd,IAE9BQ,EAAUvQ,aAAa,aAAcgD,EAAW,MAChDuN,EAAUvQ,aAAa,YAAa0P,EAAMxY,QAAQgb,SAAWte,EAAI,GAAG+F,YACpE+V,EAAMW,YAAY9d,YAAYge,OAItCK,EAASzJ,KACJvT,EAAI,EAAGA,EAAIuT,KAAKxO,YAAY9E,OAAQD,IACzC+c,EAAQ/c,GAEZ,GAAI4c,EAAc1Q,WAAWjM,OAAS,EAElC,GADAuc,EAAa7d,YAAYie,GACrBlZ,EAAKma,cACL,IAAS7d,EAAI,EAAGA,EAAI4c,EAAc2B,kBAAmBve,IACjDwe,uBAAqB5B,EAAc1Y,SAASlE,GAAGvB,GAAI,sBAIvD,IAAK,IAAIkG,EAAI,EAAGA,EAAIiY,EAAc2B,kBAAmB5Z,IACjD6Z,uBAAqB5B,EAAc1Y,SAASS,GAAGlG,GAAI,kBAI/D8U,KAAKjQ,QAAQmb,UAAU9f,YAAY4U,KAAKkJ,cAE5CrG,EAAYvN,UAAUuV,eAAiB,SAAUjgB,EAAMuI,EAAe0V,EAAWnW,EAAMqW,EAAiBJ,EAASha,EAAMpD,EAAUuD,GAI1G/D,SAASC,eAAegV,KAAKjQ,QAAQmC,QAAQhH,GAAK,sBAC1D8U,KAAKjQ,QAAQK,iBAJxB,IAMIrD,EACAoe,EAEAC,EAIAC,EALA1T,KAGA2T,KACAne,EAAS,EAKb,GAHAwK,GAA8C,IAA3B/M,EAAKH,QAAQ,QAAmBG,EAAKqE,MAAM,QAAU,KACxEmc,EAAapL,KAAKuL,qBAAqB7Y,EAAM9H,EAAMie,EAAWE,GAC9Dhc,EAAWpC,EAAYgN,GAAkBA,EAAe,IAAMyT,EAAW,GAAIvC,GACzE7I,KAAKjQ,QAAQka,UAAW,CACxB,IAAItX,EAAYhI,EAAYC,EAAMie,GAC9B2C,EAAmB5gB,EAAKmE,OAAO,QAAUnE,EAAKmE,OAAO,OACzD,GAAI2D,EAAKlG,MAAQmG,EAAUnG,OAASgf,EAAmB,EAAG,CACtD,IAAIjf,EAAQ3B,EAAK+B,UAAU6e,EAAmB,EAAG5gB,EAAK8B,QAElD+e,EAAkB9gB,EADJ,MAC6Bke,GAC/CuC,EAAW,GAAO/e,EAASqG,EAAKlG,MAAQif,EAAgBjf,MAnBlD,EAmBmE4e,EAAW,GAAIvC,GAAatc,GAI7G,GADA4e,EAAe1Y,EAAkBC,EAAMnH,EAAUwB,EAAU,OAAQiT,KAAKjQ,UACnElB,oBAAkB8I,GAAiB,CAIpC,IAAK,IAHDoE,KACA2P,EAAQ,KACRC,KACKlf,EAAI,EAAGA,EAAIkL,EAAejL,OAAQD,IAGvCU,IADAJ,EAAWpC,EADX+gB,EAAQrf,EAAUqG,EAAKlG,MAAQ,EAAImL,EAAelL,GAAIoc,GACxBA,IACX1b,OACnBwe,EAAUxa,KAAKpE,EAASP,OACxBuP,EAAW5K,KAAKua,GAEpBN,EAAarP,EACbhP,EAASP,MAAQsG,KAAKgU,IAAI/F,MAAM,KAAM4K,GACtC5e,EAASI,OAASA,EAEtB,GAAwB,eAApB4b,GAAwD,SAApBA,GAAkD,SAApBA,EAA4B,CAC9F,IAAK,IAAI3X,EAAI,EAAGA,EAAIga,EAAW1e,OAAQ0E,IAEnCjE,IADAJ,EAAWpC,EAAYygB,EAAWha,GAAIyX,IACnB1b,OACduF,EAAKvF,OA1CJ,EA0CwBA,GAC1Bme,EAAUna,KAAKia,EAAWha,IAGlC,GAAwB,SAApB2X,GAA8BqC,EAAW1e,SAAW4e,EAAU5e,QAAU4e,EAAU5e,OAAQ,CAC1F,IAAIkf,EAAmBN,EAAU5e,OAAS,EACtCmf,EAAaP,EAAUM,GAC3BC,EAAaA,EAAWlf,UAAU,EAAIkf,EAAWnf,OAAS,GAAM,MAChE4e,EAAUpD,OAAO0D,GACE,QAAfC,GACAP,EAAUna,KAAK0a,SAKvBR,EAAWD,EACXE,EAAUna,KAAKka,GAGnB1d,EADc,IAAI4U,GAAWoG,EAAU,QAASwC,EAAale,EAAGke,EAAaje,EAAG,QAASoe,EAAW,GAAI,GAAIxc,GAC7E+Z,EAAWA,EAAUhb,OAASmS,KAAK8L,kBAAkBnd,GAAOwE,IAE/F0P,EAAYvN,UAAU+S,aAAe,SAAUkB,EAAY1N,GACvD,IAAI9L,EAAUiQ,KAAKjQ,QACfgc,EAAWxC,EAAaxZ,EAAQK,iBAAiBzB,KAAOoB,EAAQM,OAAOwL,EAAiB,YAAGlN,KAC3Fqd,EAAczC,EAAaxZ,EAAQK,iBAAiB5B,QAAUuB,EAAQM,OAAOwL,EAAiB,YAAGrN,QAChGK,oBAAkBmR,KAAKjQ,QAAQkc,mBAC5BjM,KAAKjQ,QAAQkc,iBAAiBvf,OAAS,IACvCqD,EAAQiT,aAAehD,KAAKjQ,QAAQkc,kBAG5C,IAAIjI,EAAavT,EAAaV,EAAQiT,aAAa,IAAY,OAC3DlO,EAAeyU,EAAaxZ,EAAQK,iBAAiB0E,aACrD/E,EAAQM,OAAOwL,EAAiB,YAAG/G,aACvC,GAAIA,EAAapI,OAAS,EAAG,CACzB,IAAIwf,EAASrX,EAASC,EAAc+G,EAAW,KAAEmE,KAAKjQ,QAAQoc,qBAAsBtQ,EAAW,KAAEmE,KAAKjQ,QAAQqc,qBAAsBvQ,EAAW,KAAEmE,KAAKjQ,QAAQS,kBAC9Jub,EAAYld,oBAAkBqd,EAAa,MAAsBnc,EAAQK,iBAAiBzB,KAA1Cud,EAAa,KAC7DF,EAAcE,EAAgB,aAG9B,IAAK,IAAIzf,EAAI,EAAGA,EAAIuX,EAAWtX,OAAQD,IAC/BuX,EAAWvX,GAAmB,iBAAMoP,EAAqB,eAAE5M,MAAM,KAAK,KACtE8c,EAAYld,oBAAkBkd,GAAwBld,oBAAkBkB,EAAQsc,gBAC5Btc,EAAQuc,QAAQ5f,OAAS,EACzEqD,EAAQuc,QAAQ7f,EAAIsD,EAAQuc,QAAQ5f,QAAU,UAD9CsX,EAAWvX,GAAS,KAAEsD,EAAQsc,gBADQN,GAMtD,OAASpd,KAAMod,EAAUvd,QAASwd,IAKtCnJ,EAAYvN,UAAUwW,kBAAoB,SAAUje,GAChD,IAAI0e,EAAiB1e,EAEjB2e,EAAW5S,EAAkBhD,EADjC2V,EAAqC,gBAAnBA,EAAoCxS,OAAOC,iBAAiBjP,SAASI,KAAM,MAAM2S,gBAAkByO,IAGrH,OADezZ,KAAKyE,OAAoB,IAAbiV,EAASzW,EAAuB,IAAbyW,EAASxW,EAAuB,IAAbwW,EAAS9c,GAAW,MAClE,IAAM,QAAU,SAEvCmT,EAAYvN,UAAUwV,eAAiB,SAAU7B,EAAcN,EAASjW,EAAMnH,EAAUmG,EAAUmK,GAC9F,IAAI4Q,EACAC,EACAC,EACAhb,EACAib,EACJ,GAAI/d,oBAAkB6C,EAAoB,WAEtC,IAAK,IADDd,EAAOC,OAAOD,KAAKiL,EAAW,MACzBpP,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7BiF,EAAWA,EAAStC,QAAQ,IAAImD,OAAO,MAAQ3B,EAAKnE,GAAK,KAAM,KAAMoP,EAAW,KAAEjL,EAAKnE,GAAG+F,aAUlG,OAPAb,EAAaF,EAAoBC,GACjC+a,EAAkB9a,EAAWkK,EAAW,KAAGmE,KAAKjQ,SAChD2c,EAAWza,EAAewa,EAAiB9D,EAAU,YAAa9M,EAAW,MAC7E8Q,EAAezZ,EAAewZ,EAAUzD,GACxC2D,EAAmBna,EAAkBC,EAAMnH,EAAUohB,EAAc,WAAY3M,KAAKjQ,SACpF2c,EAASphB,MAAMS,KAAO6gB,EAAiB3f,EAAI,KAC3Cyf,EAASphB,MAAMQ,IAAM8gB,EAAiB1f,EAAI,KACnCwf,GAEX7J,EAAYvN,UAAUiW,qBAAuB,SAAU7Y,EAAM9H,EAAMie,EAAW/b,GAC1E,IAAI+f,EACAvgB,EAAWoG,EAAKlG,MAAQ,GAC5B,OAAQM,GACJ,IAAK,OACD+f,GAAaxU,EAAK/L,EAAUoG,EAAKvF,OAAQvC,EAAMie,IAC/C,MACJ,IAAK,OACDgE,GAAaxgB,EAAUC,EAAW,EAAI1B,EAAMie,IAC5C,MACJ,IAAK,aACDgE,EAAYrV,EAASlL,EAAU1B,EAAMie,GACrC,MACJ,IAAK,OACDgE,EAAY/U,EAASxL,EAAU1B,EAAMie,GAG7C,OAAOgE,GAEJhK,KC1qBPiK,GAA6B,WAK7B,SAASA,EAAYC,GACjB/M,KAAK+M,QAAUA,EA6GnB,OAvGAD,EAAYxX,UAAU0X,MAAQ,SAAUvU,GACpCuH,KAAKiN,YAAclT,OAAOmT,KAAK,GAAI,QAAS,UAAYnT,OAAOoT,YAAc,UAAYpT,OAAOqT,WAAa,cAC7GpN,KAAKiN,YAAYI,OAAO,EAAG,GAC3BrN,KAAKiN,YAAYK,SAASC,OAAOC,WAAYD,OAAOE,aACpD,IAAIC,GACAlD,QAAQ,EAAOmD,YAAa3N,KAAK4N,eAAenV,GAAWvI,KAAMuO,IAErEuB,KAAK+M,QAAQrC,QAAQjM,GAAaiP,GAC7BA,EAASlD,QACVyC,QAAYS,EAASC,YAAa3N,KAAKiN,cAQ/CH,EAAYxX,UAAUsY,eAAiB,SAAUnV,GAC7C,IAAIoV,EAAM5iB,gBAAc,OAiBxB,OAhBIwN,EACIA,aAAoB3H,MACpB2H,EAASuM,QAAQ,SAAU1a,GACvBujB,EAAIziB,YAAYmE,EAAWjF,GAAOwjB,WAAU,MAG3CrV,aAAoBsV,QACzBF,EAAIziB,YAAYqN,EAASqV,WAAU,IAGnCD,EAAIziB,YAAYmE,EAAWkJ,GAAUqV,WAAU,IAInDD,EAAIziB,YAAY4U,KAAK+M,QAAQ7a,QAAQ4b,WAAU,IAE5CD,GAOXf,EAAYxX,UAAU0Y,OAAS,SAAUhhB,EAAMihB,EAAUC,GACrD,IAAI3F,EAAQvI,KACR9N,EAAUjH,gBAAc,UACxBC,GAAI,aACJijB,OACI3hB,MAASwT,KAAK+M,QAAQqB,cAAc5hB,MAAMgG,WAC1CrF,OAAU6S,KAAK+M,QAAQqB,cAAcjhB,OAAOqF,cAGhD6b,IAAeC,UAAQC,UAAU/b,WAAW/H,QAAQ,mBAAqB,GAC7EyjB,EAAcrf,oBAAkBqf,GAAeM,qBAAmBC,UAAYP,EAC9E,IAAIQ,EAAU,sFACV1O,KAAK+M,QAAQ7B,UAAUyD,UACvB,SACAvU,EAAML,OAAO6U,IAAIC,gBAAgB,IAAIC,KAAc,QAAT9hB,GAAkB0hB,KAC3D,IAAKK,eAAiBC,kBAAkBhP,KAAK+M,QAAQ7B,aAAele,KAAM,mBAC/E,GAAa,QAATA,EACAgT,KAAKiP,gBAAgBhB,EAAUjhB,EAAMoN,EAAKiU,OAEzC,CACD,IAAIa,EAAU,IAAIC,MACdC,EAAQld,EAAQmd,WAAW,MAC/BH,EAAQI,kBAGJ,GAFAF,EAAMG,UAAUL,EAAS,EAAG,GAC5BnV,OAAO6U,IAAIY,gBAAgBpV,GACd,QAATpN,EAAgB,CAChB,IAAIyiB,EAAa,IAAIC,cACjBC,EAAczd,EAAQ0d,UAAU,cAAcxgB,QAAQ,aAAc,sBACxEqgB,EAAWI,aAAa3B,YAAcA,EACtCyB,EAAcA,EAAYvX,MAAMuX,EAAYllB,QAAQ,KAAO,GAC3DglB,EAAWK,MAAMC,MAAMC,SAAST,UAAU,IAAIU,YAAUN,GAAc,EAAG,EAAIpH,EAAMwE,QAAQqB,cAAc5hB,MAAQ,GAAK+b,EAAMwE,QAAQqB,cAAcjhB,QAC9IkhB,IACAoB,EAAWS,KAAKjC,EAAW,QAC3BwB,EAAWU,gBAIf5H,EAAM0G,gBAAgBhB,EAAUjhB,EAAMkF,EAAQ0d,UAAU,aAAaxgB,QAAQ,YAAa,sBAAuBif,IAGzHa,EAAQkB,IAAMhW,IAStB0S,EAAYxX,UAAU2Z,gBAAkB,SAAUhB,EAAUjhB,EAAMoN,EAAKiU,GACnEpjB,gBAAc,KACVkjB,OACIkC,SAAYpC,EAAW,IAAMjhB,EAAKsjB,oBAClC3U,KAAQvB,KAEbmW,cAAc,IAAIC,WAAWnC,EAAa,QAAU,QACnDoC,KAAM1W,OACN2W,SAAS,EACTC,YAAY,MAGb7D,MJ7GR8D,UAAUA,aAPHC,eACFplB,KAAM,OACNC,WAAY,SACZmC,MAAO,UACPlC,UAAW,SACXC,WAAY,4BKRpB,IAAI6T,GAAwC,WACxC,IAAIC,EAAgB,SAAUrE,EAAG3L,GAI7B,OAHAgQ,EAAgB7O,OAAO8O,iBAChBC,wBAA2B9O,OAAS,SAAUuK,EAAG3L,GAAK2L,EAAEuE,UAAYlQ,IACvE,SAAU2L,EAAG3L,GAAK,IAAK,IAAImQ,KAAKnQ,EAAOA,EAAEoQ,eAAeD,KAAIxE,EAAEwE,GAAKnQ,EAAEmQ,MACpDxE,EAAG3L,IAE5B,OAAO,SAAU2L,EAAG3L,GAEhB,SAASqQ,IAAOC,KAAKC,YAAc5E,EADnCqE,EAAcrE,EAAG3L,GAEjB2L,EAAE/F,UAAkB,OAAN5F,EAAamB,OAAOqP,OAAOxQ,IAAMqQ,EAAGzK,UAAY5F,EAAE4F,UAAW,IAAIyK,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQnH,EAAKoH,GAC7E,IAA2HjF,EAAvHkF,EAAIC,UAAU9T,OAAQqJ,EAAIwK,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOzP,OAAO4P,yBAAyBJ,EAAQnH,GAAOoH,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyB5K,EAAI2K,QAAQC,SAASP,EAAYC,EAAQnH,EAAKoH,QACpH,IAAK,IAAI7T,EAAI2T,EAAW1T,OAAS,EAAGD,GAAK,EAAGA,KAAS4O,EAAI+E,EAAW3T,MAAIsJ,GAAKwK,EAAI,EAAIlF,EAAEtF,GAAKwK,EAAI,EAAIlF,EAAEgF,EAAQnH,EAAKnD,GAAKsF,EAAEgF,EAAQnH,KAASnD,GAChJ,OAAOwK,EAAI,GAAKxK,GAAKlF,OAAO+P,eAAeP,EAAQnH,EAAKnD,GAAIA,GA4B5D+a,GAAyB,SAAUhQ,GAKnC,SAASgQ,EAAQljB,EAASsE,GACtB,IAAIqW,EAAQzH,EAAOvL,KAAKyK,KAAMpS,EAASsE,IAAY8N,KASnD,OAPAuI,EAAM2F,YAAc,aAEpB3F,EAAMnF,gBAENmF,EAAM0D,oBAEN1D,EAAMpD,oBAAqB,EACpBoD,EAk8BX,OAh9BA9I,GAAUqR,EAAShQ,GAgBnBgQ,EAAQxb,UAAUyb,UAAY,WAC1B/Q,KAAK0K,QJ3DK,QI2DW3a,QAASiQ,OAC9BA,KAAKgR,sBACLhR,KAAKiR,eACLjR,KAAKkR,YACLlR,KAAKmR,aACLnR,KAAKoR,cAETN,EAAQxb,UAAU+b,OAAS,WACvBrR,KAAKsR,yBACLtR,KAAKuR,cACLvR,KAAKoK,WAAazM,GAAcqC,KAAKpC,OACrCoC,KAAKwR,eACLxR,KAAKyR,YAAYzR,KAAK0R,cAAe,QAAS,KAAM,MAC/C7iB,oBAAkBmR,KAAKgD,gBACxBhD,KAAKiM,iBAAmBjM,KAAKgD,cAEjChD,KAAK2R,sBAITb,EAAQxb,UAAUqc,mBAAqB,WACnC,IACIC,EACAC,EACAC,EACAC,EAJAxJ,EAAQvI,KAKZ,GAAIA,KAAKgS,sBAAsBC,cAAa,CACxCL,EAAa5R,KAAKgS,WAClBH,EAAc7R,KAAKkS,iBAAiBC,QAAQnS,KAAKkS,MAAQ,IAAIC,QAC3CP,EAAWQ,aAAaP,GAC9BQ,KAAK,SAAUrgB,GACvBuW,EAAMyJ,WAAahgB,EAAU,OAC7BuW,EAAM+J,+BAGLtS,KAAKgS,sBAAsBxP,IAChCuP,EAAY/R,KAAKgS,YACjBF,EAAa,IAAIS,OAAKR,EAAUnP,YAAamP,EAAU/kB,KAAM+kB,EAAUtP,MAAOsP,EAAUrP,cAC7E8P,UAAY,SAAUC,GAC7BlK,EAAMyJ,WAAaU,KAAKC,MAAM,IAAMF,EAAO,KAAK,GAChDlK,EAAM+J,yBAEVR,EAAWc,KAAKb,EAAUpP,WAG1B3C,KAAKsS,yBAGbxB,EAAQxb,UAAUgd,sBAAwB,WACtCtS,KAAK6S,iBACD7S,KAAKrD,qBAAuBqD,KAAKuD,eAAeuP,SAChD9S,KAAKrD,oBAAoBoW,eAE7B/S,KAAKzO,OAAOuR,qBACZ9C,KAAK9N,QAAQ9G,YAAY4U,KAAKkL,WAC9BlL,KAAKgT,gBACLhT,KAAK0K,QJ9GO,UI8GW3a,QAASiQ,QAEpC8Q,EAAQxb,UAAU4b,UAAY,WAC1B,GAAIlR,KAAKkL,UAAW,CAChB,KAAOlL,KAAKkL,UAAUvS,WAAWjM,OAAS,GACtCsT,KAAKkL,UAAU+H,YAAYjT,KAAKkL,UAAUgI,aAEzClT,KAAKkL,UAAUiI,iBAAmBnT,KAAKkL,UAAUkI,YAClD9f,SAAO0M,KAAKkL,WAGpB,IAAImI,EAAiBrT,KAAK9N,QAAQ/F,YAC9BmnB,EAAkBtT,KAAK9N,QAAQ9F,aACnC4T,KAAKoO,cAAgB,IAAIliB,GAAK7B,EAAe2V,KAAKxT,MAAO6mB,IAAmBA,GAAkB,IAAKhpB,EAAe2V,KAAK7S,OAAQmmB,IAAoBA,GAAmB,KACtKtT,KAAKkL,UAAYlL,KAAK1S,SAAS4jB,WAC3BhmB,GAAI8U,KAAK9N,QAAQhH,GAAK,OACtBsB,MAAOwT,KAAKoO,cAAc5hB,MAC1BW,OAAQ6S,KAAKoO,cAAcjhB,UAMnC2jB,EAAQxb,UAAU0b,oBAAsB,WACpC,GAAwB,KAApBhR,KAAK9N,QAAQhH,GAAW,CACxB,IAAI6Q,EAAahR,SAASwR,uBAAuB,aAAa7P,OAC9DsT,KAAK9N,QAAQhH,GAAK,mBAAqB6Q,EAE3CiE,KAAK1S,SAAW,IAAIsB,cAAYoR,KAAK9N,QAAQhH,IAC7C8U,KAAKzO,OAAS,IAAIsR,GAAY7C,OAElC8Q,EAAQxb,UAAUgc,uBAAyB,WACvC,IAAIrI,EAAele,SAASC,eAAegV,KAAK9N,QAAQhH,GAAK,sBAI7D,GAHI+d,GAAgBA,EAAa+B,kBAAoB,GACjD/B,EAAa3V,SAEbzE,oBAAkB9D,SAASC,eAAegV,KAAK9N,QAAQhH,GAAK,uBAAwB,CACpF,IAAIqoB,EAAmBtoB,gBAAc,OACjCC,GAAI8U,KAAK9N,QAAQhH,GAAK,qBACtBmH,OAAQ,kCAEZ2N,KAAK9N,QAAQ9G,YAAYmoB,KAGjCzC,EAAQxb,UAAU0d,cAAgB,WAC1BhT,KAAKrD,qBAAuBqD,KAAKuD,eAAeuP,SAAW9S,KAAKrD,oBAAoB6W,aAAexT,KAAKzO,OAAO2X,aAC/GlJ,KAAKkL,UAAUuI,aAAazT,KAAKzO,OAAO2X,YAAalJ,KAAKrD,oBAAoB6W,cAOtF1C,EAAQxb,UAAUkc,aAAe,WAC7B,IAAIhlB,EAAQwT,KAAKmC,OAAO3V,MACpBknB,EAAgB1T,KAAKkL,UAAUpZ,cAAc,IAAMkO,KAAK9N,QAAQhH,GAAK,mBACzE,IAAK8U,KAAKmC,OAAO3V,MAAQ,GAAMwT,KAAK2T,YAAc3T,KAAKoK,WAAWtM,kBAAqBjP,oBAAkB6kB,GAAgB,CACrH,IAAIE,EAAa,IAAI1R,GAAWlC,KAAK9N,QAAQhH,GAAK,kBAAmB8U,KAAK2T,YAAc3T,KAAKoK,WAAWtM,gBAAiBkC,KAAKmC,OAAQ,EAAG,IAAIF,GAAKzV,EAAQ,EAAGA,EAAQ,EAAGwT,KAAKoO,cAAc5hB,MAAQA,EAAOwT,KAAKoO,cAAcjhB,OAASX,IACtOwT,KAAKkL,UAAU9f,YAAY4U,KAAK1S,SAASumB,cAAcD,SAElDF,GACLA,EAAc7a,aAAa,OAAQmH,KAAK2T,YAAc3T,KAAKoK,WAAWtM,kBAG9EgT,EAAQxb,UAAUmc,YAAc,SAAUqC,EAAO9mB,EAAM+mB,EAAQC,GAC3D,IACI7mB,EADA7B,EAAQwoB,EAAMjL,UAGdrc,EAASwT,KAAKoO,cAAc5hB,MAAQwT,KAAKiU,OAAOC,MAAQlU,KAAKiU,OAAOloB,KAGxE,GAFA+nB,EAAMjL,UAAUjd,WAAaoU,KAAKoK,WAAWxe,YAAckoB,EAAMjL,UAAUjd,WAC3EkoB,EAAMjL,UAAUpd,KAAOuU,KAAKoK,WAAW5e,UAAYsoB,EAAMjL,UAAUpd,KAC/DqoB,EAAMlpB,KAAM,CACRiE,oBAAkBmlB,KAClBA,EAAWhU,KAAK1S,SAAS6b,aAAcje,GAAI8U,KAAK9N,QAAQhH,GAAK,kBAEjE,IAAIipB,EAAe9nB,EAASG,EAAOsnB,EAAMlpB,KAAMU,GAC3C8oB,EAAczpB,EAAYwpB,EAAc7oB,GAExC+oB,EAAaznB,EADLiC,oBAAkBklB,GAAW,IAAI9R,GAAKjC,KAAKiU,OAAOloB,KAAMiU,KAAKiU,OAAOnoB,IAAKkU,KAAKoO,cAAc5hB,MAAOwT,KAAKoO,cAAcjhB,QAAU4mB,EACxGD,EAAMhnB,UAAWsnB,EAAapnB,GAC9DY,EAAU,IAAI2U,GAAWvC,KAAK9N,QAAQhH,GAAK,YAAc8B,EAAMqnB,EAAWpnB,EAAGonB,EAAWnnB,EAAG,QAASinB,GACpGG,EAAc,IAAIrS,GAAKoS,EAAWpnB,EAAGonB,EAAWnnB,EAAGknB,EAAY5nB,MAAO4nB,EAAYjnB,QAClF+E,EAAUvE,EAAkBC,EAAStC,EAAOA,EAAMuC,QAAmB,UAATb,EAAmBgT,KAAKoK,WAAWrM,eAAiBiC,KAAKoK,WAAWpM,mBAAoBgW,GACxJ9hB,EAAQ2G,aAAa,aAAcib,EAAMS,aAAeT,EAAMlpB,MAC9DsH,EAAQ2G,aAAa,YAAamH,KAAK+K,UAAqB,UAAT/d,EAAmB,EAAI,IAAIwF,aAChE,UAATxF,IAAqB8mB,EAAMU,iBAAiB5pB,MAAmB,aAAToC,KACvDG,EAAU6S,KAAKoO,cAAcjhB,OAASmnB,EAAYpnB,EAlBvC,GAkB0D8S,KAAKiU,OAAOQ,OACjFzU,KAAKnN,SAAW,IAAIoP,GAAKjC,KAAKiU,OAAOloB,KAAMuoB,EAAYpnB,EAnB5C,GAmB8DV,EAAOW,IAEvE,aAATH,GAAuB8mB,EAAMU,iBAAiB5pB,KAC9CoV,KAAKyR,YAAYqC,EAAMU,iBAAkB,WAAYF,EAAaN,GAGlEhU,KAAKkL,UAAU9f,YAAY4oB,QAI/B7mB,EAAU6S,KAAKoO,cAAcjhB,OAAS6S,KAAKiU,OAAOnoB,IAAMkU,KAAKiU,OAAOQ,OACpEzU,KAAKnN,SAAW,IAAIoP,GAAKjC,KAAKiU,OAAOloB,KAAMiU,KAAKiU,OAAOnoB,IAAKU,EAAOW,IAG3E2jB,EAAQxb,UAAUud,eAAiB,WAC/B,IACI7iB,EADAuY,EAAQvI,KAGZ,GADAA,KAAKgS,WAAahS,KAAKgS,YAClBnjB,oBAAkBmR,KAAKgS,aAAehS,KAAKgS,WAAWtlB,OAAS,GAAKsT,KAAKxP,gBAAiB,CAQ3F,GAPAwP,KAAKgD,gBACLhD,KAAKgS,WAAW0C,IAAI,SAAUhkB,GAC1BA,EAAK6X,EAAM/X,iBAAoBE,EAAK6X,EAAM/X,iBAAoBE,EAAK6X,EAAM/X,iBAAiBgC,WACtF9B,EAAK6X,EAAM/X,mBAEnBwP,KAAK5P,iBAAiBG,UAAYyP,KAAK5P,iBAAiBG,WAAayP,KAAKxP,gBAC1EwP,KAAK2U,0BACsB,IAAvB3U,KAAK3P,OAAO3D,OAAc,CAC1B,IAAIkoB,EAAS,IAAI/jB,OACjB+jB,EAAc,MAAI,EAClB5kB,EAAOgQ,KAAK5P,iBAAiBG,UAC7BqkB,EAAO5kB,MACP,IAAK,IAAIvD,EAAI,EAAGA,EAAIuT,KAAKgS,WAAWtlB,OAAQD,IAAK,CAC7C,IAAIsX,EAAQtT,EAAauP,KAAKgS,WAAWvlB,IAAY,OACjDuT,KAAKmF,oBAAsBpB,GAASA,EAAMrX,OAAS,EACnDqX,EAAMiB,QAAQ,SAAU6P,EAAaC,GAC7BD,EAAY7kB,IACZ4kB,EAAO5kB,GAAMmB,MACT+R,WAAY,EAAGhT,KAAM2kB,EAAY7kB,GAAO+kB,eAAgBF,EAAY7kB,GAAMwC,WAC1E9B,KAAMmkB,EAAaG,OAAQH,EAAYtM,EAAM/X,qBAMrDwP,KAAKgS,WAAWvlB,GAAGuD,IACnB4kB,EAAO5kB,GAAMmB,MACT+R,WAAY,EAAGhT,KAAM8P,KAAKgS,WAAWvlB,GAAGuD,GAAO+kB,eAAgB/U,KAAKgS,WAAWvlB,GAAGuD,GAAMwC,WAAY9B,KAAMsP,KAAKgS,WAAWvlB,GAC1HuoB,OAAQhV,KAAKgS,WAAWvlB,GAAGuT,KAAKxP,mBAKhDwP,KAAKgD,aAAa7R,KAAKyjB,OAEtB,CACD,GAAI5U,KAAKmF,mBAAoB,CACzBnF,KAAKiV,iBACLjV,KAAKiV,cAAgB3R,YAAWtD,KAAKgS,WAAYhS,KAAKiV,eAAe,GACrE,IAASxoB,EAAI,EAAGA,EAAIuT,KAAKiV,cAAcvoB,OAAQD,IAC3CuT,KAAKkV,wBAAwBlV,KAAKiV,cAAcxoB,GAAIA,GAExDuT,KAAKgD,aAAehD,KAAKiV,mBAGzBjV,KAAKmV,sBACDnV,KAAKgD,aAAatW,OAAS,GAC3BsT,KAAKoV,iBAAiBpV,KAAKgD,aAAatW,OAAS,GAGzDsD,EAAOgQ,KAAK3P,OAAO,GAAGC,UAErB0P,KAAKmF,oBACNnF,KAAKqV,gBAAgBrV,KAAKgD,aAAa,GAAGhT,GAAO,YAI7D8gB,EAAQxb,UAAUqf,wBAA0B,WACxC,IAAI5Q,EACJ/D,KAAKgS,WAAahS,KAAKgS,WACvB,IAAK,IAAIvlB,EAAI,EAAGA,EAAIuT,KAAKgS,WAAWtlB,OAAQD,IAAK,CAE7C,IADAsX,EAAQtT,EAAauP,KAAKgS,WAAWvlB,IAAY,SACpCsX,EAAMrX,OAAQ,CACvBsT,KAAKmF,oBAAqB,EAC1B,MAEK1Y,IAAMuT,KAAKgS,WAAWtlB,OAAS,IACpCsT,KAAKmF,oBAAqB,KAItC2L,EAAQxb,UAAU4f,wBAA0B,SAAUxkB,EAAMwL,GACxD,IACIoZ,EAGAC,EAIArc,EARAqP,EAAQvI,KAGR8D,EAAU,IAAIjT,OAEdb,EAAOgQ,KAAK5P,iBAAiBG,UAAYyP,KAAK5P,iBAAiBG,UAAYyP,KAAKxP,gBAMpF,GAFAsT,EAAUrT,EAAaC,IACvB4kB,EAAYxR,EAAUA,EAAgB,OAAI,OACzBwR,EAAU5oB,OAAS,EAAG,CACnCwM,EAAM4K,EAAa,IACnB,IAAK,IAAIrX,EAAI,EAAGA,EAAIuT,KAAK3P,OAAO3D,OAAQD,IAChCyM,IAAQ8G,KAAK3P,OAAO5D,GAAG6D,YACf0P,KAAK3P,OAAO5D,GACpB8oB,EAAa9oB,GAGrB,IAAK,IAAI2E,EAAI,EAAGA,EAAIkkB,EAAU5oB,OAAQ0E,IAAK,CACvCkkB,EAAUlkB,GAAS,KAAIkkB,EAAUlkB,GAAGpB,GACpCslB,EAAUlkB,GAAmB,gBAAoB,IAAfmkB,EAAmBD,EAAUlkB,GAAS,KACpEV,EAAqB,eAAI,IAAM4kB,EAAUlkB,GAAS,MAAK,GAC3D,IAAIokB,EAAiBF,EAAUlkB,GAAmB,eAC9CqkB,OAAa,EACbD,EAAezmB,OAAO,KAAO,IAC7B0mB,EAAaD,EAAevmB,MAAM,KAAKvC,OAAS,GAEpD4oB,EAAUlkB,GAAe,WAAIvC,oBAAkB0mB,GAAcE,IAAezV,KAAK3P,OAAO3D,OAClFsT,KAAK3P,OAAO3D,OAAS+oB,EAAaF,EACrB,IAAfA,IACAD,EAAUlkB,GAAW,OAAIV,GAE7B4kB,EAAUlkB,GAAc,UAAI8H,EAC5Boc,EAAUlkB,GAAS,KAAIkkB,EAAUlkB,GACjCkkB,EAAUlkB,GAAc,WAAI,EAC5BkkB,EAAUlkB,GAAW,OAAIkkB,EAAUlkB,GAAG4O,KAAKxP,iBAE/C8kB,EAAUtQ,QAAQ,SAAU6P,GACxBtM,EAAM2M,wBAAwBL,EAAa3Y,KAGnD,GAAIA,IAAc8D,KAAKiV,cAAcvoB,OAAS,EAAG,CAE7C,IAAK,IADDgpB,EAAa1V,KAAKiV,cAAc,GAAGjV,KAAK3P,OAAO,GAAGC,WAC7C6L,EAAI,EAAGA,EAAI6D,KAAKiV,cAAcvoB,OAAQyP,IAC3CmZ,EAAY7kB,EAAauP,KAAKiV,cAAc9Y,IAAY,OAC9C,IAANA,GAAWmZ,IACXA,EAAUtQ,QAAQ,SAAU6P,GAAea,EAAWvkB,KAAK0jB,KAC3D7U,KAAKiV,cAAc/M,OAAO/L,EAAG,GAC7BA,GAAK,GAGbuZ,EAAa1V,KAAKiV,cAAc,GAAGjV,KAAK3P,OAAO,GAAGC,WAClD,IAAK,IAAIqlB,EAAI,EAAGA,EAAID,EAAWhpB,OAAQipB,IACnC7R,EAAQ9D,KAAK3P,OAAO,GAAGC,WAAaolB,EACpCA,EAAWC,GAAW,OAAI7R,IAOtCgN,EAAQxb,UAAU0X,MAAQ,SAAU9hB,GACd,IAAI4hB,GAAY9M,MACtBgN,MAAM9hB,IAOtB4lB,EAAQxb,UAAU0Y,OAAS,SAAUhhB,EAAMihB,EAAUC,GACjC,IAAIpB,GAAY9M,MACtBgO,OAAOhhB,EAAMihB,EAAUC,IAGrC4C,EAAQxb,UAAU6f,oBAAsB,WACpCnV,KAAKgS,WAAahS,KAAKgS,WAIvB,IACK,IAJD1hB,EAEAslB,KAEKnpB,EAAI,EAAGA,EAAIuT,KAAK3P,OAAO3D,OAAS,EAAGD,IAAK,CAC7C6D,EAAY0P,KAAK3P,OAAO5D,GAAKuT,KAAK3P,OAAO5D,GAAG6D,UAAY0P,KAAK5P,iBAAiBG,UAC9E,IAAIslB,EAAQ,IAAIhlB,OAChBglB,EAAa,MAAIppB,EACjBopB,EAAMvlB,MACN0P,KAAKgD,aAAa7R,KAAK0kB,GACvB,IAAK,IAAIzkB,EAAI,EAAGA,EAAI4O,KAAKgS,WAAWtlB,OAAQ0E,IAAK,CAC7C,IAAIyjB,KACAiB,EAAY,GAChB,GAAI9V,KAAKgS,WAAW5gB,GAAGd,GAAY,CAC/B,IAAIylB,EAAS/V,KAAKgS,WAAW5gB,GAAGd,GAChC,GAAU,IAAN7D,EACA,IAAK,IAAI0P,EAAI,EAAGA,GAAK1P,EAAG0P,IAAK,CACzB,IAAI6Z,EAAmBhW,KAAK3P,OAAO8L,GAAK6D,KAAK3P,OAAO8L,GAAG7L,UAAYA,EACnEwlB,GAAc9V,KAAKgS,WAAW5gB,GAAG4kB,IAAuB7Z,IAAM1P,EAAK,GAAK,KAG1EmpB,EAAWlpB,OAAS,IACG,IADCkpB,EAAWnrB,QAAQqrB,GACjCC,KACZlB,EAAkB,KAAIkB,EACtBlB,EAA4B,gBAAK,GAA0BkB,GAAU,GACrElB,EAAwB,WAAIpoB,EAC5BooB,EAAuB,WAAI,EAC3BA,EAAuB,UAAIvkB,EAC3BukB,EAAkB,KAAI7U,KAAKgS,WAAW5gB,GACtC4O,KAAKgD,aAAahD,KAAKgD,aAAatW,OAAS,GAAG4D,GAAWa,KAAK0jB,GAChEe,EAAWzkB,KAAK,GAA0B4kB,QAM9DjF,EAAQxb,UAAU8f,iBAAmB,SAAUa,GAM3C,IAAK,IALDC,EACAC,EAAcnW,KAAK3P,OAAO4lB,GAASjW,KAAK3P,OAAO4lB,GAAO3lB,UAAY0P,KAAK5P,iBAAiBG,UACxF6lB,EAAWpW,KAAK3P,OAAO4lB,EAAQ,GAAG3lB,UAClCukB,EAAc7U,KAAKgD,aAAaiT,GAAOE,GACvCE,EAAerW,KAAKgD,aAAaiT,EAAQ,GAAGG,GACvC3pB,EAAI,EAAGA,EAAIooB,EAAYnoB,OAAQD,IAAK,CACzCypB,EAAcrB,EAAYpoB,GAAmB,eAC7C,IAAK,IAAI2E,EAAI,EAAGA,EAAIilB,EAAa3pB,OAAQ0E,IAErC,GADAilB,EAAajlB,GAAG+kB,GAAetnB,oBAAkBwnB,EAAajlB,GAAG+kB,OAAqBE,EAAajlB,GAAG+kB,IACtC,IAA5DD,EAAYzrB,QAAQ4rB,EAAajlB,GAAmB,gBAAW,CAC3DvC,oBAAkBgmB,EAAYpoB,GAAW,UACzCooB,EAAYpoB,GAAW,OAAI4pB,EAAajlB,IAE5CilB,EAAajlB,GAAG+kB,GAAahlB,KAAK0jB,EAAYpoB,IAC9C,OAIZuT,KAAKqV,gBAAgBrV,KAAKgD,aAAahD,KAAKgD,aAAatW,OAAS,GAAGypB,GAAc,SACnFnW,KAAKgD,aAAakF,OAAO+N,EAAO,GAC3BA,EAAQ,EAAK,GACdjW,KAAKoV,iBAAiBa,EAAQ,IAGtCnF,EAAQxb,UAAU+f,gBAAkB,SAAUvlB,EAAa9C,GAyBvD,IAAK,IAvBD+X,EAIA9V,EACAkU,EANAoF,EAAQvI,KAORsW,EAAW,IAAIzlB,OACf2Y,EAAU,SAAU/c,GACpBsY,EAAc,EACd5B,EAAYrT,EAAYrD,GAAc,UACtCwC,EAAQa,EAAYrD,GAAmB,eAAEwC,MAAM,KAC/Cwa,EAAOuI,WAAWhN,QAAQ,SAAUtU,GAC5Bf,EAAeV,EAAOa,EAAYrD,GAAmB,eAAGiE,EAAM6X,KAC9DxD,GAAewR,WAAW7lB,EAAK6X,EAAM/X,qBAGhC,WAATxD,IACAspB,EAASnT,GAAarT,EACtBA,EAAYrD,GAAW,OAAI6pB,GAE/BxmB,EAAYrD,GAAW,OAAIsY,GAE3B0E,EAASzJ,KACJvT,EAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,IACpC+c,EAAQ/c,IAMhBqkB,EAAQxb,UAAU2b,aAAe,WAC7BuF,eAAaljB,OAAO0M,KAAK9N,QAAS,QAAS8N,KAAKyW,gBAChDD,eAAaljB,OAAO0M,KAAK9N,QAAS,WAAY8N,KAAK0W,sBACnDF,eAAaljB,OAAO0M,KAAK9N,QAAS,cAAe8N,KAAK2W,qBACtDH,eAAaljB,OAAO0M,KAAK9N,QAASoc,UAAQsI,gBAAiB5W,KAAK6W,oBAChEL,eAAaljB,OAAO0M,KAAK9N,QAASoc,UAAQwI,eAAgB9W,KAAK+W,oBAC/DP,eAAaljB,OAAO0M,KAAK9N,QAASoc,UAAQ0I,cAAehX,KAAKiX,mBAC9DT,eAAaljB,OAAO0M,KAAK9N,QAAS,0BAA2B8N,KAAKkX,qBAClEnd,OAAOod,oBAAoB,SAAUnX,KAAKoX,kBAK9CtG,EAAQxb,UAAU6b,WAAa,WAC3BqF,eAAazG,IAAI/P,KAAK9N,QAAS,QAAS8N,KAAKyW,eAAgBzW,MAC7DwW,eAAazG,IAAI/P,KAAK9N,QAAS,WAAY8N,KAAK0W,qBAAsB1W,MACtEwW,eAAazG,IAAI/P,KAAK9N,QAAS,cAAe8N,KAAK2W,oBAAqB3W,MACxEwW,eAAazG,IAAI/P,KAAK9N,QAASoc,UAAQsI,gBAAiB5W,KAAK6W,mBAAoB7W,MACjFwW,eAAazG,IAAI/P,KAAK9N,QAASoc,UAAQwI,eAAgB9W,KAAK+W,mBAAoB/W,MAChFwW,eAAazG,IAAI/P,KAAK9N,QAASoc,UAAQ0I,cAAehX,KAAKiX,kBAAmBjX,MAC9EwW,eAAazG,IAAI/P,KAAK9N,QAAS,0BAA2B8N,KAAKkX,oBAAqBlX,MACpFjG,OAAOsd,iBAAiB,SAAUrX,KAAKoX,gBAAgBE,KAAKtX,QAKhE8Q,EAAQxb,UAAU8b,WAAa,WAC3BpR,KAAK3G,KAAO,IAAIke,wBAKpBzG,EAAQxb,UAAUic,YAAc,WAC5BvR,KAAK9N,QAAQ2G,aAAa,aAAcmH,KAAKuU,aAAe,mBAC5DvU,KAAK9N,QAAQ2G,aAAa,WAAYmH,KAAK+K,SAASvY,aAKxDse,EAAQxb,UAAU8hB,gBAAkB,SAAUplB,GAC1C,IAAIuW,EAAQvI,KACRyS,GACAviB,KAAMqP,GACNiL,QAAQ,EACRgN,aAAcxX,KAAKoO,cACnBqJ,YAAa,IAAIvrB,GAAK,EAAG,GACzB6D,QAASiQ,MAETA,KAAKsN,UACLoK,aAAa1X,KAAKsN,UAElBtN,KAAK9N,QAAQ0G,UAAU+e,SAAS,eAChC3X,KAAKsN,SAAWsK,WAAW,WACvBrP,EAAM0I,eACN1I,EAAM2I,YACN3I,EAAMsP,YAAa,EACnBtP,EAAM4I,aACNsB,EAAKgF,YAAclP,EAAM6F,cACzB7F,EAAMmC,QAAQnL,GAAQkT,GACtBlK,EAAM8I,UACP,OAGXP,EAAQxb,UAAUmhB,eAAiB,SAAUzkB,GACzC,IAEIsW,EACAwP,EAFAC,EADY/lB,EAAEqO,OACOnV,GAGrB8sB,GAAcxN,QAAQ,EAAOta,KJ5dtB,QI4dmCH,QAASiQ,KAAMiY,WAAYjmB,GACzEgO,KAAK0K,QJ7dM,QI6dSsN,GAChBD,EAASttB,QAAQ,gBAAkB,IACnCuH,EAAEkmB,iBACFJ,EAAYvB,WAAWwB,EAAS9oB,MAAM,KAAK,IAC3CqZ,GACIkC,QAAQ,EAAOta,KAAM8O,GAAWjP,QAASiQ,KAAMnE,KAAMmE,KAAKzO,OAAOC,YAAYsmB,GAAYG,WAAYjmB,EACrGkR,WAAYlD,KAAKzO,OAAOC,YAAYsmB,GAAuB,WAAG3U,UAAWnD,KAAKzO,OAAOC,YAAYsmB,GAAiB,MAEtH9X,KAAK0K,QAAQ1L,GAAWsJ,IAE5B,IACI6P,EADAC,GAAM,IAAIC,MAAOC,kBAEhBzpB,oBAAkBmR,KAAKd,gBACnBrQ,oBAAkBspB,IAAoBC,EAAMD,EAAkB,KAC/DnY,KAAK0W,qBAAqB1kB,GAE9BmmB,EAAkBC,IAG1BtH,EAAQxb,UAAUohB,qBAAuB,SAAU1kB,GAC/C,IAAIumB,GAAoB/N,QAAQ,EAAOta,KAAMgP,GAAanP,QAASiQ,KAAMiY,WAAYjmB,GACrFgO,KAAK0K,QAAQxL,GAAaqZ,IAG9BzH,EAAQxb,UAAUqhB,oBAAsB,SAAU3kB,GAC9C,IAAIwmB,GAAmBhO,QAAQ,EAAOta,KAAMiP,GAAYpP,QAASiQ,KAAMiY,WAAYjmB,GACnFgO,KAAK0K,QAAQvL,GAAYqZ,IAG7B1H,EAAQxb,UAAUuhB,mBAAqB,SAAU7kB,GACzCA,EAAEqO,OAAOnV,GAAGT,QAAQ,gBAAkB,IACtCuV,KAAKyY,WAAY,GAErBzY,KAAK0Y,OAAOpK,UAAQsI,gBAAiB5kB,IAEzC8e,EAAQxb,UAAUyhB,mBAAqB,SAAU/kB,GAC7C,IAEIsW,EACAzM,EAFAkc,EADY/lB,EAAEqO,OACOnV,GAGrBytB,GAAanO,QAAQ,EAAOta,KAAMkP,GAAWrP,QAASiQ,KAAMiY,WAAYjmB,GAC5EgO,KAAK0K,QAAQtL,GAAWuZ,GACxB,IAAI5Q,EACJ/H,KAAK4Y,eAAiB5Y,KAAKyY,UACvBV,EAASttB,QAAQ,gBAAkB,IAEnCsd,EAAatX,EADboL,EAAOmE,KAAKzO,OAAOC,YAAY+kB,WAAWwB,EAAS9oB,MAAM,KAAK,MACtB,OACxC+Q,KAAK9N,QAAQ5G,MAAMutB,QAAWhd,EAAiB,YAAKkM,GAAcA,EAAWrb,OAAS,GAAKsT,KAAKhN,gBAC5F,UAAY,OAChBsV,GAAckC,QAAQ,EAAOta,KAAM+O,GAAUlP,QAASiQ,KAAMnE,KAAMA,EAAMoc,WAAYjmB,GACpFgO,KAAK0K,QAAQzL,GAAUqJ,IAE3BtI,KAAK0Y,OAAOpK,UAAQwI,eAAgB9kB,IAExC8e,EAAQxb,UAAUwjB,4BAA8B,SAAUC,EAAWld,GAOjE,IAAK,IALDmd,EACA7c,EACAvR,EAEAquB,EADcpd,EAAqB,eACX5M,MAAM,KACzB+J,EAAK,EAAGkgB,EAAKroB,OAAOD,KAAKqoB,GAAYjgB,EAAKkgB,EAAGxsB,OAAQsM,IAEtDigB,EADJ9c,EAAI+c,EAAGlgB,MACc+f,IACjBC,EAAatuB,SAASyR,EAAG,IACzBvR,EAAOmuB,GAGf,OAASC,WAAYA,EAAYG,kBAAmBvuB,EAAMquB,UAAWA,IAEzEnI,EAAQxb,UAAU8jB,iCAAmC,SAAUL,EAAWM,EAAkBxd,EAAMyd,GAS9F,IAAK,IALD1uB,EAEA2uB,EACAC,EAFA3Z,EAAI,EAGJ4Z,EAAiBzZ,KAAKzO,OAAOC,YAAY,GAAmB,eAAEvC,MAAM,KAAKvC,OACpEgtB,EAAI,EAAGA,EAAID,EAAgBC,IAChCF,EAAc,IAANE,EAAUL,EAA4B,UAAEK,GAAKF,EAAQ,IAAMH,EAA4B,UAAEK,GAErG7Z,EAAI4Z,EAAiB,EAAIA,EAAiB5Z,EAC1C,IAAK,IAAI7G,EAAK,EAAGkgB,EAAKroB,OAAe,OAAEmP,KAAKzO,OAAOC,aAAcwH,EAAKkgB,EAAGxsB,OAAQsM,IAAM,EACnFugB,EAAaL,EAAGlgB,IACgC,eAAE/J,MAAM,KACrC,KAAOoqB,EAA4B,UAAE,KACpDzuB,EAAa,IAANiV,EAAUhR,oBAAkB2qB,GAASA,EAAQH,EAA4B,UAAExZ,GAC9EyZ,EAAcE,EAAQA,EAAQ,IAAMH,EAA4B,UAAExZ,MACzD0Z,EAA2B,iBACpCvZ,KAAKoD,aAAajS,MAAOjB,KAAMqpB,EAA2B,eAAG7oB,KAAM6oB,IAEnED,GAAc,IADdzZ,GAEShE,EAAiB,aAEtB2d,EADA5uB,EAAOA,EAAO,IAAMyuB,EAA4B,UAAExZ,KAMlE,OAAOyZ,GAEXxI,EAAQxb,UAAUqkB,uCAAyC,SAAUN,EAAkBxd,EAAMpP,GACzF,IAAImtB,EACAC,EAAe,IAAIhpB,OAcvB,OAbQwoB,EAA6B,WAAI,IAC/BrZ,KAAKoD,aAAa3W,GAAS,KAAc,aAC/CmtB,EAAkB5Z,KAAKoD,aAAa3W,GAAS,KAAU,QAC5B,WAAI,EAC/BotB,EAAaD,EAAgB5Z,KAAKoD,aAAa3W,GAAS,KAAa,aAC9DmtB,GAEP5Z,KAAKoD,aAAa8E,OAAOzb,EAAGuT,KAAKoD,aAAa1W,SAEzC2sB,EAA6B,aAAOrZ,KAAKoD,aAAa1W,OAAS,GACjE2sB,EAA6B,aAAMxd,EAAiB,aACvDge,EAAahe,EAAgB,YAAMA,IAEhCge,GAGX/I,EAAQxb,UAAU2hB,kBAAoB,SAAUjlB,GAC5C,IAGI+Q,EACA+W,EACAC,EAEAtd,EAEAZ,EAGAmd,EAEAK,EAdA9Q,EAAQvI,KACRga,EAAYhoB,EAAEqO,OACd0X,EAAWiC,EAAU9uB,GAIrBouB,GAAc,EAEdO,EAAe,IAAIhpB,OAGnBopB,EAAWja,KAAK9N,QAAQhH,GAAK,YAAc8U,KAAKiE,WAAa,UAE7DiW,EAAala,KAAK9N,QAAQhH,GAAK,wBAEnC,GAAI6sB,EAASttB,QAAQ,gBAAkB,GAAKuV,KAAKhN,kBAAoBgN,KAAK4Y,eAAgB,CACtF5mB,EAAEkmB,iBACFzb,EAAQ8Z,WAAWwB,EAAS9oB,MAAM,KAAK,IACvC4M,EAAOmE,KAAKzO,OAAOC,YAAYiL,GAC/B,IAAIsc,EAAYiB,EAAU3uB,UAQ1B,GAPI2U,KAAK4D,mBACLyV,EAAmBrZ,KAAK8Y,4BAA4BC,EAAWld,GAC/Dmd,EAAaK,EAA6B,WACrCrZ,KAAK0J,gBAA8C,IAA7BqP,EAAUhqB,OAAO,SACxCuqB,EAActZ,KAAKoZ,iCAAiCL,EAAWM,EAAkBxd,EAAMyd,KAGpE,IAAvBtZ,KAAK3P,OAAO3D,SAAiBmP,EAAiB,YAAKpL,EAAaoL,GAAc,QAC9EpL,EAAaoL,GAAc,OAAEnP,OAAS,EAAG,CACzC,GAAIsT,KAAKoD,aAAa1W,OAAS,EAAG,CAC9BmP,EAAOyd,EAActZ,KAAKoD,aAAapD,KAAKoD,aAAa1W,OAAS,GAAS,KAAImP,EAC/E,IAAK,IAAIpP,EAAI,EAAGA,EAAIuT,KAAKoD,aAAa1W,OAAQD,IAAK,CAC/C,IAAKoC,oBAAkBmqB,GAAa,CAChC,IAAImB,EAAcna,KAAKoD,aAAa1W,OAEpC,GADAmtB,EAAe7Z,KAAK2Z,uCAAuCN,EAAkBxd,EAAMpP,GAC/E0tB,IAAgBna,KAAKoD,aAAa1W,OAAQ,CAC1CD,GAAK,EACL,OAGR,GAAIoP,EAAqB,iBAAMmE,KAAKoD,aAAa3W,GAAS,OAAM6sB,GAAezqB,oBAAkBmqB,GAAa,CAC/E,IAAvBnd,EAAiB,YAAWA,EAAa,OAAEA,EAAgB,qBAAc/K,OACzE+K,EAAgB,WAAMA,EAAiB,UAClCA,EAAgB,UAIjBge,EAAahe,EAAgB,YAAMA,GAHnCge,EAAehe,EAAa,SAOhCA,EAAgB,WAAI,EACpBA,EAAa,OAAa,WAAI,EAC9BA,EAAOA,EAAa,OACpBge,EAAahe,EAAgB,YAAMA,IAEvCmE,KAAKoD,aAAa8E,OAAOzb,EAAG,GAC5BA,GAAK,EACL,MAEKA,IAAMuT,KAAKoD,aAAa1W,OAAS,GAAKmC,oBAAkBmqB,KAC7Dnd,EAAgB,WAAI,EACpBge,EAAahe,EAAgB,YAAMA,UAK3CA,EAAgB,WAAI,EACpBge,EAAahe,EAAgB,YAAMA,GAEvCie,GACItP,QAAQ,EAAOta,KAAMyO,GAAY5O,QAASiQ,KAAMnE,KAAMge,EAAc3nB,QAAS8nB,EAC7E9W,WAAYlD,KAAK4D,kBAAiD,IAA7B5D,KAAKoD,aAAa1W,SAAiBmC,oBAAkBmqB,GACtFhZ,KAAKoD,aAAapD,KAAKoD,aAAa1W,OAAS,GAAS,KAAc,WAAImP,EAAiB,WAC7FsH,UAAWnD,KAAK4D,kBAAiD,IAA7B5D,KAAKoD,aAAa1W,SAAiBmC,oBAAkBmqB,GACrFhZ,KAAKoD,aAAapD,KAAKoD,aAAa1W,OAAS,GAAS,KAAQ,KAAImP,EAAW,KACjFsD,WAAwB,IAAZnN,EAAEooB,MAA4BrS,WAAY,MAE1D/H,KAAK0K,QAAQ/L,GAAYmb,EAAY,SAAUnP,GAC3CpC,EAAM/E,aAAe3H,EAAgB,WAAKhN,oBAAkBmqB,GAAcnd,EAAiB,YACrFhN,oBAAkBmqB,IAAezQ,EAAM3E,kBAAoB/H,EAAgB,UAAKmd,EAAa,KAC9FrO,EAAaH,SACVzf,SAASC,eAAeivB,IACxBlvB,SAASC,eAAeivB,GAAU3mB,SAEtCyP,EAAYO,YAAWiF,EAAM1V,SAAUkQ,GAAW,GAC9CwF,EAAMhF,eAAeuP,UAAYjkB,oBAAkB0Z,EAAM5L,uBACpD9N,oBAAkBgrB,KACnBtR,EAAM5L,oBAAoB6W,YAAY6G,YAAc,GACpD9R,EAAM5L,oBAAoB6W,YAAc,KACxCjL,EAAM5L,oBAAoB2d,eAAiB,EAC3C/R,EAAM5L,oBAAoB4d,gBAAkB,EACxChS,EAAM3E,mBAAqB/U,oBAAkBmqB,GAC7CzQ,EAAMiS,oBACFtqB,KAAMqY,EAAMnF,aAAamF,EAAMnF,aAAa1W,OAAS,GAAS,KAAkB,eAChFgE,KAAM6X,EAAMnF,aAAamF,EAAMnF,aAAa1W,OAAS,GAAS,MAIlE6b,EAAMiS,oBAAuBtqB,KAAM2L,EAAqB,eAAGnL,KAAMmL,GAErE0M,EAAM5L,oBAAoBoW,gBAE9BhQ,EAAalU,oBAAkB0Z,EAAMxF,WAA+BA,EAAlBwF,EAAMxF,WAExDhY,SAASC,eAAekvB,IACxBnvB,SAASC,eAAekvB,GAAY5mB,SAEnCzE,oBAAkB8b,EAAa5C,aAAgB4C,EAAaH,QAI7DjC,EAAMhX,OAAOkS,qBAAqBoW,EAAc9W,GAChDwF,EAAMhX,OAAOmS,kBAAkBmW,IAJ/BtR,EAAMhX,OAAOuW,gBAAgB6C,EAAa5C,eAQtDgS,GAAavP,QAAQ,EAAOta,KAAM0O,GAAU7O,QAASiQ,KAAMxO,YAAawO,KAAKzO,OAAOC,aACpFwO,KAAK0K,QAAQ9L,GAAUmb,IAEdT,GAAezqB,oBAAkBmqB,IAClChZ,KAAKoD,aAAajS,MAAOjB,KAAM2L,EAAqB,eAAGnL,KAAMmL,KAK7EmE,KAAKyY,WAAY,EACjBzY,KAAK0Y,OAAOpK,UAAQ0I,cAAehlB,IAEvC8e,EAAQxb,UAAU4hB,oBAAsB,SAAUllB,GAC1CgO,KAAKya,sBACLza,KAAKya,qBAAqBC,gBAE1B1a,KAAKrD,qBACLqD,KAAKrD,oBAAoBge,2BAE7BniB,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoByD,MACtFA,KAAK4a,yBACL9e,EAAYkE,KAAK4a,uBAAuBC,0BACxC7a,KAAK4a,uBAAuBE,YAAc,KAQlDhK,EAAQxb,UAAUylB,gBAAkB,WAChC,IAAIC,KAyBJ,OAxBIhb,KAAKib,gBAAgBnI,SACrBkI,EAAQ7pB,MACJ+pB,OAAQ,iBACRzI,MAAOzS,QAGXA,KAAKmb,kBAAkBC,QACvBJ,EAAQ7pB,MACJ+pB,OAAQ,mBACRzI,MAAOzS,QAGXA,KAAKqb,kBAAkBD,QACvBJ,EAAQ7pB,MACJ+pB,OAAQ,mBACRzI,MAAOzS,QAGXA,KAAKuD,eAAeuP,SACpBkI,EAAQ7pB,MACJ+pB,OAAQ,gBACRzI,MAAOzS,QAGRgb,GAEXlK,EAAQxb,UAAUgmB,kBAAoB,SAAUC,EAASC,GAErD,IAAK,IADDnK,GAAS,EACJrY,EAAK,EAAGkgB,EAAKroB,OAAOD,KAAK2qB,GAAUviB,EAAKkgB,EAAGxsB,OAAQsM,IAAM,CAE9D,OADWkgB,EAAGlgB,IAEV,IAAK,aACDgH,KAAKwR,eACL,MACJ,IAAK,SACL,IAAK,QACDH,GAAS,GAIjBA,IACArR,KAAKkR,YACLlR,KAAKqR,WAMbP,EAAQxb,UAAUmmB,cAAgB,WAC9B,MAAO,WAKX3K,EAAQxb,UAAU6a,QAAU,WACxBnQ,KAAKiR,eACLnQ,EAAOxL,UAAU6a,QAAQ5a,KAAKyK,OAMlC8Q,EAAQxb,UAAUomB,eAAiB,WAC/B,MAAO,IAEXvb,IACIa,WAAS,OACV8P,EAAQxb,UAAW,aAAS,GAC/B6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,cAAU,GAChC6K,IACImB,aAAYT,KACbiQ,EAAQxb,UAAW,cAAU,GAChC6K,IACImB,aAAYJ,KACb4P,EAAQxb,UAAW,cAAU,GAChC6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,kBAAc,GACpC6K,IACIa,WAAS,aACV8P,EAAQxb,UAAW,aAAS,GAC/B6K,IACImB,aAAYC,KACbuP,EAAQxb,UAAW,qBAAiB,GACvC6K,IACIa,WAAS,eACV8P,EAAQxb,UAAW,kBAAc,GACpC6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,kBAAc,GACpC6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,aAAS,GAC/B6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,uBAAmB,GACzC6K,IACIa,WAAS,KACV8P,EAAQxb,UAAW,2BAAuB,GAC7C6K,IACIa,WAAS,KACV8P,EAAQxb,UAAW,2BAAuB,GAC7C6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,sBAAkB,GACxC6K,IACIa,gBACD8P,EAAQxb,UAAW,eAAW,GACjC6K,IACIa,WAAS,uBACV8P,EAAQxb,UAAW,uBAAmB,GACzC6K,IACIa,YAAS,IACV8P,EAAQxb,UAAW,uBAAmB,GACzC6K,IACIa,YAAS,IACV8P,EAAQxb,UAAW,wBAAoB,GAC1C6K,IACIa,WAAS,QACV8P,EAAQxb,UAAW,2BAAuB,GAC7C6K,IACIa,YAAS,IACV8P,EAAQxb,UAAW,qBAAiB,GACvC6K,IACImB,aAAYI,KACboP,EAAQxb,UAAW,wBAAoB,GAC1C6K,IACImB,aAAYK,KACbmP,EAAQxb,UAAW,wBAAoB,GAC1C6K,IACIyB,gBAAeI,KAChB8O,EAAQxb,UAAW,cAAU,GAChC6K,IACImB,aAAYS,KACb+O,EAAQxb,UAAW,yBAAqB,GAC3C6K,IACImB,aAAYQ,KACbgP,EAAQxb,UAAW,yBAAqB,GAC3C6K,IACImB,aAAYO,KACbiP,EAAQxb,UAAW,uBAAmB,GACzC6K,IACImB,aAAYG,KACbqP,EAAQxb,UAAW,sBAAkB,GACxC6K,IACIa,YAAS,IACV8P,EAAQxb,UAAW,4BAAwB,GAC9C6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,mBAAe,GACrC6K,IACIa,WAAS,IACV8P,EAAQxb,UAAW,gBAAY,GAClC6K,IACIa,WAAS,OACV8P,EAAQxb,UAAW,cAAU,GAChC6K,IACIwb,WACD7K,EAAQxb,UAAW,YAAQ,GAC9B6K,IACIwb,WACD7K,EAAQxb,UAAW,mBAAe,GACrC6K,IACIwb,WACD7K,EAAQxb,UAAW,cAAU,GAChC6K,IACIwb,WACD7K,EAAQxb,UAAW,qBAAiB,GACvC6K,IACIwb,WACD7K,EAAQxb,UAAW,kBAAc,GACpC6K,IACIwb,WACD7K,EAAQxb,UAAW,gBAAY,GAClC6K,IACIwb,WACD7K,EAAQxb,UAAW,oBAAgB,GACtC6K,IACIwb,WACD7K,EAAQxb,UAAW,qBAAiB,GACvC6K,IACIwb,WACD7K,EAAQxb,UAAW,wBAAoB,GAC1C6K,IACIwb,WACD7K,EAAQxb,UAAW,iBAAa,GACnC6K,IACIwb,WACD7K,EAAQxb,UAAW,gBAAY,GAClC6K,IACIwb,WACD7K,EAAQxb,UAAW,aAAS,GAC/B6K,IACIwb,WACD7K,EAAQxb,UAAW,mBAAe,GACrC6K,IACIwb,WACD7K,EAAQxb,UAAW,kBAAc,GACpC6K,IACIwb,WACD7K,EAAQxb,UAAW,iBAAa,GACnC6K,IACIwb,WACD7K,EAAQxb,UAAW,cAAU,GAChC6K,IACIwb,WACD7K,EAAQxb,UAAW,2BAAuB,GAC7C6K,IACIwb,WACD7K,EAAQxb,UAAW,uBAAmB,GACzCwb,EAAU3Q,IACNyb,yBACD9K,IAEL+K,aC3/BEC,GAA+B,WAC/B,SAASA,EAAc/rB,GACnBiQ,KAAK+b,KAAO,EACZ/b,KAAKgc,iBAAmB,IAAI/Z,GAAK,EAAG,EAAG,EAAG,GAC1CjC,KAAKic,YAAc,EACnBjc,KAAKua,gBAAkB,EACvBva,KAAKsa,eAAiB,EACtBta,KAAKkc,aAAe,EACpBlc,KAAKmc,6BACLnc,KAAKoc,eAAiB,IAAIna,GAAK,EAAG,EAAG,EAAG,GACxCjC,KAAKjQ,QAAUA,EACfiQ,KAAKqX,mBAo7BT,OA/6BAyE,EAAcxmB,UAAUyd,aAAe,WACnC,IAAIxK,EAAQvI,KACZA,KAAKqc,8BACLrc,KAAKpD,qBACLoD,KAAKsc,eACLtc,KAAKuc,cACLvc,KAAKwc,cAAgB,EACrBxc,KAAKsa,eAAiB,EACtBta,KAAKua,gBAAkB,EACvBva,KAAKyc,YAAczc,KAAKjQ,QAAQzC,SAASovB,aACzC1c,KAAKjQ,QAAQmb,UAAU9f,YAAY4U,KAAKyc,aACxC,IAAInU,EACJA,GACIkC,QAAQ,EAAOta,KAAMoP,GAAiBvP,QAASiQ,KAAKjQ,QAAS4sB,gBAAiB3c,KAAKjQ,QAAQwT,eAAehY,SAC1GA,SAAUyU,KAAKjQ,QAAQwT,eAAehY,UAE1CyU,KAAKjQ,QAAQ2a,QAAQpL,GAAiBgJ,EAAW,SAAUqC,GAClDA,EAAaH,QAAUG,EAAagS,kBAAoBpU,EAAMxY,QAAQwT,eAAehY,WACtFgd,EAAMxY,QAAQwT,eAAehY,SAAWof,EAAagS,iBAEzDpU,EAAMqU,wBACFrU,EAAM3L,kBAAkBlQ,OAAS,GACjC6b,EAAMsU,gBAMlBf,EAAcxmB,UAAUsnB,sBAAwB,WAC5C,IAAIrU,EAAQvI,KACRjQ,EAAUiQ,KAAKjQ,QACf+sB,EAAS/sB,EAAQwT,eAMrB,GALAvD,KAAK+c,4BAA4BhtB,EAAQiT,aAAa,KACjDhD,KAAKjQ,QAAQuc,QAAQ5f,OAAS,IAAMmC,oBAAkBmR,KAAKjQ,QAAQsc,kBAC/B,IAAlCrM,KAAKpD,kBAAkBlQ,QAC1BsT,KAAKgd,uBAAuBhd,KAAKjQ,QAAQiT,aAAa,GAAI,UAE1DhD,KAAKpD,kBAAkBlQ,OAAS,EAAG,CACnC,IAEInB,EAAWuxB,EAAOvxB,SAClB0xB,EAAcH,EAAOhJ,MAAMlpB,KAC3BsyB,EAAiBJ,EAAOK,WACxBC,EAAaN,EAAO7rB,KACpB6J,EAAS,EACTC,EAAS,EACTsiB,EAAQ,EACRC,EAAQ,EACRziB,EAAciiB,EAAOjiB,YACrBD,EAAakiB,EAAOliB,WACpB2iB,KACApS,KACAqS,EAAwC,SAAvBV,EAAO5O,YAAyC,QAAb3iB,GAAmC,WAAbA,GACzD,SAAbA,GAAuBwE,EAAQqe,cAAc5hB,OAASuD,EAAQqe,cAAcjhB,OAC9E,aAAe,WAAc2vB,EAAO5O,YAItCuP,EAAeX,EAAOtwB,MAAME,OAAS,EAAMowB,EAAOtwB,MAAM/B,QAAQ,MAAQ,EAAMsF,EAAQqe,cAAc5hB,MAAQ,IAC1G+pB,WAAWuG,EAAOtwB,OAAS+pB,WAAWuG,EAAOtwB,OAAS,KACxDkxB,EAAgBZ,EAAO3vB,OAAOT,OAAS,EAAMowB,EAAO3vB,OAAO1C,QAAQ,MAAQ,EAC1EsF,EAAQqe,cAAcjhB,OAAS,IAAOopB,WAAWuG,EAAO3vB,QAAUopB,WAAWuG,EAAO3vB,QAAU,KACnG+vB,EAAetxB,WAAamE,EAAQqa,WAAWxe,YAAcsxB,EAAetxB,WAC5EsxB,EAAezxB,KAAOsE,EAAQqa,WAAW7L,gBAAkB2e,EAAezxB,KAC1E,IAAIkyB,EAAkBhzB,EAAYsyB,EAAaC,GAC3CU,EAAW,EACXC,EAAW,EACXC,EAAehB,EAAOgB,aAGNhB,EAAOjU,UACR7I,KAAKpD,kBAAkBlQ,OAG1C,GAFAowB,EAAOjU,UAAUpd,KAAOsE,EAAQqa,WAAW7L,gBAAkBue,EAAOjU,UAAUpd,KAC9EqxB,EAAOjU,UAAUjd,WAAamE,EAAQqa,WAAWxe,YAAckxB,EAAOjU,UAAUjd,WAC7D,YAAfwxB,EAA0B,CAC1BK,EAAe5uB,oBAAkB4uB,GAAgB1tB,EAAQ8C,SAASrG,MAAQixB,EAC1EC,EAAgB7uB,oBAAkB6uB,GAAiB3tB,EAAQ8C,SAAS1F,OAASuwB,EAE7E,IAAK,IADDtsB,EAAI,EACC3E,EAAI,EAAGA,EAAIuT,KAAKpD,kBAAkBlQ,OAAQD,IAAK,CACpD,IAAIsxB,EAAa/d,KAAKpD,kBAAkBnQ,GACpCoC,oBAAkBmR,KAAKuc,WAAWvc,KAAK+b,SACvC/b,KAAKuc,WAAWvc,KAAK+b,OAAUiC,KAAOhe,KAAK+b,KAAO,EAAIna,gBAE1D,IAAIqc,EAAiBtzB,EAAYozB,EAAuB,WAAGjB,EAAOjU,WAElE,GADA7I,KAAKkc,aAAeppB,KAAKgU,IAAI9G,KAAKkc,aAAc+B,EAAezxB,OACrD,IAANC,EACAmxB,EAAW9iB,EA/BL,GA+B8BF,EAAa,EACjDijB,EAAW9iB,EA/BN,GA+B4B4iB,EAAgBxwB,QAAU0N,EAAcojB,EAAe9wB,OAAS0N,EAAc,EACxGojB,EAAe9wB,OAAS,OAE9B,CACD,IAAI+wB,EAAWD,EAAe9wB,OAAS0N,EAAeojB,EAAe9wB,OAAS0N,EAC9E,GAAsB,eAAlB2iB,EAAgC,CAChC,IAAIW,EAAiBhT,EAAa/Z,EAAI,GAAGnE,EAAIke,EAAa/Z,EAAI,GAAG5E,MAtD/D,GAsDsFoO,EACxF,GAAKujB,EAAgBL,EAAeG,EAAezxB,MAASixB,EAAa,CACrE,IAAIW,GAAiBjT,EAAa/Z,EAAI,GAAGlE,EAAKqwB,EAAcnsB,EAAI,GAAGlE,EAAK2N,EAAc,EAClFsQ,EAAa/Z,EAAI,GAAGlE,EAAKqwB,EAAcnsB,EAAI,GAAGlE,EAAK2N,EAAc,GAxCxE,GAyCQujB,EAAgBF,EAAWR,GAC5B1d,KAAKqe,iBACLjtB,EAAI,EACJmsB,KACApS,KACArQ,EAAS8iB,EACT7iB,EAAS8iB,IAGT/iB,EAAUyiB,EAAc,GAAI,EAC5BxiB,EAAUqjB,EAAiBF,EAAU,QAIzCpjB,EAAUqjB,EAAiBvjB,EAAa,EACxCG,EAAUwiB,EAAcnsB,EAAI,GAAIlE,MAGnC,CACD,IAAIoxB,EAAgBnT,EAAa/Z,EAAI,GAAGlE,EAAIqwB,EAAcnsB,EAAI,GAAGlE,EAAK2N,EAAc,EAChFsQ,EAAa/Z,EAAI,GAAGlE,EAAIqwB,EAAcnsB,EAAI,GAAGlE,EAAK2N,EAAc,EACpE,GAAKyjB,EA9DJ,GA8DiCJ,EAAWR,EAAc,CACvD,IAAIa,EAAiBpT,EAAa/Z,EAAI,GAAGnE,EAAI+S,KAAKkc,aAhFpD,GAiFOqC,EAAgBT,EAAeG,EAAezxB,MAASixB,GACxD3iB,EAAS8iB,EACT7iB,EAAS8iB,EACT1S,KACAoS,KACAvd,KAAKqe,iBACLjtB,EAAI,IAGJ0J,EAASyjB,EAAiB3jB,EAAa,EACvCG,EAAUwiB,EAAc,GAAI,QAIhCziB,EAASyiB,EAAcnsB,EAAI,GAAGnE,EAC9B8N,EAASujB,EA/EZ,GA+E0CzjB,EAAc,GAIjEwiB,EAAQviB,EAAUF,EAAa,EAAKkjB,EACpCR,EAAQviB,EAAUkjB,EAAe9wB,OAAS,EAC1CowB,EAAcpsB,MAAOlE,EAAG6N,EAAQ5N,EAAG6N,IACnCoQ,EAAaha,MAAOlE,EAAGowB,EAAOnwB,EAAGowB,EAAO9wB,MAAOyxB,EAAezxB,MAAOW,OAAS8wB,EAAe9wB,OAAS,IACtG6S,KAAKuc,WAAWvc,KAAK+b,MAAkB,WAAE5qB,MACrCqtB,YAAaT,EAAuB,WAAG7rB,QAAS6rB,EAA4B,gBAC5EU,OAASxxB,EAAG6N,EAAQ5N,EAAG6N,GACvB2jB,MAAQzxB,EAAGowB,EAAOnwB,EAAGowB,GACrBqB,KAAMZ,EAAuB,WAC7Ba,KAAMb,EAAuB,WAC7B9b,MACIhV,EAAGswB,EAAcnsB,GAAGnE,EAAK2N,EAAa,EACtC1N,EAAIqwB,EAAcnsB,GAAGlE,EAAK2N,EAAc,EAAOyiB,EAAQW,EAAe9wB,OACjEowB,EAAcnsB,GAAGlE,EAAK2N,EAAc,EAAOyiB,EAAQW,EAAe9wB,OACvEX,MAAOsG,KAAKC,IAAKwqB,EAAcnsB,GAAGnE,EAAK2N,EAAa,GAAOyiB,EAAQY,EAAezxB,QAClFW,OAAU0N,EAAcojB,EAAe9wB,OAAU0N,EAAcojB,EAAe9wB,UAGtFiE,IAEJ,IAAI2K,EAAaiE,KAAKuc,WAAW,GAAe,WAChDxgB,EAAWiJ,QAAQ,SAAU6Z,EAAWpiB,GACpC,IAAIqiB,EAAa,IAAI7c,GAAK4c,EAAgB,KAAK,EAAGA,EAAgB,KAAK,EAAGA,EAAgB,KAAS,MAAGA,EAAgB,KAAU,QAClH,IAAVpiB,IACAmhB,EAAWkB,EAAW7xB,EACtB4wB,EAAWiB,EAAW5xB,GAE1Bqb,EAAM+R,eAAiBxnB,KAAKgU,IAAIyB,EAAM+R,eAAgBxnB,KAAKC,IAAI6qB,GAAYkB,EAAW7xB,EAAI6xB,EAAWtyB,SACrG+b,EAAMgS,gBAAkBznB,KAAKgU,IAAIyB,EAAMgS,gBAAiBznB,KAAKC,IAAI8qB,GAAYiB,EAAW5xB,EAAI4xB,EAAW3xB,YAE3GswB,EAAgBzd,KAAKsa,eAAiBmD,EAAezd,KAAKsa,eAAiBmD,EAC3EC,EAAiB1d,KAAKua,gBAAkBmD,EAAgB1d,KAAKua,gBAAkBmD,EAC/E1d,KAAKoc,gBACDnvB,EAAG8O,EAAW,GAAS,KAAK,EAAG7O,EAAG6O,EAAW,GAAS,KAAK,EAC3DvP,MAAOixB,EAAatwB,OAAQuwB,OAG/B,CACD,IACIqB,EACAC,EAFAC,EAAkBnC,EAAOjU,UAGzBqW,EAAiBlf,KAAKpD,kBAAkBlQ,OAC5CqyB,EAAiC,eAAlBvB,EAAmC3uB,oBAAkB4uB,GAAiB1tB,EAAQ8C,SAASrG,MAAQ0yB,EACzGzB,EAAcyB,EAAmBrwB,oBAAkB4uB,GAhJ1C,GAgJwEA,EACtFuB,EAAkC,eAAlBxB,EAAmC3uB,oBAAkB6uB,GAjJvD,GAiJsFA,EAC/F7uB,oBAAkB6uB,GAAkB3tB,EAAQ8C,SAAS1F,OAAS+xB,EAAmBxB,EAAewB,EACrGtB,EAAW,EACXC,EAAWF,EAAgBxwB,OAjIjB,GAyIL,IANDgyB,EAAYrC,EAAOzS,cACnB+U,EAAa,EACbC,EAAa,EACbC,EAAcxC,EAAOyC,iBACrBC,EAAgB,EAChBC,EAAe,EACnB,IAAShzB,EAAI,EAAGA,EAAIuT,KAAKpD,kBAAkBlQ,OAAQD,IAAK,CACpDmxB,EAA8B,eAAlBJ,EAAmCI,EAAWmB,EAAenB,EACzEC,EAA8B,eAAlBL,EAAkCK,EAAYA,EAAWmB,EACrE,IAAIU,EAAa1f,KAAKpD,kBAAkBnQ,GAAe,WACnDkzB,EAAe,IAAIzzB,GAAK,EAAG,GACX,SAAhBozB,EACAK,EAAeh1B,EAAY+0B,EAAYT,GAElB,SAAhBK,EAELK,EAAeh1B,EADf+0B,EAAarzB,EAA4B,eAAlBmxB,EAAiCuB,EAAcC,EAAeU,EAAYT,GAC1DA,GAGvCS,EAAa,GAEjBF,EAAgB1sB,KAAKgU,IAAI0Y,EAAeG,EAAaxyB,QACrDsyB,EAAe3sB,KAAKgU,IAAI2Y,EAAcE,EAAanzB,OAC/CmzB,EAAanzB,MAAQ,GAAKmzB,EAAaxyB,OAAS,IAC1B,eAAlBqwB,GACAH,EAAQO,EAAYmB,EAAc,EAClCzB,EAAuB,UAAd6B,EAA0BtB,EAAWmB,EAAgBW,EAAaxyB,OAAS,EA3B5E,GA4BH0wB,EA5BG,KA+BRR,EAAuB,UAAd8B,EAAyBvB,EAAY+B,EAAanzB,MAAQ,EA/B3D,GAgCDoxB,EAAWmB,EAAcY,EAAanzB,MAAQ,EAhC7C,GAiCR8wB,EAAQO,EAAYmB,EAAe,EAAMW,EAAaxyB,OAAS,IAG7D,IAANV,IACA2yB,EAAgC,eAAlB5B,EAAkCI,EAA0B,UAAduB,EACxD9B,EAASsC,EAAanzB,MAAQ,EAAKoxB,EACvCyB,EAAgC,eAAlB7B,EAAiD,UAAd2B,EAAyBtB,EACtEP,EAASqC,EAAaxyB,OAAS,EAAK0wB,GAExCpxB,IAAMyyB,EAAiB,IACvBzB,EAAiC,eAAlBD,EAAkC1qB,KAAKC,IAAK6qB,EAAWmB,EAAeK,GAChFL,EAAcU,EA5CP,GA6CZ/B,EAAkC,eAAlBF,EAAmCwB,EAAgBQ,EAAgB,EA7CvE,GA8CR1sB,KAAKC,IAAK8qB,EAAWmB,EAAgBK,IAE7Crf,KAAKqc,2BAA2BlrB,MAC5BxC,KAAMqR,KAAKpD,kBAAkBnQ,GAAe,WAAGQ,EAAG2wB,EAAU1wB,EAAG2wB,EAC/DrxB,MAAOuyB,EAAa5xB,OAAQ6xB,EAAc9sB,QAAS8N,KAAKpD,kBAAkBnQ,GAAoB,gBAC9F7B,KAAM80B,EAAYrC,MAAOA,EAAOC,MAAOA,EACvCsC,UAAWD,EAAanzB,MAAOqzB,WAAYF,EAAaxyB,OACxDuD,KAAMsP,KAAKpD,kBAAkBnQ,GAAe,aAGpDuT,KAAKoc,gBAAmBnvB,EAAGmyB,EAAYlyB,EAAGmyB,EAAY7yB,MAAOixB,EAAatwB,OAAQuwB,MAI9F5B,EAAcxmB,UAAU+oB,eAAiB,WACrCre,KAAK+b,OACDltB,oBAAkBmR,KAAKuc,WAAWvc,KAAK+b,SACvC/b,KAAKuc,WAAWvc,KAAK+b,OAAUiC,KAAOhe,KAAK+b,KAAO,EAAIna,iBAG9Dka,EAAcxmB,UAAUynB,4BAA8B,SAAUrsB,GAC5D,IAAIqT,EAAQtT,EAAaC,GAAc,OACvC,GAAIqT,GAASA,EAAMrX,OAAS,IACxBsT,KAAK8f,qBAAqB/b,GACtB/D,KAAKjQ,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIsX,EAAMrX,OAAQD,IAC9BuT,KAAK+c,4BAA4BhZ,EAAMtX,KAKvDqvB,EAAcxmB,UAAU0nB,uBAAyB,SAAUtsB,EAAM1D,GAC7D,IAAI+W,EACAgc,EACJ,IAAKlxB,oBAAkBmR,KAAKjQ,QAAQqT,eACS,IAArCpD,KAAKjQ,QAAQqT,aAAa1W,SAAiBmC,oBAAkBmR,KAAKjQ,QAAQkT,iBAAiBE,YACxFtU,oBAAkBmR,KAAKjQ,QAAQyqB,oBAElC,IAAK,IADDxpB,EAAQP,EAAaC,GAAc,OAC9ByL,EAAI,EAAGA,EAAInL,EAAMtE,OAAQyP,IAC9B,GAAInL,EAAMmL,GAAS,OAAM6D,KAAKjQ,QAAQkT,iBAAiBE,UAAW,CAC9DnS,EAAMmL,GAAc,WAAKnL,EAAMmL,GAAc,UAC7CzL,EAAOM,EAAMmL,GACb6D,KAAKjQ,QAAQyT,aAAexD,KAAKjQ,QAAQkT,iBAAiBC,WAC1D6c,EAAkB/f,KAAKjQ,QAAQuc,QAAQ5f,OAAS,EAAIsT,KAAKjQ,QAAQuc,QAAQnQ,EAAI6D,KAAKjQ,QAAQuc,QAAQ5f,QAC9FsE,EAAMmL,GAAS,KAAE6D,KAAKjQ,QAAQsc,gBAClC,MAKhB,GAAIrM,KAAKjQ,QAAQiD,kBAAoBnE,oBAAkBmR,KAAKjQ,QAAQyqB,oBAAqB,CACrF,IAAIpoB,EAAe4N,KAAKjQ,QAAQyqB,mBAEhC,GADAuF,EAAkB3tB,EAAmB,KAAW,QAAQ,KACpDA,EAAmB,KAAa,UAChC2R,EAAQtT,EAAa2B,EAAmB,MAAW,WAElD,CAED2R,EAAQtT,EADY2B,EAAmB,KAAU,QACL,aAIhD2R,EAAQtT,EAAaC,GAAc,OAEvC,IACIsvB,EACJ,GAAIjc,GAASA,EAAMrX,OAAS,EAAG,CAC3B,IAAK,IAAID,EAAI,EAAGA,EAAIsX,EAAMrX,OAAQD,KAC1BoC,oBAAkBkV,EAAMtX,GAAS,KAAEuT,KAAKjQ,QAAQwT,eAAe0c,kBAC/Dlc,EAAMtX,GAAS,KAAEuT,KAAKjQ,QAAQwT,eAAe0c,mBAC7CD,EAAajc,EAAMtX,GAAS,KAAEuT,KAAKjQ,QAAQwT,eAAe2c,WACtDnc,EAAMtX,GAAS,KAAEuT,KAAKjQ,QAAQwT,eAAe2c,WAAanc,EAAMtX,GAAS,OAC/DuT,KAAKjQ,QAAQwT,eAAe4c,uBACtCngB,KAAKogB,iBAAiBpgB,KAAKpD,kBAAmBojB,IAE9ChgB,KAAKpD,kBAAkBzL,MACnB6uB,WAAYA,EACZK,WAAYrgB,KAAKjQ,QAAQuc,QAAQ5f,OAAS,EAAKmC,oBAAkBmR,KAAKjQ,QAAQyT,cACtDxD,KAAKjQ,QAAQuc,QAAQ7f,EAAIuT,KAAKjQ,QAAQuc,QAAQ5f,QAAhEqzB,EACFhc,EAAMtX,GAAS,KAAEuT,KAAKjQ,QAAQsc,gBAClCiU,cACAC,SAAUxc,EAAMtX,GAAW,UAM3C,GADAuT,KAAKpD,kBAAkBsI,KAAK3M,GACxByH,KAAKjQ,QAAQuc,QAAQ5f,OAAS,EAC9B,IAAK,IAAI0E,EAAI,EAAGA,EAAI4O,KAAKpD,kBAAkBlQ,OAAQ0E,IAC/C4O,KAAKpD,kBAAkBxL,GAAe,WAAKvC,oBAAkBmR,KAAKjQ,QAAQyT,cAClDxD,KAAKjQ,QAAQuc,QAAQlb,EAAI4O,KAAKjQ,QAAQuc,QAAQ5f,QAAhEqzB,IAMtBjE,EAAcxmB,UAAUwqB,qBAAuB,SAAUpvB,GACrD,IAAI8vB,EACA7xB,EACAiH,EACAif,EACA6K,EAKAxc,EAGAnO,EAEA0rB,EACAC,EACAC,EACAC,EACAC,EACA3rB,EACA4rB,EAGAC,EACAC,EACAC,EAlBAC,GAAkB,EAGlB/wB,EAAO6P,KAAKjQ,QAAQK,iBACpBC,EAAS2P,KAAKjQ,QAAQM,OAEtB9E,EAAWyU,KAAKjQ,QAAQwT,eAAehY,SAQvC41B,GAAiB,EACjBC,EAAc,EAIlBphB,KAAKqhB,iBAAmB,KACxB,IAAK,IAAI50B,EAAI,EAAGA,EAAIiE,EAAKhE,OAAQD,IAAK,CAClCkC,EAAO,GACPuG,GAAe,EACf4rB,GAAU,EACVK,GAAiB,EACjBtM,EAAcnkB,EAAKjE,GAAS,KAC5ByW,EAAaxS,EAAKjE,GAAe,WAGjC,IAAK,IAAIuM,EAAK,EAAGsoB,EAF4B,IAA/BthB,KAAKjQ,QAAQM,OAAO3D,QAAgBwW,IAAelD,KAAKjQ,QAAQM,OAAO3D,OACzDyD,EAAK2E,aAAezE,EAAO6S,GAAYpO,aACnBkE,EAAKsoB,EAAe50B,OAAQsM,IAAM,CAC9E,IAAInE,EAAWysB,EAAetoB,GAuB9B,GAtBAynB,EAAkB,KAClB7qB,EAAaO,OAAO0e,EAAY7U,KAAKjQ,QAAQqc,sBAC7CrX,EAAa8f,EAAY7U,KAAKjQ,QAAQoc,qBACtCtX,EAASvK,MAASuE,oBAAkBgG,EAASvK,OAAqCuK,EAASvK,MAArCuK,EAASvK,MAAMkI,YAChE3D,oBAAkBgG,EAASO,QAAUvG,oBAAkBgG,EAASQ,KACjEO,GAAcf,EAASO,MAAQQ,GAAcf,EAASQ,IAAMR,EAAS0sB,YACrEL,GAAkB,EAClBJ,GAAU,EACVF,EAAc/rB,EAASO,KAAO,MAAQP,EAASQ,GAC/CqqB,EAAc7wB,oBAAkBgG,EAAStI,OAA0BsI,EAASO,KAAO,MAAQP,EAASQ,GAAlDR,EAAStI,MAC3DoC,EAAOE,oBAAkBgG,EAAShH,OAASc,EAAOkG,EAAShH,MAC3D2yB,EAAYxgB,KAAKwhB,mBAAmBZ,KAE9B/xB,oBAAkBgG,EAASvK,QAAUyK,IAAeF,EAASvK,OAASuK,EAAS0sB,aACrFL,GAAkB,EAClBhsB,GAAe,EACf0rB,EAAc/rB,EAASvK,MAAMkI,WAC7BktB,EAAc7wB,oBAAkBgG,EAAStI,OAA0BsI,EAASvK,MAAMkI,WAAhCqC,EAAStI,MAC3DoC,EAAOE,oBAAkBgG,EAAShH,OAASc,EACY,mBAAnDkC,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAA8BgH,EAAShH,MAAM,GAAKgH,EAAShH,MACvG2yB,EAAYxgB,KAAKwhB,mBAAmBZ,IAEpCM,GAAmBryB,oBAAkBgG,EAASvK,QAAUuK,EAASa,YAAcb,EAASY,YAChD,gBAArCuK,KAAKjQ,QAAQwT,eAAetS,KAAwB,CACvD,IAAIwwB,KACAC,OAAW,EAEf,GADAP,GAAiB,EACsC,mBAAnDtwB,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OACxC,IAAK,IAAI8zB,EAAI,EAAGA,EAAI9sB,EAAShH,MAAMnB,OAAQi1B,IAAK,CAC5C,IAEIC,GAAeC,WADDF,GADA,KAAO9sB,EAAShH,MAAMnB,OAAS,IACb,KACM8F,WAAY3E,MAAOgH,EAAShH,MAAM8zB,IAC5EF,EAAOtwB,KAAKywB,OAGf,CACGA,GAAeC,UAAW,KAAMh0B,MAAOc,GAA3C,IACImzB,GAAeD,UAAW,OAAQh0B,MAAOc,GAC7C8yB,EAAOtwB,KAAKywB,GACZH,EAAOtwB,KAAK2wB,GAEhBpB,EAAkB,QAAbn1B,GAAmC,WAAbA,EAAwB,OAAS,KAC5Do1B,EAAkB,QAAbp1B,GAAmC,WAAbA,EAAwB,KAAO,OAC1Dm2B,GACIx2B,GAAI,cAAgBgY,EAAa,eAAiBlD,KAAKwc,cAAehV,GAAI,KAAMD,GAAI,KAAMmZ,GAAIA,EAAIC,GAAIA,GAE1GF,EAAkBzgB,KAAKjQ,QAAQzC,SAASy0B,aAAa,iBAAkBL,EAAUD,GAAQ9oB,WAAW,GAC7C,mBAAnD9H,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,SACxC4yB,EAAgB9nB,WAAW,GAAGE,aAAa,eAAgBhE,EAASY,WAAWjD,YAC/EiuB,EAAgB9nB,WAAW,GAAGE,aAAa,eAAgBhE,EAASa,WAAWlD,aAEnFwN,KAAKyc,YAAYrxB,YAAYq1B,GAC7BzgB,KAAKwc,gBAETqE,IAAc7gB,KAAKjQ,QAAQwT,eAAe4c,uBACtCngB,KAAKogB,iBAAiBpgB,KAAKpD,kBAAmB8iB,GAC9Cc,GAAaA,EAAmB,SAAKU,IAAoBL,GACzDK,GAAkB,EAClBvyB,EAA4D,mBAAnDkC,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,QAAiCgB,oBAAkB4xB,IAC7F5xB,oBAAkBgG,EAASvK,OAAS0V,KAAKgiB,oBAAoBntB,EAAUusB,GAAezyB,EAC7FqR,KAAKpD,kBAAkBzL,MACnByvB,YAAaA,EACbZ,WAAYN,EAAYW,WAAY1xB,EAAM2xB,cAC1CG,gBAAkB5xB,oBAAkB4xB,GAAqC5xB,oBAAkBgG,EAASvK,OAC9F0V,KAAKiiB,qBAAuB,KADqBxB,EACfvwB,KAAMQ,EAAKjE,GAAS,KAC5D+B,QAASwR,KAAKjQ,QAAQwT,eAAe/U,QAAS4N,YAAa4D,KAAKjQ,QAAQwT,eAAepB,OAAOtU,MAC9FwO,YAAa2D,KAAKjQ,QAAQwT,eAAepB,OAAO3V,QAEpDwT,KAAKpD,kBAAkBoD,KAAKpD,kBAAkBlQ,OAAS,GAAe,WAAEyE,KAAKT,EAAKjE,IAClF20B,KAEKF,IAAoBL,IACzBK,GAAkB,EAClBlhB,KAAKpD,kBAAkB4jB,EAAiB,OAAe,WAAErvB,KAAKT,EAAKjE,KAElEq0B,GAAYK,GAAmBjsB,GAC5BrG,oBAAkBgG,EAASO,OAASvG,oBAAkBgG,EAASQ,KAC5DxG,oBAAkBgG,EAASY,aAC9B5G,oBAAkBgG,EAASa,aAAe7G,oBAAkBgG,EAASvK,SACpEuE,oBAAkBgG,EAAShH,SAC5BkzB,EAA+D,mBAAnDlwB,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAC9CgH,EAAShH,MAAM,GAAKgH,EAAShH,MACnCmzB,EAAenyB,oBAAkBgG,EAAStI,OAA0B,SAAjBsI,EAAStI,MACxDsC,oBAAkBmR,KAAKqhB,oBACvBrhB,KAAKpD,kBAAkBzL,MACnByvB,YAAaI,EAAaV,cAC1BN,WAAYgB,EAAaX,WAAYU,IAEzCE,EAAajhB,KAAKpD,kBAAkBlQ,OACpCsT,KAAKqhB,iBAAmBrhB,KAAKpD,kBAAkBqkB,EAAa,GAC5DG,KAEJphB,KAAKpD,kBAAkBqkB,EAAa,GAAe,WAAE9vB,KAAKT,EAAKjE,QAMnFqvB,EAAcxmB,UAAU8qB,iBAAmB,SAAUnjB,EAAkBrS,GAEnE,IAAK,IADDi2B,GAAc,EACTp0B,EAAI,EAAGA,EAAIwQ,EAAiBvQ,OAAQD,IACzC,GAAIwQ,EAAiBxQ,GAAe,aAAM7B,EAAM,CAC5Ci2B,GAAc,EACd,MAMR,OAAOA,GAEX/E,EAAcxmB,UAAUksB,mBAAqB,SAAU9B,GACnD,IAAIwC,EACAC,EACJ,GAAsC,IAAlCniB,KAAKpD,kBAAkBlQ,OACvBw1B,GAAiB,OAGjB,IAAK,IAAI9wB,EAAI,EAAGA,EAAI4O,KAAKpD,kBAAkBlQ,OAAQ0E,IAAK,CACpD,GAAIsuB,IAAe1f,KAAKpD,kBAAkBxL,GAAgB,YAAG,CACzD8wB,GAAiB,EACjBC,EAAY/wB,EACZ,MAEKA,IAAM4O,KAAKpD,kBAAkBlQ,OAAS,IAC3Cw1B,GAAiB,GAI7B,OAASE,QAASF,EAAgB53B,MAAO63B,IAM7CrG,EAAcxmB,UAAUunB,WAAa,WACjC,IAGIluB,EAEA8xB,EALA1wB,EAAUiQ,KAAKjQ,QACf+sB,EAAS/sB,EAAQwT,eACjB8N,EAASthB,EAAQzC,SAIjB+0B,EAAWvF,EAAOjU,UAItB,GAHA7I,KAAKwT,YAAcnC,EAAOlI,aAAcje,GAAI6E,EAAQmC,QAAQhH,GAAK,kBACjE8U,KAAKsiB,qBACLtiB,KAAKuiB,oBACe,YAAhBzF,EAAO7rB,KACP+O,KAAKwiB,eAAexiB,KAAKic,kBAGzB,IAAK,IAAIxvB,EAAI,EAAGA,EAAIuT,KAAKqc,2BAA2B3vB,OAAQD,IAAK,CAC7D,IAAIg2B,EAAS1yB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EACjDi2B,EAAS3yB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EAAI,QACrDoP,EAAOmE,KAAKqc,2BAA2B5vB,GAE3CkC,GADA8xB,EAAkB5kB,EAAc,SACP,QAAU4kB,EAAgBv1B,GAAK,IAAM2Q,EAAW,KACzE,IAAIkY,EAAS,IAAI9R,GAAKpG,EAAQ,EAAGA,EAAQ,EAAGA,EAAY,MAAGA,EAAa,QACpEsP,EAAe,IAAI/d,GAASyO,EAAY,MAAGA,EAAY,OACvD8mB,EAAc,IAAIzgB,GAAWugB,EAAQ9zB,EAAMmuB,EAAO8F,YAAa9F,EAAOtuB,QAASulB,GAC/E/T,KAAKjQ,QAAQka,YAC2B,SAApCla,EAAQwT,eAAehY,UAA2D,UAApCwE,EAAQwT,eAAehY,UAC7B,SAApCwE,EAAQwT,eAAehY,UACpByU,KAAKjQ,QAAQqe,cAAc5hB,OAASwT,KAAKjQ,QAAQqe,cAAcjhB,QACtEw1B,EAAYz1B,EAAK8S,KAAK6iB,UAAU31B,EAAI8S,KAAKgc,iBAAiB9uB,EAAI8S,KAAKgc,iBAAiB7uB,QAC7E6S,KAAK6iB,UAAU31B,EAAIy1B,EAAYx1B,QAAU2F,KAAKC,IAAIiN,KAAKgc,iBAAiB9uB,EAAIy1B,EAAYz1B,GAC/Fie,EAAaje,EAAK8S,KAAK6iB,UAAU31B,EAAI8S,KAAKgc,iBAAiB9uB,EAAI8S,KAAKgc,iBAAiB7uB,OAC9E6S,KAAK6iB,UAAW,EAAKhnB,EAAiB,WAAI,EAC3C/I,KAAKC,IAAIiN,KAAKgc,iBAAiB9uB,EAAIie,EAAaje,KAGtDy1B,EAAY11B,EAAK+S,KAAK6iB,UAAU51B,EAAI+S,KAAKgc,iBAAiB/uB,EAAI+S,KAAKgc,iBAAiBxvB,OAC7EwT,KAAK6iB,UAAU51B,EAAI01B,EAAYn2B,OAChCsG,KAAKC,IAAIiN,KAAKgc,iBAAiB/uB,EAAI01B,EAAY11B,GACrDke,EAAale,EAAK+S,KAAK6iB,UAAU51B,EAAI+S,KAAKgc,iBAAiB/uB,EAAI+S,KAAKgc,iBAAiBxvB,MAC/EwT,KAAK6iB,UAAU51B,EAAI6F,KAAKC,IAAIiN,KAAKgc,iBAAiB/uB,EAAIke,EAAale,KAIjFU,EADc,IAAI4U,GAAWmgB,EAAQvX,EAAale,EAAGke,EAAaje,EAAG,SAAU2O,EAAW,KAAG,GAAI,IAClEwmB,EAAUA,EAASx0B,OAASmS,KAAKjQ,QAAQqa,WAAWhM,gBAAiB4B,KAAKwT,aACzGxT,KAAKwT,YAAYpoB,YAAYimB,EAAOwC,cAAc8O,MAI9D7G,EAAcxmB,UAAUwtB,yBAA2B,SAAU/mB,EAAYgnB,EAAShzB,EAAS+sB,GACvF,IAAIS,EAAgBxhB,EAAkB,MAClCoP,EAAepP,EAAiB,KAEhChP,EAAWpC,EADEoR,EAAwB,YACF+gB,EAAOjU,WAa9C,OAZA0U,EAActwB,EAAK+S,KAAK6iB,UAAU51B,EAAI+S,KAAKgc,iBAAiB/uB,EAAI+S,KAAKgc,iBAAiBxvB,OAC/EwT,KAAK6iB,UAAU51B,EAAI81B,GAAWjwB,KAAKC,IAAIiN,KAAKgc,iBAAiB/uB,EAAIswB,EAActwB,GACtFke,EAAale,EAAK+S,KAAK6iB,UAAU51B,EAAI+S,KAAKgc,iBAAiB/uB,EAAI+S,KAAKgc,iBAAiBxvB,OAC9EwT,KAAK6iB,UAAU51B,EAAIF,EAASP,MAAQu2B,GAAWjwB,KAAKC,IAAIiN,KAAKgc,iBAAiB/uB,EAAIke,EAAale,IAC9D,SAApC8C,EAAQwT,eAAehY,UAA2D,UAApCwE,EAAQwT,eAAehY,UAC7B,SAApCwE,EAAQwT,eAAehY,UACpByU,KAAKjQ,QAAQqe,cAAc5hB,OAASwT,KAAKjQ,QAAQqe,cAAcjhB,UACtEowB,EAAcrwB,EAAK8S,KAAK6iB,UAAU31B,EAAI8S,KAAKgc,iBAAiB9uB,EAAI8S,KAAKgc,iBAAiB7uB,OAChF6S,KAAK6iB,UAAU31B,EAAI4F,KAAKC,IAAID,KAAKC,IAAIiN,KAAKgc,iBAAiB9uB,GAAKqwB,EAAcrwB,GAAM4vB,EAAOjiB,YAAc,EAC/GsQ,EAAaje,EAAK8S,KAAK6iB,UAAU31B,EAAI8S,KAAKgc,iBAAiB9uB,EAAI8S,KAAKgc,iBAAiB7uB,OAC/E6S,KAAK6iB,UAAU31B,EAAI4F,KAAKC,IAAID,KAAKC,IAAIiN,KAAKgc,iBAAiB9uB,GAAKie,EAAaje,KAE9EqwB,cAAeA,EAAepS,aAAcA,IAGzD2Q,EAAcxmB,UAAUktB,eAAiB,SAAUzG,GAC/C,IAMIiH,EAIA1a,EAVAC,EAAQvI,KACRjQ,EAAUiQ,KAAKjQ,QAEf+sB,EAAS/sB,EAAQwT,eACjB0f,EAAY,IAAI/2B,GAAK4wB,EAAOliB,WAAYkiB,EAAOjiB,aAI/CwW,EAASthB,EAAQzC,SACjBs1B,EAAc9F,EAAO8F,YAEzB,GAAI7G,GAAQ,GAAKA,EAAO/b,KAAKuc,WAAW7vB,OAAQ,CACxC3B,SAASC,eAAegV,KAAKwT,YAAYtoB,KACzCH,SAASC,eAAegV,KAAKwT,YAAYtoB,IAAIoI,SA+BjD,IAAK,IA7BD4vB,EAAkC,mBAAjBpG,EAAO3iB,OAA+C,iBAAjB2iB,EAAO3iB,OAA6C,UAAjB2iB,EAAO3iB,MAChGgpB,EAAgBD,EAAgBr0B,oBAAkBiuB,EAAOnuB,MAAQ,UAAYmuB,EAAOnuB,KAAOi0B,EAAY/0B,MACvGu1B,EAAgBF,GAAuC,IAAtBN,EAAYp2B,MAAe,EAAwBo2B,EAAYp2B,MAChGgd,EAAU,SAAU/c,GACpB,IAAIsP,EAAa0N,EAAO8S,WAAWR,GAAkB,WAAEtvB,GACnDsQ,EAAgBsU,EAAOlI,aAAcje,GAAI6E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACjFizB,EAAa3jB,EAAwB,YACrCsnB,EAAUtzB,EAAQmC,QAAQhH,GAAK,uBAAyBuB,EACxDi2B,EAAS3yB,EAAQmC,QAAQhH,GAAK,sBAAwBuB,EACtD8wB,EAAgBxhB,EAAkB,MAClCoP,EAAepP,EAAiB,KAChChM,EAAQka,YACR+Y,EAAoBvZ,EAAOqZ,yBAAyB/mB,EAzBlD,GAyBuEhM,EAAS+sB,GAClFS,EAAgByF,EAAiC,cACjD7X,EAAe6X,EAAgC,cAEnD1a,GACIkC,QAAQ,EAAOta,KAAMmP,GAAqBtP,QAASA,EAASpB,KAAMoN,EAAiB,KACnF5B,MAAO2iB,EAAO3iB,MAAOmpB,SAAUxG,EAAOwG,UAE1C7Z,EAAO1Z,QAAQ2a,QAAQrL,GAAqBiJ,EAAW,SAAUqC,GAC7D,IAAIpd,EAAgB,IAAI+U,GAAW+gB,EAAS1Y,EAAahc,KAAMy0B,EAAeF,EAAgBnnB,EAAiB,KAAIonB,EAAerG,EAAOtuB,QAAS,IAClJuO,EAAc3R,YAAY8O,EAAWqjB,EAAe5S,EAAaxQ,MAAO8oB,EAAWtY,EAAa2Y,SAAU/1B,EAAemyB,IAEzH/xB,EADc,IAAI4U,GAAWmgB,EAAQvX,EAAale,EAAGke,EAAaje,EAAG,QAASwyB,EAAY,GAAI,IAC/D5C,EAAOjU,UAAWiU,EAAOjU,UAAUhb,OAAS0a,EAAMxY,QAAQqa,WAAWhM,gBAAiBrB,GACrHwL,EAAMiL,YAAYpoB,YAAY2R,MAGlC0M,EAASzJ,KACJvT,EAAI,EAAGA,EAAIuT,KAAKuc,WAAWR,GAAkB,WAAErvB,OAAQD,IAC5D+c,EAAQ/c,GAEZ,IAAI82B,OAAc,EAGlB,GAAkB,IAAdvjB,KAAK+b,KAAY,CACjB,IAAIyH,EAAczH,EAAO,EAAK,IAAM/b,KAAKuc,WAAW7vB,OAChD+2B,EAAa3G,EAAOjU,UACpB6a,EAAiB/4B,EAAY64B,EAAYC,GACzCE,EAAa3jB,KAAKoc,eAAenvB,EAAI+S,KAAKoc,eAAe5vB,MAASk3B,EAAel3B,SApD/E,GAsDFo3B,EAAc5jB,KAAKoc,eAAenvB,EAAI+S,KAAKoc,eAAe5vB,MAC1Dq3B,EAAQ7jB,KAAKoc,eAAelvB,EAAI8S,KAAKoc,eAAejvB,WAvDlD,GAwDF22B,EAAYF,EAxDV,GAwDgCF,EAAel3B,MAAQ,IAC7D+2B,EAAclS,EAAOlI,aAAcje,GAAI6E,EAAQmC,QAAQhH,GAAK,yBAC5D,IAAI64B,EAAkB1S,EAAOlI,aAAcje,GAAI6E,EAAQmC,QAAQhH,GAAK,8BAChE84B,EAAmB3S,EAAOlI,aAAcje,GAAI6E,EAAQmC,QAAQhH,GAAK,+BACjE+4B,EAAY,MAAQL,EAAa,IAAMC,EAAO,OAASD,EA5DrD,IA4D2E,KAAOC,KACpF,OAASD,EA7DP,IA6D6B,KAAOC,KAAiB,MACvDK,EAAW,MAAQP,EAAY,IAAME,EAAO,OAASF,EA9DnD,IA8DwE,KAAOE,KACjF,OAASF,EA/DP,IA+D4B,KAAOE,KAAiB,MACtDM,EAAkB,IAAI7hB,GAAWvS,EAAQmC,QAAQhH,GAAK,aAAc,UAAW,EAAG,UAAW,EAAG,GAAIg5B,GACxGH,EAAgB34B,YAAYimB,EAAOzG,SAASuZ,IAC5C,IAAIC,EAAsB,IAAIliB,GAAWnS,EAAQmC,QAAQhH,GAAK,kBAAmB,iBAAmB,EAAG,IAAI+W,GAAK0hB,IAA0BE,KAAsBr3B,GAAWu2B,IAAc,IACzLgB,EAAgB34B,YAAYimB,EAAOwC,cAAcuQ,IACjDpkB,KAAKqkB,WAAWN,GAChB,IAAIO,EAAmB,IAAIhiB,GAAWvS,EAAQmC,QAAQhH,GAAK,cAAe,UAAW,EAAG,UAAW,EAAG,GAAI+4B,GAC1GD,EAAiB54B,YAAYimB,EAAOzG,SAAS0Z,IAC7C,IAAIC,EAAuB,IAAIriB,GAAWnS,EAAQmC,QAAQhH,GAAK,mBAAoB,iBAAmB,EAAG,IAAI+W,GAAM2hB,EAvE7G,GAuEmIC,IAvEnI,GAAA,IAuEoK,IAC1KG,EAAiB54B,YAAYimB,EAAOwC,cAAc0Q,IAClDvkB,KAAKqkB,WAAWL,GAChBT,EAAYn4B,YAAY24B,GACxBR,EAAYn4B,YAAY44B,GACxB,IAAIQ,GACAt5B,GAAM6E,EAAQmC,QAAQhH,GAAK,eAC3B+B,EAAK62B,EACL52B,EAAK22B,EAAQH,EAAev2B,OAAS,EACrCwB,KAAQ,UACRV,YAAa,OACbC,aAAcu1B,EAAW93B,UACzBwC,cAAes1B,EAAW73B,WAC1BwC,cAAeq1B,EAAW/3B,WAC1B2C,cAAe,SACfE,UAAa,GACbC,QAAW,EACXC,oBAAqB,IAEzB80B,EAAYn4B,YAAYimB,EAAO5jB,WAAW+2B,EAAiBhB,IAC3DxjB,KAAKwT,YAAYpoB,YAAYm4B,MAIzCzH,EAAcxmB,UAAUgtB,mBAAqB,WACzC,IAAIvyB,EAAUiQ,KAAKjQ,QACf+sB,EAAS/sB,EAAQwT,eACjB0Z,EAAcH,EAAOhJ,MAAMlpB,KAE3Bie,EAAYiU,EAAOK,WAGnBpwB,EAAWpC,EADH0B,EAAU2T,KAAKoc,eAAe5vB,SAAwBywB,EAAapU,GAC7CA,GAClC7I,KAAKgc,iBAAmB,IAAI/Z,GAAMjC,KAAKoc,eAAenvB,EALxC,GAKuD+S,KAAKoc,eAAelvB,EAL3E,GAKyFH,EAASI,OAAU6S,KAAKoc,eAAoB,SAAoBpc,KAAKoc,eAAqB,UAAoBrvB,EAASI,QACzM,gBAAhB2vB,EAAO7rB,KAAyB,EAAmB,IAAd+O,KAAK+b,KANjC,GAMyD,IACvE,IAAIxuB,EAAgB,IAAI2U,GAAWnS,EAAQmC,QAAQhH,GAAK,iBAAkB4xB,EAAOnJ,WAAYmJ,EAAO3a,OAAQ,EAAGnC,KAAKgc,iBAAkB,IAClIyI,EAAe10B,EAAQzC,SAASumB,cAActmB,GAClDk3B,EAAan5B,MAAMo5B,cAAgB,OACnC1kB,KAAKwT,YAAYpoB,YAAYq5B,GAC7BzkB,KAAK2kB,mBAAmB50B,EAASiQ,KAAKgc,iBAAiBxvB,MAAOwT,KAAKgc,iBAAiB7uB,OAAQ2vB,GAC5F9c,KAAKwT,YAAY3a,aAAa,YAAa,eAAiBmH,KAAK6iB,UAAU51B,GAAO+S,KAAKgc,iBAAkB,GAAM,KAC1Ghc,KAAK6iB,UAAU31B,GAAO8S,KAAKgc,iBAAkB,GAAM,MACxDjsB,EAAQmb,UAAU9f,YAAY4U,KAAKwT,cAEvCsI,EAAcxmB,UAAUitB,kBAAoB,WACxC,IAAIxyB,EAAUiQ,KAAKjQ,QACf+sB,EAAS/sB,EAAQwT,eACjBsF,EAAYiU,EAAOK,WACnBF,EAAcH,EAAOhJ,MAAMlpB,KAG3Bg6B,EAAYv4B,EAAU2T,KAAKoc,eAAe5vB,SAAwBywB,EAAapU,GAC/E9b,EAAWpC,EAAYi6B,EAAW/b,GAClCoU,GAEAtvB,EADc,IAAI4U,GAAWxS,EAAQmC,QAAQhH,GAAK,eAAiB8U,KAAKoc,eAAgB,EAAKpc,KAAKoc,eAAe5vB,MAAQ,EAAIwT,KAAKoc,eAAelvB,EAAKH,EAASI,OAAS,IAAoB,SAAUy3B,EAAW,IAClL/b,EAAWA,EAAUhb,OAASmS,KAAKjQ,QAAQqa,WAAWjM,iBAAkB6B,KAAKwT,cAMpHsI,EAAcxmB,UAAUuvB,yBAA2B,SAAU7yB,GACzD,IAAIjC,EAAUiQ,KAAKjQ,QACfsQ,EAASrO,EAAEqO,OACXykB,EAAgB/0B,EAAQmC,QAAQhH,GAAK,sBACzCmV,EAAWrO,EAAEhF,KAAKvC,QAAQ,UAAY,EAClCM,SAASg6B,iBAAiB/yB,EAAEgzB,eAAe,GAAGC,QAASjzB,EAAEgzB,eAAe,GAAGE,SADpC7kB,EAE3C,IAAI8kB,EACArI,EAAS/sB,EAAQwT,eACrB,GAAIlD,EAAOnV,GAAGT,QAAQ,gBAAkB,GAAKqyB,EAAOhK,SAAW9S,KAAKqc,2BAA2B3vB,OAAS,EAAG,CACvG,IAAImoB,OAAc,EACdiK,OAAa,EAEbpuB,OAAO,EACP/B,OAAO,EACP0T,OAAS,EACT+iB,OAAc,EACdroB,OAAgB,EACpBooB,EAAap1B,EAAQwB,OAAOC,YAAY+kB,WAAWlW,EAAOnV,GAAG+D,MAAM,KAAK,KAExE,IAAK,IADDo2B,EAAUt1B,EAAQmb,UAAUtY,wBACvBnG,EAAI,EAAGA,EAAIuT,KAAKpD,kBAAkBlQ,OAAQD,IAAK,CACpDooB,EAAc7U,KAAKpD,kBAAkBnQ,GAErCqyB,GADA/hB,EAAgBhS,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACrDmG,wBAC3B,IAAI0yB,EAAS,IAAIrjB,GAAKnP,KAAKC,IAAI+rB,EAAW/yB,KAAOs5B,EAAQt5B,MAAO+G,KAAKC,IAAI+rB,EAAWhzB,IAAMu5B,EAAQv5B,KAAMgzB,EAAWtyB,MAAOsyB,EAAW3xB,QAIrI,GAHAwB,EAAOoO,EAAcwoB,aAAa,QAClCljB,EAASya,EAAO8F,YAAY/0B,MAC5Bu3B,EAActI,EAAO8F,YAAYp2B,OAC5BqC,oBAAkBgmB,EAAwB,YAAI,CAC/CnkB,EAAOmkB,EAAwB,WAC/B,IAAK,IAAIzjB,EAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIV,EAAKU,GAAmB,iBAAM+zB,EAA2B,eAAG,CAC5DnlB,KAAKwlB,uBAAuB1I,EAAQnuB,EAAM0T,EAAQyiB,EAAeM,EAAaE,GAC9E,cAOhBtlB,KAAK2a,4BAGbmB,EAAcxmB,UAAUkwB,uBAAyB,SAAU1I,EAAQnuB,EAAM0T,EAAQnX,EAAIk6B,EAAa1yB,GAC9F,IAAI1C,EACAwY,EACAid,EACA5B,EAeI7zB,EAVU,gBAFsB,SAAvB8sB,EAAO5O,YAA+C,QAApB4O,EAAOvxB,UAA0C,WAApBuxB,EAAOvxB,SACjF,aAAe,WAAauxB,EAAO5O,aAEhC4O,EAAO4I,gBASD,OAFPD,EAAO/yB,EAAKzF,EAAKyF,EAAKlG,MAAQ,GAER,KADtBq3B,EAAOnxB,EAAKxF,EAAKwF,EAAW,QACO,OAAS+yB,EAbxC,IAawD,KAAO5B,EAd9D,IAeD,OAAS4B,EAdT,IAcyB,KAAO5B,EAf/B,IAegD,MAP9C,OAFP4B,EAAO/yB,EAAKzF,EAAKyF,EAAKlG,MAAQ,GAER,KADtBq3B,EAAOnxB,EAAKxF,GACuB,OAASu4B,EAPxC,IAOwD,KAAO5B,EAR9D,IASD,OAAS4B,EART,IAQyB,KAAO5B,EAT/B,IASgD,MAUpD/G,EAAO4I,gBASD,OAFPD,EAAO/yB,EAAKzF,GAEU,KADtB42B,EAAOnxB,EAAKxF,EAAKwF,EAAKvF,OAAS,GACI,OAASs4B,EA3BxC,IA2BwD,KAAO5B,EA5B9D,IA6BD,OAAS4B,EA5BT,IA4ByB,KAAO5B,EA7B/B,IA6BgD,MAP9C,OAFP4B,EAAO/yB,EAAKzF,EAAKyF,EAAU,OAEL,KADtBmxB,EAAOnxB,EAAKxF,EAAKwF,EAAKvF,OAAS,GACI,OAASs4B,EArBxC,IAqBwD,KAAO5B,EAtB9D,IAuBD,OAAS4B,EAtBT,IAsByB,KAAO5B,EAvB/B,IAuBgD,MAS7Drb,EAAc,IAAIlG,GAAWpX,EAAIyD,EAAMy2B,EAAa/iB,EAAQ,EAAG,GAAIrS,GACnEgQ,KAAKjQ,QAAQmb,UAAU9f,YAAY4U,KAAKjQ,QAAQzC,SAASsd,SAASpC,KAEtEsT,EAAcxmB,UAAUqvB,mBAAqB,SAAU50B,EAASvD,EAAOW,EAAQ2vB,GAC3E,IAAI7vB,EACAC,EAEA6V,EAEA4iB,GADJ5iB,EAAYO,YAAWvT,EAAQ8C,SAAUkQ,GAAW,IAC9B9V,EAClB24B,EAAQ7iB,EAAU7V,EAClB+Z,EAAalE,EAAU5V,OACvB6Z,EAAYjE,EAAUvW,MACtByL,EAAalI,EAAQqe,cAAc5hB,MACnCq5B,EAAc91B,EAAQqe,cAAcjhB,OACpC5B,EAA+B,SAApBuxB,EAAOvxB,SAAuB0M,EAAa4tB,EAAe,QAAU,SAAW/I,EAAOvxB,SACrG,GAAwB,UAApBuxB,EAAOvxB,SACPyU,KAAK6iB,UAAY/F,EAAOjwB,aAEvB,CACD,OAAQtB,GACJ,IAAK,MACL,IAAK,SACDwX,EAAU5V,OAAU8Z,EAAa9Z,EACjCF,EAAKgL,EAAa,EAAMzL,EAAQ,EAChCU,EAAkB,QAAb3B,EAAsBq6B,EAASA,EAAQ7iB,EAAU5V,OAnBpD,GAoBF4V,EAAU7V,EAAkB,QAAb3B,EAAsBq6B,EAAQz4B,EApB3C,GAoB8Dy4B,EAChE,MACJ,IAAK,OACL,IAAK,QACD7iB,EAAUvW,MAASwa,EAAYxa,EAC/BS,EAAkB,SAAb1B,EAAuBo6B,EAAQA,EAAQ5iB,EAAUvW,MACtDU,EAAK24B,EAAc,EAAM14B,EAAS,EAClC4V,EAAU9V,EAAkB,SAAb1B,EAAuBo6B,EAAQn5B,EAAQm5B,EAG9D,OAAQ7I,EAAOhwB,WACX,IAAK,OACgB,QAAbvB,GAAmC,WAAbA,EACtB0B,EAAI8V,EAAU9V,EAGdC,EAAI6V,EAAU7V,EAElB,MACJ,IAAK,MACgB,QAAb3B,GAAmC,WAAbA,EACtB0B,EAAIgL,EAAazL,EAGjBU,EAAI24B,EAAc14B,EAI9B6S,KAAKjQ,QAAQgT,UAAYA,EACzB/C,KAAK6iB,UAAY,IAAIz1B,GAASH,EAAGC,KAGzC4uB,EAAcxmB,UAAUwwB,eAAiB,SAAU9zB,GAC/CgO,KAAK6kB,yBAAyB7yB,GAC9B0lB,aAAa1X,KAAK0X,cAClB1X,KAAK0X,aAAeE,WAAW5X,KAAK2a,yBAAyBrD,KAAKtX,MAAO,MAK7E8b,EAAcxmB,UAAUqlB,yBAA2B,WAC3C5vB,SAASC,eAAegV,KAAKjQ,QAAQmC,QAAQhH,GAAK,wBAClDH,SAASC,eAAegV,KAAKjQ,QAAQmC,QAAQhH,GAAK,uBAAuBoI,UAMjFwoB,EAAcxmB,UAAUywB,eAAiB,SAAU/zB,GAC/CgO,KAAKic,YAAejqB,EAAEqO,OAAOnV,GAAGT,QAAQ,gBAAkB,EAAMuV,KAAKic,YAAc,EAC9Ejc,KAAKic,YAAc,EACxBjc,KAAK6c,cAKTf,EAAcxmB,UAAU+uB,WAAa,SAAUnyB,GAC3CskB,eAAazG,IAAI7d,EAASoc,UAAQsI,gBAAiB5W,KAAK+lB,eAAgB/lB,OAK5E8b,EAAcxmB,UAAU+hB,iBAAmB,WACnCrX,KAAKjQ,QAAQi2B,cAGjBhmB,KAAKjQ,QAAQk2B,GAAG3X,UAAQwI,eAAgB9W,KAAK6kB,yBAA0B7kB,MACvEA,KAAKjQ,QAAQk2B,GAAG3X,UAAQ0I,cAAehX,KAAK8lB,eAAgB9lB,QAKhE8b,EAAcxmB,UAAU6hB,oBAAsB,WACtCnX,KAAKjQ,QAAQi2B,cAGjBhmB,KAAKjQ,QAAQm2B,IAAI5X,UAAQwI,eAAgB9W,KAAK6kB,0BAC9C7kB,KAAKjQ,QAAQm2B,IAAI5X,UAAQ0I,cAAehX,KAAK8lB,kBAKjDhK,EAAcxmB,UAAUmmB,cAAgB,WACpC,MAAO,iBAOXK,EAAcxmB,UAAU6a,QAAU,SAAUpgB,GAIxCiQ,KAAKmX,uBAKT2E,EAAcxmB,UAAU0sB,oBAAsB,SAAUntB,EAAUusB,GAC9D,IAAIrB,EACAoG,EAAQ,6BACZ,IAAKt3B,oBAAkBgG,EAAShH,QAA6D,mBAAnDgD,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAA6B,CAC3G,IAAIu4B,EAAapmB,KAAKjQ,QAAQzC,SAASovB,aACnC2J,EAAmBt7B,SAASu7B,gBAAgBH,EAAO,kBAEnD56B,EAAWyU,KAAKjQ,QAAQwT,eAAehY,SACvCm1B,OAAK,EACLC,OAAK,EACTD,EAAkB,QAAbn1B,GAAmC,WAAbA,EAAwB,MAAQ,IAC3Do1B,EAAkB,QAAbp1B,GAAmC,WAAbA,EAAwB,IAAM,MACzD86B,EAAiBxtB,aAAa,KAAM,UAAYuoB,GAChDiF,EAAiBxtB,aAAa,KAAM,MACpCwtB,EAAiBxtB,aAAa,KAAM,MACpCwtB,EAAiBxtB,aAAa,KAAM6nB,EAAK,KACzC2F,EAAiBxtB,aAAa,KAAM8nB,EAAK,KACzC,IAAK,IAAIjxB,EAAI,EAAGA,EAAImF,EAAShH,MAAMnB,OAAQgD,IAAK,CAC5C,IAAI62B,EAAc,KAAO1xB,EAAShH,MAAMnB,OAAS,GAC7C85B,EAAUz7B,SAASu7B,gBAAgBH,EAAO,QAC9CK,EAAQ3tB,aAAa,SAAUnJ,EAAI62B,EAAc,KACjDC,EAAQ3tB,aAAa,aAAchE,EAAShH,MAAM6B,IAClD82B,EAAQ3tB,aAAa,eAhBX,GAgBmCrG,YAC7C6zB,EAAiBj7B,YAAYo7B,GAEjCJ,EAAWh7B,YAAYi7B,GACvBrmB,KAAKiiB,qBAAuBoE,EAC5B,IAAIx4B,EAAQ,eAAsBuzB,EAAc,IAChDphB,KAAKyc,YAAYrxB,YAAYi7B,GAC7BtG,EAAkBlyB,EAEtB,OAAOkyB,GAEJjE,KCh8BP2K,GAAkC,WAClC,SAASA,EAAiBv1B,GACtB8O,KAAKK,OAAS,YACdL,KAAK0mB,YAAc,YACnB1mB,KAAK6a,4BACL7a,KAAK2mB,6BACL3mB,KAAK4mB,kBACL5mB,KAAKjQ,QAAUmB,EACf8O,KAAKqX,mBAkLT,OA1KAoP,EAAiBnxB,UAAU8J,UAAY,SAAUpN,GAC7C,IACI60B,EAEAve,EAGAzM,EAEAumB,EACA0E,EACA50B,EACA60B,EAXAh3B,EAAUiQ,KAAKjQ,QAEfgoB,EAAW/lB,EAAEqO,OAAOnV,GAEpB8F,KACAg2B,EAAYhnB,KAAKjQ,QAAQorB,kBAEzB8L,KAKAC,EAAkBlnB,KAAKjQ,QAAQo3B,uBACnC,GAAIpP,EAASttB,QAAQ,gBAAkB,KAAMy8B,GAAkBA,EAAgBE,cAAgBrP,IAC3F,GAAI/X,KAAK8a,cAAgB/C,EAAU,CAC/B+O,EAAiB/7B,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQkU,WAAa,WACjG,IAAIojB,EAAoBt8B,SAASwR,uBAAuB,oBACxDV,EAAOmE,KAAKjQ,QAAQwB,OAAOC,YAAY+kB,WAAWwB,EAAS9oB,MAAM,KAAK,KACtE,IAAIwN,OAAQ,EACZ,GAAIuD,KAAKjQ,QAAQwT,eAAeuP,QAAS,CACrC,IAAI/W,EAAaiE,KAAKjQ,QAAQ4M,oBAAoBC,kBAElDH,EAAQD,EADOwD,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBlQ,OACjCmP,EAAM9L,GACvCiQ,KAAKhD,aAAoD,YAArCgD,KAAKjQ,QAAQwT,eAAetS,KAAqBlG,SAASC,eAAe,gCAAkCyR,GAAS1R,SAASC,eAAe,0BAA4ByR,GAClK,OAAtBuD,KAAKhD,cAA0BkqB,GAAkBlnB,KAAKhD,aAAauoB,aAAa,QAAU2B,EAAgBI,eAgBrGtnB,KAAK4mB,eAAel6B,OAAS,GAAKsT,KAAK4mB,eAAe5mB,KAAK4mB,eAAel6B,OAAS,GAAmB,iBAAMsT,KAAKhD,eACtHV,EAA6B0D,KAAK6a,yBAA0B7a,KAAK4mB,eAAgB72B,GACjFiQ,KAAK8a,YAAc,IAjBfoM,GAAkBlnB,KAAKhD,eAAiBkqB,EAAgBlqB,aAUnDgD,KAAK4mB,eAAel6B,OAAS,GAAKsT,KAAK4mB,eAAe5mB,KAAK4mB,eAAel6B,OAAS,GAAmB,iBAAMsT,KAAKhD,eACtHV,EAA6B0D,KAAK6a,yBAA0B7a,KAAK4mB,eAAgB72B,GACjFiQ,KAAK8a,YAAc,KAXnB9a,KAAK4mB,eAAez1B,MAAOy1B,eAAgB5mB,KAAKhD,eAChDlB,EAAYkE,KAAK6a,0BACjB7a,KAAK6a,yBAAyB1pB,MAAO+L,UAAW8C,KAAKhD,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgE,KAAKhD,aAAcgqB,EAAUr4B,KAAMq4B,EAAUx4B,QAASw4B,EAAU7kB,OAAOtU,MAAOm5B,EAAU7kB,OAAO3V,MAAMgG,YAC9GwN,KAAKK,OAAS,aAa1B,GADA0mB,EAASh2B,EAAoB8K,KAAUmrB,EAAU/1B,KAAMlB,IACnDiQ,KAAKjQ,QAAQwT,eAAeuP,WAAUoU,KAAkBlnB,KAAKhD,cAAegD,KAAKhD,aAAauoB,aAAa,QAAU2B,EAAgBI,iBACrI,GAAItnB,KAAKjQ,QAAQwT,eAAeuP,UAAUoU,GAAkBlnB,KAAKhD,eAAiBkqB,EAAgBlqB,cA2B9F6pB,GAAmB,MA3BuG,CAC1H,IAAK,IAAIp6B,EAAI,EAAGA,EAAIq6B,EAAe9b,kBAAmBve,IAAK,CACvDyF,EAAU40B,EAAenuB,WAAWlM,GACpC21B,GAAU,EACVvmB,EAAO9L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IACxD,IAAK,IAAImC,EAAI,EAAGA,EAAIi2B,EAAkB36B,OAAQ0E,IAC1C,GAAIc,EAAQhH,KAAOm8B,EAAkBj2B,GAAGlG,GAAI,CACxCk3B,GAAU,EACV,MAGJ2E,EAAOt8B,QAAQoR,EAAqB,iBAAM,GAAKumB,IAC/C6E,EAAkB91B,KAAKe,GACvBlB,EAAMG,KAAK0K,IAGnBrD,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAC1F,IAAK,IAAIoM,EAAI,EAAGA,EAAI8qB,EAAkBv6B,OAAQyP,IAE1CzD,GADAxG,EAAU+0B,EAAkB9qB,IACPxD,WAAW,IAAMwJ,OAAQ6kB,EAAU7kB,OAAQxT,KAAMq4B,EAAUr4B,KAAMH,QAASw4B,EAAUx4B,UACzG0D,EAAQ0G,UAAUmX,IAAI,oBACtB/P,KAAK8a,YAAc/C,EAEvBzP,GAAckC,QAAQ,EAAOta,KAAM4O,GAAe/O,QAASA,EAASiB,MAAOA,EAAOyH,SAAUwuB,GAC5Fl3B,EAAQ2a,QAAQ5L,GAAewJ,UAQ1C,GAAIyP,EAASttB,QAAQ,kBAAoB,GAAKstB,EAASttB,QAAQ,kBAAoB,GACpF,GAAIuV,KAAKjQ,QAAQwT,eAAeuP,WAAYoU,GAAkBA,EAAgBI,iBAAmBvP,MAAqBmP,GAAkBA,EAAgBK,gBAAkBxP,GAAkB,CACpLtb,OAAQ,EAAZ,IAGI+qB,EAFA1P,OAAY,EACZ5U,OAAa,EAEb8W,EAAYjvB,SAASC,eAAe+sB,GACf,cAArB/X,KAAK0mB,aACLzqB,EAAa+D,KAAK2mB,2BAEtB3mB,KAAK0mB,YAAc,YACnBjqB,EAA6C,YAArCuD,KAAKjQ,QAAQwT,eAAetS,KAAqBslB,WAAWwB,EAAS9oB,MAAM,KAAK,IAAMsnB,WAAWwB,EAAS9oB,MAAM,KAAK,IAIxH,IAHDyN,EAAasD,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAE/P,OAErF00B,GADArlB,EAAaiE,KAAKjQ,QAAQ4M,oBAAoBC,kBAChClS,SAASqtB,EAASA,EAASrrB,OAAS,GAAI,KAC1D,IAASD,EAAI,EAAGA,EAAIiQ,EAAYjQ,IAC5B,IAAS2E,EAAI,EAAGA,EAAI4O,KAAKjQ,QAAQwB,OAAOC,YAAY9E,OAAQ0E,IACxD,GAAI4O,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAEhQ,GAAmB,iBAAMuT,KAAKjQ,QAAQwB,OAAOC,YAAYJ,GAAmB,eAAG,CACvJ0mB,EAAY1mB,EACZ8R,EAAalD,KAAKjQ,QAAQwB,OAAOC,YAAYJ,GAAe,WAC5D,IAAIq2B,EAAU18B,SAASC,eAAe,yBAA2BkY,EAAa,eAAiB4U,EAAY,aACjG,IAANrrB,IACAuT,KAAK2mB,6BACL9pB,EAAemD,KAAK2mB,0BAA2BvF,EAAahwB,EAAG4oB,EAAWyN,EAASznB,KAAKjQ,QAAQwB,OAAOC,YAAauK,GACpHyrB,EAAWxnB,KAAK2mB,0BAA0Bj6B,OAC1CsT,KAAK2mB,0BAA0Ba,EAAW,GAAoB,iBAAME,cAExE1rB,EAASge,EAAWgN,EAAUr4B,KAAMq4B,EAAUx4B,QAASw4B,EAAU7kB,OAAOtU,MAAOm5B,EAAU7kB,OAAO3V,MAAMgG,YACtGwJ,EAASyrB,EAAST,EAAUr4B,KAAMq4B,EAAUx4B,QAASw4B,EAAU7kB,OAAOtU,MAAOm5B,EAAU7kB,OAAO3V,MAAMgG,YACpGg1B,EAAWxnB,KAAK2mB,0BAA0Bj6B,OAC1CsT,KAAK2mB,0BAA0Ba,EAAW,GAAoB,gBAAY,SAAEr2B,KAAKs2B,UAO7FP,GAAkBlnB,KAAKhD,cAAegD,KAAKhD,aAAauoB,aAAa,QAAU2B,EAAgBI,iBAC3FJ,EAAkBlnB,KAAKhD,eAAiBkqB,EAAgBlqB,aAAuBgD,KAAKjQ,QAAQwT,eAAeuP,UAC3Gta,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAGxE,cAArBiQ,KAAK0mB,aAA+C,cAAhB1mB,KAAKK,SAA2BL,KAAKjQ,QAAQwT,eAAeuP,SAC7FoU,GAAkBlnB,KAAKhD,cAAegD,KAAKhD,aAAauoB,aAAa,QAAU2B,EAAgBI,iBAC3FJ,EAAkBlnB,KAAKhD,eAAiBkqB,EAAgBlqB,cAAuBkqB,GAAkBA,EAAgBS,gBACjH7rB,EAAYkE,KAAK6a,0BACjB7a,KAAK6a,6BAIQ,cAArB7a,KAAK0mB,aAA+B1mB,KAAKjQ,QAAQwT,eAAeuP,SAChE7W,EAAa+D,KAAK2mB,2BAEtB3mB,KAAK8a,YAAc,GACnB+L,GAAmB,EAEvB,OAAOA,GAKXJ,EAAiBnxB,UAAU+hB,iBAAmB,WACtCrX,KAAKjQ,QAAQi2B,aAGjBhmB,KAAKjQ,QAAQk2B,GAAG3X,UAAQwI,eAAgB9W,KAAKZ,UAAWY,OAK5DymB,EAAiBnxB,UAAU6hB,oBAAsB,WACzCnX,KAAKjQ,QAAQi2B,aAGjBhmB,KAAKjQ,QAAQm2B,IAAI5X,UAAQwI,eAAgB9W,KAAKZ,YAKlDqnB,EAAiBnxB,UAAUmmB,cAAgB,WACvC,MAAO,oBAOXgL,EAAiBnxB,UAAU6a,QAAU,SAAUjf,GAC3C8O,KAAKmX,uBAEFsP,KAMPmB,GAAkC,WAClC,SAASA,EAAiB12B,GACtB8O,KAAK6nB,4BACL7nB,KAAK8nB,6BACL9nB,KAAK+nB,aAAc,EACnB/nB,KAAK2nB,cAAe,EACpB3nB,KAAKjQ,QAAUmB,EACf8O,KAAKqX,mBAsKT,OAhKAuQ,EAAiBtyB,UAAUmjB,UAAY,SAAUzmB,GAC7C,IACIsW,EAIAzM,EAGAirB,EACA50B,EACA60B,EAVA/M,EAAYhoB,EAAEqO,OAEdtQ,EAAUiQ,KAAKjQ,QACfiB,KACA+mB,EAAWiC,EAAU9uB,GAErBm8B,KAKAW,EAAYj4B,EAAQsrB,kBACpB4M,EAAkBjoB,KAAKjQ,QAAQ6qB,uBAC/BX,EAAWlqB,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQkU,WAAa,UACvE,GAAI8T,EAASttB,QAAQ,gBAAkB,EAEnC,GADAuH,EAAEkmB,iBACElY,KAAKonB,cAAgBrP,GAAY/X,KAAK2nB,aAAc,CACpDb,EAAiB/7B,SAASC,eAAeivB,GACzCpe,EAAO9L,EAAQwB,OAAOC,YAAY+kB,WAAWwB,EAAS9oB,MAAM,KAAK,KACjE,IAAIwN,OAAQ,EACZ,GAAIuD,KAAKjQ,QAAQwT,eAAeuP,QAAS,CACrC9S,KAAK+nB,aAAc,EACnB,IAAIG,EAAWloB,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBlQ,OAC9DqP,EAAaiE,KAAKjQ,QAAQ4M,oBAAoBC,kBAClDoD,KAAKhD,kBAAexS,EACpBsR,EAAYkE,KAAK6nB,0BACbI,IACAA,EAAgBvB,YAAc,YAC9BuB,EAAgBpN,6BAEpBpe,EAAQD,EAAe0rB,EAAUrsB,EAAM9L,GACvCiQ,KAAKhD,aAAoD,YAArCgD,KAAKjQ,QAAQwT,eAAetS,KAAqBlG,SAASC,eAAe,gCAAkCyR,GAAS1R,SAASC,eAAe,0BAA4ByR,GAClK,OAAtBuD,KAAKhD,eACLgD,KAAKunB,cAAgBvnB,KAAKhD,aAAauoB,aAAa,MACpDvlB,KAAK6nB,yBAAyB12B,MAAO+L,UAAW8C,KAAKhD,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgE,KAAKhD,aAAcgrB,EAAUr5B,KAAMq5B,EAAUx5B,QAASw5B,EAAU7lB,OAAOtU,MAAOm6B,EAAU7lB,OAAO3V,MAAMgG,aAGtHu0B,EAASh2B,EAAoB8K,KAAUmsB,EAAU/2B,KAAMlB,GACvD,IAAK,IAAItD,EAAI,EAAGA,EAAIq6B,EAAe9b,kBAAmBve,IAClDyF,EAAU40B,EAAenuB,WAAWlM,GACpCoP,EAAO9L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IACpD83B,EAAOt8B,QAAQoR,EAAqB,iBAAM,IAC1CwrB,EAAkBl2B,KAAKe,GACvBlB,EAAMG,KAAK0K,IAGnBrD,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAC1FiQ,KAAKonB,YAAcrP,EAEnB,IAAK,IADDkP,EAAoBl8B,SAASwR,uBAAuB,oBAC/CJ,EAAI,EAAGA,EAAIkrB,EAAkB36B,OAAQyP,IAAK,CAE/C,GADAjK,EAAUm1B,EAAkBlrB,GACxB8qB,EAAkBv6B,OAAS,EAC3B,IAAK,IAAI0E,EAAI,EAAGA,EAAI61B,EAAkBv6B,OAAQ0E,IACtC61B,EAAkB71B,GAAGlG,KAAOgH,EAAQhH,IACpC+7B,EAAkB71B,GAAGwH,UAAUtF,OAAO,oBAE1CoF,EAAaxG,EAAQyG,WAAW,IAAMwJ,OAAQ6lB,EAAU7lB,OAAQxT,KAAMq5B,EAAUr5B,KAAMH,QAASw5B,EAAUx5B,UACzG0D,EAAQ0G,UAAUmX,IAAI,yBAI1BrX,EAAaxG,EAAQyG,WAAW,IAAMwJ,OAAQ6lB,EAAU7lB,OAAQxT,KAAMq5B,EAAUr5B,KAAMH,QAASw5B,EAAUx5B,UACzG0D,EAAQ0G,UAAUmX,IAAI,oBAE1BzH,GAAckC,QAAQ,EAAOta,KAAM2O,GAAc9O,QAASA,EAASiB,MAAOA,EAAOyH,SAAU4uB,GAC3Ft3B,EAAQ2a,QAAQ7L,GAAcyJ,SAIlCxM,EAAYkE,KAAK6nB,0BACjB7nB,KAAKhD,kBAAexS,EACpBwV,KAAK+nB,aAAc,EACnB/nB,KAAKunB,cAAgB,GACrB/uB,EAAiBzN,SAASwR,uBAAuB,oBAAqB,mBAAoBxM,GAC1FiQ,KAAKonB,YAAc,QAGtB,GAAIrP,EAASttB,QAAQ,kBAAoB,GAAKstB,EAASttB,QAAQ,kBAAoB,EAAG,CACnFsR,EAAaiE,KAAKjQ,QAAQ4M,oBAAoBC,kBAClD,GAAIoD,KAAKjQ,QAAQwT,eAAeuP,SAAW9S,KAAKsnB,iBAAmBvP,GAAY/X,KAAK+nB,YAAa,CACzFtrB,OAAQ,EAAZ,IAGI0rB,EAFArQ,OAAY,EACZ5U,OAAa,EAEjBlD,KAAKsnB,eAAiBvP,EACtB/X,KAAK2nB,cAAe,EACpB,IAAIvG,EAAc12B,SAASqtB,EAASA,EAASrrB,OAAS,GAAI,IACtD07B,EAAcr9B,SAASC,eAAe+sB,GAC1C9b,EAAa+D,KAAK8nB,2BACdG,IACAA,EAAgBvB,YAAc,aAElCjqB,EAA6C,YAArCuD,KAAKjQ,QAAQwT,eAAetS,KAAqBslB,WAAWwB,EAAS9oB,MAAM,KAAK,IAAMsnB,WAAWwB,EAAS9oB,MAAM,KAAK,IAExH,IADDyN,EAAasD,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAE/P,OACzF,IAASyP,EAAI,EAAGA,EAAIO,EAAYP,IAC5B,IAAK,IAAIwZ,EAAI,EAAGA,EAAI3V,KAAKjQ,QAAQwB,OAAOC,YAAY9E,OAAQipB,IACxD,GAAI3V,KAAKjQ,QAAQ4M,oBAAoBC,kBAAkBH,GAAmB,WAAEN,GAAmB,iBAAM6D,KAAKjQ,QAAQwB,OAAOC,YAAYmkB,GAAmB,eAAG,CACvJmC,EAAYnC,EACZzS,EAAalD,KAAKjQ,QAAQwB,OAAOC,YAAYmkB,GAAe,WAC5D,IAAI8R,EAAU18B,SAASC,eAAe,yBAA2BkY,EAAa,eAAiB4U,EAAY,aACjG,IAAN3b,IACAU,EAAemD,KAAK8nB,0BAA2B1G,EAAazL,EAAGyS,EAAaX,EAASznB,KAAKjQ,QAAQwB,OAAOC,YAAauK,GACtHosB,EAAWnoB,KAAK8nB,0BAA0Bp7B,OAC1CsT,KAAK8nB,0BAA0BK,EAAW,GAAoB,iBAAMT,cAExE1rB,EAASosB,EAAaJ,EAAUr5B,KAAMq5B,EAAUx5B,QAASw5B,EAAU7lB,OAAOtU,MAAOm6B,EAAU7lB,OAAO3V,MAAMgG,YACxGwJ,EAASyrB,EAASO,EAAUr5B,KAAMq5B,EAAUx5B,QAASw5B,EAAU7lB,OAAOtU,MAAOm6B,EAAU7lB,OAAO3V,MAAMgG,YACpG21B,EAAWnoB,KAAK8nB,0BAA0Bp7B,OAC1CsT,KAAK8nB,0BAA0BK,EAAW,GAAoB,gBAAY,SAAEh3B,KAAKs2B,SAM7FxrB,EAAa+D,KAAK8nB,2BACdG,IACAA,EAAgBvB,YAAc,aAElC1mB,KAAK2nB,cAAe,EACpB3nB,KAAKsnB,eAAiB,KAOlCM,EAAiBtyB,UAAU+hB,iBAAmB,WACtCrX,KAAKjQ,QAAQi2B,aAGjBhmB,KAAKjQ,QAAQk2B,GAAG3X,UAAQsI,gBAAiB5W,KAAKyY,UAAWzY,OAK7D4nB,EAAiBtyB,UAAU6hB,oBAAsB,WACzCnX,KAAKjQ,QAAQi2B,aAGjBhmB,KAAKjQ,QAAQm2B,IAAI5X,UAAQsI,gBAAiB5W,KAAKyY,YAKnDmP,EAAiBtyB,UAAUmmB,cAAgB,WACvC,MAAO,oBAOXmM,EAAiBtyB,UAAU6a,QAAU,SAAUjf,GAC3C8O,KAAKmX,uBAEFyQ,KC5WPS,GAAgC,WAChC,SAASA,EAAen3B,GACpB8O,KAAKjQ,QAAUmB,EACf8O,KAAKib,gBAAkBjb,KAAKjQ,QAAQkrB,gBACpCjb,KAAKsoB,UAAYtoB,KAAKjQ,QAAQmC,QAAQhH,GAAK,kBAC3C8U,KAAKqX,mBAuJT,OApJAgR,EAAe/yB,UAAUizB,cAAgB,SAAUv2B,GAC/C,IACIiC,EACAC,EACAmM,EACAmoB,EACAC,EALAlgB,EAAQvI,MAMqB,IAA7BhO,EAAEhF,KAAKvC,QAAQ,UACfuV,KAAK0oB,SAAU,EAEfz0B,GADAu0B,EAAWx2B,GACMgzB,eAAe,GAAG/wB,MACnCC,EAAQs0B,EAASxD,eAAe,GAAG9wB,MACnCmM,EAASmoB,EAASnoB,SAGlBL,KAAK0oB,QAA4B,UAAlB12B,EAAE22B,YACjB10B,EAAQjC,EAAEiC,MACVC,EAAQlC,EAAEkC,MACVmM,EAASrO,EAAEqO,QAEf,IAAI/V,EAGAs+B,EACA/7B,EAIAg8B,EAPA9Q,EAAW1X,EAAOnV,GAClB2Q,KAIAitB,KACAC,KAEAhR,EAASttB,QAAQ,gBAAkB,GACnCoR,EAAOmE,KAAKjQ,QAAQwB,OAAOC,YAAY+kB,WAAWwB,EAAS9oB,MAAM,KAAK,KACjEJ,oBAAkBgN,KACHA,EAAW,KAC3BvR,EAAQuR,EAAa,OACrBitB,EAAcjtB,EAAW,KACzBgtB,EAAahtB,EAAc,QAAQ,KAE/BktB,EADA/oB,KAAKjQ,QAAQka,WACKnR,EAAckH,KAAKib,gBAAgBliB,OAAQ+vB,EAAa9oB,KAAKjQ,UACvEqJ,EAAY9O,EAAO0V,KAAKjQ,SAAW,MAAQiQ,KAAKjQ,QAAQS,gBAAgBgC,aAG9DsG,EAAckH,KAAKib,gBAAgBliB,OAAQ+vB,EAAa9oB,KAAKjQ,UACvEiQ,KAAKjQ,QAAQS,gBAAgBgC,WAAa,MAAQ4G,EAAY9O,EAAO0V,KAAKjQ,UAElFhF,SAASC,eAAegV,KAAKsoB,WAC7BM,EAAa79B,SAASC,eAAegV,KAAKsoB,YAG1CM,EAAa39B,gBAAc,OACvBC,GAAI8U,KAAKjQ,QAAQmC,QAAQhH,GAAK,kBAC9Boe,UAAW,sBACXjX,OAAQ,4CAEZtH,SAASC,eAAegV,KAAKjQ,QAAQmC,QAAQhH,GAAK,sBAAsBE,YAAYw9B,KAExF/7B,EAAWmH,EAAiBC,EAAOC,EAAO8L,KAAKjQ,QAAQmb,YAC9Che,EAAK8S,KAAKib,gBAAwB,SAAIpuB,EAASK,EAAI,GAAKL,EAASK,EAC1E8S,KAAKib,gBAAgBpS,UAAUjd,WAAaoU,KAAKjQ,QAAQqa,WAAWxe,WACpEoU,KAAKib,gBAAgBpS,UAAUhb,MAAQmS,KAAKjQ,QAAQqa,WAAWlM,kBACxD8B,KAAKib,gBAAgBpS,UAAUhb,MACtCmS,KAAKib,gBAAgBpS,UAAUra,QAAUwR,KAAKjQ,QAAQqa,WAAW9L,oBAC1D0B,KAAKib,gBAAgBpS,UAAUra,QACtCi6B,GACIje,QAAQ,EAAOta,KAAM6O,GAAkBlD,KAAMA,EAC7CjO,SACIf,SAAUA,EAAUjC,KAAMm+B,EAAgBr4B,KAAMo4B,EAChDjgB,UAAW7I,KAAKib,gBAAgBpS,UAAWnX,SAAUsO,KAAKib,gBAAgBvpB,UAE9E3B,QAASiQ,KAAKjQ,QACdmC,QAASmO,EAAQiI,UAAWtW,GAEhCgO,KAAKjQ,QAAQ2a,QAAQ3L,GAAkB0pB,EAAY,SAAU9d,GACpDA,EAAaH,QAkBdjC,EAAMmS,gBACNsO,sBAAoBzgB,EAAMxY,QAAQmC,QAAQhH,GAAK,WAAY,cAlB3Dqd,EAAM0gB,WAAa,IAAIC,WACnB9N,QAAQ,EACR+N,OAAQ,GACRz4B,KAAMia,EAAa/c,QAAc,KACjC8D,SAAUiZ,EAAa/c,QAAkB,SACzCw7B,QAASze,EAAa/c,QAAc,KACpCy7B,UACAx8B,SAAU8d,EAAa/c,QAAkB,SACzC0e,SAAUuc,GACVS,WAAY/gB,EAAMxY,QAAQ8C,SAC1BgW,UAAW8B,EAAa/c,QAAmB,YAE/C2a,EAAM0gB,WAAWz6B,QAAU+Z,EAAMxY,QAAQqa,WAAW/L,oBAAsBkK,EAAM0gB,WAAWz6B,QAC3F+Z,EAAM0gB,WAAWM,SAASX,GAC1B3d,uBAAqB1C,EAAMxY,QAAQmC,QAAQhH,GAAK,WAAY,kBAUxE8U,KAAK0a,gBACLsO,sBAAoBhpB,KAAKjQ,QAAQmC,QAAQhH,GAAK,WAAY,cAGlEm9B,EAAe/yB,UAAUwwB,eAAiB,SAAU9zB,GAChDgO,KAAKuoB,cAAcv2B,GACnB0lB,aAAa1X,KAAK0X,cAClB1X,KAAK0X,aAAeE,WAAW5X,KAAK0a,cAAcpD,KAAKtX,MAAO,MAElEqoB,EAAe/yB,UAAUolB,cAAgB,WACjC3vB,SAASwR,uBAAuB,uBAAuB7P,OAAS,GAChE3B,SAASwR,uBAAuB,uBAAuB,GAAGjJ,UAMlE+0B,EAAe/yB,UAAU+hB,iBAAmB,WACpCrX,KAAKjQ,QAAQi2B,cAGjBhmB,KAAKjQ,QAAQk2B,GAAG3X,UAAQwI,eAAgB9W,KAAKuoB,cAAevoB,MAC5DA,KAAKjQ,QAAQk2B,GAAG3X,UAAQ0I,cAAehX,KAAK8lB,eAAgB9lB,QAKhEqoB,EAAe/yB,UAAU6hB,oBAAsB,WACvCnX,KAAKjQ,QAAQi2B,cAGjBhmB,KAAKjQ,QAAQm2B,IAAI5X,UAAQwI,eAAgB9W,KAAKuoB,eAC9CvoB,KAAKjQ,QAAQm2B,IAAI5X,UAAQ0I,cAAehX,KAAK8lB,kBAKjDuC,EAAe/yB,UAAUmmB,cAAgB,WACrC,MAAO,kBAOX4M,EAAe/yB,UAAU6a,QAAU,SAAUjf,GAIzC8O,KAAKmX,uBAEFkR,ySP5JO,gBAKE,2KAkDD"}