{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('null')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * This method is used to perform the print functionality in treemap.\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem,\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        selection.fill = selection.fill === 'null' ?\n                            treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                            : selection.fill;\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","containerWidth","containerHeight","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","isDrilled","itemArea","itemSelect","itemTemplate","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId"],"mappings":"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"}