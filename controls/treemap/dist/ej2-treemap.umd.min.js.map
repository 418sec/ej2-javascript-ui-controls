{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('_');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#F8F9FA',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            if (this.treemap.drillDownView && isNullOrUndefined(this.treemap.currentLevel)\n                && index > 0 || this.treemap.drillDownView\n                && index > (this.treemap.currentLevel + 1)) {\n                continue;\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this.treemap.totalRect ? convertToContainer(this.treemap.totalRect) : this.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this.treemap.currentLevel) {\n                if (this.treemap.enableBreadcrumb) {\n                    var re = /_/gi;\n                    connectorText = '_' + this.treemap.breadcrumbConnector + '_';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '_' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('_') > 0) {\n                    childLevel = childItemLevel.split('_').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('_');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('_').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '_' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('_');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '_' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '_' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent);\n                this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                    (!isNullOrUndefined(drillLevel) && this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            if (this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                this.drilledLegendItems = {\n                                    name: this.drilledItems[this.drilledItems.length - 1]['data']['levelOrderName'],\n                                    data: this.drilledItems[this.drilledItems.length - 1]['data']\n                                };\n                            }\n                            else {\n                                this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            }\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    if (!isNullOrUndefined(startEvent.childItems) && !startEvent.cancel) {\n                        this.layout.onDemandProcess(startEvent.childItems);\n                    }\n                    else {\n                        this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                        this.layout.renderLayoutItems(newDrillItem);\n                    }\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property('.')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs);\n        if (!eventArgs.cancel && eventArgs._changePosition !== this.treemap.legendSettings.position) {\n            this.treemap.legendSettings.position = eventArgs._changePosition;\n        }\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this.treemap.trigger(legendItemRendering, eventArgs);\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","themeStyle","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","_loop_1","this_1","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","targetEle","layoutID","templateID","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}