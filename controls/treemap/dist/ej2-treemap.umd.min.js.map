{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/base.js","../src/treemap/model/constants.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                tooltipFillOpacity: 0.75,\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                tooltipFillOpacity: 0.75,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: 'rgba(0, 8, 22, 0.75)',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontFamily: 'Roboto, Segoe UI, Noto, Sans-serif',\n                borderWidth: 0.5,\n                borderColor: '#cccccc'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = textStyle.fontFamily || this_1.treemap.themeStyle.labelFontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function () {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            if (this.isBlazor) {\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            eventBlazorArgs = { cancel: false, name: itemMove, item: item, mouseEvent: e };\n            this.trigger(itemMove, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.tooltipSettings.textStyle.fontFamily\n                    || this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.tooltipSettings.textStyle.color\n                    || this.treemap.themeStyle.tooltipFontColor;\n                this.tooltipSettings.textStyle.opacity = this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        var width = this.treemap.tooltipSettings.border.width;\n        var color = this.treemap.tooltipSettings.border.color;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.tooltipSettings.opacity || this.treemap.themeStyle.tooltipFillOpacity;\n            this.svgTooltip.fill = this.treemap.tooltipSettings.fill || this.treemap.themeStyle.tooltipFillColor;\n            this.svgTooltip.border.width = (width === 0) ? this.treemap.themeStyle.borderWidth : width;\n            this.svgTooltip.border.color = (color === '#808080') ? this.treemap.themeStyle.borderColor : color;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","tooltipFillOpacity","legendTitleColor","legendTextColor","labelFontFamily","tooltipTextOpacity","legendFontSize","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","removeChild","firstChild","hasChildNodes","parentNode","resetBlazorTemplate","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","eventBlazorArgs","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillMouseMove","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo"],"mappings":"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"}