{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    for (var j = 0; j < this.element.children.length; j++) {\n                        if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                            separator = this.element.children[j];\n                        }\n                    }\n                    this.allBars.push(separator);\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity"],"mappings":"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"}