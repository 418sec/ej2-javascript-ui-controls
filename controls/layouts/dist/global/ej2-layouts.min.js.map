{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < this.separatorSize) ? '0px' :\n                        (nextPaneSize - this.separatorSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < this.separatorSize) ? '0px' :\n                        (prePaneSize - this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + this.separatorSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneExpanded = this.nextPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n            }\n            else {\n                this.expand(index);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"8DAAA,IAAIA,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QAGnFK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HjB,GAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,CACrH,IAAuB,gBAAZM,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIQ,GAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAM5DM,EAAO,aAGPC,EAAO,SACPC,EAAe,oBACfC,EAAe,kBAIfC,EAAc,gBAEdC,EAAa,mBAYbC,EAAa,eACbC,EAAW,aACXC,EAAa,eACbC,EAAY,gBASZC,EAAgC,SAAUC,GAE1C,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAM9B,KAAMU,YAAcV,KA0B/D,MA5BAX,GAAUuC,EAAgBC,GAI1BzB,GACI2B,cACDH,EAAe1B,UAAW,WAAQ,IACrCE,GACI2B,YAAS,IACVH,EAAe1B,UAAW,kBAAe,IAC5CE,GACI2B,YAAS,IACVH,EAAe1B,UAAW,gBAAa,IAC1CE,GACI2B,YAAS,IACVH,EAAe1B,UAAW,gBAAa,IAC1CE,GACI2B,WAAS,OACVH,EAAe1B,UAAW,UAAO,IACpCE,GACI2B,WAAS,OACVH,EAAe1B,UAAW,UAAO,IACpCE,GACI2B,cACDH,EAAe1B,UAAW,cAAW,IACxCE,GACI2B,WAAS,KACVH,EAAe1B,UAAW,eAAY,IAClC0B,GACTI,iBAsBEC,EAA0B,SAAUJ,GAOpC,QAASI,GAASC,EAASC,GACvB,GAAIC,GAAQP,EAAOQ,KAAKrC,KAAMkC,EAASC,IAAYnC,IAiBnD,OAhBAoC,GAAME,YACNF,EAAMG,aACNH,EAAMI,kBACNJ,EAAMK,WACNL,EAAMM,uBACNN,EAAMO,sBACNP,EAAMQ,2BAA4B,EAClCR,EAAMS,4BAA6B,EACnCT,EAAMU,mBACNV,EAAMW,OAAS,EACfX,EAAMY,qBAAuB,YAAa,WAAY,WAAY,mBAAoB,iBAAkB,eAAgB,kBACxHZ,EAAMa,wBAA0B,mBAAoB,aAAc,eAClEb,EAAMc,WAAa,IACnBd,EAAMe,mBACNf,EAAMgB,cAAe,EACrBhB,EAAMiB,YAAa,EACZjB,EAkzDX,MA10DA/C,GAAU4C,EAAUJ,GAiCpBI,EAAS/B,UAAUoD,kBAAoB,SAAUC,EAASC,GACtD,GAAKxD,KAAKmC,QAAQsB,UAAUC,SAASxC,GAGrC,IAAK,GAAIyC,GAAK,EAAGC,EAAKnE,OAAOoE,KAAKN,GAAUI,EAAKC,EAAGjD,OAAQgD,IAExD,OADWC,EAAGD,IAEV,IAAK,SACD3D,KAAK8D,gBAAgB9D,KAAKmC,QAASoB,EAAQQ,OAAQ,SACnD,MACJ,KAAK,QACD/D,KAAK8D,gBAAgB9D,KAAKmC,QAASoB,EAAQS,MAAO,QAClD,MACJ,KAAK,WACDhE,KAAKiE,YAAYjE,KAAKmC,QAASoB,EAAQW,SACvC,MACJ,KAAK,UACDlE,KAAKmE,UAAUnE,KAAKoE,QACpB,MACJ,KAAK,gBACDpE,KAAKqE,iBAAiBd,EAAQe,cAC9B,MACJ,KAAK,cACDtE,KAAKuE,kBAAkBhB,EAAQiB,YAC/B,MACJ,KAAK,eACD,GAAMjB,EAAQkB,uBAAwB7E,QAAS4D,EAAQiB,uBAAwB7E,OAwC3EI,KAAK0E,sBACL1E,KAAKyC,WACLzC,KAAKsC,YACLtC,KAAK2E,gBAAgB3E,KAAKmC,SAC1BnC,KAAK4E,aAAa5E,KAAKmC,SACvBnC,KAAK6E,qBACL7E,KAAK8E,OAAO9E,KAAK+E,WACjB/E,KAAKgF,kBA7CL,KAAK,GADDC,GAAaxF,OAAOoE,KAAKN,EAAQkB,cAC5BzD,EAAI,EAAGA,EAAIiE,EAAWtE,OAAQK,IAGnC,IAAK,GAFDkE,GAAQC,SAAS1F,OAAOoE,KAAKN,EAAQkB,cAAczD,GAAI,IACvDoE,EAAoB3F,OAAOoE,KAAKN,EAAQkB,aAAaS,IAAQvE,OACxD0E,EAAI,EAAGA,EAAID,EAAmBC,IAAK,CACxC,GAAIC,GAAW7F,OAAOoE,KAAKN,EAAQkB,aAAaS,IAAQG,EACxD,QAAQC,GACJ,IAAK,UACD,GAAIC,GAAW9F,OAAO8D,EAAQkB,aAAaS,IAAQI,EAC9CE,qBAAkBD,KACnBvF,KAAKsC,SAAS4C,GAAOO,UAAY,GACjCzF,KAAK0F,YAAYH,EAAUvF,KAAKsC,SAAS4C,IAE7C,MACJ,KAAK,YACD,GAAIS,GAASlG,OAAO8D,EAAQkB,aAAaS,IAAQI,EACjDtF,MAAK4F,eAAeV,EAAOS,EAC3B,MACJ,KAAK,cACD3F,KAAK6F,uBAAuBX,EAC5B,MACJ,KAAK,YACD3B,EAAQkB,aAAaS,GAAOY,UAAY9F,KAAKgF,cAAgBhF,KAAK+F,kBAAkBb,EACpF,MACJ,KAAK,WACDlF,KAAKiE,YAAYjE,KAAKsC,SAAS4C,GAAQ3B,EAAQkB,aAAaS,GAAOhB,SACnE,MACJ,KAAK,OACD,GAAI8B,GAAavG,OAAO8D,EAAQkB,aAAaS,IAAQI,EAClC,MAAfU,GAAsBR,oBAAkBQ,KACxChG,KAAKsC,SAAS4C,GAAOe,MAAMC,UAAYF,EACvChG,KAAKsC,SAAS4C,GAAOzB,UAAU0C,IAAI7E,KAiB3D,KACJ,KAAK,YACDtB,KAAK8E,OAAOvB,EAAQwB,aAKpC9C,EAAS/B,UAAUkG,UAAY,WAC3BpG,KAAKqG,QAAUrG,KAAKmC,QAAQmE,WAAU,GACtCtG,KAAKuG,cAAgBvG,KAAKmC,QAAQqE,cAClCC,eAAazG,KAAKqG,UAAW,YAAa,QAASnF,GACnD,IAAIsD,GAAmC,eAArBxE,KAAKwE,YA9MT,wBACF,qBA8MZkC,aAAU1G,KAAKmC,SAAUqC,EACzB,IACImC,GAAgB,SADTC,UAAQC,KAAKC,KACM,OAAS,EACvC9G,MAAKiE,YAAYjE,KAAKmC,QAASwE,GAC3BC,UAAQG,UACRL,YAAU1G,KAAKmC,SArMT,qBAwMdF,EAAS/B,UAAU8G,eAAiB,WAChC,MAAOhH,MAAKiH,kBAOhBhF,EAAS/B,UAAUgH,cAAgB,WAC/B,MAAO,YAMXjF,EAAS/B,UAAUiH,OAAS,WACxBnH,KAAKoH,sBACLpH,KAAKiE,YAAYjE,KAAKmC,QAASnC,KAAKkE,UACpClE,KAAKmE,UAAUnE,KAAKoE,SACpBpE,KAAKqH,aAAarH,KAAKsH,UAAUtH,KAAKmC,SAAUnC,KAAKuH,SAASvH,KAAKmC,UACnEnC,KAAK2E,gBAAgB3E,KAAKmC,SAC1BnC,KAAK4E,aAAa5E,KAAKmC,SACvBnC,KAAK6E,qBACL7E,KAAKwH,kBACLxH,KAAK8E,OAAO9E,KAAK+E,WACjB/E,KAAKoD,cAAe,EACpBpD,KAAKgF,cACLhF,KAAKoD,cAAe,EACpBqE,eAAatB,IAAIuB,SAAU,mBAAoB1H,KAAK2H,gBAAiB3H,MACrEA,KAAK4H,iBACLH,eAAatB,IAAInG,KAAKmC,QAAS,UAAWnC,KAAK6H,OAAQ7H,OAE3DiC,EAAS/B,UAAUyH,gBAAkB,SAAUG,GACtCA,EAAExH,OAAOmD,UAAUC,SAnPhB,gBAmPwC8B,oBAAkBxF,KAAK+H,oBACnE/H,KAAK+H,iBAAiBtE,UAAUuE,OA7OtB,qBA8OVhI,KAAK+H,iBAAiBtE,UAAUuE,OA7OrB,wBAgPnB/F,EAAS/B,UAAU+H,cAAgB,SAAUH,GACzC,GAAII,GACAC,CAGJ,IAFAD,EAAmC,eAArBlI,KAAKwE,YAA+BxE,KAAKoI,aAAaC,YAAcrI,KAAKoI,aAAaE,aACpGH,EAAoC,eAArBnI,KAAKwE,YAA+BxE,KAAKuI,SAASF,YAAcrI,KAAKuI,SAASD,aACxFtI,KAAKoI,aAAanC,MAAMC,UAAUsC,QAAQ,KAAO,GAAKxI,KAAKuI,SAAStC,MAAMC,UAAUsC,QAAQ,KAAO,EAAI,CACxG,GAAIC,GAAoBzI,KAAK0I,oBAAoB1I,KAAKoI,cAClDO,EAAgB3I,KAAK0I,oBAAoB1I,KAAKuI,SAClDvI,MAAK4I,aAAeH,EAAoBE,EACxC3I,KAAK6I,WAAa7I,KAAK8I,yBAAyB9I,KAAK4I,aAAe,KACrD,YAAXd,EAAEiB,MAAwBvD,oBAAkBsC,EAAEkB,YAC3B,KAAdlB,EAAEkB,SAAiC,KAAdlB,EAAEkB,UAAoBb,EAAe,GAC3DnI,KAAKoI,aAAanC,MAAMC,UAAauC,EAAoB,EAAK,IAC9DzI,KAAKuI,SAAStC,MAAMC,UAAayC,EAAgB,EAAK,MAElC,KAAdb,EAAEkB,SAAiC,KAAdlB,EAAEkB,UAAoBd,EAAc,IAC/DlI,KAAKoI,aAAanC,MAAMC,UAAauC,EAAoB,EAAK,IAC9DzI,KAAKuI,SAAStC,MAAMC,UAAayC,EAAgB,EAAK,UAK9D3I,MAAK6I,WAAmC,eAArB7I,KAAKwE,YAAgCxE,KAAKoI,aAAaC,YAAcrI,KAAKuI,SAASF,YAClGrI,KAAKoI,aAAaE,aAAetI,KAAKuI,SAASD,aACpC,YAAXR,EAAEiB,MAAwBvD,oBAAkBsC,EAAEkB,YAC3B,KAAdlB,EAAEkB,SAAiC,KAAdlB,EAAEkB,UAAoBb,EAAe,GAC3DnI,KAAKiJ,qBACLjJ,KAAKoI,aAAanC,MAAMC,UAAagC,EAAclI,KAAKsE,cAAiB,KACzEtE,KAAKuI,SAAStC,MAAMC,UAAaiC,EAAenI,KAAKsE,cAAiB,MACjE6D,EAAenI,KAAKsE,cAAiB,OAEtB,KAAdwD,EAAEkB,SAAiC,KAAdlB,EAAEkB,UAAoBd,EAAc,IAC/DlI,KAAKiJ,qBACLjJ,KAAKoI,aAAanC,MAAMC,UAAagC,EAAclI,KAAKsE,cAAiB,MACpE4D,EAAclI,KAAKsE,cAAiB,KACzCtE,KAAKuI,SAAStC,MAAMC,UAAaiC,EAAenI,KAAKsE,cAAiB,QAKtFrC,EAAS/B,UAAU2H,OAAS,SAAUqB,GAClC,GAAIhE,GAAQlF,KAAKmJ,kBAAkBnJ,KAAK+H,kBACpCqB,EAAsBpJ,KAAKoI,aAAa3E,UAAUC,SA5Q1C,eA6QR2F,EAAqBrJ,KAAKoI,aAAa3E,UAAUC,SA9Q3C,cAgRN4F,GADqBtJ,KAAKuI,SAAS9E,UAAUC,SA/QvC,cAgRgB1D,KAAKuI,SAAS9E,UAAUC,SA/QtC,iBAgRe,eAArB1D,KAAKwE,aAAkD,KAAlB0E,EAAMF,SAAyC,eAArBhJ,KAAKwE,aAAkD,KAAlB0E,EAAMF,SACtF,eAArBhJ,KAAKwE,aAAkD,KAAlB0E,EAAMF,SAAyC,eAArBhJ,KAAKwE,aAAkD,KAAlB0E,EAAMF,YACtGK,IAAuBC,IAAwBF,GAAuB,IAAyBE,IACpGtJ,KAAKiI,cAAciB,GACnBlJ,KAAKuJ,gBAAgBL,IAEE,KAAlBA,EAAMF,SAAkBhJ,KAAKyE,aAAaS,GAAOsE,cACjDxJ,KAAKoI,aAAa3E,UAAUC,SAvRzB,eA2RJ1D,KAAKyJ,OAAOvE,GAHZlF,KAAK0J,SAASxE,KAW1BjD,EAAS/B,UAAUyJ,eAAiB,SAAUC,GAC1C,GAAI5J,KAAK6J,oBAAqB,CAC1B,GAAIC,GAAOC,qBAAmBC,iBAC1BC,GACAC,QAAQ,EACRC,OAAQ,KAEZC,UAAON,EAAMA,EAAMG,GACnBjK,KAAKqK,QAAQ,qBAAsBP,GAC/BA,EAAKI,SAAW1E,oBAAkBsE,EAAKK,QACvCP,EAAQE,EAAKK,OAAOP,GAEdE,EAAKI,SACXN,EAAQG,qBAAmBO,eAAeR,EAAMF,IAGxD,MAAOA,IAEX3H,EAAS/B,UAAUkH,oBAAsB,WAIrC,IAAK,GAHDmD,GACAX,EAEKY,EAAY,EAAGA,EAAYxK,KAAKiD,uBAAuBtC,OAAQ6J,IACpEZ,EAAQ5J,KAAKmC,QAAQsI,aAAazK,KAAKiD,uBAAuBuH,IACzDhF,oBAAkBoE,KAGnB5J,KAFAuK,EAAMvK,KAAK0K,iBAAiB1K,KAAKiD,uBAAuBuH,KAE5CZ,EAIpB,KAAK,GAAIe,GAAY,EAAGA,EAAY3K,KAAKmC,QAAQyI,SAASjK,OAAQgK,IAC9D,IAAK,GAAIE,GAAW,EAAGA,EAAW7K,KAAKgD,oBAAoBrC,OAAQkK,IAE/D,GADAjB,EAAQ5J,KAAKmC,QAAQyI,SAASD,GAAWF,aAAazK,KAAKgD,oBAAoB6H,KAC1ErF,oBAAkBoE,GAAQ,CAE3BA,EAAiB,iBADjBW,EAAMvK,KAAK0K,iBAAiB1K,KAAKgD,oBAAoB6H,MACX,cAARN,EAAkC,SAAVX,EAAoBA,EAC1EpE,oBAAkBxF,KAAKyE,aAAakG,MACpC3K,KAAKyE,aAAakG,IACdG,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACX1B,aAAa,EACb1D,WAAW,GAInB,IAAIqF,GAAUnL,KAAKyE,aAAakG,GAAWJ,EAC/B,eAARA,GAA+B,gBAARA,GAAiC,cAARA,IAEhDvK,KAAKyE,aAAakG,GAAWJ,GAAOX,IAEpCpE,oBAAkB2F,IAAwB,KAAZA,KAE9BnL,KAAKyE,aAAakG,GAAWJ,GAAOX,KAMxD3H,EAAS/B,UAAUwE,oBAAsB,cAClC0G,MAAM/I,KAAKrC,KAAKmC,QAAQyI,UAAUS,QAAQ,SAAUC,GAAMC,SAAOD,KACpEtL,KAAKwL,eAETvJ,EAAS/B,UAAUsH,gBAAkB,WAYjC,IAAK,GAXDiE,GAAazL,KAAKsC,SAAS3B,OAC3B+K,KACAC,GACAb,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACXpF,WAAW,EACX0D,aAAa,GAERxI,EAAI,EAAGA,EAAIyK,EAAYzK,IACxBwE,oBAAkBxF,KAAKyE,aAAazD,IACpC0K,EAAe1K,GAAK2K,EAGpBD,EAAe1K,GAAKhB,KAAKyE,aAAazD,EAG9ChB,MAAK4L,eAAgBnH,aAAgBiH,IAAkB,IAE3DzJ,EAAS/B,UAAU2L,WAAa,SAAUlB,EAAWmB,GACjD,MAAQ9L,MAAKyC,QAAQkI,GAAWoB,cAAc,qBAA6BD,IAE/E7J,EAAS/B,UAAUwK,iBAAmB,SAAUsB,GAC5C,MAAOA,GAAUZ,MAAMY,EAAUC,YAAY,KAAO,IAExDhK,EAAS/B,UAAU4E,OAAS,SAAUoH,GAClCA,EAAMxF,YAAU1G,KAAKmC,SA5YnB,SA4YoCsE,eAAazG,KAAKmC,SA5YtD,UA8YNF,EAAS/B,UAAU4D,gBAAkB,SAAU3B,EAAS2I,EAAMxF,GAC1D,GAAIW,GAAqB,UAAbX,GAAyBtB,MAASmI,aAAWrB,KAAY/G,OAAUoI,aAAWrB,GAC1FsB,qBAAkBjK,EAAS8D,IAE/BhE,EAAS/B,UAAU2E,mBAAqB,WACpC,IAAK,GAAIK,GAAQ,EAAGA,EAAQlF,KAAKsC,SAAS3B,OAAQuE,IACzB,eAArBlF,KAAKwE,YAA+BxE,KAAK8C,gBAAgBuJ,KAAKrM,KAAKsC,SAAS4C,GAAOoH,wBAAwBtI,OACvGhE,KAAK8C,gBAAgBuJ,KAAKrM,KAAKsC,SAAS4C,GAAOoH,wBAAwBvI,SAGnF9B,EAAS/B,UAAU+D,YAAc,SAAU9B,EAASoK,GAC5CA,GACA7F,YAAUvE,GAAUoK,EAAUC,MAAMD,EAAU/D,QAAQ,MAAQ,EAAI,IAAM,OAGhFvG,EAAS/B,UAAUuM,YAAc,SAAUnM,GACvCoG,YAAUgG,SAAO,IAAMnL,EAAYjB,IAjaxB,mBAmaf2B,EAAS/B,UAAUyM,YAAc,SAAUrM,IAClCkF,oBAAkBxF,KAAKoI,eAAiBpI,KAAKoI,aAAa3E,UAAUC,SArZ5D,iBAsZR8B,oBAAkBxF,KAAKuI,WAAavI,KAAKuI,SAAS9E,UAAUC,SAtZpD,gBAuZT+C,eAAaiG,SAAO,IAAMnL,EAAYjB,IAta/B,mBAyaf2B,EAAS/B,UAAU0F,eAAiB,SAAUV,EAAOS,GACjD,GAAIgF,GACA3J,EAAIkE,CACRyF,GAAazF,IAAWlF,KAAKyC,QAAe,OAAKyC,EAAQ,EAAKA,EAC9DuC,eAAaO,OAAOhI,KAAKyC,QAAQkI,GAAY,YAAa3K,KAAK4M,aAC3DjH,GACA8B,eAAatB,IAAInG,KAAKyC,QAAQkI,GAAY,YAAa3K,KAAK4M,YAAa5M,MACrEA,KAAK6M,gBACL7M,KAAK2M,YAAY3M,KAAKyC,QAAQkI,IAC9BlE,eAAaiG,SAAO,IAAMnL,EAAYvB,KAAKyC,QAAQkI,KAlbhD,kBAmbH3K,KAAKyC,QAAQkI,GAAWlH,UAAU0C,IAtb9B,yBAubHjB,IAAWlF,KAAKyC,QAAe,OAAIzC,KAAKsC,SAAS4C,GAAOzB,UAAU0C,IAra9D,eAsaDnG,KAAKsC,SAASqI,GAAWlH,UAAU0C,IAtalC,eAuaLnG,KAAK8M,qBAAqB9L,MAI9BhB,KAAK8M,qBAAqB9L,GAC1BhB,KAAKyM,YAAYzM,KAAKyC,QAAQkI,IAC9B3K,KAAKyC,QAAQkI,GAAWlH,UAAUuE,OA/b1B,yBAgcP9C,IAAWlF,KAAKyC,QAAe,OAAIzC,KAAKsC,SAAS4C,GAAOzB,UAAUuE,OA9a1D,eA+aLhI,KAAKsC,SAASqI,GAAWlH,UAAUuE,OA/a9B,iBAkbjB/F,EAAS/B,UAAU2F,uBAAyB,SAAUX,GAClD,GAAI6H,GACAC,EACArC,CACJA,GAAYzF,IAAWlF,KAAKyC,eAAmByC,EAAQ,EAAKA,EAC5D6H,EAA+B,eAArB/M,KAAKwE,YAAgCxE,KAAK6L,WAAWlB,EAAWnJ,GAAcxB,KAAK6L,WAAWlB,EAAWlJ,GACnHuL,EAA+B,eAArBhN,KAAKwE,YAAgCxE,KAAK6L,WAAWlB,EAhcrD,iBAgc+E3K,KAAK6L,WAAWlB,EAAWjJ,GACpH1B,KAAKiN,gBAAgBjN,KAAKsC,SAAS4C,GAAQA,GAC3ClF,KAAKkN,oBAAoBvC,EAAWqC,EAAQD,IAEhD9K,EAAS/B,UAAUiN,cAAgB,SAAUC,EAAUC,GACnD,MAAOC,aAAU,IAAMD,EAAOrN,KAAKyC,QAAQ2K,IAAW,IAE1DnL,EAAS/B,UAAUqN,kBAAoB,SAAUrI,EAAOiI,EAAeK,GACnE,IAAKhI,oBAAkBN,GAAQ,CAC3B,GACIuI,GAAgBvI,IAAUlF,KAAKyC,QAAQ9B,OACvCyM,EAAWK,EAAevI,EAAQ,EAAIA,IACrCuI,GAAgBzN,KAAKsC,SAAS4C,EAAQ,GAAGzB,UAAUC,SAtchD,gBAscqF,IAAVwB,EACnElF,KAAKmN,cAAcC,EAAW,EAAGI,GAGjC,EAAiBxN,KAAKmN,cAAcC,EAAUI,GAAgBxN,KAAKmN,cAAcC,EAAUD,IAEjGO,UAGlBzL,EAAS/B,UAAU8E,YAAc,SAAUE,GACvC,GAAI9C,GAAQpC,IAEZ,IADAA,KAAKqD,YAAa,EACbmC,oBAAkBN,GA6ClB,CACD,IAASyI,EAAI,EAAGA,EAAI3N,KAAKsC,SAAS3B,OAAQgN,KACjCnI,oBAAkBxF,KAAKyE,aAAakJ,KAAO3N,KAAKyE,aAAakJ,GAAG7H,WACjE9F,KAAKuN,kBAAkBI,EAAG3N,KAAK4N,eAAeT,cAAenN,KAAK4N,eAAeJ,aAGzF,KAAK,GAAIG,GAAI3N,KAAKsC,SAAS3B,OAAS,EAAGgN,GAAK,EAAGA,IAC3C,IAAKnI,oBAAkBxF,KAAKyE,aAAakJ,KAAO3N,KAAKyE,aAAakJ,GAAG7H,YAChE9F,KAAKsC,SAASqL,GAAGlK,UAAUC,SAvgB5B,eAugBqD,CACrD,GAAIyJ,GAAqC,eAArBnN,KAAKwE,YA9gB3B,gBA8gBwE9C,CAC5D,KAANiM,IACIE,EAAY7N,KAAKmN,cAAcQ,EAAI,EAAGR,IAChCO,QAET1N,KAAKuI,SAAS9E,UAAUC,SA7gB7B,iBA8gBQmK,EAAY7N,KAAKmN,cAAcQ,EAAI,EAAGR,IAChCO,aA7DK,CAC3B1N,KAAKoD,cAAe,CACpB,IAAIyK,OAAY,GACZJ,EAAgBvI,IAAUlF,KAAKyC,QAAQ9B,OACvCyM,EAAWK,EAAevI,EAAQ,EAAIA,EAQtC4I,GAAYxN,OANZuN,GADCJ,GAAgBzN,KAAKsC,SAAS4C,EAAQ,GAAGzB,UAAUC,SAvdhD,gBAudqF,IAAVwB,EACnElF,KAAKmN,cAAcC,EAAW,EAAGpN,KAAK4N,eAAeJ,cAGrD,EAAiBxN,KAAKmN,cAAcC,EAAUpN,KAAK4N,eAAeJ,cAC1ExN,KAAKmN,cAAcC,EAAUpN,KAAK4N,eAAeT,gBAGrDY,EAAY/N,KAAKgO,aAAaF,EAClC9N,MAAKqK,QAAQ,iBAAkB0D,EAAW,SAAUE,GAChD,IAAKA,EAAmB/D,OAAQ,CAC5B,GAAIgE,KACJA,GAAe,GAAKhJ,CAEpB,KAAK,GADDG,GAAI,EACCrE,EAAI,EAAGA,EAAIoB,EAAME,SAAS3B,OAAQK,IACnCoB,EAAME,SAAStB,GAAGyC,UAAUC,SAtepC,iBAueQwK,EAAe7I,GAAKrE,EACpBqE,IAGRjD,GAAMmL,kBAAkBrI,EAAO9C,EAAMwL,eAAeT,cAAe/K,EAAMwL,eAAeJ,cACxFU,EAAiBA,EAAeC,OAChC/L,EAAMmL,kBAAkBrI,EAAO9C,EAAMwL,eAAeT,cAAe/K,EAAMwL,eAAeJ,aACxF,KAASxM,EAAI,EAAGA,EAAIkN,EAAevN,OAAQK,IAClCoB,EAAME,SAAS4L,EAAelN,IAAIyC,UAAUC,SA/erD,gBAgfQtB,EAAMmL,kBAAkBW,EAAelN,GAAIoB,EAAMwL,eAAeT,cAAe/K,EAAMwL,eAAeJ,aAG5G,KAASxM,EAAIkN,EAAevN,OAAQK,EAAI,EAAGA,IACvC,IAAKoB,EAAME,SAAS4L,EAAelN,EAAI,IAAIyC,UAAUC,SApfzD,eAofkF,CAC1E,GAAIoI,GAAc1J,EAAMwL,cACxBxL,GAAMmL,kBAAkBW,EAAelN,EAAI,GAAI8K,EAAYqB,cAAerB,EAAY0B,cAG9F,GAAIY,GAAoBhM,EAAMiM,YAAYP,EAC1C1L,GAAMiI,QAAQ,YAAa+D,GAC3BhM,EAAMgB,cAAe,KAyBjCpD,KAAKqD,YAAa,GAEtBpB,EAAS/B,UAAU0N,aAAe,WAE9B,MADA5N,MAAKsO,oBACInB,cAAqC,eAArBnN,KAAKwE,YAAgChD,EAAaC,EACvE+L,aAAoC,aAArBxN,KAAKwE,YAA8B9C,EA/hB5C,kBAkiBdO,EAAS/B,UAAU6F,kBAAoB,SAAUb,GACxCM,oBAAkBxF,KAAKyE,aAAaS,KAAYM,oBAAkBxF,KAAKyE,aAAaS,GAAOY,aACzF9F,KAAKsC,SAAS4C,GAAOzB,UAAUC,SA9hB1B,gBA+hBR1D,KAAKuN,kBAAkBrI,EAAOlF,KAAK4N,eAAeJ,aAAcxN,KAAK4N,eAAeT,gBAG5FlL,EAAS/B,UAAUiE,UAAY,SAAUC,GACrCA,EAAUqC,eAAazG,KAAKmC,SA9iBrB,cA8iB2CuE,YAAU1G,KAAKmC,SA9iB1D,eAgjBXF,EAAS/B,UAAUmE,iBAAmB,SAAUyG,GAG5C,IAAK,GAFDyD,GAAY/I,oBAAkBsF,GAAQ,OAASA,EAAO,KACtD0D,EAAiC,eAArBxO,KAAKwE,YA5jBX,yBACA,uBA4jBDU,EAAQ,EAAGA,EAAQlF,KAAKyC,QAAQ9B,OAAQuE,IAAS,CACtD,GAAIuJ,GAAWnB,YAAU,IAAMkB,EAAWxO,KAAKmC,SAAS+C,GACpDwJ,EAAYpB,YAAU,IAAM/L,EAAYkN,GAAU,EAC7B,gBAArBzO,KAAKwE,aACLiK,EAASxI,MAAMjC,MAAQuK,EAClB/I,oBAAkBkJ,KACnBA,EAAUzI,MAAMjC,MAAQuK,KAI5BE,EAASxI,MAAMlC,OAASwK,EACnB/I,oBAAkBkJ,KACnBA,EAAUzI,MAAMlC,OAASwK,MAKzCtM,EAAS/B,UAAUqE,kBAAoB,SAAUC,GAC7C,GAAImK,GAA6B,aAAhBnK,CACjBxE,MAAKmC,QAAQsB,UAAUuE,OAAO2G,EAtlBhB,wBACF,uBAslBZ3O,KAAKmC,QAAQsB,UAAU0C,IAAIwI,EAtlBf,sBADE,wBAwlBd,KAASzJ,EAAQ,EAAGA,EAAQlF,KAAKsC,SAAS3B,OAAQuE,IAC9ClF,KAAKsC,SAAS4C,GAAOzB,UAAUuE,OAAO2G,EAAavN,EAAeC,GAClErB,KAAKsC,SAAS4C,GAAOzB,UAAU0C,IAAIwI,EAAatN,EAAeD,EAEnE,KAAK,GAAI8D,GAAQ,EAAGA,EAAQlF,KAAKyC,QAAQ9B,OAAQuE,IAC7CqG,SAAOvL,KAAKyC,QAAQyC,GAExBlF,MAAKyC,WACLzC,KAAK4E,aAAa5E,KAAKmC,UAE3BF,EAAS/B,UAAU0O,eAAiB,SAAUC,EAAYC,GAEtD,MADc9O,MAAK+O,aAAaF,EAAWrI,cAAcoE,UAAUkE,IAGvE7M,EAAS/B,UAAU6O,aAAe,SAAUC,GAExC,IAAK,GADDC,MACKjO,EAAI,EAAGA,EAAIgO,EAAWrO,OAAQK,IAC/BgO,EAAWhO,GAAGyC,UAAUC,SAAS,WACjCuL,EAAS5C,KAAK2C,EAAWhO,GAGjC,OAAOiO,IAEXhN,EAAS/B,UAAUgP,YAAc,SAAUL,EAAYM,GACnD,MAAOnP,MAAK4O,eAAeC,GAAcM,EAAQ,OAErDlN,EAAS/B,UAAUkP,YAAc,SAAUP,EAAYM,GACnD,MAAOnP,MAAK4O,eAAeC,GAAeM,EAAQ,GAAK,EAAK,IAEhElN,EAAS/B,UAAUmP,iBAAmB,SAAUR,GAC5C,GAAIS,GAAgBtP,KAAKuP,cAAc,MACvC7I,aAAU4I,IAAiB/N,EArmBrB,WAsmBN,IAAIgN,GAAY/I,oBAAkBxF,KAAKsE,eAAiB,MAAQtE,KAAKsE,cAAgB,IAChE,gBAArBtE,KAAKwE,YAAgC8K,EAAcrJ,MAAMjC,MAAQuK,EAAae,EAAcrJ,MAAMlC,OAASwK,EAC3GM,EAAWW,YAAYF,IAE3BrN,EAAS/B,UAAUoH,UAAY,SAAUhH,GACxBN,KAAK+D,MAElB,OADiC,KAAxBzD,EAAO2F,MAAMlC,QAAiC,SAAhB/D,KAAK+D,OAAoBzD,EAAO2F,MAAMlC,OAAS/D,KAAK+D,QAG/F9B,EAAS/B,UAAUqH,SAAW,SAAUjH,GACxBN,KAAKgE,KAEjB,OAD+B,KAAvB1D,EAAO2F,MAAMjC,OAA+B,SAAfhE,KAAKgE,MAAmB1D,EAAO2F,MAAMjC,MAAQhE,KAAKgE,OAG3F/B,EAAS/B,UAAUmH,aAAe,SAAUtD,EAAQC,GAChDoI,oBAAkBpM,KAAKmC,SAAW4B,OAAUA,EAAQC,MAASA,KAEjE/B,EAAS/B,UAAUgN,oBAAsB,SAAUhI,EAAO8H,EAAQD,GACzDvH,oBAAkBxF,KAAKyE,aAAaS,KAChCM,oBAAkBxF,KAAKyE,aAAaS,GAAOsE,eAC5CxJ,KAAKyE,aAAaS,GAAOsE,YAAc/C,eAAasG,IAAUpL,IAAc+E,YAAUqG,IAAUpL,IAC3F6D,oBAAkBxF,KAAKyE,aAAaS,EAAQ,MAC7ClF,KAAKyE,aAAaS,EAAQ,GAAGsE,YAAc/C,eAAauG,IAAUrL,IAAc+E,YAAUsG,IAAUrL,KAEnG6D,oBAAkBxF,KAAKyE,aAAaS,EAAQ,KACxClF,KAAKyE,aAAaS,EAAQ,iBAC3BlF,KAAKyE,aAAaS,EAAQ,GAAGsE,YAAc/C,eAAauG,IAAUrL,IAAc+E,YAAUsG,IAAUrL,OAMxHM,EAAS/B,UAAUuP,gBAAkB,SAAUzO,GAC3C,GAAI0O,GAAY1P,KAAKuP,cAAc,MACnCvP,MAAKyC,QAAQ4J,KAAKqD,EAClB,IAAI1C,GAAShN,KAAKuP,cAAc,UAC5BxC,EAAS/M,KAAKuP,cAAc,SAChCvC,GAAO2C,aAAa,WAAY,MAChC5C,EAAO4C,aAAa,WAAY,MAChC3C,EAAO2C,aAAa,aAAc,qBAClC5C,EAAO4C,aAAa,aAAc,oBAClC,IAAI7E,GACA8E,CAiCJ,OAhCA9E,GAAOtF,oBAAkBxF,KAAKsE,eAAiB,MAAQtE,KAAKsE,cAAgB,KACnD,eAArBtE,KAAKwE,aACLxE,KAAK6P,UAAYrO,EACjBxB,KAAK8P,WAjpBC,gBAkpBNpJ,YAAUqG,IAnpBD,mBAmpB2BvL,EAAYG,IAChD+E,YAAUsG,IAppBD,mBACH,gBAmpB2CrL,IACjD+E,YAAUgJ,IApqBN,cACE,2BAoqBNA,EAAUzJ,MAAMjC,MAAQ8G,IAGxBpE,YAAUsG,IAzpBD,mBAypB2BtL,EAAYC,IAChD+E,YAAUqG,IA1pBD,mBA0pB2BtL,EAAUE,IAC9C+E,YAAUgJ,IA1qBN,cAEE,yBAyqBN1P,KAAK6P,UAAYpO,EACjBzB,KAAK8P,WAAapO,EAClBgO,EAAUzJ,MAAMlC,OAAS+G,GAE7B9K,KAAK+P,gBAAgBL,GACrBA,EAAUF,YAAYzC,GACtB/M,KAAKqP,iBAAiBK,GACtBA,EAAUF,YAAYxC,GACtBhN,KAAKkN,oBAAoBlM,EAAGgM,EAAQD,GACpC2C,EAAUC,aAAa,WAAY,KACnCC,EAAQ5P,KACR0P,EAAUM,iBAAiB,QAAS,WAChCN,EAAUjM,UAAU0C,IA/qBT,sBAgrBXyJ,EAAM7H,iBAAmB2H,EACzBE,EAAMK,mBAEVP,EAAUM,iBAAiB,OAAQ,WAC/BN,EAAUjM,UAAUuE,OAprBT,wBAsrBR0H,GAEXzN,EAAS/B,UAAU4M,qBAAuB,SAAU5H,GAChDlF,KAAKiQ,iBACLjQ,KAAK6M,cAAgB7M,KAAKsC,SAAS4C,GAAOzB,UAAU0C,IA1qBvC,eA0qB6DnG,KAAKsC,SAAS4C,GAAOzB,UAAUuE,OA1qB5F,gBA4qBjB/F,EAAS/B,UAAU0E,aAAe,SAAUtE,GAIxC,IAAK,GADDoP,GAFAjE,EAAazL,KAAKsC,SAAS3B,OAC3BuP,EAAY5P,EAAOsK,SAEd5J,EAAI,EAAGA,EAAIyK,EAAYzK,IAC5B,GAAIA,EAAIyK,EAAa,EASjB,GARAiE,EAAY1P,KAAKyP,gBAAgBzO,GACjCoL,oBAAkBsD,GAAaP,MAAc,EAAJnO,EAAS,IAClDhB,KAAKwC,eAAe6J,KAAU,EAAJrL,EAAS,GACnCkP,EAAUlP,GAAGmP,WAAWX,YAAYE,GACpC1P,KAAK+H,iBAAmB2H,EACxBA,EAAUC,aAAa,OAAQ,aAC/BD,EAAUC,aAAa,mBAAoB3P,KAAKwE,YAAY4L,eAC5DpQ,KAAKqQ,kBACDrQ,KAAK6M,cAAe,CACpBpF,eAAatB,IAAIuJ,EAAW,YAAa1P,KAAK4M,YAAa5M,KAC3D,IAAIsQ,GAAmC,SAAtB1J,UAAQC,KAAKC,KAAmB,cAAgB,YACjEW,gBAAatB,IAAIuJ,EAAWY,EAAWtQ,KAAK4M,YAAa5M,MACzD0P,EAAUjM,UAAU0C,IAhtBpB,yBAitBAnG,KAAK8M,qBAAqB9L,OAG1B0F,aAAUgG,SAAO,IAAMnL,EAAYmO,IAjtBpC,sBAqtBCA,IACAhJ,YAAUgJ,GAtsBf,cAwsBKjE,EAAa,GACbzL,KAAK8M,qBAAqB9L,EAItC,IAA0B,SAAtB4F,UAAQC,KAAKC,KAEb,IAAK,GADDyJ,GAASvQ,KAAKmC,QAAQqO,iBAAiB,iCAClCxP,EAAI,EAAGA,EAAIuP,EAAO5P,OAAQK,IAAK,CACpC,GAAIyP,GAAUjL,oBAAkBxF,KAAKsE,eAAiB,EAAItE,KAAKsE,aAC/DiM,GAAOvP,GAAGiF,MAAMyK,YAAcD,EAAU,EAAI,KAC5CF,EAAOvP,GAAGiF,MAAM0K,aAAeF,EAAU,EAAI,OAIzDxO,EAAS/B,UAAU2M,YAAc,WAC7B,GAAI3B,IAAY,CAQhB,SAPM1F,oBAAkBxF,KAAKyE,aAAazE,KAAK4Q,0BAC3C5Q,KAAKyE,aAAazE,KAAK4Q,wBAAwB1F,YAC9C1F,oBAAkBxF,KAAKyE,aAAazE,KAAK6Q,sBAC1C7Q,KAAKyE,aAAazE,KAAK6Q,oBAAoB3F,WAC3C1F,oBAAkBxF,KAAKyE,aAAazE,KAAK6Q,wBACzC3F,GAAY,GAETA,GAEXjJ,EAAS/B,UAAU6P,gBAAkB,SAAUL,GAC3C,GACIoB,GACAC,EAFA3O,EAAQpC,IAGZ0P,GAAUM,iBAAiB,aAAc,WAErCc,EAAQE,WAAW,WAActK,YAAUgJ,IAzvBjC,uBAyvBoEtN,EAAMc,cAExFwM,EAAUM,iBAAiB,aAAc,WACrCiB,aAAaH,GACbrK,eAAaiJ,IA7vBH,wBA+vBdA,EAAUM,iBAAiB,WAAY,WACnCiB,aAAaF,KAEjBrB,EAAUM,iBAAiB,YAAa,WAEpCe,EAAeC,WAAW,WAActK,YAAUgJ,IApwBxC,uBAowB2EtN,EAAMc,eAGnGjB,EAAS/B,UAAUgR,aAAe,SAAUpJ,GACxC,MAAQA,GAAEU,QAAQ,UAAY,EAAK,QAAU,SAEjDvG,EAAS/B,UAAUiR,uBAAyB,SAAU7Q,GAClDN,KAAK+H,iBAAmB/H,KAAKoR,YAAY9Q,GAAUA,EAAOkG,cAAgBlG,GAE9E2B,EAAS/B,UAAUkR,YAAc,SAAU9Q,GACvC,OAASA,EAAOmD,UAAUC,SAASnC,KAAejB,EAAOmD,UAAUC,SArxB3D,gBAuxBZzB,EAAS/B,UAAUmR,aAAe,SAAUvJ,GACxC,GAAIwJ,IAAU,CAKd,QAJkC,UAA9BtR,KAAKkR,aAAapJ,EAAEiB,QAAuBvD,oBAAkBsC,EAAEyJ,cAC1B,UAArCvR,KAAKkR,aAAapJ,EAAEyJ,gBACpBD,GAAU,GAEPA,GAEXrP,EAAS/B,UAAUsR,qBAAuB,SAAU1J,EAAGiB,GACnD,GAAI/I,KAAKqR,aAAavJ,GAClB9H,KAAKyR,mBAAoBC,EAAG5J,EAAE6J,MAAOC,EAAG9J,EAAE+J,OAAS9I,OAElD,CACD,GAAI+I,GAAkC,SAAtBlL,UAAQC,KAAKC,KAAkBgB,EAAEiK,QAAQ,GAAKjK,CAC9D9H,MAAKyR,mBAAoBC,EAAGI,EAAUH,MAAOC,EAAGE,EAAUD,OAAS9I,KAG3E9G,EAAS/B,UAAUuR,kBAAoB,SAAUO,EAAajJ,GAC7C,aAATA,EACA/I,KAAK0C,oBAAsBsP,EAG3BhS,KAAK2C,mBAAqBqP,GAGlC/P,EAAS/B,UAAU+R,iBAAmB,WAElC,IAAK,GADDC,GAAYlS,KAAKsC,SAAS3B,OACrBK,EAAI,EAAGA,EAAIkR,EAAWlR,IACvBwE,oBAAkBxF,KAAKyE,aAAazD,GAAG8J,OACvC9K,KAAKsC,SAAStB,GAAGyC,UAAUuE,OAAO1G,GAElC4Q,EAAY,IAAMlR,GACIhB,KAAKmC,QAAQqO,iBAAiB,IAAMlP,GAAaX,SAC/CuR,GACpBzL,eAAazG,KAAKsC,SAAStB,IAAKM,IAKhDW,EAAS/B,UAAUiS,iBAAmB,WAClCC,OAAOpC,iBAAiB,SAAUhQ,KAAKiS,iBAAiBI,KAAKrS,OAC7DyH,eAAatB,IAAIuB,SAAU,YAAa1H,KAAKsS,YAAatS,MAC1DyH,eAAatB,IAAIuB,SAAU,UAAW1H,KAAKuS,UAAWvS,KACtD,IAAIwS,GAAwC,SAAtB5L,UAAQC,KAAKC,KAAmB,cAAgB,YAClE2L,EAAuC,SAAtB7L,UAAQC,KAAKC,KAAmB,YAAc,UACnEW,gBAAatB,IAAIuB,SAAU8K,EAAgBxS,KAAKsS,YAAatS,MAC7DyH,eAAatB,IAAIuB,SAAU+K,EAAezS,KAAKuS,UAAWvS,OAE9DiC,EAAS/B,UAAUwS,mBAAqB,WACpCN,OAAOO,oBAAoB,SAAU3S,KAAKiS,iBAAiBI,KAAKrS,MAChE,IAAIwS,GAAwC,SAAtB5L,UAAQC,KAAKC,KAAmB,cAAgB,YAClE2L,EAAuC,SAAtB7L,UAAQC,KAAKC,KAAmB,YAAc,UACnEW,gBAAaO,OAAON,SAAU,YAAa1H,KAAKsS,aAChD7K,eAAaO,OAAON,SAAU,UAAW1H,KAAKuS,WAC9C9K,eAAaO,OAAON,SAAU8K,EAAgBxS,KAAKsS,aACnD7K,eAAaO,OAAON,SAAU+K,EAAezS,KAAKuS,YAEtDtQ,EAAS/B,UAAUmQ,gBAAkB,WACjC5I,eAAatB,IAAInG,KAAK+H,iBAAkB,mBAAoB/H,KAAK4S,aAAc5S,OAEnFiC,EAAS/B,UAAU0S,aAAe,SAAU9K,GACxC,IAAKA,EAAExH,OAAOmD,UAAUC,SAr0BX,oBAq0BqC,CAC9C,GAAImP,GAAYvF,YAAU,IAAMpM,EAAO,oCACnC2R,GAAUlS,OAAS,GACnB8F,cAAYoM,EAh1BN,qBAk1BV/K,EAAExH,OAAOmD,UAAU0C,IAl1BT,qBAo1Bd,GAAI2M,GAAOhL,EAAExH,QACTwS,EAAKrP,UAAUC,SAASlC,IAAesR,EAAKrP,UAAUC,SAASjC,KAC/DzB,KAAK+S,eAAejL,IAEpBgL,EAAKrP,UAAUC,SA/0BT,kBA+0BkCoP,EAAKrP,UAAUC,SAAShC,KAChE1B,KAAKgT,aAAalL,IAG1B7F,EAAS/B,UAAU8S,aAAe,SAAUlL,GACxC,GAAI1F,GAAQpC,IACZA,MAAKiT,gBAAgBnL,EACrB,IAAIiG,GAAY/N,KAAKgO,aAAalG,EAC9B9H,MAAKqD,WACLrD,KAAKqK,QAAQ,eAAgB0D,EAAW,SAAUmF,GACzCA,EAAiBhJ,QAClB9H,EAAM+Q,WAAWrL,EAErB,IAAIsL,GAAkBhR,EAAMiM,YAAYvG,EACxC1F,GAAMiI,QAAQ,WAAY+I,KAI9BpT,KAAKmT,WAAWrL,IAGxB7F,EAAS/B,UAAUiT,WAAa,SAAUrL,GACtC,GAAIuL,GAAgBrT,KAAKmC,QAAQqO,iBAAiB,gBAAqB7P,OACnE2S,GAAetT,KAAKoI,aAAa3E,UAAUC,SAh2BnC,gBAi2BR1D,KAAKoI,aAAa3E,UAAUC,SAASpC,KAAiBtB,KAAKuI,SAAS9E,UAAUC,SAj2BtE,iBAk2BP1D,KAAKuI,SAAS9E,UAAUC,SAn2BnB,eAm2B4C1D,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAASvC,KACrGnB,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAASpC,MAAkB+R,IAAkBrT,KAAKsC,SAAS3B,OAAS,GAChH6S,GAp2BQ,cACF,gBAo2BLxT,MAAKoI,aAAa3E,UAAUC,SAr2BrB,gBA42BR+C,eAAazG,KAAKoI,cAAeoL,GACjC/M,eAAazG,KAAKuI,UA92BZ,gBAu2BN9B,eAAazG,KAAKuI,UAv2BZ,cAw2BN9B,eAAazG,KAAKoI,cAAeoL,GACjC9M,YAAU1G,KAAKoI,cAz2BT,cA02BN1B,YAAU1G,KAAKuI,UAAWiL,IAM9BxT,KAAKyT,oBAAoB3L,GACzB9H,KAAKoI,aAAauH,aAAa,gBAAiB,QAChD3P,KAAKuI,SAASoH,aAAa,gBAAiB,SAC5C3P,KAAK0T,eAAe1T,KAAK2T,oBACrBL,IACAtT,KAAKoI,aAAa3E,UAAUuE,OAr3BtB,cAs3BNhI,KAAKoI,aAAanC,MAAM2N,SAAW,KAG3C3R,EAAS/B,UAAUyT,iBAAmB,WAElC,IAAK,GADDE,IAAa,EACR7S,EAAI,EAAGA,EAAIhB,KAAKsC,SAAS3B,OAAQK,KACjChB,KAAKsC,SAAStB,GAAGyC,UAAUC,SA33BxB,gBA23BmDmQ,IAEnDA,IADA7T,KAAKsC,SAAStB,GAAGyC,UAAUC,SAASpC,GAQhD,OAAOuS,IAEX5R,EAAS/B,UAAUwT,eAAiB,SAAUI,GAE1C,IAAK,GADDC,GAAQ/T,KAAKsC,SACRtB,EAAI,EAAGA,EAAI+S,EAAMpT,OAAQK,IAC1B+S,EAAM/S,GAAGyC,UAAUC,SA14BjB,cA24BFqQ,EAAM/S,GAAGiF,MAAM2N,SAAW,IAErBG,EAAM/S,GAAGyC,UAAUC,SA54BpB,eA64BJqQ,EAAM/S,GAAGiF,MAAM2N,SAAW,IAG1BG,EAAM/S,GAAGiF,MAAM2N,SAAW,GAE1BE,IAAW9T,KAAKuI,SAAS9E,UAAUC,SAl5B/B,iBAm5BJ1D,KAAKuI,SAAStC,MAAM2N,SAAW,MAI3C3R,EAAS/B,UAAU8T,kBAAoB,SAAUC,EAAWnI,GACxDpF,YAAUgG,SAAO,IAAMZ,EAAamI,IAAatS,IAErDM,EAAS/B,UAAUgU,kBAAoB,SAAUD,EAAWnI,GACxDrF,eAAaiG,SAAO,IAAMZ,EAAamI,IAAatS,IAExDM,EAAS/B,UAAUiU,sBAAwB,SAAUrM,GACjD9H,KAAKsO,mBACDtO,KAAKoI,aAAa3E,UAAUC,SA/5BpB,iBA+5BgD1D,KAAKuI,SAAS9E,UAAUC,SA/5BxE,gBAg6BRgD,YAAUoB,EAAExH,QAASqB,GACjB3B,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACtCxJ,KAAKqU,qBAETrU,KAAK4F,eAAe5F,KAAKsU,iBAAiB,IACtCtU,KAAKoI,aAAa3E,UAAUC,SAr6BxB,gBAq6BoD1D,KAAKuI,SAAS9E,UAAUC,SAr6B5E,gBAs6BH1D,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACvCxJ,KAAKgU,kBAAkBhU,KAAKuU,QAASvU,KAAK8P,YAE1C9P,KAAKoI,aAAaoM,yBAA2BxU,KAAKoI,aAAaoM,uBAAuB/Q,UAAUC,SAz6B5F,iBA06BA1D,KAAKoI,aAAa3E,UAAUC,SA16B5B,gBA06BuD1D,KAAKyE,aAAazE,KAAKoU,eAAe5K,YAC7FxJ,KAAKkU,kBAAkBlU,KAAKuU,QAASvU,KAAK6P,WAEpC7P,KAAKyE,aAAazE,KAAKoU,eAAe5K,aAC5CxJ,KAAKgU,kBAAkBhU,KAAKuU,QAASvU,KAAK6P,YAG7CrK,oBAAkBxF,KAAKuU,WACxBvU,KAAK4F,eAAe5F,KAAKsU,gBAAkB,GAAG,GAC9CtU,KAAKgU,kBAAkBhU,KAAKuU,QAASvU,KAAKqN,QAEzCrN,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACvCxJ,KAAKgU,kBAAkBhU,KAAK+H,iBAAkB/H,KAAK8P,aAGjD9P,KAAKyU,cAAcC,mBAAsB1U,KAAKyU,cAAcE,mBAClE3U,KAAK4F,eAAe5F,KAAKsU,iBAAiB,GACrCtU,KAAKyU,cAAcG,gBAAgBnR,UAAUC,SAAS,gBACvD1D,KAAK4F,eAAe5F,KAAKsU,gBAAkB,GAAG,GAE7CtU,KAAKyE,aAAazE,KAAKsU,iBAAiB9K,aACzC9C,YAAUoB,EAAExH,QAASqB,GAErB3B,KAAKoI,cAAuC,IAAvBpI,KAAKoU,eAAwBpU,KAAKyE,aAAazE,KAAKoU,eAA2B,aACpGpU,KAAKkU,kBAAkBlU,KAAK+H,iBAAkB/H,KAAK6P,WAEnD7P,KAAKuI,UAAYvI,KAAK6U,gBAAkB7U,KAAKsC,SAAS3B,OAAS,GAAMX,KAAKyE,aAAazE,KAAK6U,eAA2B,aACvH7U,KAAKkU,kBAAkBlU,KAAK8U,WAAW9U,KAAK6U,eAAgB7U,KAAK8P,aAE/D9P,KAAKoI,aAAa3E,UAAUC,SAv8B1B,gBAu8BsD1D,KAAKyE,aAAazE,KAAK6U,eAAerL,aAChGxJ,KAAKkU,kBAAkBlU,KAAK+H,iBAAkB/H,KAAK8P,YAElDtK,oBAAkBxF,KAAK+U,WACpB/U,KAAKuI,SAASgL,oBAAuBvT,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAAS,gBACzF1D,KAAKyE,aAAazE,KAAK6U,cAAgB,GAAGrL,cACxCxJ,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAAS,gBAClD1D,KAAKyE,aAAazE,KAAK6U,eAAerL,YAC1CxJ,KAAKkU,kBAAkBlU,KAAK+U,QAAS/U,KAAK6P,YAEpC7P,KAAKyE,aAAazE,KAAKyU,cAAcI,cAAgB,GAAGrL,aAC9DxJ,KAAKyE,aAAazE,KAAKsU,kBACvBtU,KAAKgU,kBAAkBhU,KAAK+U,QAAS/U,KAAKqN,QAG5CrN,KAAK6U,gBAAkB7U,KAAKsC,SAAS3B,OAAS,IAAMX,KAAKuI,SAASgL,oBACnEvT,KAAKuI,SAAS9E,UAAUC,SAv9BrB,gBAu9BiD1D,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAv9B5F,gBAw9BA1D,KAAKyE,aAAazE,KAAK6U,cAAgB,GAAGrL,aAC9CxJ,KAAKgU,kBAAkBhU,KAAK+U,QAAS/U,KAAK8P,cAItD7N,EAAS/B,UAAU6S,eAAiB,SAAUjL,GAC1C,GAAI1F,GAAQpC,IACZA,MAAKiT,gBAAgBnL,EACrB,IAAIiG,GAAY/N,KAAKgO,aAAalG,EAC9B9H,MAAKoD,aACLpD,KAAKgV,aAAalN,GAGlB9H,KAAKqK,QAAQ,iBAAkB0D,EAAW,SAAUE,GAChD,IAAKA,EAAmB/D,OAAQ,CAC5B9H,EAAM4S,aAAalN,EACnB,IAAIsG,GAAoBhM,EAAMiM,YAAYvG,EAC1C1F,GAAMiI,QAAQ,YAAa+D,OAK3CnM,EAAS/B,UAAU8U,aAAe,SAAUlN,GACxC,GAAIuL,GAAgBrT,KAAKmC,QAAQqO,iBAAiB,gBAAqB7P,OACnE2S,EAActT,KAAKoI,aAAa3E,UAAUC,SAASpC,KAClDtB,KAAKoI,aAAa3E,UAAUC,SAj/BrB,iBAi/BiD1D,KAAKuI,SAAS9E,UAAUC,SAj/BzE,gBAk/BR1D,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAASvC,KACnDnB,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAASpC,KACpDtB,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SAp/BpC,kBAq/BN2P,IAAkBrT,KAAKsC,SAAS3B,OAAS,IAAQX,KAAKuI,SAAS9E,UAAUC,SAr/BnE,iBAs/BP1D,KAAKoI,aAAa3E,UAAUC,SAASpC,IAAgBtB,KAAKuI,SAAS9E,UAAUC,SAASpC,GACvFkS,GAv/BQ,cACF,gBAu/BNxT,MAAKuI,SAAS9E,UAAUC,SAx/BhB,gBAy/BR+C,eAAazG,KAAKoI,cA1/BZ,cA2/BN3B,eAAazG,KAAKuI,UAAWiL,KAG7B/M,eAAazG,KAAKoI,cA9/BZ,cA+/BN3B,eAAazG,KAAKuI,UAAWiL,GAC7B9M,YAAU1G,KAAKuI,UAhgCT,cAigCN7B,YAAU1G,KAAKoI,cAAeoL,IAElCxT,KAAKmU,sBAAsBrM,GAC3B9H,KAAKoI,aAAauH,aAAa,gBAAiB,SAChD3P,KAAKuI,SAASoH,aAAa,gBAAiB,QAC5C3P,KAAK0T,eAAe1T,KAAK2T,oBACrBL,IACAtT,KAAKuI,SAAS9E,UAAUuE,OAxgClB,cAygCNhI,KAAKuI,SAAStC,MAAM2N,SAAW,KAGvC3R,EAAS/B,UAAU8N,aAAe,SAAUlG,GAexC,MAdgBmN,eACZ9S,QAASnC,KAAKmC,QACd+G,MAAOpB,EACP5C,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,iBAChBmC,QAAQ,IAER/H,QAASnC,KAAKmC,QACd+G,MAAOpB,EACPoN,MAAOlV,KAAKoI,aAAcpI,KAAKuI,UAC/BrD,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,iBAChBmC,QAAQ,IAIhBjI,EAAS/B,UAAUoO,iBAAmB,WAClCtO,KAAKyU,eACDH,gBAAiBtU,KAAKsU,gBACtBa,oBAAqBnV,KAAKuI,SAAS9E,UAAUC,SAviCvC,iBAwiCN0R,oBAAqBpV,KAAKoI,aAAa3E,UAAUC,SAxiC3C,iBAyiCN2R,iBAAkBrV,KAAKoI,aAAa3E,UAAUC,SAliCxC,cAmiCNiR,iBAAkB3U,KAAKuI,SAAS9E,UAAUC,SAniCpC,cAoiCN4R,kBAAmBtV,KAAKuI,SAAS9E,UAAUC,SAniCnC,eAoiCRgR,kBAAmB1U,KAAKoI,aAAa3E,UAAUC,SApiCvC,eAqiCRmR,cAAe7U,KAAK6Q,mBACpBuD,cAAepU,KAAK4Q,uBACpBgE,gBAAiB5U,KAAKuI,SAASgL,mBAC/BgC,eAAgBvV,KAAKoI,aAAaoM,yBAG1CvS,EAAS/B,UAAUmU,mBAAqB,WACpC5N,eAAaiG,SAAO,IAAM1M,KAAKqN,MAAOrN,KAAK+H,mBAAoBpG,IAEnEM,EAAS/B,UAAUuT,oBAAsB,SAAU3L,GAC/C9H,KAAKsO,mBACL5H,YAAUoB,EAAExH,QAASqB,GAChB3B,KAAKyU,cAAcY,kBAAqBrV,KAAKyU,cAAca,kBAqCvDtV,KAAKyU,cAAcY,kBAAoBrV,KAAKyU,cAAca,oBAC/DtV,KAAK4F,eAAe5F,KAAKsU,iBAAiB,GAC1CtU,KAAK4F,eAAe5F,KAAKsU,gBAAkB,GAAG,GAC1CtU,KAAKyE,aAAazE,KAAK6U,eAAerL,aACtCxJ,KAAKqU,qBAEJ7O,oBAAkBxF,KAAK+U,UACxB/U,KAAKgU,kBAAkBhU,KAAK+U,QAAS/U,KAAKqN,OAE1CrN,KAAKuI,UAAYvI,KAAK6U,gBAAkB7U,KAAKsC,SAAS3B,OAAS,IAAOX,KAAKyE,aAAazE,KAAK6U,eAAerL,aAC5GxJ,KAAKyU,cAAca,mBACnBtV,KAAKgU,kBAAkBhU,KAAK+H,iBAAkB/H,KAAKqN,OAEjDrN,KAAK6U,gBAAkB7U,KAAKsC,SAAS3B,OAAS,GAAMX,KAAKuI,SAASgL,oBACpEvT,KAAKuI,SAAS9E,UAAUC,SApmCpB,iBAqmCH1D,KAAKuI,SAASgL,mBAAmB9P,UAAUC,SArmCxC,gBAsmCD1D,KAAKyE,aAAazE,KAAK6U,eAAerL,aACzCxJ,KAAKkU,kBAAkBlU,KAAK+U,QAAS/U,KAAK8P,cArD1C9P,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACtCxJ,KAAKqU,qBAELrU,KAAKyE,aAAazE,KAAK6U,eAAerL,aACtC/C,eAAaqB,EAAExH,QAASqB,GAE5B3B,KAAK4F,eAAe5F,KAAKsU,iBAAiB,GACrC9O,oBAAkBxF,KAAKuU,UACvBvU,KAAKyU,cAAcc,eAAe9R,UAAUC,SA1jCzC,gBA4kCA1D,KAAKoI,aAAaoM,wBAA0BxU,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACjFxJ,KAAKoI,aAAaoM,uBAAuB/Q,UAAUC,SA7kCpD,gBA8kCI1D,KAAKyE,aAAazE,KAAKoU,cAAgB,GAAG5K,aAC9CxJ,KAAKkU,kBAAkBlU,KAAKuU,QAASvU,KAAK8P,YAEzC9P,KAAKyE,aAAazE,KAAKsU,gBAAkB,GAAG9K,aAC7CxJ,KAAKgU,kBAAkBhU,KAAK+H,iBAAkB/H,KAAK8P,cAvBvD9P,KAAK4F,eAAe5F,KAAKsU,gBAAkB,GAAG,GAC1CtU,KAAKyE,aAAazE,KAAKoU,eAAe5K,aACtCxJ,KAAKkU,kBAAkBlU,KAAKuU,QAASvU,KAAK8P,YAEzC9P,KAAKyE,aAAazE,KAAKsU,gBAAkB,GAAG9K,YAOxCxJ,KAAKyE,aAAazE,KAAKsU,iBAAiB9K,cAC5CxJ,KAAKyE,aAAazE,KAAKsU,gBAAkB,GAAG9K,aAC7CxJ,KAAKgU,kBAAkBhU,KAAK+H,iBAAkB/H,KAAK8P,aARnD9P,KAAKgU,kBAAkBhU,KAAKuU,QAASvU,KAAKqN,OACtCrN,KAAKyE,aAAazE,KAAKsU,iBAAiB9K,cACvCxJ,KAAKyE,aAAazE,KAAKsU,gBAAkB,GAAG9K,aAC7CxJ,KAAKgU,kBAAkBhU,KAAK+H,iBAAkB/H,KAAK8P,gBAwCvE7N,EAAS/B,UAAUmO,YAAc,SAAUvG,GAavC,MAZgBmN,eACZ9S,QAASnC,KAAKmC,QACd+G,MAAOpB,EACP5C,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,mBAEhB5F,QAASnC,KAAKmC,QACd+G,MAAOpB,EACPoN,MAAOlV,KAAKoI,aAAcpI,KAAKuI,UAC/BrD,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,mBAIxB9F,EAAS/B,UAAUsV,aAAe,SAAU1N,GACxC9H,KAAKsU,gBAAkBtU,KAAKmJ,kBAAkBrB,EAAExH,OAAOkG,gBAE3DvE,EAAS/B,UAAUiJ,kBAAoB,SAAU7I,GAE7C,SADe8K,MAAM/I,KAAKrC,KAAKyC,SAClB+F,QAAQlI,IAEzB2B,EAAS/B,UAAU4U,WAAa,SAAUjG,GAEtC,MADc7O,MAAKyC,QAASoM,EAAa,IAG7C5M,EAAS/B,UAAUuV,WAAa,SAAU5G,GAEtC,MADc7O,MAAKyC,QAASoM,EAAa,IAG7C5M,EAAS/B,UAAUwV,WAAa,SAAUxQ,GACtClF,KAAKuU,QAAUvU,KAAK8U,WAAW5P,GAC/BlF,KAAK+U,QAAU/U,KAAKyV,WAAWvQ,IAEnCjD,EAAS/B,UAAU+S,gBAAkB,SAAUnL,GAClB,eAArB9H,KAAKwE,YACLxE,KAAKqN,MAAQvF,EAAExH,OAAOmD,UAAUC,SAASlC,GArpCnC,gBAqpC+DA,EAGrExB,KAAKqN,MAAQvF,EAAExH,OAAOmD,UAAUC,SAASjC,GAAYC,EAAaD,EAEtEzB,KAAKmR,uBAAuBrJ,EAAExH,QAC9BN,KAAKwV,aAAa1N,GAClB9H,KAAK0V,WAAW1V,KAAKsU,iBACrBtU,KAAKiQ,kBAEThO,EAAS/B,UAAUqJ,gBAAkB,SAAUzB,GAC3C,GAAIiG,GAAYkH,cACZ9S,QAASnC,KAAKmC,QACd+G,MAAOpB,EACP5C,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCc,UAAW3V,KAAK4V,gBAAiB5V,KAAK6V,mBACtCnG,UAAW1P,KAAK+H,mBAEhB5F,QAASnC,KAAKmC,QACd+G,MAAOpB,EACPoN,MAAOlV,KAAKoI,aAAcpI,KAAKuI,UAC/BrD,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCc,UAAW3V,KAAK4V,gBAAiB5V,KAAK6V,mBACtCnG,UAAW1P,KAAK+H,iBAEpB/H,MAAKqK,QAAQ,WAAY0D,IAE7B9L,EAAS/B,UAAU0M,YAAc,SAAU9E,GACvC,GAAI1F,GAAQpC,IACZ8H,GAAEgO,gBACF,IAAIxV,GAASwH,EAAExH,MACf,KAAIA,EAAOmD,UAAUC,SArrCR,oBAqrCb,CAGA1D,KAAKmR,uBAAuB7Q,GAC5BoG,YAAU1G,KAAK+H,kBAhsCA,sBAisCf/H,KAAKwR,qBAAqB1J,EAAG,YAC7B9H,KAAKiQ,gBAeL,KAAK,GAdDlC,GAAYkH,cACZ9S,QAASnC,KAAKmC,QACd+G,MAAOpB,EACP5C,OAAQlF,KAAK4Q,uBAAwB5Q,KAAK6Q,oBAC1CnB,UAAW1P,KAAK+H,iBAChBmC,QAAQ,IAER/H,QAASnC,KAAKmC,QACd+G,MAAOpB,EACPoN,MAAOlV,KAAKoI,aAAcpI,KAAKuI,UAC/BrD,OAAQlF,KAAK4Q,uBAAwB5Q,KAAK6Q,oBAC1CnB,UAAW1P,KAAK+H,iBAChBmC,QAAQ,GAEHlJ,EAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,UAAU7P,OAAQK,IAChEhB,KAAKmC,QAAQqO,iBAAiB,UAAUxP,GAAGiF,MAAM8P,cAAgB,MAErE/V,MAAKqK,QAAQ,cAAe0D,EAAW,SAAUiI,GACxCA,EAAgB9L,SACjB9H,EAAM+P,mBACN/P,EAAM6F,cAAcH,QAIhC7F,EAAS/B,UAAUwI,oBAAsB,SAAUwM,GAC/C,GAAIe,EACJ,IAAIf,EAAKjP,MAAMC,UAAUsC,QAAQ,KAAO,EACpCyN,EAAWjW,KAAKkW,qBAAqBhB,EAAKjP,MAAMC,eAGhD,IAA6B,KAAzBgP,EAAKjP,MAAMC,UACX+P,EAAWjW,KAAKmW,yBAAyBnW,KAAKoW,qBAAqBlB,EAAKjP,MAAMC,gBAE7E,CACD,GAAImQ,GAA+B,eAArBrW,KAAKwE,YAAiC0Q,cAAqBA,EAAkB,YAC3Fe,GAAWjW,KAAKmW,yBAAyBE,GAGjD,MAAOJ,IAEXhU,EAAS/B,UAAUgW,qBAAuB,SAAUtM,GAChD,MAAO0M,YAAW1M,EAAMwB,MAAM,EAAGxB,EAAMpB,QAAQ,QAEnDvG,EAAS/B,UAAU4I,yBAA2B,SAAUc,EAAO2M,GAC3D,GACIC,GADAC,EAAa7M,EAAM8M,UAEvB,IAAID,EAAWjO,QAAQ,MAAQ,EAAG,CAC9BgO,EAAiBF,WAAWG,EAAWrL,MAAM,EAAGqL,EAAWjO,QAAQ,MACnE,IAAImO,OAAc,EAKdA,GAJCnR,oBAAkB+Q,GAIiB,eAArBvW,KAAKwE,YAAgCxE,KAAKmC,QAAQkG,YAAcrI,KAAKmC,QAAQmG,aAH9EtI,KAAK8C,gBAAgB9C,KAAKsC,SAASkG,QAAQ+N,IAK7DC,EAAiBI,KAAKC,KAAKF,GAAeH,EAAiB,UAG3DA,GAAiBrR,SAASsR,EAAY,GAE1C,OAAOD,IAEXvU,EAAS/B,UAAUiW,yBAA2B,SAAUvM,GAEpD,MAAQA,IADgC,eAArB5J,KAAKwE,YAAgCxE,KAAKmC,QAAQkG,YAAcrI,KAAKmC,QAAQmG,cACjE,KAEnCrG,EAAS/B,UAAUkW,qBAAuB,SAAUxM,GAChD,MAAIA,GAAMpB,QAAQ,MAAQ,EACf8N,WAAW1M,EAAMwB,MAAM,EAAGxB,EAAMpB,QAAQ,OAGxC8N,WAAW1M,IAG1B3H,EAAS/B,UAAU4W,iBAAmB,SAAUC,EAAWJ,GACvD,GAAIK,GACAtH,CAKJ,OAJAsH,GAAyC,eAArBhX,KAAKwE,YAAgCxE,KAAK2C,mBAAmB+O,EAAIqF,EAChF/W,KAAK2C,mBAAmBiP,EAAImF,EACjCrH,EAAYsH,EAAoBL,GAChCjH,EAAaA,EAAY,EAAK,EAAKA,EAAY,EAAK,EAAIA,GACrCiH,GAEvB1U,EAAS/B,UAAU+W,qBAAuB,SAAUnP,GAChD9H,KAAKwR,qBAAqB1J,EAAG,UAC7B,IAAIoP,GAAkC,eAArBlX,KAAKwE,YAAgCxE,KAAKmC,QAAQmK,wBAAwB6K,KACvFnX,KAAKmC,QAAQmK,wBAAwB8K,IACrCC,EAA+B,eAArBrX,KAAKwE,YAAgCxE,KAAKmC,QAAQkG,YAAcrI,KAAKmC,QAAQmG,YAC3F,OAAOtI,MAAK8W,iBAAiBI,EAAWG,IAE5CpV,EAAS/B,UAAUoX,UAAY,SAAU3M,EAAWrK,EAAQiX,GACxD,GAAIC,GAA2B,QAAdD,EAAsB,EAAI,KAEvC5L,EAAY,IAahB,OAZkB,QAAd4L,EACK/R,oBAAkBxF,KAAKyE,aAAakG,KACpCnF,oBAAkBxF,KAAKyE,aAAakG,GAAWI,OAChDY,EAAY3L,KAAKyE,aAAakG,GAAWI,KAIxCvF,oBAAkBxF,KAAKyE,aAAakG,KACpCnF,oBAAkBxF,KAAKyE,aAAakG,GAAWK,OAChDW,EAAY3L,KAAKyE,aAAakG,GAAWK,KAG7ChL,KAAKyE,aAAa9D,OAAS,IAAM6E,oBAAkBxF,KAAKyE,aAAakG,MACpEnF,oBAAkBmG,IACfA,EAAUnD,QAAQ,KAAO,IACzBmD,EAAY3L,KAAK8I,yBAAyB6C,GAAW+K,YAElD1W,KAAKoW,qBAAqBzK,IAG1B6L,GAGfvV,EAAS/B,UAAU0Q,qBAAuB,WAEtC,OADqBzL,SAASnF,KAAK+H,iBAAiB9B,MAAMkJ,MAAO,IAAM,GAAK,GAGhFlN,EAAS/B,UAAU2Q,iBAAmB,WAElC,OADqB1L,SAASnF,KAAK+H,iBAAiB9B,MAAMkJ,MAAO,IAAM,KAChD,GAE3BlN,EAAS/B,UAAU+P,eAAiB,WAChC,GAAIwH,GAAW,KACXlP,EAAW,IACfvI,MAAKmP,MAAQhK,SAASnF,KAAK+H,iBAAiB9B,MAAMkJ,MAAO,IACrDnP,KAAKsC,SAAS3B,OAAS,IACvB8W,EAAWzX,KAAKkP,YAAYlP,KAAK+H,iBAAkB/H,KAAKmP,OACxD5G,EAAWvI,KAAKoP,YAAYpP,KAAK+H,iBAAkB/H,KAAKmP,QAExDsI,GAAYlP,IACZvI,KAAKoI,aAAeqP,EACpBzX,KAAKuI,SAAWA,EAChBvI,KAAKoU,cAAgBpU,KAAK4Q,uBAC1B5Q,KAAK6U,cAAgB7U,KAAK6Q,qBAMlC5O,EAAS/B,UAAUwX,cAAgB,SAAUxC,GACzC,MAA8B,eAArBlV,KAAKwE,YAAgC0Q,EAAK7M,YAAYqO,WAC3DxB,EAAK5M,aAAaoO,YAE1BzU,EAAS/B,UAAUyX,YAAc,SAAUhN,GACvC,GAAIiN,IAAU,CAMd,QALKpS,oBAAkBxF,KAAKyE,aAAakG,MACpCnF,oBAAkBxF,KAAKyE,aAAakG,GAAWG,OAChD9K,KAAKyE,aAAakG,GAAWG,KAAKtC,QAAQ,MAAQ,IAClDoP,GAAU,GAEPA,GAEX3V,EAAS/B,UAAU2X,kBAAoB,WACnC7X,KAAK8X,wBAAiE,KAAtC9X,KAAKoI,aAAanC,MAAMC,UAAoBlG,KAAK0X,cAAc1X,KAAKoI,cAChGpI,KAAKoI,aAAanC,MAAMC,UAC5BlG,KAAK+X,oBAAyD,KAAlC/X,KAAKuI,SAAStC,MAAMC,UAAoBlG,KAAK0X,cAAc1X,KAAKuI,UACxFvI,KAAKuI,SAAStC,MAAMC,UACpBlG,KAAK2X,YAAY3X,KAAKoU,iBACtBpU,KAAK8X,wBAA0B9X,KAAK8I,yBAAyB9I,KAAK8X,yBAAyBpB,WAC3F1W,KAAK4C,2BAA4B,GAEjC5C,KAAK2X,YAAY3X,KAAK6U,iBACtB7U,KAAK+X,oBAAsB/X,KAAK8I,yBAAyB9I,KAAK+X,qBAAqBrB,WACnF1W,KAAK6C,4BAA6B,GAEtC7C,KAAK4V,gBAAkB5V,KAAKoW,qBAAqBpW,KAAK8X,wBAAwBpB,YAC9E1W,KAAK6V,kBAAoB7V,KAAKoW,qBAAqBpW,KAAK+X,oBAAoBrB,aAEhFzU,EAAS/B,UAAU8X,iBAAmB,SAAUrG,EAAOE,GACnD,GAAIoG,IAAqB,CAIzB,OAHKtG,KAAU3R,KAAK0C,oBAAoBgP,GAAKG,IAAU7R,KAAK0C,oBAAoBkP,IAC5EqG,GAAqB,GAElBA,GAEXhW,EAAS/B,UAAUgY,cAAgB,SAAUpQ,GAWzC,MATkC,UAA9B9H,KAAKkR,aAAapJ,EAAEiB,QAAuBvD,oBAAkBsC,EAAEyJ,cAC1B,UAArCvR,KAAKkR,aAAapJ,EAAEyJ,aACNvR,KAAKgY,iBAAiBlQ,EAAE6J,MAAO7J,EAAE+J,OAGV,SAAtBjL,UAAQC,KAAKC,KACxB9G,KAAKgY,iBAAiBlQ,EAAEiK,QAAQ,GAAGJ,MAAO7J,EAAEiK,QAAQ,GAAGF,OACvD7R,KAAKgY,iBAAiBlQ,EAAE6J,MAAO7J,EAAE+J,QAI7C5P,EAAS/B,UAAUiY,UAAY,WAC3BnY,KAAK+C,OAAS,CACd,IAAIA,GAA8B,eAArB/C,KAAKwE,aAAiCxE,KAAKmC,QAAQkG,YAAcrI,KAAKmC,QAAQiW,aAAe,GACrGpY,KAAKmC,QAAQmG,aAAetI,KAAKmC,QAAQkW,cAAgB,CAC9DrY,MAAK+C,OAA+B,WAAtB6D,UAAQC,KAAKC,KAAoB9G,KAAK+C,OAASA,GAEjEd,EAAS/B,UAAUoS,YAAc,SAAUxK,GACvC,GAAK9H,KAAKkY,cAAcpQ,GAAxB,CAGA9H,KAAKiQ,iBACLjQ,KAAK6X,oBACL7X,KAAKuJ,gBAAgBzB,EACrB,IACIwQ,GADAnB,EAAOnX,KAAKuY,wBAAwBvY,KAAKiX,qBAAqBnP,GAAI9H,KAAK4V,gBAAiB5V,KAAK6V,kBAmCjG,IAjCA7V,KAAKmY,YAEDG,EADqB,eAArBtY,KAAKwE,YACmBxE,KAAKmC,QAAQmK,wBAAwB6K,KAAOA,EAChEnX,KAAK+H,iBAAiBuE,wBAAwB6K,KAAOnX,KAAK+C,OAGtC/C,KAAKmC,QAAQmK,wBAAwB8K,IAAMD,EAC/DnX,KAAK+H,iBAAiBuE,wBAAwB8K,IAAMpX,KAAK+C,OAEjE/C,KAAK+X,oBACsC,gBAA9B/X,2BAA0CA,KAAK+X,oBAAoBvP,QAAQ,MAAQ,EACxFxI,KAAKoW,qBAAqBpW,KAAK+X,qBAAuB5S,SAASnF,KAAK+X,oBAAqB,IACjG/X,KAAKwY,qBAAuBF,EAAuBtY,KAAKoW,qBAAqBpW,KAAK8X,yBAClF9X,KAAKyY,qBAAuBzY,KAAK+X,oBAAsBO,EACvDtY,KAAK0Y,uBACD1Y,KAAKyY,qBAAuB,IAC5BzY,KAAKyY,qBAAuB,GAG5BzY,KAAKwY,qBAAuB,IAC5BxY,KAAKwY,qBAAuB,GAE3BxY,KAAKyY,qBAAuBzY,KAAKwY,qBAAwBxY,KAAK6I,aAC3D7I,KAAKyY,qBAAuBzY,KAAKwY,qBACjCxY,KAAKwY,qBAAuBxY,KAAKwY,sBAAyBxY,KAAKyY,qBAAuBzY,KAAKwY,qBACrFxY,KAAK6I,YAGX7I,KAAKyY,qBAAuBzY,KAAKyY,sBAAyBzY,KAAKyY,qBAAuBzY,KAAKwY,qBACrFxY,KAAK6I,aAId7I,KAAKyY,qBAAuBzY,KAAKwY,qBAAwBxY,KAAK6I,WAAY,CAC3E,GAAI8P,GAAa3Y,KAAK6I,YAAe7I,KAAKyY,qBAAuBzY,KAAKwY,qBACtExY,MAAKyY,qBAAuBzY,KAAKyY,qBAAuBE,EAE5D3Y,KAAK4Y,6BACL5Y,KAAKiJ,qBACLjJ,KAAKoI,aAAanC,MAAMC,UAAYlG,KAAKwY,qBACzCxY,KAAKuI,SAAStC,MAAMC,UAAYlG,KAAKyY,uBAEzCxW,EAAS/B,UAAU2Y,iBAAmB,SAAUlO,EAAWmO,EAAkB5D,GACzE,GACI6D,GAEAC,EAHAC,EAAe,KAEfN,EAAa,CAkBjB,OAhBKnT,qBAAkBxF,KAAKyE,aAAakG,KAAgBnF,oBAAkBxF,KAAKyE,aAAakG,GAAWI,OACpGkO,EAAejZ,KAAKyE,aAAakG,GAAWI,IAAI2L,YAE/ClR,oBAAkByT,KACfA,EAAazQ,QAAQ,KAAO,IAC5ByQ,EAAejZ,KAAK8I,yBAAyBmQ,GAAcvC,YAG3DoC,GADJC,EAAoB/Y,KAAKoW,qBAAqB6C,MAE1CN,EAAcG,EAAmBC,GAAsB,EAAI,EACtDD,EAAmBC,EACxB/Y,KAAK6I,WAAa7I,KAAK6I,WAAa8P,EACpC3Y,KAAK4I,aAAe5I,KAAKmW,yBAAyBnW,KAAK6I,YACvDmQ,EAAeD,IAGhBvT,oBAAkBwT,GAAgBF,EAAmBE,GAEhE/W,EAAS/B,UAAUgZ,iBAAmB,SAAUvO,EAAWmO,EAAkB5D,GACzE,GACIiE,GACAH,EAFAI,EAAe,IAiBnB,OAdK5T,qBAAkBxF,KAAKyE,aAAakG,KAAgBnF,oBAAkBxF,KAAKyE,aAAakG,GAAWK,OACpGoO,EAAepZ,KAAKyE,aAAakG,GAAWK,IAAI0L,YAE/ClR,oBAAkB4T,KACfA,EAAa5Q,QAAQ,KAAO,IAC5B4Q,EAAepZ,KAAK8I,yBAAyBsQ,GAAc1C,YAG3DoC,GADJK,EAAoBnZ,KAAKoW,qBAAqBgD,MAE1CpZ,KAAK6I,WAAa7I,KAAK6I,YAAciQ,EAAmBK,GACxDnZ,KAAK4I,aAAe5I,KAAKmW,yBAAyBnW,KAAK6I,YACvDmQ,EAAeG,IAGhB3T,oBAAkBwT,GAAgBF,EAAmBE,GAEhE/W,EAAS/B,UAAUwY,qBAAuB,WAEtC1Y,KAAKwY,qBAAuBxY,KAAK6Y,iBAAiB7Y,KAAKoU,cAAepU,KAAKwY,qBAAsBxY,KAAKoI,cAEtGpI,KAAKyY,qBAAuBzY,KAAK6Y,iBAAiB7Y,KAAK6U,cAAe7U,KAAKyY,qBAAsBzY,KAAKuI,UAEtGvI,KAAKwY,qBAAuBxY,KAAKkZ,iBAAiBlZ,KAAKoU,cAAepU,KAAKwY,qBAAsBxY,KAAKoI,cAEtGpI,KAAKyY,qBAAuBzY,KAAKkZ,iBAAiBlZ,KAAK6U,cAAe7U,KAAKyY,qBAAsBzY,KAAKuI,WAE1GtG,EAAS/B,UAAUmZ,iBAAmB,WAClC,GAAIV,EACC3Y,MAAKwY,qBAAuBxY,KAAKyY,qBAAwBzY,KAAK4I,eAC/D+P,EAAc3Y,KAAKwY,qBAAuBxY,KAAKyY,qBAAwBzY,KAAK4I,aAC5E5I,KAAKwY,qBAAuBxY,KAAKwY,qBAAwBG,EAAa,EAAK,IAC3E3Y,KAAKyY,qBAAuBzY,KAAKyY,qBAAwBE,EAAa,EAAK,KAE1E3Y,KAAKwY,qBAAuBxY,KAAKyY,qBAAwBzY,KAAK4I,eAC/D+P,EAAa3Y,KAAK4I,cAAgB5I,KAAKwY,qBAAuBxY,KAAKyY,sBACnEzY,KAAKwY,qBAAuBxY,KAAKwY,qBAAwBG,EAAa,EAAK,IAC3E3Y,KAAKyY,qBAAuBzY,KAAKyY,qBAAwBE,EAAa,EAAK,MAGnF1W,EAAS/B,UAAU0Y,2BAA6B,WACxC5Y,KAAK4C,2BAA6B5C,KAAK6C,4BACvC7C,KAAKwY,qBAAuB5B,KAAK0C,MAAMC,OAAO3C,KAAK0C,MAC7C,GADmDtZ,KAAKmW,yBAAyBnW,KAAKwY,uBAChF,KACZxY,KAAKyY,qBAAuB7B,KAAK0C,MAAMC,OAAO3C,KAAK0C,MAC7C,GADmDtZ,KAAKmW,yBAAyBnW,KAAKyY,uBAChF,KACsB,IAA9BzY,KAAKwY,uBACLxY,KAAKyY,qBAAuBzY,KAAK4I,cAEH,IAA9B5I,KAAKyY,uBACLzY,KAAKwY,qBAAuBxY,KAAK4I,cAEjC5I,KAAKwY,qBAAuBxY,KAAKyY,uBAAyBzY,KAAK4I,aAC/D5I,KAAKqZ,oBAGLrZ,KAAKwY,qBAAuBxY,KAAKwY,qBAAuB,IACxDxY,KAAKyY,qBAAuBzY,KAAKyY,qBAAuB,KAE5DzY,KAAKwY,qBAAwBxY,+BAAkCA,KAAKwY,qBAChExY,KAAK8I,yBAAyB9I,KAAKwY,sBAAwB,KAC/DxY,KAAKyY,qBAAwBzY,gCAAmCA,KAAKyY,qBACjEzY,KAAK8I,yBAAyB9I,KAAKyY,sBAAwB,KAC/DzY,KAAK4C,2BAA4B,EACjC5C,KAAK6C,4BAA6B,IAGlC7C,KAAKwY,qBAAuBxY,KAAKwY,qBAAuB,KACxDxY,KAAKyY,qBAAuBzY,KAAKyY,qBAAuB,OAGhExW,EAAS/B,UAAU+I,mBAAqB,WAC/BjJ,KAAKoI,aAAa3E,UAAUC,SAASpC,IACtCtB,KAAKoI,aAAa3E,UAAU0C,IAAI7E,GAE/BtB,KAAKuI,SAAS9E,UAAUC,SAASpC,IAClCtB,KAAKuI,SAAS9E,UAAU0C,IAAI7E,IAGpCW,EAAS/B,UAAUqY,wBAA0B,SAAUiB,EAAYC,EAAqB1B,GACpF,GAAI2B,GAAyC,eAArB1Z,KAAKwE,YAAgCxE,KAAK+H,iBAAiB4R,WAC/E3Z,KAAK+H,iBAAiB6R,UACtBC,EAAeH,EAAmBD,EAClCK,EAAgB/B,EAAsB2B,EACtCK,EAAe/Z,KAAKsX,UAAUtX,KAAKoU,cAAepU,KAAKoI,aAAc,OACrE4R,EAAeha,KAAKsX,UAAUtX,KAAK6U,cAAe7U,KAAKuI,SAAU,OACjE0R,EAAeja,KAAKsX,UAAUtX,KAAKoU,cAAepU,KAAKoI,aAAc,OACrE8R,EAAela,KAAKsX,UAAUtX,KAAK6U,cAAe7U,KAAKuI,SAAU,OACjE4R,EAAgBX,CAiBpB,OAhBIA,GAAaM,EAAgBE,EAC7BG,EAAgBL,EAAgBE,EAE3BR,EAAaK,EAAeE,IACjCI,EAAgBN,EAAeE,GAE9BvU,oBAAkByU,GAKbzU,oBAAkB0U,IACpBV,EAAaM,EAAgBI,IAC7BC,EAAgBL,EAAgBI,GANhCV,EAAaK,EAAeI,IAC5BE,EAAgBN,EAAeI,GAQhCE,GAEXlY,EAAS/B,UAAUqS,UAAY,SAAUzK,GACrCrB,eAAazG,KAAK+H,kBAlkDH,sBAmkDf/H,KAAK0S,oBAeL,KAAK,GAdD3E,GAAYkH,cACZ/L,MAAOpB,EACP3F,QAASnC,KAAKmC,QACd+C,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,iBAChB4N,UAAW3V,KAAK4V,gBAAiB5V,KAAK6V,qBAEtC3M,MAAOpB,EACP3F,QAASnC,KAAKmC,QACd+S,MAAOlV,KAAKoI,aAAcpI,KAAKuI,UAC/BrD,OAAQlF,KAAKoU,cAAepU,KAAK6U,eACjCnF,UAAW1P,KAAK+H,iBAChB4N,UAAW3V,KAAK4V,gBAAiB5V,KAAK6V,oBAEjC7U,EAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,UAAU7P,OAAQK,IAChEhB,KAAKmC,QAAQqO,iBAAiB,UAAUxP,GAAGiF,MAAM8P,cAAgB,MAErE/V,MAAKqK,QAAQ,aAAc0D,IAE/B9L,EAAS/B,UAAUka,eAAiB,SAAUlV,EAAOmV,GACjD,GACIvP,GADAW,EAAa4O,EAAM1Z,MAEvBwE,UAASnF,KAAKsH,UAAUtH,KAAKmC,SAAU,IAClCqD,oBAAkBxF,KAAKyE,aAAaS,IAsBrCkH,oBAAkBiO,EAAMnV,IAAUiK,MAAiB,EAARjK,IArBtCM,oBAAkBxF,KAAKyE,aAAaS,GAAO4F,OAgB5C9K,KAAKsa,UAAW,EAChBlO,oBAAkBiO,EAAMnV,IAAUiK,MAAiB,EAARjK,MAhB3C4F,EAAO9K,KAAKyE,aAAaS,GAAO4F,KAC5B5F,EAAQuG,IACRW,oBAAkBiO,EAAMnV,IAAUqV,aAAczP,EAAMqE,MAAiB,EAARjK,IAC3DA,EAAQuG,EAAa,GAAuC,KAAlCzL,KAAKyE,aAAaS,GAAO4F,KACnDpE,YAAU2T,EAAMnV,IAAS5D,GAEnBtB,KAAKsa,WACXD,EAAMnV,GAAOe,MAAMC,UAAY,MAE9BhB,IAAUuG,EAAa,GAAMzL,KAAKsa,UAA8C,KAAlCta,KAAKyE,aAAaS,GAAO4F,MACxEpE,YAAU2T,EAAMnV,IAAS5D,KAYzCtB,KAAKuC,UAAU8J,KAAa,EAARnH,IAExBjD,EAAS/B,UAAUwF,YAAc,SAAU8U,EAAUC,GACjDA,EAAUhV,UAAY,GACtB+U,EAAiC,mBAAWxa,KAAK2J,eAAe6Q,GAAYA,EAC5Exa,KAAK0a,gBAAgBD,EAAWD,IAGpCvY,EAAS/B,UAAUwa,gBAAkB,SAAUC,EAAKC,GAChD,GAAIC,GAAgBpb,OAAOoE,KAAKuO,QAC5B0I,EAAU9a,KAAKuP,cAAc,MACjCvP,MAAK+a,eAAeD,EAASF,EAAK,WACA,IAA9BE,EAAQ9L,WAAWrO,YAChByK,MAAM/I,KAAKyY,EAAQ9L,YAAY3D,QAAQ,SAAU2P,GAChDL,EAAInL,YAAYwL,MAEyB,IAAzCH,EAAcrS,QAAQ,eAAyBxI,KAAKib,kBAAmD,IAA/BL,EAAIpS,QAAQ,gBACpF0S,uBAAqBlb,KAAKmC,QAAQgZ,GAAK,UAAYnb,KAAKsC,SAAS3B,OAAO+V,WAAY,kBAAmB1W,KAAKyE,aAAazE,KAAKsC,SAAS3B,OAAS,MAI5JsB,EAAS/B,UAAU6a,eAAiB,SAAUJ,EAAKS,EAAKC,GACpD,GAAIR,GAAgBpb,OAAOoE,KAAKuO,OAChC,IAAqB,mBACjB,GAAe,MAAXgJ,EAAI,IAAyB,MAAXA,EAAI,GAAY,CAClC,GAAIE,GAAS5T,SAASqE,cAAcqP,EACpC,KAAK5V,oBAAkB8V,GASnB,MARAtb,MAAKmD,gBAAgBkJ,KAAKiP,GACG,SAAzBA,EAAOrV,MAAMsV,SACbD,EAAOrV,MAAMuV,eAAe,WAEK,KAAjCF,EAAO7Q,aAAa,UACpB6Q,EAAOG,gBAAgB,aAE3Bd,GAAInL,YAAY8L,EAIhBF,GAAMA,EAAIM,WAIdN,GAAMA,EAAIM,MAGlB,IAAIC,EAKAA,GAJCnW,oBAAkB4V,EAAIQ,WAIVC,UAAQT,GAHRS,UAAQT,EAAIQ,UAK7B,IAAIE,EACCtW,qBAAkBmW,KAKfG,GAJyC,IAAzCjB,EAAcrS,QAAQ,eAAyBxI,KAAKib,kBAAmD,IAA/BG,EAAI5S,QAAQ,eAItEmT,KAAe3b,KAAMqb,EAAMrb,KAAKmC,QAAQgZ,GAAK,UAAYnb,KAAKsC,SAAS3B,OAAO+V,YAAY,GAH1FiF,KAAe3b,KAAMqb,EAAMrb,KAAKmC,QAAQgZ,GAAK,UAAYnb,KAAKsC,SAAS3B,OAAO+V,WAAY1W,KAAKib,oBAMhHzV,oBAAkBmW,IAAeG,EAAYnb,OAAS,MACpDyK,MAAM/I,KAAKyZ,GAAazQ,QAAQ,SAAUC,GACzCqP,EAAInL,YAAYlE,MAI5BrJ,EAAS/B,UAAU+M,gBAAkB,SAAUiI,EAAMhQ,GACjDlF,KAAKyE,aAAaS,GAAOsE,YAAc9C,YAAUwO,GAjrDvC,iBAirD6DzO,eAAayO,GAjrD1E,kBAmrDdjT,EAAS/B,UAAUyE,gBAAkB,SAAUrE,GAE3C,IAAK,GADDmL,GAAanL,EAAOsK,SAASjK,OACxBK,EAAI,EAAGA,EAAIhB,KAAKyE,aAAa9D,OAAQK,IAC1C,GAAIyK,EAAazL,KAAKyE,aAAa9D,OAAQ,CACvC,GAAIob,GAAe/b,KAAKuP,cAAc,MACtCvP,MAAKmC,QAAQqN,YAAYuM,GACzBtQ,GAA0B,EAGlCA,EAAanL,EAAOsK,SAASjK,MAC7B,IAAI0Z,MAAWjP,MAAM/I,KAAK/B,EAAOsK,SAEjC,IADA5K,KAAKsa,UAAW,EACZ7O,EAAa,EACb,IAASzK,EAAI,EAAGA,EAAIyK,EAAYzK,IAEF,QAAtBqZ,EAAMrZ,GAAGgb,UAA4C,SAAtB3B,EAAMrZ,GAAGgb,WACxChc,KAAKsC,SAAS+J,KAAKgO,EAAMrZ,IACA,eAArBhB,KAAKwE,aACLkC,YAAU2T,EAAMrZ,KAAMG,EAAMC,EA/sDlC,iBAgtDMpB,KAAKoa,eAAepZ,EAAGqZ,KAGvB3T,YAAU2T,EAAMrZ,KAAMG,EAAME,EAntDlC,iBAotDMrB,KAAKoa,eAAepZ,EAAGqZ,IAEtB7U,oBAAkBxF,KAAKyE,aAAazD,KAAQwE,oBAAkBxF,KAAKyE,aAAazD,GAAGiK,UACpFjL,KAAK0F,YAAY1F,KAAKyE,aAAazD,GAAGiK,QAASoP,EAAMrZ,KAEpDwE,oBAAkBxF,KAAKyE,aAAazD,KAAOhB,KAAKyE,aAAazD,GAAGkD,UACjElE,KAAKiE,YAAYoW,EAAMrZ,GAAIhB,KAAKyE,aAAazD,GAAGkD,UAE/CsB,oBAAkBxF,KAAKyE,aAAazD,KACrChB,KAAKiN,gBAAgBoN,EAAMrZ,GAAIA,KAYnDiB,EAAS/B,UAAUuJ,OAAS,SAAUvE,GAClClF,KAAK+F,kBAAkBb,IAO3BjD,EAAS/B,UAAUwJ,SAAW,SAAUxE,GACpClF,KAAKgF,YAAYE,IAMrBjD,EAAS/B,UAAU+b,QAAU,WACzB,IAAKjc,KAAKkc,YAAa,CAGnB,IAFAra,EAAO3B,UAAU+b,QAAQ5Z,KAAKrC,MAC9ByH,eAAaO,OAAON,SAAU,mBAAoB1H,KAAK2H,iBAChD3H,KAAKmC,QAAQga,WAAWxb,OAAS,GACpCX,KAAKmC,QAAQsZ,gBAAgBzb,KAAKmC,QAAQga,WAAW,GAAGrV,KAE5D9G,MAAKmC,QAAQsD,UAAYzF,KAAKqG,QAAQZ,SACtC,KAAK,GAAIzE,GAAI,EAAGA,EAAIhB,KAAKqG,QAAQ8V,WAAWxb,OAAQK,IAChDhB,KAAKmC,QAAQwN,aAAa3P,KAAKqG,QAAQ8V,WAAWnb,GAAG8F,KAAM9G,KAAKqG,QAAQ8V,WAAWnb,GAAG4I,MAEtF5J,MAAKoc,aACL1V,YAAU1G,KAAKmC,UAAW,YAAa,QAASjB,IAChDlB,KAAKyC,WACLzC,KAAKsC,aAETtC,KAAKwL,gBAGbvJ,EAAS/B,UAAUsL,YAAc,WAC7B,GAAIxL,KAAKmD,gBAAgBxC,OAAS,EAC9B,IAAK,GAAIK,GAAI,EAAGA,EAAIhB,KAAKmD,gBAAgBxC,OAAQK,IAC7ChB,KAAKmD,gBAAgBnC,GAAGiF,MAAMsV,QAAU,OACxC7T,SAAS2U,KAAK7M,YAAYxP,KAAKmD,gBAAgBnC,KAI3DiB,EAAS/B,UAAUoc,aAAe,SAAUpH,GAGxC,MAFqB,eAArBlV,KAAKwE,YAA+BkC,YAAUwO,IAAQ/T,EAAMC,EApxDlD,iBAqxDNsF,YAAUwO,IAAQ/T,EAAME,EArxDlB,iBAsxDH6T,GAEXjT,EAAS/B,UAAUqc,iBAAmB,SAAUC,GAE5C,IAAK,GADDzI,GAAQrM,SAAS8I,iBAAiB,IAAMgM,GACnCxb,EAAI,EAAGA,EAAI+S,EAAMpT,OAAQK,IAC9B+S,EAAM/S,GAAGiF,MAAMuV,eAAe,UAGtCvZ,EAAS/B,UAAUuc,aAAe,WAC9B,IAAK,GAAIzb,GAAI,EAAGA,EAAIhB,KAAKsC,SAAS3B,OAAQK,IACtChB,KAAKoa,eAAepZ,EAAGhB,KAAKsC,WAGpCL,EAAS/B,UAAUwc,gBAAkB,WACjC,IAAK,GAAI1b,GAAI,EAAGA,EAAIhB,KAAKyC,QAAQ9B,OAAQK,IACrCuK,SAAOvL,KAAKyC,QAAQzB,GAExBhB,MAAKyC,YAETR,EAAS/B,UAAUyc,YAAc,WAC7B3c,KAAKyc,eACLzc,KAAK0c,kBACL1c,KAAK4E,aAAa5E,KAAKmC,UAQ3BF,EAAS/B,UAAU0c,QAAU,SAAUC,EAAgB3X,GACnD,GAAI4X,GAAU9c,KAAKuP,cAAc,MACjCuN,GAAU9c,KAAKsc,aAAaQ,GAC5B5X,EAASA,EAAQlF,KAAKsC,SAAS3B,OAAS,EAAKX,KAAKsC,SAAS3B,OAASuE,CACpE,IAAI6X,IACAjS,KAAMtF,oBAAkBqX,EAAe/R,MAAQ,GAAK+R,EAAe/R,KACnEC,IAAKvF,oBAAkBqX,EAAe9R,KAAO,KAAO8R,EAAe9R,IACnEC,IAAKxF,oBAAkBqX,EAAe7R,KAAO,KAAO6R,EAAe7R,IACnEC,QAASzF,oBAAkBqX,EAAe5R,SAAW,GAAK4R,EAAe5R,QACzEC,YAAW1F,oBAAkBqX,EAAe3R,YAAoB2R,EAAe3R,UAC/E1B,aAAahE,oBAAkBqX,EAAerT,cAAuBqT,EAAerT,YACpF1D,WAAWN,oBAAkBqX,EAAe/W,YAAqB+W,EAAe/W,UAEpF9F,MAAKyE,aAAauY,OAAO9X,EAAO,EAAG6X,GACV,eAArB/c,KAAKwE,aACLxE,KAAKmC,QAAQ8a,aAAaH,EAAS9c,KAAKmC,QAAQqO,iBAAiB,IAAMpP,GAAc8D,IACrFlF,KAAKuc,iBAAiBnb,KAGtBpB,KAAKmC,QAAQ8a,aAAaH,EAAS9c,KAAKmC,QAAQqO,iBAAiB,IAAMnP,GAAc6D,IACrFlF,KAAKuc,iBAAiBlb,IAE1BrB,KAAKsC,SAAS0a,OAAO9X,EAAO,EAAG4X,GAC/B9c,KAAK2c,cACL3c,KAAK0F,YAAY1F,KAAKyE,aAAaS,GAAO+F,QAAS6R,GACnD9c,KAAKsC,SAAStC,KAAKsC,SAAS3B,OAAS,GAAG8C,UAAUuE,OAAO1G,IAO7DW,EAAS/B,UAAUgd,WAAa,SAAUhY,GACtCA,EAASA,EAAQlF,KAAKsC,SAAS3B,OAAS,EAAKX,KAAKsC,SAAS3B,OAASuE,CACpE,IAAIiY,GAAqC,eAArBnd,KAAKwE,YAAgCpD,EAAeC,CACpEmE,qBAAkBxF,KAAKmC,QAAQqO,iBAAiB,IAAM2M,GAAcjY,MAGxEqG,SAAOvL,KAAKmC,QAAQqO,iBAAiB,IAAM2M,GAAcjY,IACzDlF,KAAKsC,SAAS0a,OAAO9X,EAAO,GAC5BlF,KAAKuc,iBAAiBY,GACtBnd,KAAK2c,cACD3c,KAAKsC,SAAS3B,OAAS,GACvBX,KAAKsC,SAAStC,KAAKsC,SAAS3B,OAAS,GAAG8C,UAAUuE,OAAO1G,KAGjElB,GACI2B,WAAS,SACVE,EAAS/B,UAAW,aAAU,IACjCE,GACI2B,WAAS,SACVE,EAAS/B,UAAW,YAAS,IAChCE,GACIgd,gBAAexb,IAChBK,EAAS/B,UAAW,mBAAgB,IACvCE,GACI2B,WAAS,eACVE,EAAS/B,UAAW,kBAAe,IACtCE,GACI2B,WAAS,KACVE,EAAS/B,UAAW,eAAY,IACnCE,GACI2B,YAAS,IACVE,EAAS/B,UAAW,cAAW,IAClCE,GACI2B,YAAS,IACVE,EAAS/B,UAAW,0BAAuB,IAC9CE,GACI2B,WAAS,OACVE,EAAS/B,UAAW,oBAAiB,IACxCE,GACIid,WACDpb,EAAS/B,UAAW,yBAAsB,IAC7CE,GACIid,WACDpb,EAAS/B,UAAW,cAAW,IAClCE,GACIid,WACDpb,EAAS/B,UAAW,kBAAe,IACtCE,GACIid,WACDpb,EAAS/B,UAAW,eAAY,IACnCE,GACIid,WACDpb,EAAS/B,UAAW,iBAAc,IACrCE,GACIid,WACDpb,EAAS/B,UAAW,qBAAkB,IACzCE,GACIid,WACDpb,EAAS/B,UAAW,mBAAgB,IACvCE,GACIid,WACDpb,EAAS/B,UAAW,gBAAa,IACpCE,GACIid,WACDpb,EAAS/B,UAAW,eAAY,IACnC+B,EAAW7B,GACPkd,yBACDrb,IAELsb,aC17DEle,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QAGnFK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HjB,GAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,CACrH,IAAuB,gBAAZM,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIQ,GAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GA+B5D4c,EAAuB,SAAU3b,GAEjC,QAAS2b,KACL,MAAkB,QAAX3b,GAAmBA,EAAOC,MAAM9B,KAAMU,YAAcV,KA4C/D,MA9CAX,GAAUme,EAAO3b,GAIjBzB,GACI2B,WAAS,KACVyb,EAAMtd,UAAW,SAAM,IAC1BE,GACI2B,WAAS,KACVyb,EAAMtd,UAAW,eAAY,IAChCE,GACI2B,WAAS,KACVyb,EAAMtd,UAAW,aAAU,IAC9BE,GACI2B,WAAS,KACVyb,EAAMtd,UAAW,cAAW,IAC/BE,GACI2B,YAAS,IACVyb,EAAMtd,UAAW,cAAW,IAC/BE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,UAAO,IAC3BE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,UAAO,IAC3BE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,YAAS,IAC7BE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,YAAS,IAC7BE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,eAAY,IAChCE,GACI2B,WAAS,IACVyb,EAAMtd,UAAW,eAAY,IAChCE,GACI2B,WAAS,OACVyb,EAAMtd,UAAW,eAAY,IAChCE,GACI2B,WAAS,OACVyb,EAAMtd,UAAW,eAAY,IAChCE,GACI2B,WAAS,MACVyb,EAAMtd,UAAW,aAAU,IACvBsd,GACTxb,iBAgBEyb,EAAiC,SAAU5b,GAE3C,QAAS4b,GAAgBvb,EAASC,GAC9B,GAAIC,GAAQP,EAAOQ,KAAKrC,KAAMkC,EAASC,IAAYnC,IAcnD,OAbAoC,GAAMsb,KAAO,EACbtb,EAAMub,QAAU,EAChBvb,EAAMwb,iBAAkB,EACxBxb,EAAMyb,cAAe,EACrBzb,EAAM0b,MAAQ,EACd1b,EAAM2b,MAAQ,EACd3b,EAAM4b,OAAS,KACf5b,EAAM6b,QAAU,IAChB7b,EAAM8b,OAAS,EACf9b,EAAM+b,OAAS,EACf/b,EAAMgc,OAAS,EACfhc,EAAMic,QAAU,EAChBjc,EAAM6S,UAAW,EACV7S,EAmlFX,MAnmFA/C,GAAUoe,EAAiB5b,GAsB3B4b,EAAgBvd,UAAUkG,UAAY,WAClCpG,KAAKiV,SAAYA,cAAcjV,KAAKse,iBACpCte,KAAKue,mBACLve,KAAKwe,eACLxe,KAAKye,uBACLze,KAAK0e,kBACL1e,KAAK2e,uBACL3e,KAAK4e,0BACL5e,KAAK6e,oBACL7e,KAAK8e,kBACL9e,KAAK+e,YAAe3H,IAAK,GAAID,KAAM,GAAIpT,OAAQ,GAAIC,MAAO,IAC1DhE,KAAKgf,cACLhf,KAAKif,YACLjf,KAAKkf,aACLlf,KAAKmf,oBACLnf,KAAKof,eACLpf,KAAKqf,oBACLrf,KAAKsf,wBAA0BlU,MAAM/I,KAAKrC,KAAKmC,QAAQyI,WAE3D6S,EAAgBvd,UAAUkf,aAAe,WACrC,IAAK,GAAIpe,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAC/BhB,KAAKuf,OAAOve,GAAGma,KAChBnb,KAAKwf,oBAAoBxf,KAAKuf,OAAOve,IAAMma,GAAI,UAAYnb,KAAK2d,QAAQjH,aACxE1W,KAAK2d,QAAU3d,KAAK2d,QAAU,GAElC3d,KAAKkf,UAAUlf,KAAKuf,OAAOve,GAAGma,KAAQsE,IAAKzf,KAAKuf,OAAOve,GAAGye,IAAKC,IAAK1f,KAAKuf,OAAOve,GAAG0e,MAG3FjC,EAAgBvd,UAAUyf,mBAAqB,SAAUzb,EAAU0b,GAC/D,GAAIjF,GAAM3a,KAAKuP,cAAc,MAO7B,OANIrL,IACAwC,YAAUiU,IAAOzW,IAEjB0b,GACAjF,EAAIhL,aAAa,KAAMiQ,GAEpBjF,GAOX8C,EAAgBvd,UAAUiH,OAAS,WAC/BnH,KAAK6f,aACL7f,KAAK8f,kBAAmB,EACpB9f,KAAK+f,gBAAkB/f,KAAKggB,mBAC5BhgB,KAAKigB,gBAETjgB,KAAKkgB,iBACLlgB,KAAK4H,kBAET6V,EAAgBvd,UAAU+f,cAAgB,WACtCjgB,KAAKmgB,MAAQzY,SAAS6H,cAAc,QACpC,IAAI6Q,GAAQ1Y,SAAS6H,cAAc,QACnCvP,MAAKmgB,MAAM1c,UAAU0C,IAAI,6BACzB,KAAK,GAAInF,GAAI,EAAGA,EAAIhB,KAAKqgB,SAAUrf,IAAK,CAEpC,IAAK,GADDsf,GAAK5Y,SAAS6H,cAAc,MACvBlK,EAAI,EAAGA,EAAIrF,KAAKugB,QAASlb,IAAK,CACnC,GAAImb,GAAK9Y,SAAS6H,cAAc,KAChCiR,GAAG/c,UAAU0C,IAAI,wBACjBnG,KAAKygB,eAAgB7W,OAAS6V,IAAKze,EAAE0V,WAAYgJ,IAAKra,EAAEqR,WAAYgK,MAAO,IAAKC,MAAO,MAASH,GAChGA,EAAG7Q,aAAa,KAAM,GAAKtK,GAC3BrF,KAAK4gB,iBAAiBJ,EAAIxf,EAAGqE,GAC7BrF,KAAK6gB,kBAAkBL,GAAMf,IAAKze,EAAG0e,IAAKra,EAAGqb,MAAO,EAAGC,MAAO,IAC9DL,EAAG9Q,YAAYgR,GAEnBJ,EAAM5Q,YAAY8Q,GAEtBtgB,KAAKmgB,MAAM3Q,YAAY4Q,GACvBpgB,KAAKmC,QAAQqN,YAAYxP,KAAKmgB,QAElC1C,EAAgBvd,UAAU2f,WAAa,WAEnC,GADA7f,KAAK8gB,kBACD9gB,KAAKmC,QAAQ4e,kBAAoB,GAAK/gB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAS,KACpFX,KAAKiV,UAAYjV,KAAKuf,OAAO5e,OAAS,GAAI,CAC/C,GAAIqgB,KACJhhB,MAAK4L,eAAgB2T,YAAc,EACnC,KAASve,EAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAQK,IAClEggB,EAAc3U,KAAMrM,KAAKmC,QAAQqO,iBAAiB,YAAYxP,GAElE,KAASA,EAAI,EAAGA,EAAIggB,EAAcrgB,OAAQK,IAAK,CACvCigB,EAAeD,EAAchgB,EAC7BhB,MAAK+E,WACL2B,YAAUua,GAAe,SAE7BjhB,KAAKkhB,gBAAgBD,GACrBjhB,KAAKmhB,SACLnhB,KAAKqgB,SAET,IAAK,GAAIrf,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAAK,CACzC,GAAIigB,GAAejhB,KAAKmC,QAAQ4J,cAAc,IAAM/L,KAAKuf,OAAOve,GAAGma,GAEnE,IADAnb,KAAKohB,gBAAgBphB,KAAKuf,OAAOve,IAC7BhB,KAAKqhB,eAAiBrhB,KAAKuf,OAAOve,GAAG0e,KAAO1f,KAAKqhB,eAAkBrhB,KAAKuf,OAAOve,GAAG0e,IAAM1f,KAAKuf,OAAOve,GAAG0f,MAAQ,CAC/G,GAAIY,GAAWthB,KAAKqhB,eAAiBrhB,KAAKuf,OAAOve,GAAG0f,KACpD1gB,MAAKwf,oBAAoBxf,KAAKuf,OAAOve,IAAM0e,IAAK4B,EAAW,EAAI,EAAIA,IAEvEthB,KAAKuhB,gBAAgBN,EAAcjhB,KAAKuf,OAAOve,IAC/ChB,KAAKiV,UAAW,CAChB,IAAIuM,GAAUxhB,KAAKyhB,aAAaR,EAAcjhB,KAAKuf,OAAOve,GAAIhB,KAAKuf,OAAOve,GAAGma,IAAI,EACjFnb,MAAKiV,SAAYA,cAAcjV,KAAKse,iBACpCte,KAAKue,gBAAgBlS,KAAKmV,GAC1BxhB,KAAK6gB,kBAAkBI,EAAcjhB,KAAKuf,OAAOve,IACjDhB,KAAK0hB,WAAa1hB,KACdA,KAAK2hB,aAAevP,OAAOwP,WAAW,IAAM5hB,KAAK2hB,WAAa,KAAKE,UACnE7hB,KAAK4gB,iBAAiBK,EAAcjhB,KAAKuf,OAAOve,GAAGye,IAAKzf,KAAKuf,OAAOve,GAAG0e,KACvE1f,KAAK8hB,YAAcb,EACnBjhB,KAAK+hB,kBAAkBd,EAAcjhB,KAAKuf,OAAOve,IACjDhB,KAAK8hB,YAAc,MAEvB9hB,KAAKgiB,YAAYf,IAEjBjhB,KAAKggB,mBACLhgB,KAAKiiB,4BAITjiB,MAAKkiB,qBAAqBliB,KAAKuf,SAE/Bvf,KAAKmiB,eAAkBniB,KAAK2hB,YAAcvP,OAAOwP,WAAW,IAAM5hB,KAAK2hB,WAAa,KAAKE,SACzF7hB,KAAKoiB,sBAAsBpiB,KAAKue,iBAEpCve,KAAKqiB,cACLriB,KAAKsiB,aACLtiB,KAAKuiB,eACLviB,KAAKwiB,yBACLxiB,KAAKyiB,iBAAmBziB,KAAKqhB,eACvBrhB,KAAKggB,mBACPhgB,KAAK0iB,wBAEJ1iB,KAAKiV,UACNjV,KAAK2iB,gBAGblF,EAAgBvd,UAAU8f,gBAAkB,WACxC,MAAQhgB,MAAK2hB,YAAcvP,OAAOwP,WAAW,IAAM5hB,KAAK2hB,WAAa,KAAKE,SAE9EpE,EAAgBvd,UAAUmf,kBAAoB,WAC1Crf,KAAK4iB,YACA5iB,KAAKggB,kBACNhgB,KAAK4iB,SAAS,GAAK5iB,KAAKmC,QAAQqE,eACzBoQ,KAAKiM,MAAO7iB,KAAKmC,QAAQqE,2BAA8BxG,KAAK8iB,iBAGnE9iB,KAAK4iB,SAAS,GAAK5iB,KAAKmC,QAAQqE,eAC5BoQ,KAAKiM,MAAO7iB,KAAKmC,QAAQqE,2BAC7BxG,KAAK4iB,SAAS,GAAK5iB,KAAKmC,QAAQqE,eACzBoQ,KAAKiM,OAAO7iB,KAAKmC,QAAQqE,cAAc6B,aAAgBrI,KAAKmhB,SAAW,GAAKnhB,KAAK+iB,YAAY,IACzF/iB,KAAKmhB,UAChBnhB,KAAK4iB,SAAS,GAAK5iB,KAAK4iB,SAAS,GAAK5iB,KAAK8iB,kBAGnDrF,EAAgBvd,UAAUmgB,OAAS,SAAU2C,GACzC,GAAI3C,GAAS,CACb,IAAIrgB,KAAK0d,KAAO,GAAKlY,oBAAkBwd,GAEnC,MADA3C,GAASrgB,KAAK0d,IAGlB,KAAK,GAAI1c,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAChChB,KAAKuf,OAAOve,GAAG2f,MAAQ3gB,KAAKuf,OAAOve,GAAGye,IAAMY,IAC5CA,EAASrgB,KAAKuf,OAAOve,GAAG2f,MAAQ3gB,KAAKuf,OAAOve,GAAGye,IAMvD,OAH2B,KAAvBzf,KAAKuf,OAAO5e,SACZ0f,EAASrgB,KAAKugB,SAEXF,GAEX5C,EAAgBvd,UAAUihB,OAAS,WAC/B,GAAIA,GAAS,CAGb,OAFAA,GAASnhB,KAAKugB,QACdvgB,KAAKqhB,eAAiBF,EACfA,GAEX1D,EAAgBvd,UAAU+iB,mBAAqB,WAC3C,IAAK,GAAIjiB,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAAK,CACzC,GAAIma,GAAKnb,KAAKuf,OAAOve,GAAGma,EACxB,IAAIzT,SAASwb,eAAe/H,GAA5B,CACI,GAAIsE,GAAMta,SAASuC,SAASwb,eAAe/H,GAAI1Q,aAAa,YAAa,IACrEiV,EAAMva,SAASuC,SAASwb,eAAe/H,GAAI1Q,aAAa,YAAa,GACzEzK,MAAKkf,UAAUlf,KAAKuf,OAAOve,GAAGma,KAAQsE,IAAKA,EAAKC,IAAKA,MAOjEjC,EAAgBvd,UAAUijB,iBAAmB,SAAUjf,EAAU0b,EAASrT,GACtE,GAAIpK,GAAUnC,KAAKuP,cAAc,MAUjC,OATIhD,IACA7F,YAAUvE,IAAWoK,IAErBrI,GACAwC,YAAUvE,IAAW+B,IAErB0b,GACAzd,EAAQwN,aAAa,KAAMiQ,GAExBzd,GAEXsb,EAAgBvd,UAAUkjB,eAAiB,SAAU5I,GACjD,GAAIA,EACA,IACI,GAAI9S,SAAS8I,iBAAiBgK,GAAU7Z,OACpC,MAAOkb,WAAQnU,SAASqE,cAAcyO,GAAU/U,UAAUiW,QAGlE,MAAO2H,GACH,MAAOxH,WAAQrB,KAK3BiD,EAAgBvd,UAAUojB,eAAiB,SAAUrY,EAASsY,EAAexa,EAAMkS,GAG/E,IAAK,GADDuI,MACK7f,EAAK,EAAGC,EAFA5D,KAAKojB,eAAenY,MAEA,KAAM,KAAMlC,EAAMkS,GAAmBtX,EAAKC,EAAGjD,OAAQgD,IAAM,CAC5F,GAAImG,GAAOlG,EAAGD,EACd6f,GAAiBnX,KAAKvC,GAE1B2Z,YAAUrY,MAAM/I,KAAKmhB,GAAmBD,IAE5C9F,EAAgBvd,UAAUuhB,aAAe,SAAUiC,EAAaC,EAAYC,EAAS3I,GAajF,GAZKjb,KAAKiV,UACNvO,YAAUgd,IAhUV,UAKU,uBA6Td1jB,KAAK6jB,aAAeH,EAAY3X,cAAc,sBAC1C2X,EAAY3X,cAAc,sBAC1B/L,KAAKmjB,iBAAiBQ,EAAWzf,SAAUwf,EAAYvI,GAAK,WAlUnD,qBAmURnb,KAAKiV,WACNyO,EAAYlU,YAAYxP,KAAK6jB,cACxBF,EAAWvf,SACZpE,KAAK8jB,aAAaJ,IAGtBC,EAAWI,OAAQ,CACnB,GAAIC,GAAwBN,EAAY3X,cAAc,mBAClD2X,EAAY3X,cAAc,mBAAqB/L,KAAKmjB,iBAAiB,GAAIO,EAAYvI,GAAK,WAAY,GAI1G,IAHKnb,KAAKiV,UACNvO,YAAUsd,IA3Ub,oBA6UIN,EAAY3X,cAAc,qBAAuB/L,KAAKiV,SAAU,CAC7DkG,EAAKnb,KAAKmC,QAAQgZ,GAAK,iBAAmByI,CAC9C5jB,MAAKsjB,eAAeK,EAAWI,OAAQC,EAAuB7I,EAAIF,GAClEjb,KAAK6jB,aAAarU,YAAYwU,GAC9B9I,uBAAqBC,EAAI,iBAAkBwI,IAGnD,GAAIA,EAAW1Y,QAAS,CACpBjL,KAAKikB,UAAYP,EAAY3X,cAAc,oBAAsB2X,EAAY3X,cAAc,oBACvF/L,KAAKmjB,iBAAiBQ,EAAWzf,SAAUwf,EAAYvI,GAAK,QAzVzD,kBA0VP,IAEI+I,GAAqB,iBAFNlkB,KAAK6jB,aAAa9X,cAAc,mBAC/CqG,OAAO+R,iBAAiBnkB,KAAK6jB,aAAa9X,cAAc,oBAAoBhI,OAAS,OAC/B,GAE1D,IADAqgB,oBAASpkB,KAAKikB,WAAalgB,OAAQmgB,KAC9BR,EAAY3X,cAAc,sBAAwB/L,KAAKiV,SAAU,CAClE,GAAIkG,GAAKnb,KAAKmC,QAAQgZ,GAAK,kBAAoByI,CAC/C5jB,MAAKsjB,eAAeK,EAAW1Y,QAASjL,KAAKikB,UAAW9I,EAAIF,GAC5Djb,KAAK6jB,aAAarU,YAAYxP,KAAKikB,WACnC/I,uBAAqBC,EAAI,kBAAmBwI,IAGpD,MAAOD,IAEXjG,EAAgBvd,UAAU4jB,aAAe,SAAU7C,GAC/Cva,YAAUua,IAtWJ,gBAwWVxD,EAAgBvd,UAAUghB,gBAAkB,SAAUD,GAClD,GAAIoD,IACA3D,MAAOO,EAAaqD,aAAa,cAAgBnf,SAAS8b,EAAaxW,aAAa,cAAe,IAAM,EACzGkW,MAAOM,EAAaqD,aAAa,cAAgBnf,SAAS8b,EAAaxW,aAAa,cAAe,IAAM,EACzG8Z,SAAUtD,EAAaqD,aAAa,iBAAmBnf,SAAS8b,EAAaxW,aAAa,iBAAkB,IAAM,EAClH+Z,SAAUvD,EAAaqD,aAAa,iBAAmBnf,SAAS8b,EAAaxW,aAAa,iBAAkB,IAAM,EAClHga,SAAUxD,EAAaqD,aAAa,iBAAmBnf,SAAS8b,EAAaxW,aAAa,iBAAkB,IAAM,KAClHia,SAAUzD,EAAaqD,aAAa,iBAAmBnf,SAAS8b,EAAaxW,aAAa,iBAAkB,IAAM,KAClHgV,IAAKwB,EAAaqD,aAAa,YAAcnf,SAAS8b,EAAaxW,aAAa,YAAa,IAAM,EACnGiV,IAAKuB,EAAaqD,aAAa,YAAcnf,SAAS8b,EAAaxW,aAAa,YAAa,IAAM,EACnG0Q,GAAI8F,EAAaxW,aAAa,MAC9Bka,OAAQ1D,EAAaqD,aAAa,eAAiBnf,SAAS8b,EAAaxW,aAAa,eAAgB,IAAM,IAC5GsZ,OAAQ9C,EAAalV,cAAc,oBAAsB,kBACzDd,QAASgW,EAAalV,cAAc,qBAAuB,mBAE1DsY,GAAMlJ,KACPkJ,EAAMlJ,GAAK,UAAYnb,KAAK2d,QAAQjH,WACpCuK,EAAatR,aAAa,KAAM0U,EAAMlJ,IACtCnb,KAAK2d,QAAU3d,KAAK2d,QAAU,GAE9BiH,cAAYP,EAAMjgB,WAClBigB,EAAMjgB,SAAU,GAEpB6c,EAAahb,MAAM0e,OAAS,GAAKN,EAAMM,MAEvC,IAAIE,GAAY,GAAIrH,GAAMxd,KAAM,SAAUqkB,GAAO,EACjDrkB,MAAKuf,OAAOlT,KAAKwY,IAErBpH,EAAgBvd,UAAU4kB,aAAe,WACrC,GAAI9kB,KAAK+kB,cAEL,IAAK,GADD/D,GAAgBhhB,KAAKmC,QAAQqO,iBAAiB,yCACzCxP,EAAI,EAAGA,EAAIggB,EAAcrgB,OAAQK,IAAK,CAC3C,GAAIsP,GAAmC,SAAtB1J,UAAQC,KAAKC,KAAmB,wBAA0B,WAC3EW,gBAAatB,IAAI6a,EAAchgB,GAAIsP,EAAWtQ,KAAKglB,kBAAmBhlB,MAC5C,SAAtB4G,UAAQC,KAAKC,MACbW,eAAatB,IAAI6a,EAAchgB,GAAI,aAAchB,KAAKilB,uBAAwBjlB,QAK9Fyd,EAAgBvd,UAAUoiB,WAAa,WACnClQ,OAAOpC,iBAAiB,SAAUhQ,KAAKklB,QAAQ7S,KAAKrS,OACpDA,KAAK8kB,gBAETrH,EAAgBvd,UAAU8kB,kBAAoB,SAAUld,GACpD9H,KAAKmlB,YAAYrd,GACjB9H,KAAKolB,WAAatd,EAAE6J,MACpB3R,KAAKqlB,WAAavd,EAAE+J,KACpB,IAAIyT,GAAuC,SAAtB1e,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Eye,EAAqC,SAAtB3e,UAAQC,KAAKC,KAAmB,oBAAsB,SACzEW,gBAAatB,IAAIuB,SAAU4d,EAAetlB,KAAKwlB,kBAAmBxlB,MAC7DA,KAAKylB,iBACNhe,eAAatB,IAAIuB,SAAU6d,EAAavlB,KAAK0lB,gBAAiB1lB,MAC9DA,KAAKylB,gBAAiB,IAI9BhI,EAAgBvd,UAAUilB,YAAc,SAAUrd,GAC9C9H,KAAK6d,cAAe,CACpB,IAAIvS,GAAKqa,UAAS7d,gBAAkB,YAChC8d,GAAS1c,MAAOpB,EAAG3F,QAASmJ,EAChCtL,MAAKqK,QAAQ,cAAeub,GAC5B5lB,KAAK6lB,WAAa/d,EAAEge,cACpB9lB,KAAK+lB,UAAYre,SAAS6H,cAAc,OACxCvP,KAAK+lB,UAAUtiB,UAAU0C,IAAI,YAC7BO,YAAU1G,KAAKmC,UA3bH,cA4bZnC,KAAKmC,QAAQqN,YAAYxP,KAAK+lB,WAC9B/lB,KAAKgmB,SAAW7gB,SAASmG,EAAGrF,MAAMkR,KAAM,IACxCnX,KAAKimB,SAAW9gB,SAASmG,EAAGrF,MAAMmR,IAAK,IACvCpX,KAAKkmB,aAAe5a,EAAGjD,YACvBrI,KAAKmmB,cAAgB7a,EAAGhD,aACxBtI,KAAKomB,cAAgBpmB,KAAKqmB,gBAAgB/a,EAAG6P,IAAIuF,MACjD1gB,KAAKsmB,eAAiBtmB,KAAKqmB,gBAAgB/a,EAAG6P,IAAIwF,MAClD3gB,KAAKumB,YAAcvmB,KAAKqmB,gBAAgB/a,EAAG6P,IAAIsE,KAEnDhC,EAAgBvd,UAAU+kB,uBAAyB,SAAUnd,GACzD9H,KAAKmlB,YAAYrd,GACjB9H,KAAKolB,WAAatd,EAAE0e,eAAe,GAAG7U,MACtC3R,KAAKqlB,WAAavd,EAAE0e,eAAe,GAAG3U,MACtCpK,eAAatB,IAAIuB,SAAU,YAAa1H,KAAKymB,uBAAwBzmB,MAChEA,KAAKylB,iBACNhe,eAAatB,IAAIuB,SAAU,WAAY1H,KAAK0lB,gBAAiB1lB,MAC7DA,KAAKylB,gBAAiB,IAG9BhI,EAAgBvd,UAAUwmB,YAAc,WACpC,OAAQvhB,SAAUnF,KAAK4iB,SAAS,GAAK,IAAKzd,SAASnF,KAAK4iB,SAAS,GAAI,MAEzEnF,EAAgBvd,UAAUymB,iBAAmB,SAAU7e,GACnD9H,KAAK4mB,WAAa5mB,KAAK6lB,UACvB,IACID,IAAS1c,MAAOpB,EAAG3F,QADdwjB,UAAS3lB,gBAAkB,YAEpCA,MAAKqK,QAAQ,SAAUub,IAE3BnI,EAAgBvd,UAAU2mB,oBAAsB,SAAUvb,GACtDtL,KAAK8mB,QAAU9mB,KAAKmC,QAAQkG,YAAc,EAC1CrI,KAAKge,OAAShe,KAAK4iB,SAAS,GAAK5iB,KAAKie,QAAU,EAChDxX,eAAa6E,GAAK,sBAClB5E,YAAU4E,IA3dH,cA6dP,KAAK,GADDyb,IAxdD,SACA,SACC,UACA,UAII,eADA,eAEA,eACA,gBAgdC/lB,EAAI,EAAGA,EAAIhB,KAAK4mB,WAAWnjB,UAAU9C,OAAQK,KACS,IAAvD+lB,EAAYve,QAAQxI,KAAK4mB,WAAWnjB,UAAUzC,MAC9ChB,KAAKgnB,YAAehnB,KAAK4mB,WAAWnjB,UAAUzC,KAI1Dyc,EAAgBvd,UAAUslB,kBAAoB,SAAU1d,GACpD9H,KAAK2mB,iBAAiB7e,EACtB,IAAIwD,GAAKqa,UAAS3lB,gBAAkB,WACpC,IAAIA,KAAKolB,aAAetd,EAAE6J,OAAS3R,KAAKqlB,aAAevd,EAAE+J,MAAzD,CAGA7R,KAAK6mB,oBAAoBvb,EACzB,IAAIqY,GAAa3jB,KAAKqmB,gBAAgB/a,EAAGb,aAAa,MACtDzK,MAAKke,OAASpW,EAAE6J,MAChB3R,KAAKme,OAASrW,EAAE+J,KAChB,IAAIoV,GAAQjnB,KAAKme,OAASne,KAAKqlB,WAAarlB,KAAK+d,MAC7CmJ,EAAQlnB,KAAKke,OAASle,KAAKolB,WAAaplB,KAAK8d,KACjD9d,MAAK8d,MAAQ9d,KAAK+d,MAAQ,EAC1B/d,KAAKqlB,WAAarlB,KAAKme,OACvBne,KAAKolB,WAAaplB,KAAKke,OACvBle,KAAKmnB,cAAc7b,EAAIqY,EAAYuD,EAAOD,KAE9CxJ,EAAgBvd,UAAUumB,uBAAyB,SAAU3e,GACzD9H,KAAK2mB,iBAAiB7e,EACtB,IAAIwD,GAAKqa,UAAS3lB,gBAAkB,WACpC,IAAIA,KAAKolB,aAAetd,EAAE0e,eAAe,GAAG7U,OAAS3R,KAAKqlB,aAAevd,EAAE0e,eAAe,GAAG3U,MAA7F,CAGA7R,KAAK6mB,oBAAoBvb,EACzB,IAAIqY,GAAa3jB,KAAKqmB,gBAAgB/a,EAAGb,aAAa,MACtDzK,MAAKke,OAASpW,EAAE0e,eAAe,GAAG7U,MAClC3R,KAAKme,OAASrW,EAAE0e,eAAe,GAAG3U,KAClC,IAAIqV,GAAQlnB,KAAKke,OAASle,KAAKolB,WAAaplB,KAAK8d,MAC7CmJ,EAAQjnB,KAAKme,OAASne,KAAKqlB,WAAarlB,KAAK+d,KACjD/d,MAAK8d,MAAQ9d,KAAK+d,MAAQ,EAC1B/d,KAAKolB,WAAaplB,KAAKke,OACvBle,KAAKqlB,WAAarlB,KAAKme,OACvBne,KAAKmnB,cAAc7b,EAAIqY,EAAYuD,EAAOD,KAG9CxJ,EAAgBvd,UAAUinB,cAAgB,SAAU7b,EAAIqY,EAAYyD,EAAUC,GAC1E,GAAIC,GAAWtnB,KAAKqmB,gBAAgB/a,EAAG6P,IAAIuF,MACvC6G,EAAWvnB,KAAKqmB,gBAAgB/a,EAAG6P,IAAIwF,MACvC6G,EAAKH,EACLI,EAAKL,CACLpnB,MAAKgnB,YAAYxe,QAAQ,UAAY,IACjCxI,KAAKmmB,cAAgBqB,EAAKxnB,KAAK0nB,aAAa/D,IAC5C0D,EAAWrnB,KAAKmmB,cAAgBnmB,KAAK0nB,aAAa/D,GAClD3jB,KAAK+d,MAAQyJ,EAAKH,GAEb1D,EAAWe,UAAY1kB,KAAKmmB,cAAgBqB,EAAKxnB,KAAK2nB,aAAahE,IACxE0D,EAAWrnB,KAAKmmB,cAAgBnmB,KAAK2nB,aAAahE,GAClD3jB,KAAK+d,MAAQyJ,EAAKH,GAEbrnB,KAAKimB,SAAWuB,EAAKxnB,KAAKoe,SAC/BiJ,EAAWrnB,KAAKoe,OAASpe,KAAKimB,SAC9BjmB,KAAK+d,MAAQyJ,EAAKH,GAEtBrnB,KAAKimB,UAAYoB,EACjBrnB,KAAKmmB,eAAiBkB,GAEtBrnB,KAAKgnB,YAAYxe,QAAQ,UAAY,IACjCxI,KAAKmmB,cAAgBqB,EAAKxnB,KAAK0nB,aAAa/D,IAC5C0D,EAAWrnB,KAAK0nB,aAAa/D,GAAc3jB,KAAKmmB,cAChDnmB,KAAK+d,MAAQyJ,EAAKH,GAEb1D,EAAWe,UAAY1kB,KAAKmmB,cAAgBqB,EAAKxnB,KAAK2nB,aAAahE,IACxE0D,EAAWrnB,KAAK2nB,aAAahE,GAAc3jB,KAAKmmB,cAChDnmB,KAAK+d,MAAQyJ,EAAKH,GAEbrnB,KAAKimB,SAAWjmB,KAAKmmB,cAAgBqB,EAAKxnB,KAAKge,SACpDqJ,EAAWrnB,KAAKge,OAAShe,KAAKimB,SAAWjmB,KAAKmmB,cAC9CnmB,KAAK+d,MAAQyJ,EAAKH,GAEtBrnB,KAAKmmB,eAAiBkB,GAEtBrnB,KAAKgnB,YAAYxe,QAAQ,SAAW,IAChCxI,KAAKkmB,aAAeuB,EAAKznB,KAAK4nB,YAAYjE,IAC1CyD,EAAWpnB,KAAKkmB,aAAelmB,KAAK4nB,YAAYjE,GAChD3jB,KAAK8d,MAAQ2J,EAAKL,GAEbzD,EAAWc,UAAYzkB,KAAKkmB,aAAeuB,EAAKznB,KAAK6nB,YAAYlE,IACtEyD,EAAWpnB,KAAKkmB,aAAelmB,KAAK6nB,YAAYlE,GAChD3jB,KAAK8d,MAAQ2J,EAAKL,GAEbpnB,KAAKgmB,SAAWyB,EAAKznB,KAAKqe,UAC/B+I,EAAWpnB,KAAKqe,QAAUre,KAAKgmB,SAC/BhmB,KAAK8d,MAAQ2J,EAAKL,GAEtBpnB,KAAKgmB,UAAYoB,EACjBpnB,KAAKkmB,cAAgBkB,GAErBpnB,KAAKgnB,YAAYxe,QAAQ,SAAW,IAChCxI,KAAKkmB,aAAeuB,EAAKznB,KAAK4nB,YAAYjE,IAC1CyD,EAAWpnB,KAAK4nB,YAAYjE,GAAc3jB,KAAKkmB,aAC/ClmB,KAAK8d,MAAQ2J,EAAKL,GAEbzD,EAAWc,UAAYzkB,KAAKkmB,aAAeuB,EAAKznB,KAAK6nB,YAAYlE,IACtEyD,EAAWpnB,KAAK6nB,YAAYlE,GAAc3jB,KAAKkmB,aAC/ClmB,KAAK8d,MAAQ2J,EAAKL,GAEbpnB,KAAKgmB,SAAWhmB,KAAKkmB,aAAeuB,EAAKznB,KAAK8mB,UACnDM,EAAWpnB,KAAK8mB,QAAU9mB,KAAKgmB,SAAWhmB,KAAKkmB,aAC/ClmB,KAAK8d,MAAQ2J,EAAKL,GAEtBpnB,KAAKkmB,cAAgBkB,GAEzB9b,EAAGrF,MAAMmR,IAAMpX,KAAKimB,SAAW,KAC/B3a,EAAGrF,MAAMkR,KAAOnX,KAAKgmB,SAAW,KAChC1a,EAAGrF,MAAMjC,MAAQhE,KAAKkmB,aAAe,KACrC5a,EAAGrF,MAAMlC,OAAS/D,KAAKmmB,cAAgB,IACvC,IAAIrc,GAAO9J,KAAK8nB,mBAAmBnE,EAAY3jB,KAAK4mB,WAQpD,IAPI9c,EAAK4V,IAAM5V,EAAK4W,MAAQ1gB,KAAKugB,SAC7BvgB,KAAKwf,oBAAoB1V,GAAQ4W,MAAO5W,EAAK4W,MAAQ,IAEzD1gB,KAAK+lB,UAAU9f,MAAMmR,IAAQtN,EAAK2V,IAAMzf,KAAK0mB,cAAc,GAAM5c,EAAK2V,IAAMzf,KAAK+iB,YAAY,GAAQ,KACrG/iB,KAAK+lB,UAAU9f,MAAMkR,KAASrN,EAAK4V,IAAM1f,KAAK0mB,cAAc,GAAQ5c,MAAY9J,KAAK+iB,YAAY,GAAO,KACxG/iB,KAAK+lB,UAAU9f,MAAMlC,OAAW+F,EAAK6W,OAAS3gB,KAAK0mB,cAAc,GAAM1mB,KAAK+iB,YAAY,IAAS,KACjG/iB,KAAK+lB,UAAU9f,MAAMjC,MAAU8F,EAAK4W,OAAS1gB,KAAK0mB,cAAc,GAAM1mB,KAAK+iB,YAAY,IAAS,KAC5FuE,IAAaxd,EAAK4W,OAAS6G,IAAazd,EAAK6W,MAAO,CACpD2G,EAAWxd,EAAK4W,MAChB6G,EAAWzd,EAAK6W,KAChB,IAAI0D,GAAQrkB,KAAKqmB,gBAAgB/a,EAAG6P,IAChCvR,GACAuS,YACIsD,IAAK4E,EAAM5E,IAAI/I,WACfgJ,IAAK2E,EAAM3E,IAAIhJ,WACfgK,MAAO2D,EAAM3D,MAAMhK,WACnBiK,MAAO0D,EAAM1D,MAAMjK,YAG3B1W,MAAKygB,cAAc7W,EAAO0B,GAC1BtL,KAAK8hB,YAAcxW,EACnBtL,KAAK+hB,kBAAkBzW,EAAItL,KAAKqmB,gBAAgB/a,EAAG6P,KACnDnb,KAAKijB,qBACLjjB,KAAKqiB,gBAGb5E,EAAgBvd,UAAUwlB,gBAAkB,SAAU5d,GAClD,IAAItC,oBAAkBxF,KAAK6lB,YAA3B,CAGA7lB,KAAK+nB,SAAW/nB,KAAK6lB,UACrB,IAAIva,GAAKqa,UAAS3lB,cAAgB,YAC9B4lB,GAAS1c,MAAOpB,EAAG3F,QAASmJ,EAChC,IAAIA,EAAI,CACJ5E,YAAU4E,GAAK,qBACf,IAAIga,GAAuC,SAAtB1e,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Eye,EAAqC,SAAtB3e,UAAQC,KAAKC,KAAmB,oBAAsB,SACzEW,gBAAaO,OAAON,SAAU4d,EAAetlB,KAAKwlB,mBAClD/d,eAAaO,OAAON,SAAU6d,EAAavlB,KAAK0lB,iBACtB,SAAtB9e,UAAQC,KAAKC,OACbW,eAAaO,OAAON,SAAU,YAAa1H,KAAKymB,wBAChDhf,eAAaO,OAAON,SAAU,WAAY1H,KAAK0lB,kBAEnD1lB,KAAKylB,gBAAiB,EAClBzlB,KAAK+lB,WACLxa,SAAOvL,KAAK+lB,WAEhB/lB,KAAK+lB,UAAY,IACjB,IAAIpC,GAAa3jB,KAAKqmB,gBAAgB/a,EAAGb,aAAa,MACtDzK,MAAK4gB,iBAAiBtV,EAAIqY,EAAWlE,IAAKkE,EAAWjE,KACrD1f,KAAK6gB,kBAAkBvV,EAAIqY,GAE/Bld,eAAa6E,IAloBN,eAmoBPtL,KAAKqK,QAAQ,aAAcub,GAC3B5lB,KAAK6d,cAAe,EACpB7d,KAAKolB,WAAaplB,KAAKqlB,eAAa2C,GACpChoB,KAAK8d,MAAQ9d,KAAK+d,MAAQ,EAC1B/d,KAAK8hB,YAAc,KACf9hB,KAAKioB,eACLjoB,KAAKkoB,mBAETloB,KAAKuiB,eACLviB,KAAKwiB,2BAET/E,EAAgBvd,UAAU4nB,mBAAqB,SAAUhe,EAAMhC,GAC3D,GAAIqgB,IAAY,EACZzI,EAAM5V,EAAK4V,KAC+C,KAAzD,SAAU,gBAAgBlX,QAAQxI,KAAKgnB,eACxCtH,EAAM1f,KAAKooB,gBAAgBpoB,KAAKgmB,UAAU,GAE9C,IAAIvG,GAAM3V,EAAK2V,KACgC,KAA1C,WAAWjX,QAAQxI,KAAKgnB,eACzBvH,EAAMzf,KAAKqoB,aAAaroB,KAAKimB,UAAU,GACnCjmB,KAAKumB,cAAgB9G,IACrBzf,KAAKumB,YAAc9G,EACnB0I,GAAY,GAGpB,IAAIzH,GAAQ5W,EAAK4W,OACyC,KAArD,UAAW,WAAWlY,QAAQxI,KAAKgnB,eACpCtG,EAAQ1gB,KAAKooB,gBAAgBpoB,KAAKkmB,aAAe,EAAUlmB,KAAK+iB,YAAY,IAAI,GAEpF,IAAIpC,GAAQ7W,EAAK6W,KAcjB,QAbwD,KAAnD,SAAU,UAAUnY,QAAQxI,KAAKgnB,eACT,YAArBhnB,KAAKgnB,aAA4BmB,KACjCxH,EAAQ3gB,KAAKqoB,aAAaroB,KAAKmmB,cAAgB,EAAUnmB,KAAK+iB,YAAY,IAAI,IAGlFjZ,EAAK4V,IAAM5V,EAAK4W,MAAQ1gB,KAAKugB,UAC7BzW,EAAK4W,MAAQ5W,EAAK4W,MAAQ,IAEdjB,GAAO,GAAKC,GAAO,GAAKgB,EAAQhB,GAAO1f,KAAKmhB,UAAYR,EAAQlB,GAAOzf,KAAKqgB,UACK,IAA/ErgB,KAAKsoB,WAAW7I,EAAKC,EAAKgB,EAAOC,EAAO3gB,KAAKuoB,aAAaze,EAAKqR,KAAKxa,SACzD,IAAtBX,KAAKwoB,eACRxoB,KAAKwf,oBAAoB1V,GAAQ2V,IAAKA,EAAKC,IAAKA,EAAKgB,MAAOA,EAAOC,MAAOA,IAEvE7W,GAEX2T,EAAgBvd,UAAUkoB,gBAAkB,SAAUK,EAAQC,GAC1D,GAAIC,GAAc3oB,KAAK4iB,SAAS,EAChC,OAAI8F,GACO9R,KAAKC,KAAK4R,EAASE,GAGnB/R,KAAKiM,MAAM4F,EAASE,IAGnClL,EAAgBvd,UAAUmoB,aAAe,SAAUI,EAAQC,GACvD,MAAIA,GACO9R,KAAK0C,MAAMmP,EAASzoB,KAAK4iB,SAAS,IAGlChM,KAAK0C,MAAMmP,GAAUzoB,KAAK4iB,SAAS,GAAK5iB,KAAK+iB,YAAY,MAGxEtF,EAAgBvd,UAAU0nB,YAAc,SAAU9d,GAC9C,MAAQA,YAAiB9J,KAAK0mB,cAAc,IAGhDjJ,EAAgBvd,UAAU2nB,YAAc,SAAU/d,GAC9C,MAAQA,YAAiB9J,KAAK0mB,cAAc,IAGhDjJ,EAAgBvd,UAAUwnB,aAAe,SAAU5d,GAC/C,MAAQA,YAAiB9J,KAAK0mB,cAAc,IAGhDjJ,EAAgBvd,UAAUynB,aAAe,SAAU7d,GAC/C,MAAQA,YAAiB9J,KAAK0mB,cAAc,IAGhDjJ,EAAgBvd,UAAUmiB,YAAc,WACpCriB,KAAKwe,cACL,KAAK,GAAIxd,GAAI,EAAG4nB,EAAI5oB,KAAKue,gBAAgB5d,OAAQK,EAAI4nB,IAAK5nB,EACtDhB,KAAK6oB,SAAS7oB,KAAKue,gBAAgBvd,KAG3Cyc,EAAgBvd,UAAUgoB,iBAAmB,WACzC,IAA2B,IAAvBloB,KAAKioB,cAAT,CAGA,IAAK,GAAIa,GAAW,EAAGF,EAAI5oB,KAAKwe,YAAY7d,OAAQmoB,EAAWF,IAAKE,EAAU,CAC1E,GAAIvI,GAAUvgB,KAAKwe,YAAYsK,EAC/B,IAAKvI,EAGL,IAAK,GAAIwI,GAAW,EAAGC,EAAMzI,EAAQ5f,OAAQooB,EAAWC,IAAOD,EAAU,CACrE,GAAIjf,GAAOyW,EAAQwI,EACfjf,IACA9J,KAAKipB,gBAAgBnf,IAIjC9J,KAAKkpB,oBAGTzL,EAAgBvd,UAAU+oB,gBAAkB,SAAUnf,GAClD,IAA2B,IAAvB9J,KAAKioB,eAA2Bne,IAAS9J,KAAK8hB,YAAlD,CASA,IANA,GAAIiH,GAAW/oB,KAAKqmB,gBAAgBvc,EAAKqR,IAAIuE,IACzCiB,EAAQxb,SAAS2E,EAAKW,aAAa,cAAe,IAClDiW,EAAQvb,SAAS2E,EAAKW,aAAa,cAAe,IAClD0e,EAAe,KACfC,EAAkB,KAClBN,EAAW3jB,SAAS2E,EAAKW,aAAa,YAAa,IAAM,EACtDqe,GAAY,GAEM,IADT9oB,KAAKsoB,WAAWQ,EAAUC,EAAUrI,EAAOC,EAAO7W,GACpDnJ,QAGVwoB,EAAeL,EACfM,EAAkBL,IAChBD,CAEe,QAAjBK,GACAnpB,KAAK6oB,SAAS/e,EAAMqf,EAAcC,KAG1C3L,EAAgBvd,UAAU2oB,SAAW,SAAU/e,EAAMuf,EAAUC,EAAaC,GACxEvpB,KAAK0e,iBACL,IAAI8K,GAASrkB,SAAS2E,EAAKW,aAAa,YAAa,IACjDgV,EAAMta,SAAS2E,EAAKW,aAAa,YAAa,GAKlD,IAJKzK,KAAKwe,YAAYiB,KAClBzf,KAAKwe,YAAYiB,OAErBzf,KAAKwe,YAAYiB,GAAK+J,GAAU1f,MACnBke,KAATle,OAAmCke,KAAbqB,OAA0CrB,KAAhBsB,EAA2B,CAC3E,OAAgCtB,KAA5BhoB,KAAKkf,UAAUpV,EAAKqR,KAAqD,OAAhCnb,KAAKkf,UAAUpV,EAAKqR,IAAIsE,SAC1B,KAAhCzf,KAAKkf,UAAUpV,EAAKqR,IAAIuE,IAAqB,CAEhD,GAAI+J,GAASzpB,KAAKwe,YAAYxe,KAAKkf,UAAUpV,EAAKqR,IAAIsE,IAClDzf,MAAKkf,UAAUpV,EAAKqR,KAAOsO,EAAOzpB,KAAKkf,UAAUpV,EAAKqR,IAAIuE,OAAS5V,UAC5D2f,GAAOzpB,KAAKkf,UAAUpV,EAAKqR,IAAIuE,KACtC1f,KAAKijB,qBACLjjB,KAAKqiB,eAIjBriB,KAAKkf,UAAUpV,EAAKqR,IAAIsE,IAAM4J,EAC9BrpB,KAAKkf,UAAUpV,EAAKqR,IAAIsE,IAAM6J,EACzBtpB,KAAKwe,YAAYiB,KAClBzf,KAAKwe,YAAYiB,OAErBzf,KAAKwe,YAAYiB,GAAK+J,GAAU1f,GACK,IAAjC9J,KAAKif,SAASzW,QAAQsB,IACtB9J,KAAKif,SAAS5S,KAAKvC,GAEvB9J,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBvc,EAAKqR,KAAOsE,IAAK4J,EAAU3J,IAAK4J,GAC9E,IAAI3F,GAAa3jB,KAAKqmB,gBAAgBvc,EAAKqR,GAC3Cnb,MAAKygB,eAAgB7W,OAAS8V,IAAKiE,EAAWjE,IAAIhJ,WAAY+I,IAAKkE,EAAWlE,IAAI/I,aAAgB5M,GAClG9J,KAAK0pB,aAAa5f,EAAM9J,KAAKqmB,gBAAgBvc,EAAKqR,OAG1DsC,EAAgBvd,UAAUwpB,aAAe,SAAUvnB,EAASwhB,GACxD3jB,KAAK4gB,iBAAiBze,EAASwhB,EAAWlE,IAAKkE,EAAWjE,KAC1D1f,KAAK6gB,kBAAkB1e,EAASwhB,GAChC3jB,KAAK8gB,kBACL9gB,KAAKqiB,eAGT5E,EAAgBvd,UAAUglB,QAAU,WAEhC,GADAllB,KAAKkgB,iBACDlgB,KAAKggB,kBACLhgB,KAAKiiB,4BAEJ,CACD,GAAIjiB,KAAKmC,QAAQsB,UAAUC,SA9yBtB,gBA8yB4C,CAC7C+C,eAAazG,KAAKmC,UA/yBjB,gBAgzBD,KAAK,GAAInB,GAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAQK,IAAK,CACvE,GAAI2Z,GAAM3a,KAAKmC,QAAQqO,iBAAiB,YAAYxP,GAChD2oB,EAAe3pB,KAAKqmB,gBAAgB1L,EAAIQ,IACxCsE,EAAMta,SAASwV,EAAIlQ,aAAa,YAAa,IAC7CiV,EAAMva,SAASwV,EAAIlQ,aAAa,YAAa,GACjDzK,MAAKwf,oBAAoBmK,GAAgBlK,IAAKA,EAAKC,IAAKA,IACxD1f,KAAK6gB,kBAAkBlG,EAAK3a,KAAKqmB,gBAAgB1L,EAAIQ,KACrDnb,KAAK4gB,iBAAiBjG,EAAK8E,EAAKC,GAChC1f,KAAK8gB,mBAGb9gB,KAAK0iB,wBACL1iB,KAAKkpB,kBAETlpB,KAAK4pB,oBAAoB5pB,KAAKue,iBAC9Bve,KAAKgiB,WAAWhiB,KAAKue,iBACrBve,KAAK8kB,eACL9kB,KAAK6pB,cAAc7pB,KAAK8e,iBAE5BrB,EAAgBvd,UAAUgpB,gBAAkB,WACpClpB,KAAKmC,QAAQ4J,cAAc,iCACvB/L,KAAKmgB,OACL5U,SAAOvL,KAAKmgB,OAEhBngB,KAAKigB,kBAGbxC,EAAgBvd,UAAU2pB,cAAgB,SAAU/K,GAChD,GAAI9e,KAAKggB,oBAAsBhgB,KAAKmiB,cAChC,IAASnhB,EAAI,EAAGA,EAAI8d,EAAene,OAAQK,IACvC8d,EAAe9d,GAAGib,cAGrB,CACD,IAAK,GAAIjb,GAAI,EAAGA,EAAI8d,EAAene,OAAQK,IACvC8d,EAAe9d,GAAGib,SAEtBjc,MAAKoiB,sBAAsBpiB,KAAKue,mBAGxCd,EAAgBvd,UAAU4pB,WAAa,WAenC,IAAK,GAdDzF,MAaA0F,EAAS/pB,KACJyf,EAAM,EAAGA,GAAOzf,KAAK0d,KAAM+B,KAbtB,SAAUA,GAQpB,IAAK,GAAIC,GAAM,EAAGA,EAAMqK,EAAOxJ,QAASb,KAP1B,SAAUA,GACpBqK,EAAOxK,OAAOyK,OAAO,SAAUC,GACvBA,EAAMxK,MAAQA,GAAOwK,EAAMvK,MAAQA,GACnC2E,EAAMhY,KAAK4d,MAKXvK,IAKJD,EAEZ,OAAO4E,IAEX5G,EAAgBvd,UAAU+hB,sBAAwB,WAC9Cvb,YAAU1G,KAAKmC,UA72BN,gBA82BT,IAAI+nB,GAAelqB,KAAK8pB,YACxB9pB,MAAKmqB,YAAcD,EAAavpB,MAChC,KAAK,GAAIK,GAAI,EAAGA,EAAIkpB,EAAavpB,OAAQK,IAAK,CAC1C,GAAIigB,GAAevZ,SAASwb,eAAegH,EAAalpB,GAAGma,GACvD8F,KACAmD,oBAASnD,GAAgBjd,MAAS,SAClCid,EAAahb,MAAMlC,OAAS,KAAO/D,KAAKmC,QAAQqE,eACzCxG,KAAKmC,QAAQqE,cAAc6B,YAAcrI,KAAK8iB,iBAAmB,KACxE9iB,KAAK4iB,SAAS,GAAK5iB,KAAKmC,QAAQqE,eACxBxG,KAAKmC,QAAQqE,cAAc6B,YAAcrI,KAAK8iB,gBACtD9iB,KAAKwf,oBAAoB0K,EAAalpB,IAAMye,IAAKze,EAAG0e,IAAK,IACzD1f,KAAK4gB,iBAAiBK,EAAciJ,EAAalpB,GAAGye,IAAKyK,EAAalpB,GAAG0e,KACzE1f,KAAKgiB,WAAWhiB,KAAKue,iBACrBve,KAAK6pB,cAAc7pB,KAAK8e,gBACxB9e,KAAK4pB,oBAAoB5pB,KAAKue,kBAGtCve,KAAK8gB,mBAETrD,EAAgBvd,UAAUwiB,sBAAwB,WAC9C1iB,KAAKmC,QAAQsB,UAAU0C,IAAI,gBAC3BnG,KAAKqf,mBACL,KAASre,EAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAQK,IAAK,CACvE,GAAI2Z,GAAM3a,KAAKmC,QAAQqO,iBAAiB,YAAYxP,GAChD2iB,EAAa3jB,KAAKqmB,gBAAgB1L,EAAIQ,GAC1Cnb,MAAK6gB,kBAAkBlG,EAAKgJ,GAEhC,IAAK,GAAI3iB,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IACpChB,KAAK4gB,iBAAiBlZ,SAASwb,eAAeljB,KAAKuf,OAAOve,GAAGma,IAAKnb,KAAKuf,OAAOve,GAAGye,IAAKzf,KAAKuf,OAAOve,GAAG0e,IAEzG1f,MAAK8gB,mBAETrD,EAAgBvd,UAAU4gB,gBAAkB,WACxC9gB,KAAKoqB,eACLpqB,KAAKqqB,kBAET5M,EAAgBvd,UAAUmqB,eAAiB,WACvC,GAAIC,GACAC,CAEAD,GADAtqB,KAAKggB,kBACWhgB,KAAKqgB,UAChBrgB,KAAKmC,QAAQqE,eAAiBoQ,KAAKiM,MAAO7iB,KAAKmC,QAAQqE,2BAA8BxG,KAAK8iB,kBAC1F9iB,KAAKqgB,SAAW,GAAKrgB,KAAK+iB,YAAY,GAAM,KAGjC/iB,KAAKqgB,UAChBrgB,KAAK4iB,SAAS,GAAK5iB,KAAK8iB,kBAAoB9iB,KAAKqgB,SAAW,GAAKrgB,KAAK+iB,YAAY,GAAM,KAEjGqB,oBAASpkB,KAAKmC,SAAW4B,OAAUumB,IACnCC,EAAanY,OAAO+R,iBAAiBnkB,KAAKmC,SAAS6B,MACnDogB,oBAASpkB,KAAKmC,SAAW6B,MAASumB,KAEtC9M,EAAgBvd,UAAU2gB,kBAAoB,SAAUI,EAAc0C,GAClES,oBAASnD,GAAgBld,OAAUoI,aAAWnM,KAAKwqB,gBAAgB7G,GAAY,MAC/ES,oBAASnD,GAAgBjd,MAASmI,aAAWnM,KAAKwqB,gBAAgB7G,GAAY,OAElFlG,EAAgBvd,UAAUuqB,WAAa,SAAUR,EAAOhP,EAAkB/V,GACtE,GAAIwe,EACJ1jB,MAAKgf,WAAahf,KAAKwqB,gBAAgBP,GACnCrF,cAAYqF,EAAM7lB,WAClB6lB,EAAM7lB,SAAU,GAEhBpE,KAAKiV,SACLyO,EAAchc,SAASwb,eAAe+G,EAAM9O,KAGxCnb,KAAKsf,qBAAqB3e,OAAS,IAAM6E,oBAAkBN,IAC3Dwe,EAAc1jB,KAAKsf,qBAAqBpa,GACpC+kB,EAAM/lB,UACNwC,YAAUgd,IAAeuG,EAAM/lB,WAE/B+lB,EAAM9O,IACNuI,EAAY/T,aAAa,KAAMsa,EAAM9O,KAIzCuI,EAAc1jB,KAAK2f,mBAAmBsK,EAAM/lB,SAAU+lB,EAAM9O,IAEhEuI,EAAYzd,MAAM0e,OAAS,GAAKsF,EAAMtF,OACtC3kB,KAAKmC,QAAQqN,YAAYkU,GAE7B,IAAIgH,GAAgB1qB,KAAKyhB,aAAaiC,EAAauG,EAAOA,EAAM9O,GAAIF,EAMpE,OALAjb,MAAKue,gBAAgBlS,KAAKqe,GACrB1qB,KAAKiV,UACNjV,KAAKuhB,gBAAgBmC,EAAauG,GAEtCjqB,KAAK6gB,kBAAkB6C,EAAauG,GAC7BvG,GAEXjG,EAAgBvd,UAAU0gB,iBAAmB,SAAU8C,EAAajE,EAAKC,GACrE,GAAKgE,EAAL,CAGA,GAAI4G,GAActqB,KAAK0mB,cAAc,GACjC6D,EAAavqB,KAAK0mB,cAAc,GAChCvP,EAAe,IAARuI,EAAY,EAAM,GAASva,SAASolB,EAAW7T,WAAY,IAAM1W,KAAK+iB,YAAY,IACzF3L,EAAc,IAARqI,EAAY,EAAM,GAASta,SAASmlB,EAAY5T,WAAY,IAAM1W,KAAK+iB,YAAY,GAC7FqB,qBAASV,GAAevM,KAAQA,EAAO,KAAMC,IAAOA,EAAM,SAE9DqG,EAAgBvd,UAAUkqB,aAAe,WAErC,GADApqB,KAAK0d,KAAO,KACR1d,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAS,IAAMX,KAAKmqB,YAE9D,IAAK,GADDnJ,GAAgBhhB,KAAKmC,QAAQqO,iBAAiB,YACzCxP,EAAI,EAAGA,EAAIggB,EAAcrgB,OAAQK,IAAK,CAC3C,GAAIigB,GAAeD,EAAchgB,GAC7BqoB,EAAWlkB,SAAS8b,EAAaxW,aAAa,YAAa,IAC3DkgB,EAASxlB,SAAS8b,EAAaxW,aAAa,cAAe,GAC/DzK,MAAK0d,KAAO9G,KAAK5L,IAAIhL,KAAK0d,KAAO2L,EAAWsB,OAG/C,CACG3qB,KAAKmqB,cACLnqB,KAAK0d,KAAO1d,KAAKmqB,YACjBnqB,KAAKmqB,YAAc,KAEvB,KAASnpB,EAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IACpChB,KAAK0d,KAAO9G,KAAK5L,IAAIhL,KAAK0d,KAAM1d,KAAKuf,OAAOve,GAAGye,OAI3DhC,EAAgBvd,UAAUkhB,gBAAkB,SAAU6I,IAC7CA,EAAMvJ,OAASuJ,EAAMvJ,MAAQuJ,EAAM1F,SACpCvkB,KAAKwf,oBAAoByK,GAASvJ,MAAOuJ,EAAM1F,WAEzC0F,EAAMxF,UAAYwF,EAAMvJ,MAAQuJ,EAAMxF,SAC5CzkB,KAAKwf,oBAAoByK,GAASvJ,MAAOuJ,EAAMxF,WAE1CwF,EAAMvJ,MAAQ1gB,KAAKugB,QACxBvgB,KAAKwf,oBAAoByK,GAASvJ,MAAO1gB,KAAKugB,UAG9CvgB,KAAKwf,oBAAoByK,GAASvJ,MAAOuJ,EAAMvJ,SAE9CuJ,EAAMtJ,OAASsJ,EAAMtJ,MAAQsJ,EAAMzF,SACpCxkB,KAAKwf,oBAAoByK,GAAStJ,MAAOsJ,EAAMzF,WAE1CyF,EAAMvF,UAAYuF,EAAMtJ,MAAQsJ,EAAMvF,SAC3C1kB,KAAKwf,oBAAoByK,GAAStJ,MAAOsJ,EAAMvF,WAG/C1kB,KAAKwf,oBAAoByK,GAAStJ,MAAOsJ,EAAMtJ,SAGvDlD,EAAgBvd,UAAU0qB,kBAAoB,SAAUX,GAChDA,EAAMvK,IAAMuK,EAAMvJ,MAAQ1gB,KAAKugB,SAC/BvgB,KAAKwf,oBAAoByK,GAASvJ,MAAOuJ,EAAMvJ,OAAS1gB,KAAKugB,SAAW0J,EAAMvK,IAAMuK,EAAMvJ,WAGlGjD,EAAgBvd,UAAUsf,oBAAsB,SAAUyK,EAAOrgB,GAC7D5J,KAAK6qB,wBAAyB,EAE9BZ,EAAMre,cAAchC,GAAO,IAE/B6T,EAAgBvd,UAAUgiB,qBAAuB,SAAU4I,GACvD,GAAI9qB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAS,GAAKX,KAAKuf,OAAO5e,OAAS,EAC7E,IAAK,GAAI0E,GAAI,EAAGA,EAAIylB,EAAMnqB,OAAQ0E,IAAK,CACnCrF,KAAKye,oBAAoBpS,KAAKye,EAAMzlB,IAC9BrF,KAAKiV,UAAYjV,KAAKuf,OAAO5e,OAAS,GACxCX,KAAKohB,gBAAgB0J,EAAMzlB,KAE3BrF,KAAKqhB,eAAiByJ,EAAMzlB,GAAGqa,KAAO1f,KAAKqhB,eAAkByJ,EAAMzlB,GAAGqa,IAAMoL,EAAMzlB,GAAGqb,QACrF1gB,KAAKwf,oBAAoBsL,EAAMzlB,IAAMqa,IAAK1f,KAAKqhB,eAAiByJ,EAAMzlB,GAAGqb,OAE7E,IAAIqK,GAAO/qB,KAAKyqB,WAAWK,EAAMzlB,IAAI,EAAOA,EACvCrF,MAAKiV,WACFjV,KAAK+E,WACL2B,YAAUqkB,GAAO,SAErB/qB,KAAKmC,QAAQqN,YAAYub,IAEzB/qB,KAAKggB,mBAAqB3a,IAAMylB,EAAMnqB,OAAS,EAC/CX,KAAKiiB,yBAGLjiB,KAAK4gB,iBAAiBmK,EAAMD,EAAMzlB,GAAGoa,IAAKqL,EAAMzlB,GAAGqa,KACnD1f,KAAK8hB,YAAciJ,EACnB/qB,KAAK+hB,kBAAkBgJ,EAAMD,EAAMzlB,IACnCrF,KAAK8hB,YAAc,MAI/B9hB,KAAKgiB,WAAWhiB,KAAKue,kBAEzBd,EAAgBvd,UAAUooB,WAAa,SAAU7I,EAAKC,EAAKgB,EAAOC,EAAOqK,GACrE,GAAIC,KACCvK,IAAUC,IACXD,EAAQC,EAAQ,IAEhBqK,GAAYA,YAAkBprB,SAC9BorB,GAAUA,GAGd,KAAK,GADDlhB,GACKohB,EAAI,EAAGA,EAAIvK,IAASuK,EACzB,IAAK,GAAIC,GAAI,EAAGA,EAAIzK,IAASyK,IACzBrhB,EAAO9J,KAAKorB,SAAS3L,EAAMyL,EAAGxL,EAAMyL,EAAGH,KACzBA,IAAgE,IAAtDA,EAAOxiB,QAAQd,SAASwb,eAAepZ,EAAKqR,OACX,IAArD8P,EAAMziB,QAAQd,SAASwb,eAAepZ,EAAKqR,MAC3C8P,EAAM5e,KAAK3E,SAASwb,eAAepZ,EAAKqR,IAIpD,OAAO8P,IAGXxN,EAAgBvd,UAAUmrB,wBAA0B,SAAUC,EAAa5L,EAAK/E,GAC5E,GAAIvY,GAAQpC,KACRugB,KACAgL,IAeJ,IAdAD,EAAYjgB,QAAQ,SAAUlJ,GAC1B,GAAImnB,GAAcnkB,SAAShD,EAAQsI,aAAa,YAAa,IACzD+gB,EAAarmB,SAAShD,EAAQsI,aAAa,cAAe,GAC9D,IAAIiV,EAAMtd,EAAMme,SAAW+I,GAAe5J,EACtC,GAAI8L,EAAa,EACb,IAAK,GAAIxqB,GAAIsoB,EAAatoB,EAAIsoB,EAAckC,EAAYxqB,IACpDuf,EAAQlU,KAAKrL,OAIjBuf,GAAQlU,KAAKid,KAIrB/I,EAAQ5f,OAAS,EACjB,IAAK,GAAIK,GAAI0e,EAAM,EAAG1e,GAAKhB,KAAKugB,QAAU,EAAGvf,KACb,IAAxBuf,EAAQ/X,QAAQxH,IAAaA,IAAM0e,IACD,IAA9B6L,EAAc/iB,QAAQxH,IACtBuqB,EAAclf,KAAKrL,EAKnC,IAAIyqB,GAAiBzrB,KAAK0rB,mBAAmB/Q,EAAK,QAclD,OAbA8Q,GAAepgB,QAAQ,SAAUiW,GACzBA,EAAW5B,IAA4C,IAArC6L,EAAc/iB,QAAQ8Y,IACxCiK,EAAcvO,OAAOuO,EAAc/iB,QAAQ8Y,GAAW,KAGtCthB,KAAK0rB,mBAAmB1rB,KAAK2rB,gBAAiB,QACpDtgB,QAAQ,SAAUqU,GAC5BA,EAAMva,SAASwV,EAAIlQ,aAAa,YAAa,MAAwC,IAAjCghB,EAAejjB,QAAQkX,KAC3C,IAAhC6L,EAAc/iB,QAAQkX,IACtB6L,EAAclf,KAAKqT,KAG3B6L,EAAgBA,EAAcpd,KAAK,SAAUyd,EAAM3V,GAAY,MAAO2V,GAAO3V,KAGjFwH,EAAgBvd,UAAUwrB,mBAAqB,SAAUvpB,EAAS4G,GAI9D,IAAK,GAHD8iB,MACAnL,EAAQvb,SAAShD,EAAQsI,aAAa,cAAe,IACrDiV,EAAMva,SAAShD,EAAQsI,aAAa,YAAa,IAC5CzJ,EAAI0e,EAAM1e,EAAI0e,EAAMgB,GAAS1f,GAAKhB,KAAKugB,QAAUvf,IACtD6qB,EAAcxf,KAAKrL,EAEvB,OAAO6qB,IAEXpO,EAAgBvd,UAAU4rB,uBAAyB,SAAUR,EAAa5L,EAAK/E,GAC3E,GAAIvY,GAAQpC,KACRurB,KACAhL,IAeJ,IAdA+K,EAAYjgB,QAAQ,SAAUlJ,GAC1B,GAAImf,GAAWnc,SAAShD,EAAQsI,aAAa,YAAa,IACtDkgB,EAASxlB,SAAShD,EAAQsI,aAAa,cAAe,GAC1D,IAAIiV,GAAOtd,EAAMme,SAAWe,GAAY5B,EACpC,GAAIiL,EAAS,EACT,IAAK,GAAI3pB,GAAIsgB,EAAUtgB,EAAIsgB,EAAWqJ,EAAQ3pB,IAC1Cuf,EAAQlU,KAAKrL,OAIjBuf,GAAQlU,KAAKiV,KAIrBf,EAAQ5f,OAAS,EACjB,IAAK,GAAIK,GAAI,EAAGA,GAAK0e,EAAK1e,KACM,IAAxBuf,EAAQ/X,QAAQxH,IAAaA,IAAM0e,IACD,IAA9B6L,EAAc/iB,QAAQxH,IACtBuqB,EAAclf,KAAKrL,EAKnC,IAAIyqB,GAAiBzrB,KAAK0rB,mBAAmB/Q,EAAK,OAelD,OAdA8Q,GAAepgB,QAAQ,SAAUiW,GACzBA,EAAW5B,IAA4C,IAArC6L,EAAc/iB,QAAQ8Y,IACxCiK,EAAcvO,OAAOuO,EAAc/iB,QAAQ8Y,GAAW,KAGtCthB,KAAK0rB,mBAAmB1rB,KAAK2rB,gBAAiB,QACpDtgB,QAAQ,SAAUqU,GAC5BA,EAAMva,SAASwV,EAAIlQ,aAAa,YAAa,MAAwC,IAAjCghB,EAAejjB,QAAQkX,KAC3C,IAAhC6L,EAAc/iB,QAAQkX,IACtB6L,EAAclf,KAAKqT,KAG3B6L,EAAgBA,EAAcpd,KAAK,SAAUyd,EAAMG,GAAQ,MAAOH,GAAOG,IACzER,EAAgBA,EAAcS,WAGlCvO,EAAgBvd,UAAU+rB,oBAAsB,SAAUxM,EAAKC,EAAKiB,EAAOD,EAAO/F,GAC9E3a,KAAKksB,mBAAiBlE,GACtBhoB,KAAKmsB,oBAAkBnE,EACvB,IACIoE,GACAC,EAFAC,GAAe,EAGfC,IACJvsB,MAAKwsB,kBAAgBxE,EACrB,IAAIyE,GAAWtnB,SAASwV,EAAIlQ,aAAa,cAAe,IACpDiiB,EAASvnB,SAASwV,EAAIlQ,aAAa,YAAa,GAoCpD,KAlCiC,KADjC8hB,EAAavsB,KAAK2sB,eAAe3sB,KAAKsoB,WAAW7I,EAAK,EAAGzf,KAAKugB,QAASI,QACxDnY,QAAQmS,IACnB4R,EAAWlgB,KAAKsO,GAEpByR,EAAcpsB,KAAK8rB,uBAAuBS,EAAY7M,EAAK/E,GACvDyR,EAAYzrB,OAAS,GACrBX,KAAKksB,eAAiBlsB,KAAK4sB,iBAAiBR,EAAazR,EAAK8E,EAAKC,EAAKgB,EAAOC,GAC3E3gB,KAAK6sB,oBAAsBH,EAAS1sB,KAAKqmB,gBAAgBrmB,KAAK2rB,gBAAgBxQ,IAAIuF,QAClF1gB,KAAKksB,gBAAiB,GAEtBlsB,KAAKksB,eACLlsB,KAAKmsB,iBAAkB,GAGvBnsB,KAAKksB,gBAAiB,EACtBG,EAAersB,KAAKqrB,wBAAwBkB,EAAY7M,EAAK/E,GAC7D3a,KAAKmsB,gBAAkBE,EAAa1rB,OAAS,GAAIX,KAAK8sB,kBAAkBT,EAAc1R,EAAK8E,EAAKC,EAAKgB,EAAOC,GACxG3gB,KAAK6sB,oBAAsBJ,EAAWC,IACtC1sB,KAAKmsB,iBAAkB,GAEtBnsB,KAAKmsB,kBACNnsB,KAAKmsB,iBAAkB,MAK/BE,EAAersB,KAAKqrB,wBAAwBkB,EAAY7M,EAAK/E,GAC7D3a,KAAKmsB,gBAAkBE,EAAa1rB,OAAS,GAAIX,KAAK8sB,kBAAkBT,EAAc1R,EAAK8E,EAAKC,EAAKgB,EAAOC,GACxG3gB,KAAK6sB,oBAAsBJ,EAAWC,IACtC1sB,KAAKmsB,iBAAkB,GAEvBnsB,KAAKmsB,kBACLnsB,KAAKksB,gBAAiB,KAGzBlsB,KAAKmsB,kBAAoBnsB,KAAKksB,gBAAkBzM,EAAM,EAAG,CAC1D,GAAIsN,GAAS/sB,KAAKqmB,gBAAgB1L,EAAIQ,IAAIsE,IACtCuN,GAAW,CACXhtB,MAAKitB,WAAaF,IAClBC,GAAW,EAEf,KAAK,GAAI3D,GAAW5J,EAAK4J,GAAY,EAAGA,IAAY,CAChD,GAAIlnB,GAAWnC,KAAKqmB,gBAAgB1L,EAAIQ,IAAIwF,MAAQ,GAAKqM,EAAYhtB,KAAK2rB,gBAAkBhR,CACvF0O,KAAa0D,IAAYpM,EAAQ,EAAI0I,IAAa0D,EAASpM,EAAQ,EAAI0I,IAAa0D,EAASpM,IAC7B,IAAjE3gB,KAAKsoB,WAAWe,EAAU3J,EAAKgB,EAAOC,EAAOxe,GAASxB,SACtDqsB,GAAW,EACXhtB,KAAKwsB,eAAgB,EACrBxsB,KAAKktB,eAAiB1nB,oBAAkBxF,KAAKktB,gBAAkB7D,EAAWrpB,KAAKktB,eAC/EltB,KAAK6sB,kBAAoBnN,IAUrC,OANI1f,KAAKmsB,iBAAmBnsB,KAAKksB,gBAAkBlsB,KAAKwsB,iBACpDF,GAAe,EACX9mB,oBAAkBxF,KAAKktB,kBACvBltB,KAAKktB,eAAiBzN,IAGvB6M,GAEX7O,EAAgBvd,UAAUitB,oBAAsB,SAAUC,EAAS1M,GAG/D,IAAK,GAFD2M,IAAmB,EACnBC,KACKtsB,EAAI,EAAGA,EAAIosB,EAAQzsB,OAAQK,IAChC,GAAIosB,EAAQpsB,EAAI,GAAKosB,EAAQpsB,IAAO,GAAKosB,EAAQpsB,EAAI,GAAKosB,EAAQpsB,KAAQ,GAWtE,GAVAssB,EAAkBjhB,KAAK+gB,EAAQpsB,IACjB,IAAV0f,GACA4M,EAAkBjhB,KAAK+gB,EAAQpsB,EAAI,IAEnCA,IAAMosB,EAAQzsB,OAAS,IACvB2sB,EAAkBjhB,KAAK+gB,EAAQpsB,EAAI,IAC/BssB,EAAkB3sB,OAAS+f,GAC3B4M,EAAkBtQ,QAAQ,IAG9BsQ,EAAkB3sB,SAAW+f,EAM7B,MALA2M,IAAmB,EACnBrtB,KAAK6sB,kBAAoBS,EAAkBnf,KAAK,SAAUyd,EAAM3V,GAAY,MAAO2V,GAAO3V,IAAa,GACnGjW,KAAK6sB,kBAAoB,IACzB7sB,KAAK6sB,kBAAoB,GAEtBQ,MAIXC,KAIR,OAAOD,IAEX5P,EAAgBvd,UAAUysB,eAAiB,SAAUY,GAEjD,IAAK,GADDjC,MACKtqB,EAAI,EAAGA,EAAIusB,EAAK5sB,OAAQK,IAC7BsqB,EAAYjf,KAAKkhB,EAAKvsB,GAE1B,OAAOsqB,IAEX7N,EAAgBvd,UAAU0sB,iBAAmB,SAAUY,EAAQ7S,EAAK8E,EAAKC,EAAKgB,EAAOC,GACjF,GAAI8M,EACJ,IAAc,IAAV/M,GAAyB,IAAVC,GAAe6M,EAAO7sB,OAAS,EAC9CX,KAAK6sB,kBAAoBW,EAAO,GAChCC,GAAmB,MAElB,IAAI/M,EAAQ,GAAe,IAAVC,EAClB8M,EAAmBztB,KAAKmtB,oBAAoBK,EAAQ9M,OAEnD,IAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,GAAIgN,OAAU,EAId,IAHIF,EAAO7sB,QAAU,IACjB+sB,GAAU,GAEVA,EACA,IAAK,GAAI1sB,GAAI,EAAGA,EAAIwsB,EAAO7sB,OAAQK,IAAK,CAEpC,GAA8B,IADThB,KAAKsoB,WAAW7I,EAAK+N,EAAOxsB,GAAI0f,EAAOC,EAAO3gB,KAAK2rB,iBACrDhrB,OAGf,MAFAX,MAAK6sB,kBAAoBW,EAAOxsB,GAChCysB,GAAmB,CAInBA,IAAmB,OAM/BA,GAAmBztB,KAAK2tB,WAAWH,EAAQ9M,EAAOjB,EAAKkB,EAAOhG,EAGtE,OAAO8S,IAEXhQ,EAAgBvd,UAAU4sB,kBAAoB,SAAUM,EAASzS,EAAK8E,EAAKC,EAAKgB,EAAOC,GACnF,GAAIiN,EACJ,IAAc,IAAVlN,GAAyB,IAAVC,GAAeyM,EAAQzsB,OAAS,EAC/CX,KAAK6sB,kBAAoBO,EAAQ,GACjCQ,GAAoB,MAEnB,IAAIlN,EAAQ,GAAe,IAAVC,EAClBiN,EAAoB5tB,KAAKmtB,oBAAoBC,EAAS1M,OAErD,IAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,GAAIgN,OAAU,EAId,IAHIN,EAAQzsB,QAAU,IAClB+sB,GAAU,GAEVA,EACA,IAAK,GAAI1sB,GAAI,EAAGA,EAAIosB,EAAQzsB,OAAQK,IAAK,CAErC,IAAK,GADD6sB,GAAiB7tB,KAAKsoB,WAAW7I,EAAK2N,EAAQpsB,GAAI0f,EAAOC,EAAO3gB,KAAK2rB,iBAChEmC,EAAY,EAAGA,EAAYD,EAAeltB,OAAQmtB,IACnD3oB,SAASwV,EAAIlQ,aAAa,YAAa,MAAQ2iB,EAAQpsB,IACvD6sB,EAAe7Q,OAAO6Q,EAAerlB,QAAQqlB,EAAeC,IAAa,EAGjF,IAA8B,IAA1BD,EAAeltB,OAGf,MAFAitB,IAAoB,EACpB5tB,KAAK6sB,kBAAoBO,EAAQpsB,GAC1B4sB,CAGPA,IAAoB,OAMhCA,GAAoB5tB,KAAK2tB,WAAWP,EAAS1M,EAAOjB,EAAKkB,EAAOhG,EAGxE,OAAOiT,IAEXnQ,EAAgBvd,UAAUytB,WAAa,SAAUP,EAAS1M,EAAOjB,EAAKkB,EAAOhG,GAGzE,IAAK,GAFDiT,GACAG,KACK1oB,EAAI,EAAGA,EAAI+nB,EAAQzsB,OAAQ0E,IAEhC,GADcrF,KAAKmtB,oBAAoBC,EAAS1M,GACnC,CACT,GAAIsN,KAGJ,IAFAA,EAAW3hB,KAAKrM,KAAK2rB,iBACrBqC,EAAW3hB,KAAKsO,GACgB,IAA5BoT,EAAiBptB,OAGjB,MAFAitB,IAAoB,EACpB5tB,KAAK6sB,kBAAoB7sB,KAAK6sB,kBACvBe,CAGPA,IAAoB,EAIhC,MAAOA,IAEXnQ,EAAgBvd,UAAU+tB,mBAAqB,SAAUC,GAsBrD,IAAK,GApBD5C,GADAyC,KAoBAI,EAASnuB,KACJyf,EAAMzf,KAAK0d,KAAO,EAAG+B,GAAO,EAAGA,KAnB1B,SAAUA,GACpB6L,KACA4C,EAAe7iB,QAAQ,SAAUlJ,GACzBA,GAAWA,EAAQsI,aAAa,cAAgBgV,EAAI/I,YACpD4U,EAAYjf,KAAKlK,IAUzB,KAAK,GAAIqnB,GAAS2E,EAAO5N,QAAU,EAAGiJ,GAAU,EAAGA,KAPrC,SAAUA,GACpB8B,EAAYjgB,QAAQ,SAAUvB,GACtBA,GAAQA,EAAKW,aAAa,cAAgB+e,EAAO9S,YACjDqX,EAAiB1hB,KAAKvC,MAKtB0f,IAKJ/J,EAEZ,OAAOsO,IAEXtQ,EAAgBvd,UAAUkuB,cAAgB,SAAUF,EAAgBvK,EAAYhJ,GAC5E,GAAIvY,GAAQpC,KACRquB,IAwBJ,OAvBKruB,MAAK8hB,aACN9hB,KAAKqiB,cAET6L,EAAe7iB,QAAQ,SAAUlJ,GAC7BC,EAAMupB,gBAAkBxpB,CACxB,IAAIkiB,GAAQjiB,EAAMikB,gBAAgBlkB,EAAQgZ,IACtCmT,GAAUlsB,EAAM6pB,oBAAoB5H,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM1D,MAAO0D,EAAM3D,MAAO/F,EACxF,IAAI0J,EAAM3D,MAAQ,GAAK4N,EACnB,IAAK,GAAIjF,GAAWhF,EAAM5E,IAAK4J,EAAW1F,EAAWlE,IAAMkE,EAAWhD,MAAO0I,IACxDjnB,EAAMkmB,WAAWe,EAAUhF,EAAM3E,IAAK2E,EAAM3D,MAAO2D,EAAM1D,MAAOxe,GACtEkJ,QAAQ,SAAUvB,GACrBokB,EAAe1lB,QAAQsB,IAAS,IAA0C,IAArCukB,EAAkB7lB,QAAQsB,IAC/DukB,EAAkBhiB,KAAKvC,OAM3CukB,EAAkBhjB,QAAQ,SAAUvB,GAC5BukB,EAAkB7lB,QAAQsB,IAAS,GACnCokB,EAAelR,OAAOkR,EAAe1lB,QAAQsB,GAAO,KAGrDokB,GAEXzQ,EAAgBvd,UAAUquB,YAAc,SAAUlK,EAAOliB,GACrD,GAAImmB,GAAatoB,KAAKsoB,WAAWjE,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM3D,MAAO2D,EAAM1D,MAAO3gB,KAAK8hB,YACtF,KAAK9hB,KAAK8hB,aAAe9hB,KAAKwuB,gBAAkBxuB,KAAK6d,cAAgB7d,KAAK4d,gBACtE,MAAO0K,EAEX,IAAItoB,KAAK8hB,aAAe9hB,KAAKkf,YAAclf,KAAKyuB,YAC5C,IAAK,GAAIztB,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAAK,CACzC,GAAI0tB,GAAYhnB,SAASwb,eAAeljB,KAAKuf,OAAOve,GAAGma,GACvD,IAAIuT,IAAc1uB,KAAK8hB,YAAvB,CAGA,GAAIuH,GAAWrpB,KAAKyuB,YAAYC,EAAUvT,IAAIsE,IAC1C6B,EAAWthB,KAAKyuB,YAAYC,EAAUvT,IAAIuE,GAC9C1f,MAAK4gB,iBAAiB8N,EAAWrF,EAAU/H,GAC3CthB,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBqI,EAAUvT,KAAOsE,IAAK4J,EAAU3J,IAAK4B,IACnFthB,KAAKygB,eAAgB7W,OAAS8V,IAAK4B,EAAS5K,WAAY+I,IAAK4J,EAAS3S,aAAgBgY,GACtF1uB,KAAKijB,sBAWb,MARAjjB,MAAKwe,YAAcxe,KAAK2uB,WACxBrG,EAAatoB,KAAKsoB,WAAWjE,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM3D,MAAO2D,EAAM1D,MAAO3gB,KAAK8hB,aAClF9hB,KAAKqiB,cACLriB,KAAKijB,qBACDjjB,KAAK4uB,gBAAkB5uB,KAAK4uB,eAAejuB,OAAS,IAAqD,IAAhD2nB,EAAW9f,QAAQxI,KAAK4uB,eAAe,KAChG5uB,KAAKyuB,YAAYzuB,KAAK4uB,eAAe,GAAGzT,IAAIsE,MAAQ4E,EAAM5E,KAC1D6I,EAAWjc,KAAKrM,KAAK4uB,eAAe,IAEjCtG,GAEX7K,EAAgBvd,UAAU2uB,iBAAmB,SAAUvG,EAAYnmB,GAG/D,IAAK,GAFD2sB,IAAY,EACZC,EAAW/uB,KAAKqmB,gBAAgBlkB,EAAQgZ,IACnC6T,EAAQ,EAAGA,EAAQ1G,EAAW3nB,OAAQquB,IAE3C,IAAK,GADDC,GAAejvB,KAAKqmB,gBAAgBiC,EAAW0G,GAAO7T,IACjDna,EAAI,EAAGA,EAAI+tB,EAASpO,MAAO3f,IAAK,CACrC,GAAIkuB,KACJA,GAAW7iB,KAAKlK,GAChB+sB,EAAW7iB,KAAKic,EAAW0G,GAG3B,IADYhvB,KAAKsoB,WAAWyG,EAAStP,IAAMze,EAAGiuB,EAAavP,IAAKuP,EAAavO,MAAOuO,EAAatO,MAAOuO,GAC1FvuB,OAAS,EAEnB,MADAmuB,IAAY,GACL,EAOnB,MAAOA,IAEXrR,EAAgBvd,UAAUivB,iBAAmB,SAAU7G,EAAYnmB,EAASwhB,GACxE,IAAK3jB,KAAK8hB,aAAqC,IAAtBwG,EAAW3nB,OAChC,OAAO,CAEX,IAAIyuB,GACAC,EAAalqB,SAASmjB,EAAW,GAAG7d,aAAa,YAAa,GAOlE,IANIzK,KAAKitB,SAAWoC,EAChBD,EAAY,EAEPpvB,KAAKitB,SAAWoC,IACrBD,EAAY,IAEXpvB,KAAK6uB,iBAAiBvG,EAAYnmB,GACnC,OAAO,CAGX,KAAK,GADDmtB,IAAc,EACTC,EAAS,EAAGA,EAASjH,EAAW3nB,OAAQ4uB,IAC7C,GAAIjH,EAAW3nB,QAAU,GAAKX,KAAKyuB,YAAYzuB,KAAK8hB,YAAY3G,IAAIsE,MAAQzf,KAAKkf,UAAUlf,KAAK8hB,YAAY3G,IAAIsE,IAC5G,OAAO,CAMf,KAAK,GAHD+P,GAA2B,IAAdJ,EACbpvB,KAAKqmB,gBAAgBrmB,KAAK8hB,YAAY3G,IAAIsE,IAAMzf,KAAKqmB,gBAAgBrmB,KAAK8hB,YAAY3G,IAAIwF,MACxF3gB,KAAKitB,SACF+B,EAAQ,EAAGA,EAAQ1G,EAAW3nB,OAAQquB,IAAS,CACpD,GAAIS,GAAkBzvB,KAAKqmB,gBAAgBiC,EAAW0G,GAAO7T,IACzDuU,EAAkB1vB,KAAKqmB,gBAAgBlkB,EAAQgZ,IAC/C6P,IACJ,IAA8B,IAA1ByE,EAAgB9O,QAAsD,IAAvCqK,EAAOxiB,QAAQ8f,EAAW0G,IACzDhE,EAAO3e,KAAKic,EAAW0G,QAEtB,IAAIS,EAAgB9O,MAAQ,IAA4C,IAAvCqK,EAAOxiB,QAAQ8f,EAAW0G,IAC5D,GAAkB,IAAdI,GAAmBM,EAAgBjQ,MAASzf,KAAKyuB,YAAYgB,EAAgBtU,IAAIsE,IAAMgQ,EAAgB9O,MAAQ,EAC/GqK,EAAO3e,KAAKic,EAAW0G,QAEtB,CAAA,GAAkB,IAAdI,GAAmBM,EAAgBjQ,MAASzf,KAAKyuB,YAAYgB,EAAgBtU,IAAQ,IAI1F,OAAO,CAHP6P,GAAO3e,KAAKic,EAAW0G,IAM3BS,EAAgB9O,OAAS+O,EAAgB/O,QAAgD,IAAvCqK,EAAOxiB,QAAQ8f,EAAW0G,KAC5EhE,EAAO3e,KAAKic,EAAW0G,GAK3B,IAFAhE,EAAO3e,KAAKrM,KAAK8hB,aACD9hB,KAAKsoB,WAAWkH,EAAYC,EAAgB/P,IAAK+P,EAAgB/O,MAAO+O,EAAgB9O,MAAOqK,GAC7FrqB,OAAS,EAEvB,MADA2uB,IAAc,CAIVN,KAAU1G,EAAW3nB,OAAS,IAC9B2uB,GAAc,GAK1B,MAAOA,IAEX7R,EAAgBvd,UAAUyvB,UAAY,SAAUrH,EAAYnmB,EAASwhB,GACjE,GACIyL,GADAhtB,EAAQpC,KAER4vB,IACJA,GAAgBvjB,KAAKlK,EACrB,IAAIktB,GAAalqB,SAASmjB,EAAW,GAAG7d,aAAa,YAAa,GAC9DzK,MAAKitB,SAAWoC,EAChBD,EAAY,EAEPpvB,KAAKitB,SAAWoC,IACrBD,EAAY,EAEhB,IAAIS,GAAkC,IAAdT,EAAkBC,EAAa1L,EAAWhD,MAAQ3gB,KAAKitB,QAC/E,KAAKjtB,KAAK4d,gBAAiB,CACvB,GAAIkS,GAAoB9vB,KAAKqmB,gBAAgBiC,EAAW,GAAGnN,GAC3Dnb,MAAKwf,oBAAoBmE,GAAclE,IAAmB,IAAd2P,EAAkBC,EAAaQ,EAAoBC,EAAkBnP,QAErH,IAAK,GAAIqO,GAAQ,EAAGA,EAAQ1G,EAAW3nB,OAAQquB,IAC3CY,EAAgBvjB,KAAKic,EAAW0G,IAChChvB,KAAK4gB,iBAAiB0H,EAAW0G,GAAQa,EAAoB7vB,KAAKqmB,gBAAgBiC,EAAW0G,GAAO7T,IAAKuE,KACzG1f,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBiC,EAAW0G,GAAO7T,KAAOsE,IAAKoQ,IAC5EvH,EAAW0G,GAAOrf,aAAa,WAAYkgB,EAAkBnZ,WAEjEvU,GAAQwN,aAAa,WAAYgU,EAAWlE,IAAI/I,YAChD1W,KAAK4gB,iBAAiB5gB,KAAK+lB,UAAWpC,EAAWlE,IAAKkE,EAAWjE,IACjE,KAAK,GAAI1e,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IACpChB,KAAKkf,UAAUlf,KAAKuf,OAAOve,GAAGma,KAAQsE,IAAKzf,KAAKuf,OAAOve,GAAGye,IAAKC,IAAK1f,KAAKuf,OAAOve,GAAG0e,IAEvF1f,MAAKitB,SAAWtJ,EAAWlE,IAC3Bzf,KAAKijB,qBACL2M,EAAgBvkB,QAAQ,SAAUvB,GAC9B1H,EAAMqsB,YAAY3kB,EAAKqR,IAAM/Y,EAAM8c,UAAUpV,EAAKqR,GAElD,KAAK,GADD4U,GAAY3tB,EAAMikB,gBAAgBvc,EAAKqR,IAClCna,EAAI,EAAGA,EAAIoB,EAAMoc,YAAY7d,OAAQK,IAC1C,GAAKoB,EAAMoc,YAAYxd,GAGvB,IAAK,GAAIqE,GAAI,EAAGA,EAAIjD,EAAMoc,YAAYxd,GAAGL,OAAQ0E,IACzCjD,EAAMoc,YAAYxd,GAAGqE,KAAOyE,IAC5B1H,EAAMoc,YAAYxd,GAAGqE,OAAK2iB,GAIjC5lB,GAAMoc,YAAYuR,EAAUtQ,OAC7Brd,EAAMoc,YAAYuR,EAAUtQ,SAEhCrd,EAAMoc,YAAYuR,EAAUtQ,KAAKsQ,EAAUrQ,KAAO5V,EAClD1H,EAAMusB,WAAavsB,EAAMoc,eAGjCf,EAAgBvd,UAAU6hB,kBAAoB,SAAU5f,EAASwhB,GAC7D3jB,KAAK6e,mBACL,IAAImR,MAEAC,IAQJ,KALID,EADAhwB,KAAK8hB,aAAe9hB,KAAK8f,iBACV9f,KAAKuuB,YAAY5K,EAAYxhB,GAG7BnC,KAAKsoB,WAAW3E,EAAWlE,IAAKkE,EAAWjE,IAAKiE,EAAWjD,MAAOiD,EAAWhD,MAAOxe,IAEtFxB,OAAS,EAItB,GAHAqvB,EAAehwB,KAAKiuB,mBAAmB+B,GACvCA,EAAehwB,KAAKouB,cAAc4B,EAAcrM,EAAYxhB,IACvCqD,oBAAkBxF,KAAKitB,WAAYjtB,KAAKmvB,iBAAiBa,EAAc7tB,EAASwhB,GAEjG3jB,KAAK2vB,UAAUK,EAAc7tB,EAASwhB,OAGtC,KAAK,GAAI3iB,GAAI,EAAGA,EAAIgvB,EAAarvB,OAAQK,IAAK,CAC1C,GAAIqjB,GAAQrkB,KAAKqmB,gBAAgB2J,EAAahvB,GAAGma,GAKjD,IAJAnb,KAAK2rB,gBAAkBqE,EAAahvB,GACpChB,KAAKktB,eAAiB,KACtBltB,KAAK6sB,kBAAoB,KACJ7sB,KAAKisB,oBAAoB5H,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM1D,MAAO0D,EAAM3D,MAAOve,KACnEqD,oBAAkBxF,KAAK6sB,mBAAoB,CAClE7sB,KAAK4gB,iBAAiBoP,EAAahvB,GAAIhB,KAAKktB,eAAgBltB,KAAK6sB,mBACjE7sB,KAAKkf,UAAW8Q,EAAahvB,QAAYye,IAAKzf,KAAKktB,eAAgBxN,IAAK1f,KAAK6sB,kBAC7E,IAAIjjB,IACAuS,YACIsD,IAAKzf,KAAKktB,eAAexW,WACzBgJ,IAAK1f,KAAK6sB,kBAAkBnW,YAMpC,IAHA1W,KAAKygB,cAAc7W,EAAOomB,EAAahvB,IACvChB,KAAKwf,oBAAoB6E,GAAS3E,IAAK1f,KAAK6sB,kBAAmBpN,IAAKzf,KAAKktB,iBACzEltB,KAAKktB,eAAiB,KAClBlsB,EAAIgvB,EAAarvB,OACjB,aAIJsvB,GAAgB5jB,KAAK2jB,EAAahvB,IAKlD,GAAIivB,EAAgBtvB,OAAS,EAAG,CAC5B,GAAIuvB,GAAUlwB,IACdiwB,GAAgB5kB,QAAQ,SAAU8kB,IACiB,IAA3CD,EAAQxR,eAAelW,QAAQ2nB,IAC/BD,EAAQxR,eAAerS,KAAK8jB,KAGhCnwB,KAAK0e,iBAA4D,IAA1C1e,KAAK0e,eAAelW,QAAQrG,IACnDnC,KAAK0e,eAAe1B,OAAOhd,KAAK0e,eAAelW,QAAQrG,GAAU,GAEjE8tB,EAAgBtvB,OAAS,IACzBX,KAAKowB,gBAAgBzM,EAAWlE,IAAKzf,KAAK0e,eAAgBvc,GAC1DnC,KAAKqwB,2BAGRrwB,KAAKswB,YACNtwB,KAAKqiB,cAETriB,KAAK8gB,kBACL9gB,KAAKkpB,mBAETzL,EAAgBvd,UAAUmwB,wBAA0B,WAChD,IAAK,GAAIrvB,GAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IACpC,GAAIhB,KAAK6e,iBAAiB7e,KAAKuf,OAAOve,GAAGma,KAAoD,OAA7Cnb,KAAK6e,iBAAiB7e,KAAKuf,OAAOve,GAAGma,IAAc,CAC/Fnb,KAAK0e,gBAAkB1e,KAAK6e,iBAAiB7e,KAAKuf,OAAOve,GAAGma,IAAIR,IAChE,IAAIpa,GAAMP,KAAKuf,OAAOve,GAAGma,EACzBnb,MAAKowB,gBAAgBpwB,KAAK6e,iBAAiBte,GAAKkf,IAAKzf,KAAK0e,eAAgB1e,KAAK6e,iBAAiBte,GAAKgwB,UAIjH9S,EAAgBvd,UAAUswB,uBAAyB,SAAU1mB,GACzD,IAAK,GAAIklB,GAAQ,EAAGA,EAAQvvB,OAAOoE,KAAK7D,KAAK6e,kBAAkBle,OAAQquB,IACnEhvB,KAAK6e,iBAAiB/U,EAAKqR,IAAM,MAGzCsC,EAAgBvd,UAAUkwB,gBAAkB,SAAU3Q,EAAK9E,EAAK4V,GAC5D,GAAKA,EAAL,CAGA,GAAIE,GAAWtrB,SAASorB,EAAO9lB,aAAa,cAAe,IACvDimB,EAASvrB,SAASorB,EAAO9lB,aAAa,YAAa,GACvDzK,MAAK2e,qBAAsB3e,KAAK0e,gBAAmB1e,KAAK2wB,eAAiB3wB,KAAK0e,eAC9E,KAAK,GAAI1d,GAAI,EAAGA,EAAIhB,KAAK2e,oBAAoBhe,OAAQK,IAAK,CACtD,GAAwC,IAApChB,KAAK2e,oBAAoBhe,OACzB,MAEJ,KAAK,GAAIiwB,GAAM,EAAGA,EAAM5wB,KAAK2e,oBAAoBhe,OAAQiwB,IACrD5wB,KAAK6e,iBAAiB7e,KAAK2e,oBAAoBiS,GAAKzV,KAChDR,IAAK3a,KAAK2e,oBAAoBiS,GAC9BnR,IAAKA,EACL8Q,OAAQA,EAGhB,IAAIf,GAAakB,EAASD,EACtBI,EAAa1rB,SAASnF,KAAK2e,oBAAoB3d,GAAGyJ,aAAa,cAAe,IAC9EqmB,EAAe3rB,SAASnF,KAAK2e,oBAAoB3d,GAAGyJ,aAAa,YAAa,IAC9EsmB,EAAa5rB,SAASnF,KAAK2e,oBAAoB3d,GAAGyJ,aAAa,cAAe,IAC9E6W,MAAW,GACX2O,MAAkB,EAOtB,KANqD,IAAjDjwB,KAAK4e,uBAAuBpW,QAAQ+nB,IACpCvwB,KAAK4e,uBAAuBvS,KAAKkkB,IAEqC,IAAtEvwB,KAAK4e,uBAAuBpW,QAAQxI,KAAK2e,oBAAoB3d,KAC7DhB,KAAK4e,uBAAuBvS,KAAKrM,KAAK2e,oBAAoB3d,IAE1D6vB,EAAa,GAAKE,EAAa,EAAG,CAClC,GAAIC,GAAsBhxB,KAAKqmB,gBAAgBrmB,KAAK2e,oBAAoB3d,GAAGma,GAC3EmG,GAAW0P,EAAoBtR,GAE/B,KAAK,GADDuR,GAAQvpB,SAASwb,eAAe8N,EAAoB7V,IAC/C+V,EAAIF,EAAoBvR,IAAKyR,EAAIR,EAASD,EAAUS,IAAK,CAC9DlxB,KAAKswB,YAAa,EAClBtwB,KAAKwf,oBAAoBwR,GAAuBvR,IAAKuR,EAAoBvR,IAAM,IAC/EwR,EAAMthB,aAAa,WAAYqhB,EAAoBvR,IAAI/I,YACvD1W,KAAK4gB,iBAAiBqQ,EAAOD,EAAoBvR,IAAK6B,GACtDthB,KAAKwwB,uBAAuBS,GAC5BjxB,KAAKkf,UAAW+R,OAAexR,IAAKuR,EAAoBvR,IAAKC,IAAK4B,EAC9DqC,GAAa3jB,KAAKqmB,gBAAgB4K,EAAM9V,GAC5Cnb,MAAKwf,oBAAoBmE,GAAcjE,IAAK4B,EAAU7B,IAAKuR,EAAoBvR,KAC/E,IAAI0R,GAAWhsB,SAAS8rB,EAAMxmB,aAAa,YAAa,IACpDiiB,EAASvnB,SAAS8rB,EAAMxmB,aAAa,YAAa,IAClDiW,EAAQvb,SAAS8rB,EAAMxmB,aAAa,cAAe,IACnDkW,EAAQxb,SAAS8rB,EAAMxmB,aAAa,cAAe,IACnD2mB,IACJA,GAAgB/kB,KAAK4kB,GACrBG,EAAgB/kB,KAAKkkB,GACrBN,EAAkBjwB,KAAKsoB,WAAW6I,EAAUzE,EAAQhM,EAAOC,EAAOyQ,GAC9DpxB,KAAK8hB,cAA8D,IAA/CmO,EAAgBznB,QAAQxI,KAAK8hB,cACjDmO,EAAgBjT,OAAOiT,EAAgBznB,QAAQxI,KAAK8hB,aAAc,GAEtE9hB,KAAKqxB,eAAepB,EAAiBvD,EAAQyE,EAAUF,GAE3DjxB,KAAKswB,YAAa,MAEjB,CACGtwB,KAAKwuB,iBACLxuB,KAAKwuB,gBAAiB,GAE1BxuB,KAAK2e,oBAAoB3d,GAAG2O,aAAa,WAAY6f,EAAW9Y,WAChE,IAAIwY,KACJA,GAAW7iB,KAAKrM,KAAK2e,oBAAoB3d,IACzCkuB,EAAW7iB,KAAKkkB,GAChBN,EAAkBjwB,KAAKsoB,WAAWkH,EAAYsB,EAAcC,EAAYF,EAAY3B,GAChFlvB,KAAK8hB,cAA8D,IAA/CmO,EAAgBznB,QAAQxI,KAAK8hB,cACjDmO,EAAgBjT,OAAOiT,EAAgBznB,QAAQxI,KAAK8hB,aAAc,GAEtER,EAAWnc,SAASnF,KAAK2e,oBAAoB3d,GAAGyJ,aAAa,YAAa,IAC1EzK,KAAK4gB,iBAAiB5gB,KAAK2e,oBAAoB3d,GAAIwuB,EAAYlO,GAC/DthB,KAAKwwB,uBAAuBxwB,KAAK2e,oBAAoB3d,IACrDhB,KAAKkf,UAAWlf,KAAK2e,oBAAoB3d,QAAYye,IAAK+P,EAAY9P,IAAK4B,EAC3E,IAAIqC,GAAa3jB,KAAKqmB,gBAAgBrmB,KAAK2e,oBAAoB3d,GAAGma,GAClEnb,MAAKwf,oBAAoBmE,GAAcjE,IAAK4B,EAAU7B,IAAK+P,IAC3DxvB,KAAKqxB,eAAepB,EAAiB3O,EAAUkO,EAAYxvB,KAAK2e,oBAAoB3d,QAIhGyc,EAAgBvd,UAAUmxB,eAAiB,SAAUpB,EAAiB3O,EAAUkO,EAAY8B,GACxF,GAAI3N,GAAa3jB,KAAKqmB,gBAAgBiL,EAAMnW,GAE5C,IADAnb,KAAKwf,oBAAoBmE,GAAclE,IAAK+P,EAAY9P,IAAK4B,IACzD2O,EAAgBtvB,OAAS,EAAG,CAC5B,GAAI4wB,GAAUvxB,IACdA,MAAK0e,kBACL1e,KAAK2wB,gBAAiB,EACtBV,EAAgB5kB,QAAQ,SAAU8kB,GAC9BoB,EAAQ7S,eAAerS,KAAK8jB,IAGhC,KAAK,GADDqB,GAAqBrsB,SAASmsB,EAAM7mB,aAAa,YAAa,IACzDkD,EAAI,EAAGA,EAAI3N,KAAK0e,eAAe/d,OAAQgN,IAC5C3N,KAAKowB,gBAAgBoB,EAAoBxxB,KAAK0e,eAAgB4S,EAElEtxB,MAAK2wB,gBAAiB,MAErB,CAID,GAHK3wB,KAAKwuB,gBACNxuB,KAAKqiB,cAELriB,KAAK4e,uBAAuBje,OAAS,EAoBrC,IAAK,GADD8wB,GAASzxB,KACJH,EAAI,EAAGA,EAAIG,KAAK4e,uBAAuBje,OAAQd,KAnB1C,SAAUA,GACpB,GAAI6xB,GAASvsB,SAASssB,EAAO7S,uBAAuB/e,GAAG4K,aAAa,YAAa,IAC7EknB,EAAaxsB,SAASssB,EAAO7S,uBAAuB/e,GAAG4K,aAAa,YAAa,IACjFiW,EAAQvb,SAASssB,EAAO7S,uBAAuB/e,GAAG4K,aAAa,cAAe,IAC9EkW,EAAQxb,SAASssB,EAAO7S,uBAAuB/e,GAAG4K,aAAa,cAAe,IAC9EmnB,MAAmB,EACvBA,GAAmBH,EAAOnJ,WAAWoJ,EAAQC,EAAYjR,EAAOC,EAAO8Q,EAAO7S,wBAC1E6S,EAAO3P,cAAiE,IAAlD8P,EAAiBppB,QAAQipB,EAAO3P,cACtD8P,EAAiB5U,OAAO4U,EAAiBppB,QAAQipB,EAAO3P,aAAc,EAE1E,IAAIlS,GAAQ6hB,CACZG,GAAiBvmB,QAAQ,SAAU8kB,GAC/BvgB,EAAM8O,eAAerS,KAAK8jB,KAE1ByB,EAAiBjxB,OAAS,GAC1B8wB,EAAOrB,gBAAgBsB,EAAQD,EAAO/S,eAAgB+S,EAAO7S,uBAAuB/e,KAKhFA,EAGhBG,MAAK4e,4BAGbnB,EAAgBvd,UAAU0pB,oBAAsB,SAAU5I,GACtD,IAAK,GAAIhgB,GAAI,EAAGA,EAAIggB,EAAcrgB,OAAQK,IAGtC,IAAK,GADD6wB,GADU7Q,EAAchgB,GACEwP,iBAAiB,aACtCshB,EAAM,EAAGA,EAAMD,EAAgBlxB,OAAQmxB,IAC5CvmB,SAAOsmB,EAAgBC,KAInCrU,EAAgBvd,UAAU8hB,WAAa,SAAUzD,GAC7C,IAAK,GAAIvd,GAAI,EAAGA,EAAIud,EAAgB5d,OAAQK,IAAK,CAC7C,GAAImB,GAAUoc,EAAgBvd,GAC1B+wB,EAAexT,EAAgBvd,GAAG+K,cAAc,qBAChD/L,MAAKmiB,eACDniB,KAAKgyB,iBAAmB7vB,EAAQqO,iBAAiBxQ,KAAKgyB,iBAAiB,IACvEtrB,YAAUvE,EAAQqO,iBAAiBxQ,KAAKgyB,iBAAiB,KAlyD7D,gBAqyDAhyB,KAAK+kB,eACL/kB,KAAK2hB,aAAe3hB,KAAKggB,mBACzBhgB,KAAKiyB,iBAAiB9vB,EAAS4vB,KAI3CtU,EAAgBvd,UAAU+xB,iBAAmB,SAAUtX,EAAKuX,GACxDlyB,KAAKmf,iBAAmBnf,KAAKmyB,gBAC7B,KAAK,GAAI9sB,GAAI,EAAGA,EAAIrF,KAAKmf,iBAAiBxe,OAAQ0E,IAAK,CACnD,GAAI+sB,GAAUpyB,KAAKuP,cAAc,QAC7B8iB,MAAgB,EACpBH,GAAU1iB,YAAY4iB,GAGlBC,EAF6B,WAA7BryB,KAAKmf,iBAAiB9Z,IAAgD,WAA7BrF,KAAKmf,iBAAiB9Z,IAClC,YAA7BrF,KAAKmf,iBAAiB9Z,IAAiD,YAA7BrF,KAAKmf,iBAAiB9Z,GA3yDnE,WACA,WAgzDDqB,YAAU0rB,IAAWC,EAAeryB,KAAKmf,iBAAiB9Z,GAvzDzD,eA0zDToY,EAAgBvd,UAAUqhB,gBAAkB,SAAUpf,EAASwhB,GAC3D,GAAI/Z,IACAA,OACI8W,MAAOiD,EAAWjD,MAAMhK,WACxBiK,MAAOgD,EAAWhD,MAAMjK,WACxB6N,SAAUZ,EAAWY,SAAS7N,WAC9B8N,SAAUb,EAAWa,SAAS9N,WAC9B+N,SAAWjf,oBAAkBme,EAAWc,cAA6CuD,GAAjCrE,EAAWc,SAAS/N,WACxEgO,SAAWlf,oBAAkBme,EAAWe,cAA6CsD,GAAjCrE,EAAWe,SAAShO,WACxE+I,IAAKkE,EAAWlE,IAAI/I,WACpBgJ,IAAKiE,EAAWjE,IAAIhJ,YAG5B1W,MAAKygB,cAAc7W,EAAOzH,IAE9Bsb,EAAgBvd,UAAUsqB,gBAAkB,SAAU7G,GAClD,GAEI4G,GACA+H,EAHAC,EAAavyB,KAAK0mB,cAAc,GAChC8L,EAAYxyB,KAAK0mB,cAAc,EAenC,OAXI6D,GADA5G,GAAqC,oBAA0C,gBAAtBA,UAAkCA,EAAWjD,MAAQ,EAChGiD,EAAWjD,MAAQ8R,GAAc7O,EAAWjD,MAAQ,GAAK1gB,KAAK+iB,YAAY,GAG3EyP,EAGbF,EADA3O,GAAsC,oBAAYA,EAAWhD,MAAQ,GAAmC,gBAAtBgD,SACnEA,EAAWhD,MAAQ4R,GAAe5O,EAAWhD,MAAQ,GAAK3gB,KAAK+iB,YAAY,GAG5E5W,aAAWomB,IAErBD,EAAa/H,IAEzB9M,EAAgBvd,UAAUuyB,uBAAyB,SAAU7M,GACzD,GACI8M,GAAavtB,SAASygB,EAAKzjB,QAAQ8D,MAAMmR,IAAK,IAC9Cub,EAAcxtB,SAASygB,EAAKzjB,QAAQ8D,MAAMkR,KAAM,GAIpD,QAHUP,KAAK0C,MAAMoZ,GAAc1yB,KAAK0mB,cAAc,GAAK1mB,KAAK+iB,YAAY,KAClEnM,KAAK0C,MAAMqZ,GAAe3yB,KAAK0mB,cAAc,KAAM1mB,KAAK+iB,YAAY,OAIlFtF,EAAgBvd,UAAUkiB,sBAAwB,SAAUwQ,GAExD,IAAK,GADDxwB,GAAQpC,KACHgB,EAAI,EAAGA,EAAI4xB,EAAYjyB,OAAQK,IAAK,CACzC,GAAI0iB,GAAckP,EAAY5xB,EAE1BhB,MAAK6yB,QAAU,GAAIC,aAAUpP,GACzB5N,gBAAgB,EAChBwb,OAAO,EACPyB,SAAU/yB,KAAKmC,QACf6wB,cAAc,EACdC,OAAQjzB,KAAKgyB,gBAAkBhyB,KAAKgyB,gBAAkB,WACtDkB,MAAO,YACPC,UAAWnzB,KAAKozB,gBAAgB/gB,KAAKrS,MACrCqzB,SAAU,SAAUzN,GAChB,GAAIvB,GAAQjiB,EAAMikB,gBAAgBjkB,EAAM0f,YAAY3G,GAChD/Y,GAAMomB,cACNpmB,EAAMkmB,WAAWjE,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM3D,MAAO2D,EAAM1D,MAAOve,EAAM0f,aAAanhB,OAAS,GAC7FyB,EAAMkxB,kBAAkB1N,GACxBxjB,EAAMwe,iBAAiBxe,EAAM0f,YAAauC,EAAM5E,IAAK4E,EAAM3E,KAC3Dtd,EAAM2f,kBAAkB3f,EAAM0f,YAAauC,IAG3CjiB,EAAMwe,iBAAiBxe,EAAM0f,YAAauC,EAAM5E,IAAK4E,EAAM3E,IAE/D,IAAI6T,KACJnxB,GAAM0f,YAAc,IACpB,IAAIhY,GAAO1H,EAAMmmB,aAAa3C,EAC1BxjB,GAAM2jB,WACNxa,SAAOnJ,EAAM2jB,WAEjBtf,eAAarE,EAAMD,UAt4DvB,cAu4DIsE,eAAamf,EAAKzjB,UAt4D3B,eAu4DSC,EAAM2jB,UAAY,KAClBH,EAAKzjB,QAAQsB,UAAUuE,OAAO,aAC9B,IAAIyX,GAAMrd,EAAMqwB,uBAAuB7M,GAAM,GACzClG,EAAMtd,EAAMqwB,uBAAuB7M,GAAM,GACzCjC,EAAavhB,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,GAChD/Y,GAAMomB,cACsG,IAA5GpmB,EAAMkmB,WAAW7I,EAAKC,EAAKiE,EAAWjD,MAAOiD,EAAWhD,MAAOjZ,SAASwb,eAAepZ,EAAKqR,KAAKxa,QACjGyB,EAAMod,oBAAoBpd,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,KAAOsE,IAAKA,EAAKC,IAAKA,IACnFtd,EAAM8c,UAAU0G,EAAKzjB,QAAQgZ,IAAIsE,IAAMA,EACvCrd,EAAM8c,UAAU0G,EAAKzjB,QAAQgZ,IAAIuE,IAAMA,EACvCtd,EAAMqe,eAAgB7W,OAAS8V,IAAKA,EAAIhJ,WAAY+I,IAAKA,EAAI/I,aAAgBkP,EAAKzjB,SAClFC,EAAMigB,gBAGNjgB,EAAMod,oBAAoBpd,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,KACzDsE,IAAKrd,EAAM8c,UAAU0G,EAAKzjB,QAAQgZ,IAAIsE,IACtCC,IAAKtd,EAAM8c,UAAU0G,EAAKzjB,QAAQgZ,IAAIuE,MAE1CkG,EAAKzjB,QAAQwN,aAAa,WAAYvN,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,IAAIuE,IAAIhJ,YACjFkP,EAAKzjB,QAAQwN,aAAa,WAAYvN,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,IAAIsE,IAAI/I,YACjFtU,EAAMigB,cAEV,IAAImR,GAAgBpxB,EAAMikB,gBAAgBT,EAAKzjB,QAAQgZ,GACvD/Y,GAAMwe,iBAAiBgF,EAAKzjB,QAASqxB,EAAc/T,IAAK+T,EAAc9T,KACtEtd,EAAMmgB,eACNngB,EAAMogB,wBACN,KAAK,GAAIiR,GAAM,EAAGA,EAAMrxB,EAAMmd,OAAO5e,OAAQ8yB,IACrCrxB,EAAMmd,OAAOkU,GAAKhU,MAAQrd,EAAMsxB,mBAAmBD,GAAKhU,KACxDrd,EAAMmd,OAAOkU,GAAK/T,MAAQtd,EAAMsxB,mBAAmBD,GAAK/T,KACxD6T,EAAclnB,KAAKjK,EAAMmd,OAAOkU,GAGxC,IAAIF,EAAc5yB,OAAS,EAAG,CAC1B,GAAIgzB,IAAgBJ,cAAeA,EACnCnxB,GAAMiI,QAAQ,SAAUspB,GAE5BvxB,EAAMwxB,mBAAsB1qB,MAAO0c,EAAK1c,MAAO/G,QAASyjB,EAAKzjB,SAC7DC,EAAMiI,QAAQ,WAAYub,GAC1BxjB,EAAM0iB,eACN1iB,EAAMsb,KAAOtb,EAAMie,QAAO,GAC1Bje,EAAMioB,iBACNjoB,EAAM8d,iBACN9d,EAAMyoB,wBAAyB,EAC/BzoB,EAAMyxB,kBAEVC,KAAM,SAAUlO,GACZxjB,EAAM2xB,kBACF7qB,MAAO0c,EAAK1c,MACZ/G,QAASyjB,EAAKzjB,QACd7B,OAAQqlB,UAASC,SAAc,aAEnCxjB,EAAMiI,QAAQ,OAAQjI,EAAM2xB,kBAC5B3xB,EAAM4xB,YAAYpO,OAGyB,IAA/C5lB,KAAK8e,eAAetW,QAAQxI,KAAK6yB,UACjC7yB,KAAK8e,eAAezS,KAAKrM,KAAK6yB,WAM9CpV,EAAgBvd,UAAUqiB,aAAe,WACrCviB,KAAKkoB,mBACLloB,KAAKijB,qBACLjjB,KAAKqiB,eAET5E,EAAgBvd,UAAUggB,eAAiB,WACvClgB,KAAK8e,eAAezT,QAAQ,SAAUwnB,GAElCA,EAAQoB,iBAGhBxW,EAAgBvd,UAAUg0B,iBAAmB,SAAUzU,EAAKkB,EAAOwT,GAC3D1U,EAAMkB,GAAS3gB,KAAK0d,OACpB1d,KAAK0d,KAAO1d,KAAK0d,KAAOyW,EACxBn0B,KAAKqqB,mBAGb5M,EAAgBvd,UAAUkzB,gBAAkB,SAAUxN,GAClD,GAAIwO,GAAWxO,CACf5lB,MAAKqK,QAAQ,YAAa+pB,EAAU,SAAUA,GACtCnf,cACAmf,EAAS9R,WAAWsD,EAAKzjB,WAGjCnC,KAAK0zB,mBAAqB1zB,KAAKq0B,YAAYr0B,KAAKuf,QAChDvf,KAAK8hB,YAAc8D,EAAKzjB,QACxBnC,KAAKyuB,YAAc6F,KAAKC,MAAMD,KAAKE,UAAUx0B,KAAKyuB,aAClD,IAAIgG,GAAcz0B,KAAKitB,SAAW9nB,SAASygB,EAAKzjB,QAAQsI,aAAa,YAAa,GAClFzK,MAAK00B,SAAWvvB,SAASygB,EAAKzjB,QAAQsI,aAAa,YAAa,GAChE,IAAIgmB,GAAWtrB,SAASygB,EAAKzjB,QAAQsI,aAAa,cAAe,GACjEzK,MAAKk0B,iBAAiBO,EAAahE,EAAUA,GAC7CzwB,KAAKkgB,iBACLlgB,KAAK+lB,UAAYre,SAAS6H,cAAc,OACxCvP,KAAK+lB,UAAUtiB,UAAU0C,IAAI,YAC7BnG,KAAK+lB,UAAUtiB,UAAU0C,IAAI,uBAC7Bie,oBAASpkB,KAAK+lB,WAAa4O,SAAY,aACvCjuB,YAAU1G,KAAKmC,UA1+DH,cA2+DZuE,YAAUkf,EAAKzjB,UA1+DR,eA2+DPnC,KAAKmC,QAAQqN,YAAYxP,KAAK+lB,WAC9B/lB,KAAK+lB,UAAYre,SAASqE,cAAc,aACxC/L,KAAK+lB,UAAU9f,MAAMlC,OAAU/D,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,IAAIwF,MAAQ3gB,KAAK4iB,SAAS,GAAM,KACjG5iB,KAAK+lB,UAAU9f,MAAMjC,MAAShE,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,IAAIuF,MAAQ1gB,KAAK4iB,SAAS,GAAM,IAChG,IAAI4Q,GAAgBxzB,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,GACtDnb,MAAK4gB,iBAAiB5gB,KAAK+lB,UAAWyN,EAAc/T,IAAK+T,EAAc9T,MAI3EjC,EAAgBvd,UAAUm0B,YAAc,SAAUO,EAAQt0B,OACvC0nB,KAAX1nB,IACAA,KAEJ,KAAK,GAAIU,GAAI,EAAGA,EAAI4zB,EAAOj0B,OAAQK,IAAK,CAE/BV,EAAOU,KACRV,EAAOU,MAGX,KAAK,GAAIkwB,KAAK0D,GAAO5zB,GACjBV,EAAOU,GAAGkwB,GAAK0D,EAAO5zB,GAAGkwB,GAGjC,MAAO5wB,IAGXmd,EAAgBvd,UAAU8zB,YAAc,SAAUpO,GAC9C,GAAIiP,GACA9H,EACA+H,EACApV,EAAMoV,EAAU90B,KAAKyyB,uBAAuB7M,GAAM,GAClDnG,EAAMzf,KAAKyyB,uBAAuB7M,GAAM,EAC5C,MAAIlG,EAAM,GAAKD,EAAM,GAArB,CAGAzf,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,KAAOsE,IAAKA,EAAKC,IAAKA,GACjF,IAAIiE,GAAa3jB,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,GAGnD,IAFAnb,KAAKk0B,iBAAiBvQ,EAAWlE,IAAKkE,EAAWhD,MAAO,GACxD3gB,KAAKkgB,iBACDlgB,KAAKwoB,eACLxoB,KAAKygB,eAAgB7W,OAAS8V,IAAKA,EAAIhJ,WAAY+I,IAAKA,EAAI/I,aAAgBkP,EAAKzjB,SACjFnC,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,KAAOsE,IAAKA,EAAKC,IAAKA,IACjFmV,EAAS70B,KAAKkf,UAAW0G,EAAKzjB,YAAaud,IAC3CqN,EAAS/sB,KAAKkf,UAAW0G,EAAKzjB,YAAasd,IAC3Czf,KAAKkf,UAAW0G,EAAKzjB,aAAiBsd,IAAKA,EAAKC,IAAKA,GACrD1f,KAAKijB,sBACDjjB,KAAK00B,WAAaG,GAAU70B,KAAKitB,WAAaF,KAC9C/sB,KAAKszB,kBAAkB1N,GACnB5lB,KAAK00B,WAAaG,IAClB70B,KAAKitB,SAAWF,GAEhB/sB,KAAKitB,WAAaF,IAClB/sB,KAAK00B,SAAWG,GAEhB70B,KAAKwoB,eAAc,CACnBxoB,KAAK8hB,YAAc8D,EAAKzjB,OACxB,IAAIkiB,GAAQV,CACZ3jB,MAAK4uB,eAAiB5uB,KAAKsoB,WAAWjE,EAAM5E,IAAK4E,EAAM3E,IAAK2E,EAAM3D,MAAO2D,EAAM1D,MAAOiF,EAAKzjB,SACvFwhB,EAAWjE,KAAO1f,KAAKyiB,mBACvBziB,KAAK4uB,mBAET5uB,KAAK+hB,kBAAkB6D,EAAKzjB,QAASwhB,GACrC3jB,KAAKkoB,oBAIS,IAAtBloB,KAAKwoB,cACLxoB,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,KAAOsE,IAAKA,EAAKC,IAAKA,IAEjF1f,KAAKkf,UAAU0G,EAAKzjB,QAAQgZ,IAAIsE,MAAQA,GAAOzf,KAAKkf,UAAU0G,EAAKzjB,QAAQgZ,IAAIuE,MAAQA,IACvF1f,KAAKwf,oBAAoBxf,KAAKqmB,gBAAgBT,EAAKzjB,QAAQgZ,KAAOsE,IAAKA,EAAKC,IAAKA,IACjF1f,KAAKygB,eAAgB7W,OAAS8V,IAAKA,EAAIhJ,WAAY+I,IAAKA,EAAI/I,aAAgBkP,EAAKzjB,UAEjFnC,KAAK00B,WAAaI,IAClB90B,KAAK00B,SAAWG,EAChB70B,KAAKkoB,oBAEJloB,KAAKwoB,cACNxoB,KAAKszB,kBAAkB1N,GAE3B5lB,KAAK4pB,oBAAoB5pB,KAAKue,iBAC9Bve,KAAKgiB,WAAWhiB,KAAKue,iBACjBve,KAAKwoB,eAIb/K,EAAgBvd,UAAUqoB,aAAe,SAAU3C,GAE/C,IAAK,GADD9b,GACK9I,EAAI,EAAGA,EAAIhB,KAAKue,gBAAgB5d,OAAQK,IACzChB,KAAKue,gBAAgBvd,GAAGma,MAASyK,EAAKzjB,SACnCyjB,EAAKzjB,QAAQgZ,IAAOyK,KACvB9b,EAAO9J,KAAKue,gBAAgBvd,GAGpC,OAAO8I,IAEX2T,EAAgBvd,UAAUkrB,SAAW,SAAU3L,EAAK+J,EAAQuL,IACpDA,GAAkBA,YAAwBn1B,SAC1Cm1B,GAAgBA,GAGpB,KADA,GAAIpU,GAAQ,EACLlB,GAAO,GAAG,CAGb,IAFA,GAAIiB,GAAQ,EACRhB,EAAM8J,EACH9J,GAAO,GAAG,CACb,GAAIuL,GAAQjrB,KAAKwe,YAAYiB,EAC7B,IAAIwL,EAAO,CACP,GAAInhB,GAAOmhB,EAAMvL,EACjB,IAAI5V,KAAUirB,IACsB,IAAhCA,EAAavsB,QAAQsB,KAAiB3E,SAAS2E,EAAKW,aAAa,cAAe,KAAOiW,GACpFvb,SAAS2E,EAAKW,aAAa,cAAe,KAAOkW,EACpD,MAAO7W,KAGb4W,IACAhB,IAEJD,IACAkB,EAEN,MAAO,OAGXlD,EAAgBvd,UAAUozB,kBAAoB,SAAU1N,GACpD,GAAIoP,GACAC,EACAtU,EAAQxb,SAASygB,EAAKzjB,QAAQsI,aAAa,cAAe,IAC1DiV,EAAMva,SAASygB,EAAKzjB,QAAQsI,aAAa,YAAa,IACtDgV,EAAMta,SAASygB,EAAKzjB,QAAQsI,aAAa,YAAa,IACtDiW,EAAQvb,SAASygB,EAAKzjB,QAAQsI,aAAa,cAAe,IAC1D8f,EAAavqB,KAAK0mB,cAAc,GAChC4D,EAActqB,KAAK0mB,cAAc,GACjCtP,EAAc,IAARqI,EAAY,EAAM,GAASta,SAASmlB,EAAY5T,WAAY,IAAM1W,KAAK+iB,YAAY,IACzF5L,EAAe,IAARuI,EAAY,EAAM,GAASva,SAASolB,EAAW7T,WAAY,IAAM1W,KAAK+iB,YAAY,GAC7FiS,GAAch1B,KAAK0mB,cAAc,GACjCuO,EAAej1B,KAAK0mB,cAAc,GAClC1mB,KAAK+e,WAAW3H,IAAMpX,KAAK+lB,UAAU9f,MAAMmR,IAAMA,EAAM,KACvDpX,KAAK+e,WAAW5H,KAAOnX,KAAK+lB,UAAU9f,MAAMkR,KAAOA,EAAO,KAC1DnX,KAAK+e,WAAWhb,OAAS/D,KAAK+lB,UAAU9f,MAAMlC,OAAW4c,EAAQqU,GAAiBrU,EAAQ,GAAK3gB,KAAK+iB,YAAY,GAAO,KACvH/iB,KAAK+e,WAAW/a,MAAQhE,KAAK+lB,UAAU9f,MAAMjC,MAAU0c,EAAQuU,GAAkBvU,EAAQ,GAAK1gB,KAAK+iB,YAAY,GAAO,MAG1HtF,EAAgBvd,UAAUmmB,gBAAkB,SAAUzG,GAElD,IAAK,GADDsV,GACKl0B,EAAI,EAAGA,EAAIhB,KAAKuf,OAAO5e,OAAQK,IAChChB,KAAKuf,OAAOve,GAAGma,KAAOyE,IACtBsV,EAAsBl1B,KAAKuf,OAAOve,GAG1C,OAAOk0B,IAOXzX,EAAgBvd,UAAUi1B,SAAW,SAAUlL,GAC3CjqB,KAAK6qB,wBAAyB,EAC9B7qB,KAAKmhB,SACA8I,EAAM1F,WACP0F,EAAM1F,SAAW,GAEhB0F,EAAMzF,WACPyF,EAAMzF,SAAW,GAEhByF,EAAM9O,KACP8O,EAAM9O,GAAK,UAAYnb,KAAK2d,QAAQjH,WACpC1W,KAAK2d,QAAU3d,KAAK2d,QAAU,EAGlC,IAAIkH,GAAY,GAAIrH,GAAMxd,KAAM,SAAUiqB,GAAO,EACjDjqB,MAAKuf,OAAOlT,KAAKwY,GACjB7kB,KAAKohB,gBAAgByD,IACjB7kB,KAAKqhB,eAAiBwD,EAAUnF,KAAO1f,KAAKqhB,eAAkBwD,EAAUnF,IAAMmF,EAAUnE,QACxF1gB,KAAKwf,oBAAoBqF,GAAanF,IAAK1f,KAAKqhB,eAAiBwD,EAAUnE,QAE/E1gB,KAAKiV,UAAW,CAChB,IAAI8V,GAAO/qB,KAAKyqB,WAAW5F,GAAW,EAAM,KAC5C7kB,MAAKiV,SAAYA,cAAcjV,KAAKse,iBACpCte,KAAKkf,UAAU2F,EAAU1J,KAAQsE,IAAKoF,EAAUpF,IAAKC,IAAKmF,EAAUnF,KACpE1f,KAAKyuB,YAAY5J,EAAU1J,KAAQsE,IAAKoF,EAAUpF,IAAKC,IAAKmF,EAAUnF,KACtE1f,KAAKijB,qBACLjjB,KAAKmC,QAAQizB,sBAAsB,aAAcrK,EACjD,IAAImH,GAAYnH,EAAKhf,cAAc,qBA6BnC,IA5BI/L,KAAKggB,mBACLhgB,KAAKiiB,wBACLjiB,KAAK4pB,oBAAoB5pB,KAAKue,mBAG9Bve,KAAKwuB,gBAAiB,EACtBxuB,KAAK8hB,YAAciJ,EACd/qB,KAAK4uB,iBACN5uB,KAAK4uB,mBAET5uB,KAAK4gB,iBAAiBmK,EAAMlG,EAAUpF,IAAKoF,EAAUnF,KACrD1f,KAAK+hB,kBAAkBgJ,EAAMlG,GAC7B7kB,KAAKwuB,gBAAiB,GAEtBxuB,KAAK+kB,eACL/kB,KAAK2hB,aAAe3hB,KAAKggB,mBACzBhgB,KAAKiyB,iBAAiBlH,EAAMmH,GAE5BlyB,KAAKmiB,eACLniB,KAAK2hB,aAAe3hB,KAAKggB,mBACzBhgB,KAAKoiB,uBAAuB1a,SAASwb,eAAe2B,EAAU1J,MAE9Dnb,KAAKioB,eACLjoB,KAAKkoB,mBAETloB,KAAKijB,qBACLjjB,KAAKqiB,cACLriB,KAAKwiB,yBACDxiB,KAAK+kB,cACL,IAAK,GAAI/jB,GAAI,EAAGA,EAAI+pB,EAAKva,iBAAiB,aAAa7P,OAAQK,IAAK,CAChE,GAAIsP,GAAmC,SAAtB1J,UAAQC,KAAKC,KAAmB,wBAA0B,WAC3EW,gBAAatB,IAAI4kB,EAAKva,iBAAiB,aAAaxP,GAAIsP,EAAWtQ,KAAKglB,kBAAmBhlB,MACjE,SAAtB4G,UAAQC,KAAKC,MACbW,eAAatB,IAAI4kB,EAAKva,iBAAiB,aAAaxP,GAAI,aAAchB,KAAKilB,uBAAwBjlB,MAI/GA,KAAK6qB,wBAAyB,EAC9B7qB,KAAK6zB,kBAOTpW,EAAgBvd,UAAUm1B,YAAc,SAAUpL,GAC9C,GAAKA,EAAM9O,GAAX,CAGA,GAAIqY,GAAgBxzB,KAAKqmB,gBAAgB4D,EAAM9O,GAC/C,IAAKqY,EAAL,CAGAxzB,KAAKmhB,SACL8I,EAAMvK,IAAOuK,EAAMvK,IAAM,EAAK,EAAMuK,EAAMvK,IAAM1f,KAAKugB,QAAYvgB,KAAKugB,QAAU,EAAI0J,EAAMvK,IACtFla,oBAAkBykB,EAAMvK,OACxBuK,EAAMvK,IAAM8T,EAAc9T,KAE9B1f,KAAKwf,oBAAoBgU,EAAevJ,GACxCjqB,KAAKohB,gBAAgBoS,EACrB,IAAIzI,GAAOrjB,SAASwb,eAAe+G,EAAM9O,GAMzC,IALAnb,KAAK8hB,YAAciJ,EACnB/qB,KAAK6jB,aAAekH,EAAKhf,cAAc,sBACnCgf,EAAKhf,cAAc,sBACnB/L,KAAKmjB,iBAAiBqQ,EAActvB,SAAU6mB,EAAK5P,GAAK,WAntE/C,qBAotEb4P,EAAKvb,YAAYxP,KAAK6jB,cAClB2P,EAAczP,OAAQ,CACtB,GAAIC,GAAwB+G,EAAKhf,cAAc,mBAC3Cgf,EAAKhf,cAAc,mBAAqB/L,KAAKmjB,iBAAiB,GAAI4H,EAAK5P,GAAK,WAAY,GAC5FzU,aAAUsd,IAttET,mBAutEDA,EAAsBve,UAAY,EAC9B0V,GAAKnb,KAAKmC,QAAQgZ,GAAK,iBAAmBqY,EAAcrY,EAC5Dnb,MAAKsjB,eAAekQ,EAAczP,OAAQC,EAAuB7I,GAAI,GACrEnb,KAAK6jB,aAAarU,YAAYwU,OAG1B+G,GAAKhf,cAAc,oBACnBR,SAAOwf,EAAKhf,cAAc,mBAGlC,IAAIynB,EAAcvoB,QAAS,CACvBjL,KAAKikB,UAAY8G,EAAKhf,cAAc,oBAAsBgf,EAAKhf,cAAc,oBACzE/L,KAAKmjB,iBAAiBqQ,EAActvB,SAAU6mB,EAAK5P,GAAK,QAtuErD,mBAuuEPnb,KAAKikB,UAAUxe,UAAY,EAC3B,IAEIye,GAAqB,iBAFNlkB,KAAK6jB,aAAa9X,cAAc,mBAC/CqG,OAAO+R,iBAAiBnkB,KAAK6jB,aAAa9X,cAAc,oBAAoBhI,OAAS,OAC/B,GAC1DqgB,qBAASpkB,KAAKikB,WAAalgB,OAAQmgB,GACnC,IAAI/I,GAAKnb,KAAKmC,QAAQgZ,GAAK,kBAAoBqY,EAAcrY,EAC7Dnb,MAAKsjB,eAAekQ,EAAcvoB,QAASjL,KAAKikB,UAAW9I,GAAI,GAC/Dnb,KAAK6jB,aAAarU,YAAYxP,KAAKikB,eAG/B8G,GAAKhf,cAAc,qBACnBR,SAAOwf,EAAKhf,cAAc,oBAGlC/L,MAAKuhB,gBAAgBwJ,EAAMyI,GAC3BxzB,KAAK6gB,kBAAkBkK,EAAMyI,GAC7BxzB,KAAK4gB,iBAAiBmK,EAAMyI,EAAc/T,IAAK+T,EAAc9T,KAC7D1f,KAAK+hB,kBAAkBgJ,EAAMyI,GAC7BxzB,KAAK8hB,YAAc,KACnB9hB,KAAKuiB,eACLviB,KAAKwiB,4BAET/E,EAAgBvd,UAAUsiB,uBAAyB,WAC/CxiB,KAAK2uB,WAAa3uB,KAAKwe,YACvBxe,KAAKyuB,YAAc6F,KAAKC,MAAMD,KAAKE,UAAUx0B,KAAKkf,aAMtDzB,EAAgBvd,UAAUo1B,UAAY,WAGlC,IAAK,GAFDC,GAAav1B,KAAKq0B,YAAYr0B,KAAKuf,QACnCiW,KACKx0B,EAAI,EAAGA,EAAIu0B,EAAW50B,OAAQK,IACnCw0B,EAAanpB,MACT8O,GAAIoa,EAAWv0B,GAAGma,GAAIsE,IAAK8V,EAAWv0B,GAAGye,IAAKC,IAAK6V,EAAWv0B,GAAG0e,IAAKgB,MAAO6U,EAAWv0B,GAAG0f,MAC3FC,MAAO4U,EAAWv0B,GAAG2f,MAAO4D,SAAUgR,EAAWv0B,GAAGujB,SAAUC,SAAU+Q,EAAWv0B,GAAGwjB,SACtFC,SAAU8Q,EAAWv0B,GAAGyjB,SAAUC,SAAU6Q,EAAWv0B,GAAG0jB,UAGlE,WAKJjH,EAAgBvd,UAAUu1B,UAAY,WAClC,IAAK,GAAIz0B,GAAI,EAAGA,EAAIhB,KAAKue,gBAAgB5d,OAAQK,IAC7CuK,SAAOvL,KAAKue,gBAAgBvd,GAEhChB,MAAK01B,iBACL11B,KAAK0d,KAAO,EACZ1d,KAAKye,uBACLze,KAAKqqB,iBACLrqB,KAAKqiB,cACLriB,KAAKwe,eACLxe,KAAK2e,uBACL3e,KAAK0e,kBACL1e,KAAK4e,0BACL5e,KAAKue,mBACLve,KAAKkf,aACLlf,KAAKyuB,eACLzuB,KAAK4L,eAAgB2T,YAAc,GACnCvf,KAAKuiB,eACLviB,KAAKwiB,0BAOT/E,EAAgBvd,UAAUy1B,YAAc,SAAUxa,GAE9C,IAAK,GADD/Y,GAAQpC,KACHgB,EAAI,EAAGA,EAAIhB,KAAKue,gBAAgB5d,OAAQK,IACzChB,KAAKue,gBAAgBvd,GAAGma,KAAOA,IAC/B5P,SAAOvL,KAAKue,gBAAgBvd,IAC5BhB,KAAKue,gBAAgBvB,OAAOhc,EAAG,IAE/BhB,KAAKuf,OAAOve,GAAGma,KAAOA,IACtBnb,KAAKuf,OAAOvC,OAAOhc,EAAG,GACtBhB,KAAKijB,qBACLjjB,KAAKqiB,cAGbriB,MAAKuiB,eACLviB,KAAKye,oBAAoBpT,QAAQ,SAAUvB,GACnCA,EAAKqR,KAAOA,GACZ/Y,EAAMqc,oBAAoBzB,OAAO5a,EAAMqc,oBAAoBjW,QAAQsB,GAAO,KAGlF9J,KAAKwiB,0BAST/E,EAAgBvd,UAAU01B,UAAY,SAAUza,EAAIsE,EAAKC,GACrD1f,KAAK4d,iBAAkB,CACvB,IAAI4V,GAAgBxzB,KAAKqmB,gBAAgBlL,EACrCuE,GAAM,EACNA,EAAM,EAEDA,EAAM1f,KAAKugB,UAChBb,EAAM1f,KAAKugB,QAAUiT,EAAc9S,OAEvC1gB,KAAKwf,oBAAoBgU,GAAiB/T,IAAKA,EAAKC,IAAKA,GACzD,IAAI/E,GAAMjT,SAASwb,eAAe/H,EAClCnb,MAAK8hB,YAAcnH,EACnB3a,KAAKitB,SAAW9nB,SAASwV,EAAIlQ,aAAa,YAAa,IACvDzK,KAAK00B,SAAWvvB,SAASwV,EAAIlQ,aAAa,YAAa,IACvDzK,KAAKygB,eAAgB7W,OAAS8V,IAAKA,EAAIhJ,WAAY+I,IAAKA,EAAI/I,aAAgBiE,GAC5E3a,KAAKijB,qBACLjjB,KAAK4gB,iBAAiBjG,EAAK8E,EAAKC,GAChC1f,KAAK+hB,kBAAkBpH,EAAK6Y,GAC5BxzB,KAAK8gB,kBACL9gB,KAAKuiB,eACLviB,KAAKwiB,yBACLxiB,KAAK8hB,YAAc,KACf9hB,KAAKioB,eACLjoB,KAAKkoB,mBAETloB,KAAK4d,iBAAkB,GAE3BH,EAAgBvd,UAAUugB,cAAgB,SAAU7W,EAAO+Q,GACvD,IAAK,GAAI3Z,GAAI,EAAGA,EAAIvB,OAAOoE,KAAK+F,GAAOjJ,OAAQK,IACvCvB,OAAOoE,KAAK+F,KACRA,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0e,KAC7B/E,EAAIhL,aAAa,WAAY/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0e,IAAIhJ,YAE9D9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIye,KAC7B9E,EAAIhL,aAAa,WAAY/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIye,IAAI/I,YAE9D9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0f,OAC7B/F,EAAIhL,aAAa,aAAc/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0f,MAAMhK,YAElE9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI2f,OAC7BhG,EAAIhL,aAAa,aAAc/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI2f,MAAMjK,YAElE9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIujB,UAC7B5J,EAAIhL,aAAa,gBAAiB/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIujB,SAAS7N,YAExE9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIwjB,UAC7B7J,EAAIhL,aAAa,gBAAiB/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIwjB,SAAS9N,YAExE9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIyjB,UAC7B9J,EAAIhL,aAAa,gBAAiB/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAIyjB,SAAS/N,YAExE9M,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0jB,UAC7B/J,EAAIhL,aAAa,gBAAiB/F,EAAMnK,OAAOoE,KAAK+F,GAAO5I,IAAI0jB,SAAShO,cAWxF+G,EAAgBvd,UAAU21B,YAAc,SAAU1a,EAAIuF,EAAOC,GACzD,GAAI6S,GAAgBxzB,KAAKqmB,gBAAgBlL,EACzCnb,MAAK6d,cAAe,EACpB7d,KAAKwf,oBAAoBgU,GAAiB9S,MAAOA,EAAOC,MAAOA,IAC/D3gB,KAAKohB,gBAAgBoS,GACrBxzB,KAAK4qB,kBAAkB4I,EACvB,IAAI7Y,GAAMjT,SAASwb,eAAe/H,EAClCnb,MAAK8hB,YAAcnH,EACnB3a,KAAKygB,eAAgB7W,OAAS8W,MAAO8S,EAAc9S,MAAMhK,WAAYiK,MAAO6S,EAAc7S,MAAMjK,aAAgBiE,GAChH3a,KAAK6gB,kBAAkBlG,EAAK6Y,GAC5BxzB,KAAK+hB,kBAAkBpH,EAAK6Y,GAC5BxzB,KAAKuiB,eACLviB,KAAK8gB,kBACL9gB,KAAK6d,cAAe,GAMxBJ,EAAgBvd,UAAU+b,QAAU,WAChCxV,eAAazG,KAAKmC,UAAW,oBAAqB,QAAS,eAAgB,cAC3EnC,KAAKmC,QAAQsZ,gBAAgB,QAC7B,KAAK,GAAIza,GAAI,EAAGA,EAAIhB,KAAK8e,eAAene,OAAQK,IAC5ChB,KAAK8e,eAAe9d,GAAGib,SAE3Bjc,MAAK01B,iBACD11B,KAAKmgB,OACLngB,KAAKmgB,MAAMnY,SAEfnG,EAAO3B,UAAU+b,QAAQ5Z,KAAKrC,OAElCyd,EAAgBvd,UAAUw1B,eAAiB,WACvC11B,KAAKue,gBAAgBlT,QAAQ,SAAUvB,GACnCA,EAAK9B,YAGbyV,EAAgBvd,UAAUyiB,aAAe,WACrC3iB,KAAK+E,UAAY2B,YAAU1G,KAAKmC,SAAU,SAAWsE,eAAazG,KAAKmC,SAAU,UAErFsb,EAAgBvd,UAAU41B,gBAAkB,SAAU3a,GAGlD,IAAK,GAFD4a,GACApb,EAAMjT,SAASwb,eAAe/H,GACzBna,EAAI,EAAGA,EAAIhB,KAAK8e,eAAene,OAAQK,IAE5C,GADA+0B,EAAoB/1B,KAAK8e,eAAe9d,GAAGmB,UAAYwY,EAAM3a,KAAK8e,eAAe9d,GAAK,KAElF,MAAO+0B,EAGf,OAAOA,IAOXtY,EAAgBvd,UAAU81B,yBAA2B,WACjDh2B,KAAK0iB,wBACL1iB,KAAKqqB,iBACLrqB,KAAKoqB,cACL,KAAK,GAAIppB,GAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAQK,IAAK,CACvE,GAAI2Z,GAAM3a,KAAKmC,QAAQqO,iBAAiB,YAAYxP,GAChD2iB,EAAa3jB,KAAKqmB,gBAAgB1L,EAAIQ,GAC1Cnb,MAAK6gB,kBAAkBlG,EAAKgJ,GAC5B3jB,KAAK4gB,iBAAiBjG,EAAKgJ,EAAWlE,IAAKkE,EAAWjE,OAG9DjC,EAAgBvd,UAAU+1B,wBAA0B,SAAU1W,GAC1Dvf,KAAKy1B,YACLz1B,KAAK4L,eAAgB2T,OAAQA,IAAU,GACvCvf,KAAKof,eACDpf,KAAKmgB,OACLngB,KAAKmgB,MAAMnY,SAEfhI,KAAKiV,UAAW,EAChBjV,KAAK6f,aACL7f,KAAKiV,SAAYA,cAAcjV,KAAKse,iBAChCte,KAAK+f,eACL/f,KAAKigB,iBAGbxC,EAAgBvd,UAAUg2B,iBAAmB,SAAU3W,GACnD,GAAInd,GAAQpC,IACPwF,qBAAkB+Z,KACnBvf,KAAK2d,QAAU,EACf4B,EAAOlU,QAAQ,SAAU4e,GAChBA,EAAM9O,KACP/Y,EAAMod,oBAAoByK,GAAS9O,GAAI,UAAY/Y,EAAMub,QAAQjH,aACjEtU,EAAMub,QAAUvb,EAAMub,QAAU,OAUhDF,EAAgBvd,UAAUoD,kBAAoB,SAAUC,EAASC,GAC7D,GAAIpB,GAAQpC,IACRuD,GAAQgc,QACRvf,KAAKk2B,iBAAiB3yB,EAAQgc,OAElC,KAAK,GAAI5b,GAAK,EAAGC,EAAKnE,OAAOoE,KAAKN,GAAUI,EAAKC,EAAGjD,OAAQgD,IAExD,OADWC,EAAGD,IAEV,IAAK,YACD3D,KAAK4L,eAAgB7G,UAAWxB,EAAQwB,YAAa,GACrD/E,KAAK2iB,cACL,MACJ,KAAK,aACD3iB,KAAK4L,eAAgB+V,WAAYpe,EAAQoe,aAAc,GACnD3hB,KAAKggB,mBACLhgB,KAAKiiB,uBAET,MACJ,KAAK,gBACDjiB,KAAK4L,eAAgBuW,cAAe5e,EAAQ4e,gBAAiB,GAC7DniB,KAAK6pB,cAAc7pB,KAAK8e,eACxB,MACJ,KAAK,gBAED,GADA9e,KAAK4L,eAAgBmZ,cAAexhB,EAAQwhB,gBAAiB,GACzD/kB,KAAK+kB,cACL/kB,KAAKgiB,WAAWhiB,KAAKue,iBACrBve,KAAK8kB,mBAEJ,CAED,IAAK,GADD9D,GAAgBhhB,KAAKmC,QAAQqO,iBAAiB,yCACzCxP,EAAI,EAAGA,EAAIggB,EAAcrgB,OAAQK,IAAK,CAC3C,GAAIsP,GAAmC,SAAtB1J,UAAQC,KAAKC,KAAmB,wBAA0B,YACvE3E,EAAU6e,EAAchgB,EAC5ByG,gBAAaO,OAAO7F,EAASmO,EAAWtQ,KAAKglB,mBACnB,SAAtBpe,UAAQC,KAAKC,MACbW,eAAaO,OAAO7F,EAAS,aAAcnC,KAAKilB,wBAGxDjlB,KAAK4pB,oBAAoB5pB,KAAKue,iBAElC,KACJ,KAAK,cACDve,KAAK4L,eAAgBmX,YAAaxf,EAAQwf,cAAe,GACzD/iB,KAAKg2B,2BACLh2B,KAAKkpB,iBACL,MACJ,KAAK,kBACDlpB,KAAK4L,eAAgBomB,gBAAiBzuB,EAAQyuB,kBAAmB,EACjE,KAAShxB,EAAI,EAAGA,EAAIhB,KAAKmC,QAAQqO,iBAAiB,YAAY7P,OAAQK,IAAK,CACvE,GAAI2Z,GAAM3a,KAAKmC,QAAQqO,iBAAiB,YAAYxP,EAC5BhB,MAAK81B,gBAAgBnb,EAAIQ,IAC/B8X,OAASjzB,KAAKgyB,gBAEpC,KACJ,KAAK,gBACDhyB,KAAK4L,eAAgBqc,cAAe1kB,EAAQ0kB,gBAAiB,GAC7DjoB,KAAKkoB,kBACL,MACJ,KAAK,gBACGloB,KAAK+f,eACL/f,KAAK4L,eAAgBmU,cAAexc,EAAQwc,gBAAiB,GAC7D/f,KAAKigB,iBAGDjgB,KAAKmgB,OACL5U,SAAOvL,KAAKmgB,MAGpB,MACJ,KAAK,eACDngB,KAAK4L,eAAgB4c,aAAcjlB,EAAQilB,eAAgB,EAC3D,MACJ,KAAK,SACIjlB,EAAQgd,UACTvgB,KAAK8f,kBAAmB,EACxB9f,KAAKi2B,wBAAwB1yB,EAAQgc,QACrCvf,KAAK8f,kBAAmB,EAE5B,MACJ,KAAK,UACD9f,KAAK8f,kBAAmB,EACpBvc,EAAQgc,QACRvf,KAAKi2B,wBAAwB1yB,EAAQgc,QAEzCvf,KAAK4L,eAAgB2U,QAAShd,EAAQgd,UAAW,GACjDvgB,KAAKue,mBACLve,KAAKqhB,eAAiBrhB,KAAKugB,QAC3BvgB,KAAKqf,oBACLrf,KAAKuf,OAAOlU,QAAQ,SAAU4e,GAE1B,GADA7nB,EAAMgf,gBAAgB6I,GAClB7nB,EAAMif,eAAiB4I,EAAMvK,KAAOtd,EAAMif,eAAkB4I,EAAMvK,IAAMuK,EAAMvJ,MAAQ,CACtF,GAAIY,GAAWlf,EAAMif,eAAiB4I,EAAMvJ,KAC5Cte,GAAMod,oBAAoByK,GAASvK,IAAK4B,EAAW,EAAI,EAAIA,IAC3Dlf,EAAMmf,gBAAgB7Z,SAASwb,eAAe+G,EAAM9O,IAAK8O,GAE7D7nB,EAAMye,kBAAkBnZ,SAASwb,eAAe+G,EAAM9O,IAAK8O,GAC3D7nB,EAAMmc,gBAAgBlS,KAAK3E,SAASwb,eAAe+G,EAAM9O,KACzD/Y,EAAMwe,iBAAiBlZ,SAASwb,eAAe+G,EAAM9O,IAAK8O,EAAMxK,IAAKwK,EAAMvK,KAC3Etd,EAAM0f,YAAcpa,SAASwb,eAAe+G,EAAM9O,IAClD/Y,EAAM2f,kBAAkBra,SAASwb,eAAe+G,EAAM9O,IAAK8O,GAC3D7nB,EAAM0f,YAAc,OAExB9hB,KAAKuiB,eACLviB,KAAKwiB,yBACLxiB,KAAK8f,kBAAmB,EACxB9f,KAAKkpB,oBASrBzL,EAAgBvd,UAAU8G,eAAiB,WACvC,GAAImvB,IAAa,SACjB,OAAOn2B,MAAKiH,aAAakvB,IAO7B1Y,EAAgBvd,UAAUgH,cAAgB,WACtC,MAAO,mBAEX9G,GACI2B,YAAS,IACV0b,EAAgBvd,UAAW,oBAAiB,IAC/CE,GACI2B,YAAS,IACV0b,EAAgBvd,UAAW,oBAAiB,IAC/CE,GACI2B,YAAS,IACV0b,EAAgBvd,UAAW,mBAAgB,IAC9CE,GACI2B,YAAS,IACV0b,EAAgBvd,UAAW,oBAAiB,IAC/CE,GACI2B,WAAS,IACV0b,EAAgBvd,UAAW,sBAAmB,IACjDE,GACI2B,YAAU,EAAG,KACd0b,EAAgBvd,UAAW,kBAAe,IAC7CE,GACI2B,WAAS,IACV0b,EAAgBvd,UAAW,cAAW,IACzCE,GACI2B,YAAS,IACV0b,EAAgBvd,UAAW,oBAAiB,IAC/CE,GACI2B,WAAS,OACV0b,EAAgBvd,UAAW,sBAAmB,IACjDE,GACI2B,WAAS,UACV0b,EAAgBvd,UAAW,aAAU,IACxCE,GACI2B,WAAS,qBACV0b,EAAgBvd,UAAW,iBAAc,IAC5CE,GACIgd,gBAAeI,IAChBC,EAAgBvd,UAAW,aAAU,IACxCE,GACI2B,YAAU,kBACX0b,EAAgBvd,UAAW,uBAAoB,IAClDE,GACIid,WACDI,EAAgBvd,UAAW,aAAU,IACxCE,GACIid,WACDI,EAAgBvd,UAAW,gBAAa,IAC3CE,GACIid,WACDI,EAAgBvd,UAAW,WAAQ,IACtCE,GACIid,WACDI,EAAgBvd,UAAW,eAAY,IAC1CE,GACIid,WACDI,EAAgBvd,UAAW,kBAAe,IAC7CE,GACIid,WACDI,EAAgBvd,UAAW,aAAU,IACxCE,GACIid,WACDI,EAAgBvd,UAAW,iBAAc,IAC5CE,GACIid,WACDI,EAAgBvd,UAAW,cAAW,IACzCE,GACIid,WACDI,EAAgBvd,UAAW,gBAAa,IAC3Cud,EAAkBrd,GACdkd,yBACDG,IAELF"}