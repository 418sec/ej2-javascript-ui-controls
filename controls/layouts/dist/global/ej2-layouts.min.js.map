{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < this.separatorSize) ? '0px' :\n                        (nextPaneSize - this.separatorSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < this.separatorSize) ? '0px' :\n                        (prePaneSize - this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + this.separatorSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneExpanded = this.nextPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n            }\n            else {\n                this.expand(index);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            if (this.allPanes.length <= 2) {\n                this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n            }\n            else {\n                var targetEle = void 0;\n                var lastBarIndex = (index === this.allBars.length);\n                var barIndex = lastBarIndex ? index - 1 : index;\n                if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                    targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n                }\n                else {\n                    targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                        this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n                }\n                this.allPanes[index].classList.add(PANE_HIDDEN);\n                this.allPanes[index].classList.add(COLLAPSE_PANE);\n                this.allPanes[index].setAttribute('aria-expanded', 'false');\n                this.allPanes[index].style.flexGrow = '0';\n            }\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","setAttribute","flexGrow","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","beforeExpandArgs","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}