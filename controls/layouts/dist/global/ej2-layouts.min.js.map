{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboardlayout/dashboardlayout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\n/**\n * Interface to configure pane properties such as its content, size, min, max, and resizable.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                var newVal = Object(newProp.paneSettings[index])[property];\n                                index = (this.enableRtl) ? (this.allBars.length - 1) - index : index;\n                                if (property === 'content') {\n                                    this.allPanes[index].innerHTML = '';\n                                    this.setTemplate(newVal, this.allPanes[index]);\n                                }\n                                if (property === 'resizable') {\n                                    EventHandler.remove(this.allBars[index], 'mousedown', this.onMouseDown);\n                                    if (newVal) {\n                                        EventHandler.add(this.allBars[index], 'mousedown', this.onMouseDown, this);\n                                        this.currentSeparator = this.allBars[index];\n                                        if (this.isResizable()) {\n                                            this.showResizer(this.allBars[index]);\n                                            this.allBars[index].classList.add(RESIZABLE_BAR);\n                                        }\n                                    }\n                                    else {\n                                        this.hideResizer(this.allBars[index]);\n                                        this.allBars[index].classList.remove(RESIZABLE_BAR);\n                                    }\n                                }\n                                if (property === 'size') {\n                                    this.allPanes[index].style.flexBasis = newVal;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' && this.paneSettings[paneIndex].resizable) {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.boundingRectValues = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.getBoundingClientRect().width :\n            pane.getBoundingClientRect().height;\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.paneSettings.length < 1) {\n            this.prePaneDimenson = this.boundingRectValues(this.previousPane);\n            this.nextPaneDimension = this.boundingRectValues(this.nextPane);\n            return;\n        }\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar ROOT = 'e-dashboard-layout';\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        addClass([this.element], [ROOT]);\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panels[i].id = 'layout_' + this.panelID.toString();\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue, className) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.panels = [];\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var colValue = parseInt(panelElement.getAttribute('data-col'), 10);\n                this.setPanelPosition(panelElement, rowValue, colValue);\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setMinMaxValues(this.panels[i]);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.checkColumnValue = this.maxColumnValue;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        if (!(this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches)) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches)) {\n            this.cellSize[1] = Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = 1;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        if (this.columns > 1) {\n            maxCol = this.columns;\n            return maxCol;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeX + this.panels[i].col > maxCol) {\n                maxCol = this.panels[i].sizeX + this.panels[i].col;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxCol = this.columns;\n        }\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            this.renderTemplate(panelModel.header, headerTemplateElement);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        if (panelModel.content && panelModel.content) {\n            this.panelBody = this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            this.renderTemplate(panelModel.content, this.panelBody);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: parseInt(panelElement.getAttribute('data-sizex'), 10),\n            sizeY: parseInt(panelElement.getAttribute('data-sizey'), 10),\n            minSizeX: parseInt(panelElement.getAttribute('data-minsizex'), 10),\n            minSizeY: parseInt(panelElement.getAttribute('data-minsizey'), 10),\n            maxSizeX: parseInt(panelElement.getAttribute('data-maxsizex'), 10),\n            maxSizeY: parseInt(panelElement.getAttribute('data-maxsizey'), 10),\n            row: parseInt(panelElement.getAttribute('data-row'), 10),\n            col: parseInt(panelElement.getAttribute('data-col'), 10),\n            id: panelElement.getAttribute('id'),\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        this.panels.push(model);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n                EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = (e.currentTarget).closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = this.moveTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass && this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass && this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            el.setAttribute('data-sizeX', this.getCellInstance(el.id).sizeX.toString());\n            el.setAttribute('data-sizeY', this.getCellInstance(el.id).sizeY.toString());\n            el.setAttribute('data-row', this.getCellInstance(el.id).row.toString());\n            el.setAttribute('data-col', this.getCellInstance(el.id).col.toString());\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = this.upTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        var row = item.row;\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth, true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight, true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.getItems(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            item.row = row;\n            item.col = col;\n            item.sizeX = sizeX;\n            item.sizeY = sizeY;\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        return Math.ceil(pixels / curColWidth);\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        return Math.ceil(pixels / this.cellSize[1]);\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisionItems(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                var isSamePosition = this.oldRowCol[item.id].col === columnValue &&\n                    this.oldRowCol[item.id].row === rowValue;\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (oldRow && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.getCellInstance(item.id).row = rowValue;\n            this.getCellInstance(item.id).col = columnValue;\n            item.setAttribute('data-col', this.getCellInstance(item.id).col.toString());\n            item.setAttribute('data-row', this.getCellInstance(item.id).row.toString());\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.onResize = function () {\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.childElementCount; i++) {\n                    var ele = this.element.children[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    cellInstance.row = row;\n                    cellInstance.col = col;\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.getRowColumn();\n                    this.setHeightWidth();\n                }\n            }\n            this.panelResponsiveUpdate();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var panelElements = this.element.querySelectorAll('.e-panel');\n        this.updatedRows = panelElements.length;\n        for (var i = 0; i < panelElements.length; i++) {\n            if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                setStyle(panelElements[i], { 'width': '100%' });\n                panelElements[i].style.height = ' ' + (this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                var panelModel = this.getCellInstance(panelElements[i].id);\n                panelModel.col = 0;\n                panelModel.row = i;\n                this.setPanelPosition(panelElements[i], panelModel.row, panelModel.col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id, '');\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.element.appendChild(cellElement);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.calculateMaxColumnValue(this.panels);\n        if (this.columns < this.maxColumnValue) {\n            this.columns = this.maxColumnValue;\n        }\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            panel.sizeX = panel.minSizeX;\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            panel.sizeX = panel.maxSizeX;\n        }\n        else if (panel.sizeX > this.columns) {\n            panel.sizeX = this.columns;\n        }\n        else {\n            panel.sizeX = panel.sizeX;\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            panel.sizeY = panel.minSizeY;\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            panel.sizeY = panel.maxSizeY;\n        }\n        else {\n            panel.sizeY = panel.sizeY;\n        }\n    };\n    DashboardLayout.prototype.calculateMaxColumnValue = function (panels) {\n        for (var count = 0; count < panels.length; count++) {\n            var panel_2 = panels[count];\n            if (isUndefined(this.maxColumnValue)) {\n                this.maxColumnValue = panel_2.col + panel_2.sizeX;\n            }\n            else if (this.maxColumnValue < panel_2.col) {\n                this.maxColumnValue = panel_2.col + panel_2.sizeX;\n            }\n            if (this.maxColumnValue < panel_2.col + panel_2.sizeX) {\n                this.maxColumnValue = panel_2.sizeX + panel_2.col;\n            }\n        }\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        var isValid = true;\n        if (this.panels.length === 1) {\n            if (isNullOrUndefined(this.panels[0].content)) {\n                isValid = false;\n            }\n            else {\n                isValid = true;\n            }\n        }\n        if (this.element.querySelectorAll('.e-panel').length > 0 || (isValid && (this.panels.length > 0))) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.updatePanelLayout(cell, cells[j]);\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisionItems = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisionItems(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisionItems(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisionItems(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                var checkValues = this.getColumnValues(this.checkingElement);\n                var eleValues = this.getColumnValues(ele);\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisionItems(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                var subValues = this.getColumnValues(this.checkingElement);\n                var eleValues = this.getColumnValues(ele);\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.getColumnValues = function (element) {\n        var colValues = [];\n        var colValue = parseInt(element.getAttribute('data-col'), 10);\n        var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n        for (var i = colValue; i < colValue + sizeXValue; i++) {\n            colValues.push(i);\n        }\n        return colValues;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_1 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_2 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_1.columns - 1; column >= 0; column--) {\n                _loop_2(column);\n            }\n        };\n        var this_1 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_1(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisionItems(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.getCellInstance(element_1.id).row = rowValue;\n                this.getCellInstance(element_1.id).col = colValue;\n                element_1.setAttribute('data-row', rowValue.toString());\n                element_1.setAttribute('data-col', colValue.toString());\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisionItems(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisionItems(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        panelModel.row = direction === 0 ? eleSwapRow : collisionItemsRow + 1;\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.getCellInstance(collisions[count].id).row = collisionItemsRow;\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisionItems(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        initialModel[i].setAttribute('data-col', this.spacedColumnValue.toString());\n                        initialModel[i].setAttribute('data-row', this.spacedRowValue.toString());\n                        model.col = this.spacedColumnValue;\n                        model.row = this.spacedRowValue;\n                        this.topAdjustable = false;\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    overlapElementModel.row = overlapElementModel.row + 1;\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    panelModel.col = colValue;\n                    panelModel.row = overlapElementModel.row;\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisionItems(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisionItems(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                panelModel.col = colValue;\n                panelModel.row = updatedRow;\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        panelModel.col = colValue;\n        panelModel.row = updatedRow;\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_3 = function (p) {\n                    var rowVal = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_2.collisionItems(rowVal, colValue_1, sizeX, sizeY, this_2.overlapSubElementClone);\n                    if (this_2.mainElement && collisionModels1.indexOf(this_2.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_2.mainElement), 1);\n                    }\n                    var proxy = this_2;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_2.updateRowColumn(rowVal, this_2.overlapElement, this_2.overlapSubElementClone[p]);\n                    }\n                };\n                var this_2 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_3(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles || [southEast];\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            addClassValue = double;\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        element.setAttribute('data-sizex', panelModel.sizeX.toString());\n        element.setAttribute('data-sizey', panelModel.sizeY.toString());\n        if (!isNullOrUndefined(panelModel.row)) {\n            element.setAttribute('data-row', panelModel.row.toString());\n        }\n        if (!isNullOrUndefined(panelModel.col)) {\n            element.setAttribute('data-col', panelModel.col.toString());\n        }\n        if (!isNullOrUndefined(panelModel.minSizeX)) {\n            element.setAttribute('data-minSizeX', panelModel.minSizeX.toString());\n        }\n        if (!isNullOrUndefined(panelModel.minSizeY)) {\n            element.setAttribute('data-minSizeY', panelModel.minSizeY.toString());\n        }\n        if (!isNullOrUndefined(panelModel.maxSizeX)) {\n            element.setAttribute('data-maxSizeX', panelModel.maxSizeX.toString());\n        }\n        if (!isNullOrUndefined(panelModel.maxSizeY)) {\n            element.setAttribute('data-maxSizeY', panelModel.maxSizeY.toString());\n        }\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.getItems(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.oldRowCol[args.element.id].row = _this.getCellInstance(args.element.id).row = row;\n                            _this.oldRowCol[args.element.id].col = _this.getCellInstance(args.element.id).col = col;\n                            args.element.setAttribute('data-col', col.toString());\n                            args.element.setAttribute('data-row', row.toString());\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.getCellInstance(args.element.id).row = _this.oldRowCol[args.element.id].row;\n                            _this.getCellInstance(args.element.id).col = _this.oldRowCol[args.element.id].col;\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.moveItemsUpwards();\n                        _this.updateOldRowColumn();\n                        _this.sortedPanel();\n                        _this.cloneArray = _this.sortedArray;\n                        _this.cloneObject = JSON.parse(JSON.stringify(_this.oldRowCol));\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            _this.trigger('change', changedPanels);\n                        }\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.trigger('drag', args);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        if (args.element.offsetWidth !== this.setXYDimensions(this.getCellInstance(args.element.id))[1]) {\n            this.cellSize[0] = parseInt(args.element.style.width, 10) / sizeX;\n            this.cellSize[1] = parseInt(args.element.style.height, 10) / sizeY;\n        }\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.getCellInstance(args.element.id).row = row;\n        this.getCellInstance(args.element.id).col = col;\n        var panelModel = this.getCellInstance(args.element.id);\n        var itemsInTheWay;\n        itemsInTheWay = this.getItems(row, col, panelModel.sizeX, panelModel.sizeY, args.element);\n        var hasItemsInTheWay = itemsInTheWay.length !== 0;\n        if (this.allowPushing) {\n            args.element.setAttribute('data-col', col.toString());\n            args.element.setAttribute('data-row', row.toString());\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n            args.element.setAttribute('data-col', col.toString());\n            args.element.setAttribute('data-row', row.toString());\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getItems = function (row, column, sizeX, sizeY, elements) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (elements && !(elements instanceof Array)) {\n            elements = [elements];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, column + w, elements);\n                if (item && (!elements || elements.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        if (args.element.offsetWidth !== this.setXYDimensions(this.getCellInstance(args.element.id))[1]) {\n            this.cellSize[1] = parseInt(args.element.style.height, 10) / sizeY;\n            this.cellSize[0] = parseInt(args.element.style.width, 10) / sizeX;\n        }\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panels.push(panel);\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        var cell = this.renderCell(panel);\n        this.oldRowCol[panel.id] = { row: panel.row, col: panel.col };\n        this.cloneObject[panel.id] = { row: panel.row, col: panel.col };\n        this.updateOldRowColumn();\n        this.setMinMaxValues(panel);\n        this.element.appendChild(cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panel.row, panel.col);\n            this.updatePanelLayout(cell, panel);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging) {\n            var subCollection_1 = [];\n            this.panelCollection.forEach(function (item) {\n                if (item.id === panel.id) {\n                    subCollection_1.push(item);\n                }\n            });\n            this.enableDraggingContent(subCollection_1);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        this.bindEvents();\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        panelInstance.row = row;\n        panelInstance.col = col;\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns;\n        }\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        ele.setAttribute('data-col', col.toString());\n        ele.setAttribute('data-row', row.toString());\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        this.movePanelCalled = false;\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        panelInstance.sizeX = sizeX;\n        panelInstance.sizeY = sizeY;\n        this.setMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        ele.setAttribute('data-sizeX', panelInstance.sizeX.toString());\n        ele.setAttribute('data-sizeY', panelInstance.sizeY.toString());\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateOldRowColumn();\n        this.moveItemsUpwards();\n        this.sortedPanel();\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], [ROOT]);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            var ele = this.panelCollection[i];\n        }\n        this.element.innerHTML = '';\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([0, 0])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([{}], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newVal","innerHTML","setTemplate","EventHandler","remove","onMouseDown","add","currentSeparator","isResizable","showResizer","hideResizer","style","flexBasis","setRTL","enableRtl","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","createSplitPane","addSeparator","getPanesDimensions","api","value","dataIndex","getAttribute","isNullOrUndefined","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","attribute","slice","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","select","sizeValue","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","childCount","clonedEle","parentNode","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","getPaneDetails","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","paneValue","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","boundingRectValues","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","item","append","childElement","nodeType","destroy","detach","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","panels","id","row","col","calculateCellSize","createPanelElement","idValue","ele","getRowColumn","setHeightWidth","childElementCount","panelElements","panelElement","rowValue","colValue","setPanelPosition","getInlinePanels","maxCol","maxRow","querySelector","panel_1","renderPanels","setMinMaxValues","setHeightAndWidth","tempObject","mediaQuery","window","matchMedia","matches","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","allowFloating","moveItemsUpwards","updateOldRowColumn","cloneArray","checkColumnValue","maxColumnValue","cloneObject","JSON","parse","stringify","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","sizeY","columns","sizeX","getElementById","createSubElement","templateParser","trim","error","renderTemplate","appendElement","templateElements","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","model","minSizeX","minSizeY","maxSizeX","maxSizeY","isUndefined","resizeEvents","allowResizing","downResizeHandler","upResizeHandler","onResize","bind","el","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMinWidth","getResizeRowColumn","mainElement","upTarget","pixelsToColumns","pixelsToRows","getItems","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","availableRow","availableColumn","collisionItems","columnValue","ignoreItems","column","undefined","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","updatedRows","setStyle","heightValue","widthValue","getComputedStyle","setXYDimensions","renderCell","panel","dashBoardCell","setXYAttributes","calculateMaxColumnValue","xValue","count","panel_2","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","forEach","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","getColumnValues","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","colValues","sortCollisionItems","this_1","updatedModels","adjust","resetLayout","collisions","addPanelCalled","element_1","checkCollision","swapAvailability","available","eleModel","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","m","this_2","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","drag","onDragStart","cloneModels","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","elements","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","subCollection_1","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","setProperties","keyEntity"],"mappings":"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"}