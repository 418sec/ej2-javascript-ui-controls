{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.paneSettings[i].size && this.paneSettings[i].size.indexOf('%') > -1 ?\n                    (parseInt(newValSize, 10) / 100) * this.element.offsetWidth : this.allPanes[index].offsetWidth;\n            }\n        }\n        staticPaneWidth = (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = this.element.offsetWidth - staticPaneWidth;\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n            document.activeElement.classList.contains(SPLIT_BAR)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR)) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n            else {\n                this.expand(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValue = {\n            size: this.paneSettings[index].size,\n            min: this.paneSettings[index].min,\n            max: this.paneSettings[index].max,\n            content: this.paneSettings[index].content,\n            resizable: this.paneSettings[index].resizable,\n            collapsed: collapsed,\n            collapsible: this.paneSettings[index].collapsible,\n            cssClass: this.paneSettings[index].size,\n        };\n        this.paneSettings.splice(index, 1, paneValue);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","indexOf","offsetWidth","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetHeight","nextPane","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","splice","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity"],"mappings":"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"}