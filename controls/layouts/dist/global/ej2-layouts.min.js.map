{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var changedProp = Object.keys(newProp.paneSettings);\n                        for (var j = 0; j < changedProp.length; j++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[j], 10);\n                            var property = Object.keys(newProp.paneSettings[index])[0];\n                            var newVal = Object(newProp.paneSettings[index])[property];\n                            index = (this.enableRtl) ? (this.allBars.length - 1) - index : index;\n                            if (property === 'content') {\n                                this.allPanes[index].innerHTML = '';\n                                this.setTemplate(newVal, this.allPanes[index]);\n                            }\n                            if (property === 'resizable') {\n                                EventHandler.remove(this.allBars[index], 'mousedown', this.onMouseDown);\n                                if (newVal) {\n                                    EventHandler.add(this.allBars[index], 'mousedown', this.onMouseDown, this);\n                                    this.currentSeparator = this.allBars[index];\n                                    if (this.isResizable()) {\n                                        this.showResizer(this.allBars[index]);\n                                        this.allBars[index].classList.add(RESIZABLE_BAR);\n                                    }\n                                }\n                                else {\n                                    this.hideResizer(this.allBars[index]);\n                                    this.allBars[index].classList.remove(RESIZABLE_BAR);\n                                }\n                            }\n                            if (property === 'size') {\n                                this.allPanes[index].style.flexBasis = newVal;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl) ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl) ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? pane.offsetWidth :\n                    pane.offsetHeight;\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue, target).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.boundingRectValues = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.getBoundingClientRect().width :\n            pane.getBoundingClientRect().height;\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.paneSettings.length < 1) {\n            this.prePaneDimenson = this.boundingRectValues(this.previousPane);\n            this.nextPaneDimension = this.boundingRectValues(this.nextPane);\n            return;\n        }\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        this.nextPaneCurrentWidth = parseInt(this.nextPaneCurrentWidth, 10);\n        this.prevPaneCurrentWidth = parseInt(this.prevPaneCurrentWidth, 10);\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange, pane).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange, pane).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (childCount < this.paneSettings.length) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n            }\n        }\n        childCount = target.children.length;\n        var child = target.children;\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","SPLIT_H_BAR","SPLIT_V_BAR","RESIZE_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","changedProp","j","index","parseInt","property","newVal","innerHTML","setTemplate","EventHandler","remove","onMouseDown","add","currentSeparator","isResizable","showResizer","hideResizer","style","flexBasis","setRTL","enableRtl","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","setDimension","getHeight","getWidth","createSplitPane","addSeparator","getPanesDimensions","rtl","size","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","select","sizeValue","isNullOrUndefined","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","children","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","childCount","clonedEle","parentNode","eventName","info","name","resizable","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","getPaneDetails","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","value","parseFloat","slice","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","paneIndex","selection","defaultVal","paneValue","min","max","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","boundingRectValues","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","item","append","childElement","nodeType","content","destroy","detach","Collection","Event","NotifyPropertyChanges","Component"],"mappings":"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"}