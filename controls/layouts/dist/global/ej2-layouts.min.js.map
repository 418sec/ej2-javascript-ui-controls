{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    eleVal.style.display = '';\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    val = eleVal.outerHTML.trim();\n                    detach(eleVal);\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","trim","display","removeAttribute","outerHTML","templateFn","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}