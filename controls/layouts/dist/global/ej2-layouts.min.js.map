{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n            document.activeElement.classList.contains(SPLIT_BAR)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n            else {\n                this.expand(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        if (isBlazor() && this.isInlineRendering) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}