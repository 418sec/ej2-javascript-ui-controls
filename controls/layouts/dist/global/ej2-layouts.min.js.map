{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboardlayout/dashboardlayout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation.toLowerCase());\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        e.target.classList.add(SPLIT_BAR_HOVER);\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.previousPane.style.flexGrow = '1';\n        this.nextPane.style.flexGrow = '0';\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            (this.currentBarIndex !== 0) ?\n                this.previousPane.previousElementSibling.style.flexGrow = '' : this.nextPane.style.flexGrow = '';\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        var expandEventArgs = this.afterAction(e);\n        this.trigger('expanded', expandEventArgs);\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        var collapseEventArgs = this.afterAction(e);\n        this.trigger('collapsed', collapseEventArgs);\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        var templateFn;\n        if (this.element.nodeName === 'EJS-SPLITTER' || typeof (template) !== 'object') {\n            templateFn = compile(template);\n        }\n        else {\n            templateFn = compile(template.outerHTML);\n        }\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement);\n                this.panelContent.appendChild(headerTemplateElement);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody);\n                this.panelContent.appendChild(this.panelBody);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n                EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = (e.currentTarget).closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    // tslint:disable-next-line:max-func-body-length\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = this.moveTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                diffY = this.minTop - this.elementY;\n                this.mOffY = dY - diffY;\n            }\n            this.elementY += diffY;\n            this.elementHeight -= diffY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                diffX = this.minLeft - this.elementX;\n                this.mOffX = dX - diffX;\n            }\n            this.elementX += diffX;\n            this.elementWidth -= diffX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = this.upTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.onResize = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles || [southEast, southWest, north, west, south, east];\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n                sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n                minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : 1,\n                minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : 1,\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n                col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined,\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            _this.trigger('change', changedPanels);\n                        }\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.trigger('drag', args);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.trigger('dragStart', args);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        this.bindEvents();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.setMinMaxValues(panelInstance);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        var ele = document.getElementById(id);\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateFn","fromElements","nodeName","compile","outerHTML","item","append","childElement","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","ele","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","trim","error","renderTemplate","appendElement","templateElements","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","upResizeHandler","onResize","bind","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMinWidth","getResizeRowColumn","attributes","upTarget","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","moveItemsUpwards","allowFloating","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","undefined","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","drag","onDragStart","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","keyEntity"],"mappings":"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"}