{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function () {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, this, prop, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","this_4","localPanel","pan"],"mappings":"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"}