{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\n/**\n * Interface to configure pane properties such as its content, size, min, max, and resizable.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                var newVal = Object(newProp.paneSettings[index])[property];\n                                index = (this.enableRtl) ? (this.allBars.length - 1) - index : index;\n                                if (property === 'content') {\n                                    this.allPanes[index].innerHTML = '';\n                                    this.setTemplate(newVal, this.allPanes[index]);\n                                }\n                                if (property === 'resizable') {\n                                    EventHandler.remove(this.allBars[index], 'mousedown', this.onMouseDown);\n                                    if (newVal) {\n                                        EventHandler.add(this.allBars[index], 'mousedown', this.onMouseDown, this);\n                                        this.currentSeparator = this.allBars[index];\n                                        if (this.isResizable()) {\n                                            this.showResizer(this.allBars[index]);\n                                            this.allBars[index].classList.add(RESIZABLE_BAR);\n                                        }\n                                    }\n                                    else {\n                                        this.hideResizer(this.allBars[index]);\n                                        this.allBars[index].classList.remove(RESIZABLE_BAR);\n                                    }\n                                }\n                                if (property === 'size') {\n                                    this.allPanes[index].style.flexBasis = newVal;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' && this.paneSettings[paneIndex].resizable) {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.boundingRectValues = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.getBoundingClientRect().width :\n            pane.getBoundingClientRect().height;\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.paneSettings.length < 1) {\n            this.prePaneDimenson = this.boundingRectValues(this.previousPane);\n            this.nextPaneDimension = this.boundingRectValues(this.nextPane);\n            return;\n        }\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newVal","innerHTML","setTemplate","EventHandler","remove","onMouseDown","add","currentSeparator","isResizable","showResizer","hideResizer","style","flexBasis","setRTL","enableRtl","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","createSplitPane","addSeparator","getPanesDimensions","api","value","dataIndex","getAttribute","isNullOrUndefined","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","attribute","slice","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","select","sizeValue","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","childCount","clonedEle","parentNode","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","getPaneDetails","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","paneValue","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","boundingRectValues","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","item","append","childElement","nodeType","destroy","detach","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component"],"mappings":"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"}