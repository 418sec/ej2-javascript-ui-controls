{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.children[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}