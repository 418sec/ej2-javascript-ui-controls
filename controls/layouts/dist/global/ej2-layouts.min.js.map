{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}