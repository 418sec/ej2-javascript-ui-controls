{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.children[elementIndex];\n        return paneEle.classList.contains('e-pane') ? paneEle : null;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","checkSplitPane","currentBar","elementIndex","paneEle","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}