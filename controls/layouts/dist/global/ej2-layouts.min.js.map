{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, this.element.id + type); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        var _this = this;\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                setTimeout(function () { updateBlazorTemplate(_this.element.id + 'header', 'Header'); }, 0);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                setTimeout(function () { updateBlazorTemplate(_this.element.id + 'content', 'content'); }, 0);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        var _this = this;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            this.renderTemplate(panelInstance.header, headerTemplateElement, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            resetBlazorTemplate(this.element.id + 'header', 'Header');\n            setTimeout(function () { updateBlazorTemplate(_this.element.id + 'header', 'Header'); }, 0);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            this.renderTemplate(panelInstance.content, this.panelBody, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            resetBlazorTemplate(this.element.id + 'content', 'Content');\n            setTimeout(function () { updateBlazorTemplate(_this.element.id + 'content', 'Content'); }, 0);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childNodes","childEle","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","resetBlazorTemplate","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","keyEntity"],"mappings":"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"}