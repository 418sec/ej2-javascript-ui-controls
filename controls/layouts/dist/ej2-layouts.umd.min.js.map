{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.paneSettings[i].size && this.paneSettings[i].size.indexOf('%') > -1 ?\n                    (parseInt(newValSize, 10) / 100) * this.element.offsetWidth : this.allPanes[index].offsetWidth;\n            }\n        }\n        staticPaneWidth = (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = this.element.offsetWidth - staticPaneWidth;\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n            document.activeElement.classList.contains(SPLIT_BAR)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR)) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n            else {\n                this.expand(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValue = {\n            size: this.paneSettings[index].size,\n            min: this.paneSettings[index].min,\n            max: this.paneSettings[index].max,\n            content: this.paneSettings[index].content,\n            resizable: this.paneSettings[index].resizable,\n            collapsed: collapsed,\n            collapsible: this.paneSettings[index].collapsible,\n            cssClass: this.paneSettings[index].size,\n        };\n        this.paneSettings.splice(index, 1, paneValue);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","indexOf","offsetWidth","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetHeight","nextPane","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","splice","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate"],"mappings":"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"}