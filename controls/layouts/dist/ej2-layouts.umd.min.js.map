{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n        return paneEle ? paneEle : null;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","getElementsByClassName","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"wPAAA,IAAIA,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAK5DM,EAAO,aACPC,EAAkB,wBAClBC,EAAgB,sBAChBC,EAAO,SACPC,EAAe,oBACfC,EAAe,kBACfC,EAAY,cACZC,EAAc,yBACdC,EAAc,uBACdC,EAAc,gBACdC,EAAc,eACdC,EAAa,mBACbC,EAAgB,wBAChBC,EAAkB,oBAClBC,EAAmB,qBACnBC,EAAe,iBAEfC,EAAW,aAGXC,EAAc,gBACdC,EAAiB,mBACjBC,EAAc,gBACdC,EAAa,eACbC,EAAW,aACXC,EAAa,eACbC,EAAY,gBACZC,EAAc,aACdC,EAAgB,cAChBC,EAAc,gBACdC,EAAiB,cAKjBC,EAAgC,SAAUC,GAE1C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KAuB/D,OAzBAX,EAAUyD,EAAgBC,GAI1B3C,GACI6C,cACDH,EAAe5C,UAAW,YAAQ,GACrCE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,mBAAe,GAC5CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,cACDH,EAAe5C,UAAW,eAAW,GACjC4C,GACTI,iBAsBEC,EAA0B,SAAUJ,GAOpC,SAASI,EAASC,EAASC,GACvB,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAcnD,OAbAsD,EAAME,YACNF,EAAMG,aACNH,EAAMI,kBACNJ,EAAMK,WACNL,EAAMM,uBACNN,EAAMO,sBACNP,EAAMQ,2BAA4B,EAClCR,EAAMS,4BAA6B,EACnCT,EAAMU,mBACNV,EAAMW,OAAS,EACfX,EAAMY,qBAAuB,YAAa,WAAY,WAAY,mBAAoB,iBAAkB,eAAgB,kBACxHZ,EAAMa,wBAA0B,mBAAoB,aAAc,eAClEb,EAAMc,WAAa,IACZd,EAm6CX,OAx7CAjE,EAAU8D,EAAUJ,GA8BpBI,EAASjD,UAAUmE,kBAAoB,SAAUC,EAASC,GACtD,GAAKvE,KAAKqD,QAAQmB,UAAUC,SAASvD,GAGrC,IAAK,IAAIwD,EAAK,EAAGC,EAAKlF,OAAOmF,KAAKN,GAAUI,EAAKC,EAAGhE,OAAQ+D,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,SACD1E,KAAK6E,gBAAgB7E,KAAKqD,QAASiB,EAAQQ,OAAQ,UACnD,MACJ,IAAK,QACD9E,KAAK6E,gBAAgB7E,KAAKqD,QAASiB,EAAQS,MAAO,SAClD,MACJ,IAAK,WACD/E,KAAKgF,YAAYV,EAAQW,UACzB,MACJ,IAAK,UACDjF,KAAKkF,UAAUlF,KAAKmF,SACpB,MACJ,IAAK,gBACDnF,KAAKoF,iBAAiBd,EAAQe,eAC9B,MACJ,IAAK,cACDrF,KAAKsF,kBAAkBhB,EAAQiB,aAC/B,MACJ,IAAK,eACD,GAAMjB,EAAQkB,wBAAwB5F,OAAS2E,EAAQiB,wBAAwB5F,MAqC3EI,KAAKyF,sBACLzF,KAAK2D,WACL3D,KAAKwD,YACLxD,KAAK0F,gBAAgB1F,KAAKqD,SAC1BrD,KAAK2F,aAAa3F,KAAKqD,SACvBrD,KAAK4F,qBACL5F,KAAK6F,OAAO7F,KAAK8F,WACjB9F,KAAK+F,mBA1CL,IAAK,IADDC,EAAavG,OAAOmF,KAAKN,EAAQkB,cAC5BxE,EAAI,EAAGA,EAAIgF,EAAWrF,OAAQK,IAGnC,IAAK,IAFDiF,EAAQC,SAASzG,OAAOmF,KAAKN,EAAQkB,cAAcxE,GAAI,IACvDmF,EAAoB1G,OAAOmF,KAAKN,EAAQkB,aAAaS,IAAQtF,OACxDyF,EAAI,EAAGA,EAAID,EAAmBC,IAAK,CACxC,IAAIC,EAAW5G,OAAOmF,KAAKN,EAAQkB,aAAaS,IAAQG,GACxD,OAAQC,GACJ,IAAK,UACD,IAAIC,EAAW7G,OAAO6E,EAAQkB,aAAaS,IAAQI,GAC9CE,oBAAkBD,KACnBtG,KAAKwD,SAASyC,GAAOO,UAAY,GACjCxG,KAAKyG,YAAYH,EAAUtG,KAAKwD,SAASyC,KAE7C,MACJ,IAAK,YACD,IAAIS,EAASjH,OAAO6E,EAAQkB,aAAaS,IAAQI,GACjDrG,KAAK2G,eAAeV,EAAOS,GAC3B,MACJ,IAAK,cACD1G,KAAK4G,uBAAuBX,GAC5B,MACJ,IAAK,YACD3B,EAAQkB,aAAaS,GAAOY,UAAY7G,KAAK+F,cAAgB/F,KAAK8G,kBAAkBb,GACpF,MACJ,IAAK,OACD,IAAIc,EAAatH,OAAO6E,EAAQkB,aAAaS,IAAQI,GAClC,KAAfU,GAAsBR,oBAAkBQ,KACxC/G,KAAKwD,SAASyC,GAAOe,MAAMC,UAAYF,EACvC/G,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIvF,KAiB3D,MACJ,IAAK,YACD3B,KAAK6F,OAAOvB,EAAQwB,cAKpC3C,EAASjD,UAAUiH,UAAY,WAC3BnH,KAAKoH,QAAUpH,KAAKqD,QAAQgE,WAAU,GACtCrH,KAAKsH,cAAgBtH,KAAKqD,QAAQkE,cAClCC,eAAaxH,KAAKoH,UAAW,YAAa,QAASlG,IACnD,IAAIqE,EAAmC,eAArBvF,KAAKuF,YAA+BpE,EAAkBC,EACxEqG,YAAUzH,KAAKqD,SAAUkC,GACrBmC,UAAQC,UACRF,YAAUzH,KAAKqD,SAzLT,qBA4LdF,EAASjD,UAAU0H,eAAiB,WAChC,OAAO5H,KAAK6H,kBAOhB1E,EAASjD,UAAU4H,cAAgB,WAC/B,MAAO,YAMX3E,EAASjD,UAAU6H,OAAS,WACxB/H,KAAKgI,sBACLhI,KAAKgF,YAAYhF,KAAKiF,UACtBjF,KAAKkF,UAAUlF,KAAKmF,SACpBnF,KAAKiI,aAAajI,KAAKkI,UAAUlI,KAAKqD,SAAUrD,KAAKmI,SAASnI,KAAKqD,UACnErD,KAAK0F,gBAAgB1F,KAAKqD,SAC1BrD,KAAK2F,aAAa3F,KAAKqD,SACvBrD,KAAK4F,qBACL5F,KAAKoI,kBACLpI,KAAK6F,OAAO7F,KAAK8F,WACjB9F,KAAK+F,cACLsC,eAAanB,IAAIoB,SAAU,mBAAoBtI,KAAKuI,gBAAiBvI,OAEzEmD,EAASjD,UAAUqI,gBAAkB,SAAUC,GACtCA,EAAElI,OAAOkE,UAAUC,SAASjD,IAAe+E,oBAAkBvG,KAAKyI,oBACnEzI,KAAKyI,iBAAiBjE,UAAUkE,OAAO3G,GACvC/B,KAAKyI,iBAAiBjE,UAAUkE,OAAO1G,KAG/CmB,EAASjD,UAAU8H,oBAAsB,WAIrC,IAAK,IAHDW,EACAC,EAEKC,EAAY,EAAGA,EAAY7I,KAAKmE,uBAAuBxD,OAAQkI,IACpED,EAAQ5I,KAAKqD,QAAQyF,aAAa9I,KAAKmE,uBAAuB0E,IACzDtC,oBAAkBqC,KAGnB5I,KAFA2I,EAAM3I,KAAK+I,iBAAiB/I,KAAKmE,uBAAuB0E,KAE5CD,GAIpB,IAAK,IAAII,EAAY,EAAGA,EAAYhJ,KAAKqD,QAAQ4F,SAAStI,OAAQqI,IAC9D,IAAK,IAAIE,EAAW,EAAGA,EAAWlJ,KAAKkE,oBAAoBvD,OAAQuI,IAE/D,GADAN,EAAQ5I,KAAKqD,QAAQ4F,SAASD,GAAWF,aAAa9I,KAAKkE,oBAAoBgF,KAC1E3C,oBAAkBqC,GAAQ,CAE3BA,EAAiB,iBADjBD,EAAM3I,KAAK+I,iBAAiB/I,KAAKkE,oBAAoBgF,MACX,cAARP,EAAkC,SAAVC,EAAoBA,EAC1ErC,oBAAkBvG,KAAKwF,aAAawD,MACpChJ,KAAKwF,aAAawD,IACdG,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACXC,aAAa,EACb3C,WAAW,IAInB,IAAI4C,EAAUzJ,KAAKwF,aAAawD,GAAWL,GAC/B,cAARA,GAA+B,gBAARA,GAAiC,cAARA,IAEhD3I,KAAKwF,aAAawD,GAAWL,GAAOC,IAEpCrC,oBAAkBkD,IAAwB,KAAZA,KAE9BzJ,KAAKwF,aAAawD,GAAWL,GAAOC,KAMxDzF,EAASjD,UAAUuF,oBAAsB,cAClCiE,MAAMnG,KAAKvD,KAAKqD,QAAQ4F,UAAUU,QAAQ,SAAUC,GAAMC,SAAOD,MAExEzG,EAASjD,UAAUkI,gBAAkB,WAYjC,IAAK,IAXD0B,EAAa9J,KAAKwD,SAAS7C,OAC3BoJ,KACAC,GACAb,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACX1C,WAAW,EACX2C,aAAa,GAERxI,EAAI,EAAGA,EAAI8I,EAAY9I,IACxBuF,oBAAkBvG,KAAKwF,aAAaxE,IACpC+I,EAAe/I,GAAKgJ,EAGpBD,EAAe/I,GAAKhB,KAAKwF,aAAaxE,GAG9ChB,KAAKiK,eAAgBzE,aAAgBuE,IAAkB,IAE3D5G,EAASjD,UAAUgK,WAAa,SAAUlB,EAAWmB,GACjD,OAAQnK,KAAK2D,QAAQqF,GAAWoB,cAAc,IAAMhI,EAAiB,IAAM+H,IAE/EhH,EAASjD,UAAU6I,iBAAmB,SAAUsB,GAC5C,OAAOA,EAAUX,MAAMW,EAAUC,YAAY,KAAO,IAExDnH,EAASjD,UAAU2F,OAAS,SAAU0E,GAClCA,EAAM9C,YAAUzH,KAAKqD,SAxSnB,SAwSoCmE,eAAaxH,KAAKqD,SAxStD,UA0SNF,EAASjD,UAAU2E,gBAAkB,SAAUxB,EAAS8F,EAAM9C,GAC1D,IAAIW,EAAqB,UAAbX,GAAyBtB,MAASyF,aAAWrB,KAAYrE,OAAU0F,aAAWrB,IAC1FsB,oBAAkBpH,EAAS2D,IAE/B7D,EAASjD,UAAU0F,mBAAqB,WACpC,IAAK,IAAIK,EAAQ,EAAGA,EAAQjG,KAAKwD,SAAS7C,OAAQsF,IACzB,eAArBjG,KAAKuF,YAA+BvF,KAAKgE,gBAAgB0G,KAAK1K,KAAKwD,SAASyC,GAAO0E,wBAAwB5F,OACvG/E,KAAKgE,gBAAgB0G,KAAK1K,KAAKwD,SAASyC,GAAO0E,wBAAwB7F,SAGnF3B,EAASjD,UAAU8E,YAAc,SAAU4F,GACnCA,GACAnD,YAAUzH,KAAKqD,SAAUuH,EAAUC,MAAMD,EAAUE,QAAQ,MAAQ,EAAI,IAAM,OAGrF3H,EAASjD,UAAU6K,YAAc,SAAUzK,GACvCmH,YAAUuD,SAAO,IAAMnJ,EAAYvB,IAAU2B,IAEjDkB,EAASjD,UAAU+K,YAAc,SAAU3K,IAClCiG,oBAAkBvG,KAAKkL,eAAiBlL,KAAKkL,aAAa1G,UAAUC,SAAS5B,KAC7E0D,oBAAkBvG,KAAKmL,WAAanL,KAAKmL,SAAS3G,UAAUC,SAAS5B,IACtE2E,eAAawD,SAAO,IAAMnJ,EAAYvB,IAAU2B,IAGxDkB,EAASjD,UAAUyG,eAAiB,SAAUV,EAAOS,GACjD,IAAIsC,EACAhI,EAAIiF,EACR+C,EAAa/C,IAAWjG,KAAK2D,QAAc,OAAMsC,EAAQ,EAAKA,EAC9DoC,eAAaK,OAAO1I,KAAK2D,QAAQqF,GAAY,YAAahJ,KAAKoL,aAC3D1E,GACA2B,eAAanB,IAAIlH,KAAK2D,QAAQqF,GAAY,YAAahJ,KAAKoL,YAAapL,MACrEA,KAAKqL,gBACLrL,KAAKiL,YAAYjL,KAAK2D,QAAQqF,IAC9BxB,eAAawD,SAAO,IAAMnJ,EAAY7B,KAAK2D,QAAQqF,KAAc/G,GACjEjC,KAAK2D,QAAQqF,GAAWxE,UAAU0C,IAAIpF,GACrCmE,IAAWjG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIrE,GACnE7C,KAAKwD,SAASwF,GAAWxE,UAAU0C,IAAIrE,GAC3C7C,KAAKsL,qBAAqBtK,MAI9BhB,KAAKsL,qBAAqBtK,GAC1BhB,KAAK+K,YAAY/K,KAAK2D,QAAQqF,IAC9BhJ,KAAK2D,QAAQqF,GAAWxE,UAAUkE,OAAO5G,GACxCmE,IAAWjG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAASyC,GAAOzB,UAAUkE,OAAO7F,GACtE7C,KAAKwD,SAASwF,GAAWxE,UAAUkE,OAAO7F,KAGtDM,EAASjD,UAAU0G,uBAAyB,SAAUX,GAClD,IAAIsF,EACAC,EACAxC,EACJA,EAAY/C,IAAWjG,KAAK2D,QAAc,OAAKsC,EAAQ,EAAKA,EAC5DsF,EAA+B,eAArBvL,KAAKuF,YAAgCvF,KAAKkK,WAAWlB,EAAW1G,GAActC,KAAKkK,WAAWlB,EAAWzG,GACnHiJ,EAA+B,eAArBxL,KAAKuF,YAAgCvF,KAAKkK,WAAWlB,EAAW3G,GAAerC,KAAKkK,WAAWlB,EAAWxG,GACpHxC,KAAKyL,gBAAgBzL,KAAKwD,SAASyC,GAAQA,GAC3CjG,KAAK0L,oBAAoB1C,EAAWwC,EAAQD,IAEhDpI,EAASjD,UAAUyL,cAAgB,SAAUC,EAAUC,GACnD,OAAOC,YAAU,IAAMD,EAAO7L,KAAK2D,QAAQiI,IAAW,IAE1DzI,EAASjD,UAAU6L,kBAAoB,SAAU9F,EAAO0F,EAAeK,GACnE,IAAKzF,oBAAkBN,GAAQ,CAC3B,IACIgG,EAAgBhG,IAAUjG,KAAK2D,QAAQhD,OACvCiL,EAAWK,EAAehG,EAAQ,EAAIA,GAC9B,EAAiBjG,KAAK2L,cAAcC,EAAUI,GAAgBhM,KAAK2L,cAAcC,EAAUD,IAC7FO,UAGlB/I,EAASjD,UAAU6F,YAAc,SAAUE,GACvC,GAAKM,oBAAkBN,GAInB,IAAK,IAAIkG,EAAI,EAAGA,EAAInM,KAAKwD,SAAS7C,OAAQwL,KACjC5F,oBAAkBvG,KAAKwF,aAAa2G,KAAOnM,KAAKwF,aAAa2G,GAAGtF,WACjE7G,KAAK+L,kBAAkBI,EAAGnM,KAAKoM,eAAeT,cAAe3L,KAAKoM,eAAeJ,mBALzFhM,KAAK+L,kBAAkB9F,EAAOjG,KAAKoM,eAAeT,cAAe3L,KAAKoM,eAAeJ,eAU7F7I,EAASjD,UAAUkM,aAAe,WAE9B,OADApM,KAAKqM,oBACIV,cAAqC,eAArB3L,KAAKuF,YAAgCjD,EAAaC,EACvEyJ,aAAoC,aAArBhM,KAAKuF,YAA8B/C,EAAaH,IAGvEc,EAASjD,UAAU4G,kBAAoB,SAAUb,GACxCM,oBAAkBvG,KAAKwF,aAAaS,KAAYM,oBAAkBvG,KAAKwF,aAAaS,GAAOY,YACxF7G,KAAKwF,aAAaS,GAAOY,WAC7B7G,KAAK+L,kBAAkB9F,EAAOjG,KAAKoM,eAAeJ,aAAchM,KAAKoM,eAAeT,gBAG5FxI,EAASjD,UAAUgF,UAAY,SAAUC,GACrCA,EAAUqC,eAAaxH,KAAKqD,SAAUnB,GAAYuF,YAAUzH,KAAKqD,SAAUnB,IAE/EiB,EAASjD,UAAUkF,iBAAmB,SAAU+D,GAG5C,IAAK,IAFDmD,EAAY/F,oBAAkB4C,GAAQ,OAASA,EAAO,KACtDoD,EAAiC,eAArBvM,KAAKuF,YAA+B9D,EAAcC,EACzDuE,EAAQ,EAAGA,EAAQjG,KAAK2D,QAAQhD,OAAQsF,IAAS,CACtD,IAAIuG,EAAWV,YAAU,IAAMS,EAAWvM,KAAKqD,SAAS4C,GACpDwG,EAAYX,YAAU,IAAMjK,EAAY2K,GAAU,GAC7B,eAArBxM,KAAKuF,aACLiH,EAASxF,MAAMjC,MAAQuH,EAClB/F,oBAAkBkG,KACnBA,EAAUzF,MAAMjC,MAAQuH,KAI5BE,EAASxF,MAAMlC,OAASwH,EACnB/F,oBAAkBkG,KACnBA,EAAUzF,MAAMlC,OAASwH,MAKzCnJ,EAASjD,UAAUoF,kBAAoB,SAAUC,GAC7C,IAAImH,EAA6B,aAAhBnH,EACjBvF,KAAKqD,QAAQmB,UAAUkE,OAAOgE,EAAavL,EAAkBC,GAC7DpB,KAAKqD,QAAQmB,UAAU0C,IAAIwF,EAAatL,EAAgBD,GACxD,IAAK,IAAI8E,EAAQ,EAAGA,EAAQjG,KAAKwD,SAAS7C,OAAQsF,IAC9CjG,KAAKwD,SAASyC,GAAOzB,UAAUkE,OAAOgE,EAAapL,EAAeC,GAClEvB,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIwF,EAAanL,EAAeD,GAEnE,IAAS2E,EAAQ,EAAGA,EAAQjG,KAAK2D,QAAQhD,OAAQsF,IAC7C4D,SAAO7J,KAAK2D,QAAQsC,IAExBjG,KAAK2D,WACL3D,KAAK2F,aAAa3F,KAAKqD,UAE3BF,EAASjD,UAAUyM,eAAiB,SAAUC,EAAYC,GACtD,IAAIC,EAAUF,EAAWrF,cAAcwF,uBAAuB,UAAUF,GACxE,OAAOC,GAAoB,MAE/B3J,EAASjD,UAAU8M,YAAc,SAAUJ,EAAYK,GACnD,OAAOjN,KAAK2M,eAAeC,GAAcK,EAAQ,OAErD9J,EAASjD,UAAUgN,YAAc,SAAUN,EAAYK,GACnD,OAAOjN,KAAK2M,eAAeC,GAAeK,EAAQ,GAAK,EAAK,IAEhE9J,EAASjD,UAAUiN,iBAAmB,SAAUP,GAC5C,IAAIQ,EAAgBpN,KAAKqN,cAAc,OACvC5F,YAAU2F,IAAiBvL,EAxbrB,YAybN,IAAIyK,EAAY/F,oBAAkBvG,KAAKqF,eAAiB,MAAQrF,KAAKqF,cAAgB,KAChE,eAArBrF,KAAKuF,YAAgC6H,EAAcpG,MAAMjC,MAAQuH,EAAac,EAAcpG,MAAMlC,OAASwH,EAC3GM,EAAWU,YAAYF,IAE3BjK,EAASjD,UAAUgI,UAAY,SAAU5H,GACxBN,KAAK8E,OAElB,MADiC,KAAxBxE,EAAO0G,MAAMlC,QAAiC,SAAhB9E,KAAK8E,OAAoBxE,EAAO0G,MAAMlC,OAAS9E,KAAK8E,QAG/F3B,EAASjD,UAAUiI,SAAW,SAAU7H,GACxBN,KAAK+E,MAEjB,MAD+B,KAAvBzE,EAAO0G,MAAMjC,OAA+B,SAAf/E,KAAK+E,MAAmBzE,EAAO0G,MAAMjC,MAAQ/E,KAAK+E,OAG3F5B,EAASjD,UAAU+H,aAAe,SAAUnD,EAAQC,GAChD0F,oBAAkBzK,KAAKqD,SAAWyB,OAAUA,EAAQC,MAASA,KAEjE5B,EAASjD,UAAUwL,oBAAsB,SAAUzF,EAAOuF,EAAQD,GACzDhF,oBAAkBvG,KAAKwF,aAAaS,KAChCM,oBAAkBvG,KAAKwF,aAAaS,GAAOuD,eAC5CxJ,KAAKwF,aAAaS,GAAOuD,YAAchC,eAAa+D,IAAU9I,IAAcgF,YAAU8D,IAAU9I,IAC3F8D,oBAAkBvG,KAAKwF,aAAaS,EAAQ,MAC7CjG,KAAKwF,aAAaS,EAAQ,GAAGuD,YAAchC,eAAagE,IAAU/I,IAAcgF,YAAU+D,IAAU/I,KAEnG8D,oBAAkBvG,KAAKwF,aAAaS,EAAQ,KACxCjG,KAAKwF,aAAaS,EAAQ,GAAc,cACzCjG,KAAKwF,aAAaS,EAAQ,GAAGuD,YAAchC,eAAagE,IAAU/I,IAAcgF,YAAU+D,IAAU/I,OAMxHU,EAASjD,UAAUqN,gBAAkB,SAAUvM,GAC3C,IAAIwM,EAAYxN,KAAKqN,cAAc,OACnCrN,KAAK2D,QAAQ+G,KAAK8C,GAClB,IAEIrE,EAFAqC,EAASxL,KAAKqN,cAAc,UAC5B9B,EAASvL,KAAKqN,cAAc,UAwBhC,OAtBAlE,EAAO5C,oBAAkBvG,KAAKqF,eAAiB,MAAQrF,KAAKqF,cAAgB,KACnD,eAArBrF,KAAKuF,aACLvF,KAAKyN,UAAYnL,EACjBtC,KAAK0N,WAAarL,EAClBoF,YAAU8D,IAAUnJ,EAAgBE,EAAYG,IAChDgF,YAAU+D,IAAUpJ,EAAgBC,EAAaI,IACjDgF,YAAU+F,IAAahM,EAAWC,IAClC+L,EAAUxG,MAAMjC,MAAQoE,IAGxB1B,YAAU+D,IAAUpJ,EAAgBI,EAAYC,IAChDgF,YAAU8D,IAAUnJ,EAAgBG,EAAUE,IAC9CgF,YAAU+F,IAAahM,EAAWE,IAClC1B,KAAKyN,UAAYlL,EACjBvC,KAAK0N,WAAalL,EAClBgL,EAAUxG,MAAMlC,OAASqE,GAE7BnJ,KAAK2N,gBAAgBH,GACrBA,EAAUF,YAAY/B,GACtBvL,KAAKmN,iBAAiBK,GACtBA,EAAUF,YAAY9B,GACtBxL,KAAK0L,oBAAoB1K,EAAGwK,EAAQD,GAC7BiC,GAEXrK,EAASjD,UAAUoL,qBAAuB,SAAUrF,GAChDjG,KAAK4N,iBACL5N,KAAKqL,cAAgBrL,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIrE,GAAkB7C,KAAKwD,SAASyC,GAAOzB,UAAUkE,OAAO7F,IAEpHM,EAASjD,UAAUyF,aAAe,SAAUrF,GAIxC,IAAK,IADDkN,EAFA1D,EAAa9J,KAAKwD,SAAS7C,OAC3BkN,EAAYvN,EAAO2I,SAEdjI,EAAI,EAAGA,EAAI8I,EAAY9I,IAC5B,GAAIA,EAAI8I,EAAa,EASjB,GARA0D,EAAYxN,KAAKuN,gBAAgBvM,GACjCyJ,oBAAkB+C,GAAaP,MAAc,EAAJjM,EAAS,IAClDhB,KAAK0D,eAAegH,KAAU,EAAJ1J,EAAS,GACnC6M,EAAU7M,GAAG8M,WAAWR,YAAYE,GACpCxN,KAAKyI,iBAAmB+E,EACxBA,EAAUO,aAAa,OAAQ,aAC/BP,EAAUO,aAAa,mBAAoB/N,KAAKuF,YAAYyI,eAC5DhO,KAAKiO,kBACDjO,KAAKqL,cAAe,CACpBhD,eAAanB,IAAIsG,EAAW,YAAaxN,KAAKoL,YAAapL,MAC3D,IAAIkO,EAAmC,SAAtBxG,UAAQyG,KAAKC,KAAmB,cAAgB,aACjE/F,eAAanB,IAAIsG,EAAWU,EAAWlO,KAAKoL,YAAapL,MACzDwN,EAAUhJ,UAAU0C,IAAIpF,GACxB9B,KAAKsL,qBAAqBtK,QAG1ByG,YAAUuD,SAAO,IAAMnJ,EAAY2L,IAAavL,QAIpDjC,KAAKsL,qBAAqBtK,GAC1ByG,YAAU+F,GA1gBX,eA8gBXrK,EAASjD,UAAUmL,YAAc,WAC7B,IAAI9B,GAAY,EAQhB,QAPMhD,oBAAkBvG,KAAKwF,aAAaxF,KAAKqO,0BAC3CrO,KAAKwF,aAAaxF,KAAKqO,wBAAwB9E,YAC9ChD,oBAAkBvG,KAAKwF,aAAaxF,KAAKsO,sBAC1CtO,KAAKwF,aAAaxF,KAAKsO,oBAAoB/E,WAC3ChD,oBAAkBvG,KAAKwF,aAAaxF,KAAKsO,wBACzC/E,GAAY,GAETA,GAEXpG,EAASjD,UAAUyN,gBAAkB,SAAUH,GAC3C,IACIe,EACAC,EAFAlL,EAAQtD,KAGZwN,EAAUiB,iBAAiB,aAAc,WAErCF,EAAQG,WAAW,WAAcjH,YAAU+F,IAAazL,KAAsBuB,EAAMc,cAExFoJ,EAAUiB,iBAAiB,aAAc,WACrCE,aAAaJ,GACb/G,eAAagG,IAAazL,MAE9ByL,EAAUiB,iBAAiB,WAAY,WACnCE,aAAaH,KAEjBhB,EAAUiB,iBAAiB,YAAa,WAEpCD,EAAeE,WAAW,WAAcjH,YAAU+F,IAAazL,KAAsBuB,EAAMc,eAGnGjB,EAASjD,UAAU0O,aAAe,SAAUpG,GACxC,OAAQA,EAAEsC,QAAQ,UAAY,EAAK,QAAU,SAEjD3H,EAASjD,UAAU2O,uBAAyB,SAAUvO,GAClDN,KAAKyI,iBAAmBzI,KAAK8O,YAAYxO,GAAUA,EAAOiH,cAAgBjH,GAE9E6C,EAASjD,UAAU4O,YAAc,SAAUxO,GACvC,OAASA,EAAOkE,UAAUC,SAAS5C,KAAevB,EAAOkE,UAAUC,SAASjD,IAEhF2B,EAASjD,UAAU6O,aAAe,SAAUvG,GACxC,IAAIwG,GAAU,EAKd,OAJkC,UAA9BhP,KAAK4O,aAAapG,EAAEyG,QAAuB1I,oBAAkBiC,EAAE0G,cAC1B,UAArClP,KAAK4O,aAAapG,EAAE0G,gBACpBF,GAAU,GAEPA,GAEX7L,EAASjD,UAAUiP,qBAAuB,SAAU3G,EAAGyG,GACnD,GAAIjP,KAAK+O,aAAavG,GAClBxI,KAAKoP,mBAAoBC,EAAG7G,EAAE8G,MAAOC,EAAG/G,EAAEgH,OAASP,OAElD,CACD,IAAIQ,EAAkC,SAAtB/H,UAAQyG,KAAKC,KAAkB5F,EAAEkH,QAAQ,GAAKlH,EAC9DxI,KAAKoP,mBAAoBC,EAAGI,EAAUH,MAAOC,EAAGE,EAAUD,OAASP,KAG3E9L,EAASjD,UAAUkP,kBAAoB,SAAUO,EAAaV,GAC7C,aAATA,EACAjP,KAAK4D,oBAAsB+L,EAG3B3P,KAAK6D,mBAAqB8L,GAGlCxM,EAASjD,UAAU0P,iBAAmB,WAClCvH,eAAanB,IAAIoB,SAAU,YAAatI,KAAK6P,YAAa7P,MAC1DqI,eAAanB,IAAIoB,SAAU,UAAWtI,KAAK8P,UAAW9P,MACtD,IAAI+P,EAAwC,SAAtBrI,UAAQyG,KAAKC,KAAmB,cAAgB,YAClE4B,EAAuC,SAAtBtI,UAAQyG,KAAKC,KAAmB,YAAc,WACnE/F,eAAanB,IAAIoB,SAAUyH,EAAgB/P,KAAK6P,YAAa7P,MAC7DqI,eAAanB,IAAIoB,SAAU0H,EAAehQ,KAAK8P,UAAW9P,OAE9DmD,EAASjD,UAAU+P,mBAAqB,WACpC,IAAIF,EAAwC,SAAtBrI,UAAQyG,KAAKC,KAAmB,cAAgB,YAClE4B,EAAuC,SAAtBtI,UAAQyG,KAAKC,KAAmB,YAAc,WACnE/F,eAAaK,OAAOJ,SAAU,YAAatI,KAAK6P,aAChDxH,eAAaK,OAAOJ,SAAU,UAAWtI,KAAK8P,WAC9CzH,eAAaK,OAAOJ,SAAUyH,EAAgB/P,KAAK6P,aACnDxH,eAAaK,OAAOJ,SAAU0H,EAAehQ,KAAK8P,YAEtD3M,EAASjD,UAAU+N,gBAAkB,WACjC5F,eAAanB,IAAIlH,KAAKyI,iBAAkB,mBAAoBzI,KAAKkQ,aAAclQ,OAEnFmD,EAASjD,UAAUgQ,aAAe,SAAU1H,GACxC,IAAKA,EAAElI,OAAOkE,UAAUC,SAASrC,GAAiB,CAC9C,IAAI+N,EAAYrE,YAAU,IAAM5K,EAAO,OAASM,EAAY,IAAMO,GAC9DoO,EAAUxP,OAAS,GACnB6G,cAAY2I,EAAWpO,GAE3ByG,EAAElI,OAAOkE,UAAU0C,IAAInF,GAE3B,IAAIqO,EAAO5H,EAAElI,QACT8P,EAAK5L,UAAUC,SAASnC,IAAe8N,EAAK5L,UAAUC,SAASlC,KAC/DvC,KAAKqQ,eAAe7H,IAEpB4H,EAAK5L,UAAUC,SAASpC,IAAgB+N,EAAK5L,UAAUC,SAASjC,KAChExC,KAAKsQ,aAAa9H,IAG1BrF,EAASjD,UAAUoQ,aAAe,SAAU9H,GACxC,IAAIlF,EAAQtD,KACZA,KAAKuQ,gBAAgB/H,GACrB,IAAIgI,GAAiB7N,EAAeC,GAChC6N,EAAYzQ,KAAK0Q,aAAalI,GAClCxI,KAAK2Q,QAAQ,eAAgBF,EAAW,SAAUG,GAC9C,IAAKA,EAAiBC,OAAQ,CAC1BvN,EAAM6H,SAASnE,MAAM8J,SAAW,IAC5BxN,EAAM4H,aAAa1G,UAAUC,SAAS,gBAAwD,MAAtCnB,EAAM4H,aAAalE,MAAM8J,SACjFxN,EAAM4H,aAAalE,MAAM8J,SAAW,IAGpCxN,EAAM4H,aAAalE,MAAM8J,SAAW,IAEnCxN,EAAM4H,aAAa1G,UAAUC,SAAS9B,IAOZ,IAA1BW,EAAMyN,gBACHzN,EAAM4H,aAAa8F,uBAAuBhK,MAAM8J,SAAW,GAAKxN,EAAM6H,SAASnE,MAAM8J,SAAW,GACpGtJ,eAAalE,EAAM4H,cAAesF,GAClChJ,eAAalE,EAAM6H,UAAWzI,KAT9B8E,eAAalE,EAAM6H,UAAWzI,GAC9B8E,eAAalE,EAAM4H,cAAesF,GAClC/I,YAAUnE,EAAM4H,cAAexI,GAC/B+E,YAAUnE,EAAM6H,UAAWqF,IAQ/BlN,EAAM2N,oBAAoBzI,GAC1BlF,EAAM4H,aAAa6C,aAAa,gBAAiB,QACjDzK,EAAM6H,SAAS4C,aAAa,gBAAiB,SAC7C,IAAImD,EAAkB5N,EAAM6N,YAAY3I,GACxClF,EAAMqN,QAAQ,WAAYO,OAItC/N,EAASjD,UAAUkR,kBAAoB,SAAUC,EAAWlH,GACxD1C,YAAUuD,SAAO,IAAMb,EAAakH,IAAa5O,IAErDU,EAASjD,UAAUoR,kBAAoB,SAAUD,EAAWlH,GACxD3C,eAAawD,SAAO,IAAMb,EAAakH,IAAa5O,IAExDU,EAASjD,UAAUqR,sBAAwB,SAAU/I,GACjDxI,KAAKqM,mBACDrM,KAAKwR,cAAcC,mBAAqBzR,KAAKwR,cAAcE,kBAC3DjK,YAAUe,EAAElI,QAASmC,GACrBzC,KAAK2R,qBACL3R,KAAK2G,eAAe3G,KAAK+Q,iBAAiB,GACrCxK,oBAAkBvG,KAAK4R,WACxB5R,KAAK2G,eAAe3G,KAAK+Q,gBAAkB,GAAG,GAC9C/Q,KAAKoR,kBAAkBpR,KAAK4R,QAAS5R,KAAK6L,OAE1C7L,KAAKsR,kBAAkBtR,KAAK4R,QAAS5R,KAAKyN,aAGxCzN,KAAKwR,cAAcC,mBAAsBzR,KAAKwR,cAAcE,mBAClE1R,KAAK2G,eAAe3G,KAAK+Q,iBAAiB,GACrC/Q,KAAKwR,cAAcK,gBAAgBrN,UAAUC,SAAS,gBACvDzE,KAAK2G,eAAe3G,KAAK+Q,gBAAkB,GAAG,GAElD/Q,KAAK2R,qBACA3R,KAAKwF,aAAaxF,KAAK+Q,iBAAiBvH,aACzC/B,YAAUe,EAAElI,QAASmC,GAEpB8D,oBAAkBvG,KAAK8R,WACxB9R,KAAKsR,kBAAkBtR,KAAK8R,QAAS9R,KAAKyN,YACrCzN,KAAKwF,aAAaxF,KAAK+Q,iBAAiBvH,aAAexJ,KAAKwF,aAAaxF,KAAK+Q,gBAAkB,GAAGvH,YACpGxJ,KAAKoR,kBAAkBpR,KAAK8R,QAAS9R,KAAK6L,QAEpC7L,KAAKwF,aAAaxF,KAAKwR,cAAcO,cAAgB,GAAGvI,aAC9DxJ,KAAKwF,aAAaxF,KAAK+Q,kBACvB/Q,KAAKoR,kBAAkBpR,KAAK8R,QAAS9R,KAAK6L,UAK1D1I,EAASjD,UAAUmQ,eAAiB,SAAU7H,GAC1C,IAAIlF,EAAQtD,KACZA,KAAKuQ,gBAAgB/H,GACrB,IAAIgI,GAAiB7N,EAAeC,GACpC5C,KAAKkL,aAAalE,MAAM8J,SAAW,IACnC9Q,KAAKmL,SAASnE,MAAM8J,SAAW,IAC/B,IAAIL,EAAYzQ,KAAK0Q,aAAalI,GAClCxI,KAAK2Q,QAAQ,iBAAkBF,EAAW,SAAUuB,GAChD,IAAKA,EAAmBnB,OAAQ,CACxBvN,EAAM6H,SAAS3G,UAAUC,SAAS9B,IAClC6E,eAAalE,EAAM4H,cAAexI,GAClC8E,eAAalE,EAAM6H,UAAWqF,KAG9BhJ,eAAalE,EAAM4H,cAAexI,GAClC8E,eAAalE,EAAM6H,UAAWqF,GAC9B/I,YAAUnE,EAAM6H,UAAWzI,GAC3B+E,YAAUnE,EAAM4H,cAAesF,IAEnClN,EAAMiO,sBAAsB/I,GAC5BlF,EAAM4H,aAAa6C,aAAa,gBAAiB,SACjDzK,EAAM6H,SAAS4C,aAAa,gBAAiB,QAC7C,IAAIkE,EAAoB3O,EAAM6N,YAAY3I,GAC1ClF,EAAMqN,QAAQ,YAAasB,OAIvC9O,EAASjD,UAAUwQ,aAAe,SAAUlI,GASxC,OAPInF,QAASrD,KAAKqD,QACd6O,MAAO1J,EACP2J,MAAOnS,KAAKkL,aAAclL,KAAKmL,UAC/BlF,OAAQjG,KAAKoS,cAAepS,KAAK+R,eACjCvE,UAAWxN,KAAKyI,iBAChBoI,QAAQ,IAIhB1N,EAASjD,UAAUmM,iBAAmB,WAClCrM,KAAKwR,eACDT,gBAAiB/Q,KAAK+Q,gBACtBsB,oBAAqBrS,KAAKmL,SAAS3G,UAAUC,SAAStC,GACtDmQ,oBAAqBtS,KAAKkL,aAAa1G,UAAUC,SAAStC,GAC1DoQ,iBAAkBvS,KAAKkL,aAAa1G,UAAUC,SAAS/B,GACvDgP,iBAAkB1R,KAAKmL,SAAS3G,UAAUC,SAAS/B,GACnD8P,kBAAmBxS,KAAKmL,SAAS3G,UAAUC,SAAS9B,GACpD8O,kBAAmBzR,KAAKkL,aAAa1G,UAAUC,SAAS9B,GACxDoP,cAAe/R,KAAKsO,mBACpB8D,cAAepS,KAAKqO,uBACpBwD,gBAAiB7R,KAAKmL,SAASsH,mBAC/BC,eAAgB1S,KAAKkL,aAAa8F,yBAG1C7N,EAASjD,UAAUyR,mBAAqB,WACpCnK,eAAawD,SAAO,IAAMhL,KAAK6L,MAAO7L,KAAKyI,mBAAoBhG,IAEnEU,EAASjD,UAAU+Q,oBAAsB,SAAUzI,GAC/CxI,KAAKqM,mBACL5E,YAAUe,EAAElI,QAASmC,GAChBzC,KAAKwR,cAAce,kBAAqBvS,KAAKwR,cAAcgB,kBA4BvDxS,KAAKwR,cAAce,kBAAoBvS,KAAKwR,cAAcgB,oBAC/DxS,KAAK2G,eAAe3G,KAAK+Q,iBAAiB,GAC1C/Q,KAAK2G,eAAe3G,KAAK+Q,gBAAkB,GAAG,GAC9C/Q,KAAK2R,qBACApL,oBAAkBvG,KAAK8R,WACxB9R,KAAKoR,kBAAkBpR,KAAK8R,QAAS9R,KAAK6L,OAE1C7L,KAAKsR,kBAAkBtR,KAAK8R,QAAS9R,KAAK0N,eAlC9C1N,KAAK2R,qBACLnK,eAAagB,EAAElI,QAASmC,GACxBzC,KAAK2G,eAAe3G,KAAK+Q,iBAAiB,GACrCxK,oBAAkBvG,KAAK4R,UAAa5R,KAAKwR,cAAckB,eAAelO,UAAUC,SAAS9B,GAgBtF3C,KAAKwF,aAAaxF,KAAK+Q,iBAAiBvH,cAAgBxJ,KAAKwF,aAAaxF,KAAK+Q,gBAAkB,GAAGvH,YACpGxJ,KAAKoR,kBAAkBpR,KAAKyI,iBAAkBzI,KAAK0N,YAGnD1N,KAAKsR,kBAAkBtR,KAAK4R,QAAS5R,KAAK0N,aAnB9C1N,KAAK2G,eAAe3G,KAAK+Q,gBAAkB,GAAG,GAC9C/Q,KAAKsR,kBAAkBtR,KAAK4R,QAAS5R,KAAK0N,YACrC1N,KAAKwF,aAAaxF,KAAK+Q,gBAAkB,GAAGvH,YAOxCxJ,KAAKwF,aAAaxF,KAAK+Q,iBAAiBvH,cAC5CxJ,KAAKwF,aAAaxF,KAAK+Q,gBAAkB,GAAGvH,aAC7CxJ,KAAKoR,kBAAkBpR,KAAKyI,iBAAkBzI,KAAK0N,aARnD1N,KAAKoR,kBAAkBpR,KAAK4R,QAAS5R,KAAK6L,OACtC7L,KAAKwF,aAAaxF,KAAK+Q,iBAAiBvH,cACvCxJ,KAAKwF,aAAaxF,KAAK+Q,gBAAkB,GAAGvH,aAC7CxJ,KAAKoR,kBAAkBpR,KAAKyI,iBAAkBzI,KAAK0N,gBA4BvEvK,EAASjD,UAAUiR,YAAc,SAAU3I,GAQvC,OANInF,QAASrD,KAAKqD,QACd6O,MAAO1J,EACP2J,MAAOnS,KAAKkL,aAAclL,KAAKmL,UAC/BlF,OAAQjG,KAAKoS,cAAepS,KAAK+R,eACjCvE,UAAWxN,KAAKyI,mBAIxBtF,EAASjD,UAAUyS,aAAe,SAAUnK,GACxCxI,KAAK+Q,gBAAkB/Q,KAAK4S,kBAAkBpK,EAAElI,OAAOiH,gBAE3DpE,EAASjD,UAAU0S,kBAAoB,SAAUtS,GAE7C,SADeoJ,MAAMnG,KAAKvD,KAAK2D,SAClBmH,QAAQxK,IAEzB6C,EAASjD,UAAU2S,WAAa,SAAUjG,GAEtC,OADc5M,KAAK2D,QAASiJ,EAAa,IAG7CzJ,EAASjD,UAAU4S,WAAa,SAAUlG,GAEtC,OADc5M,KAAK2D,QAASiJ,EAAa,IAG7CzJ,EAASjD,UAAU6S,WAAa,SAAU9M,GACtCjG,KAAK4R,QAAU5R,KAAK6S,WAAW5M,GAC/BjG,KAAK8R,QAAU9R,KAAK8S,WAAW7M,IAEnC9C,EAASjD,UAAUqQ,gBAAkB,SAAU/H,GAClB,eAArBxI,KAAKuF,YACLvF,KAAK6L,MAAQrD,EAAElI,OAAOkE,UAAUC,SAASnC,GAAcD,EAAcC,EAGrEtC,KAAK6L,MAAQrD,EAAElI,OAAOkE,UAAUC,SAASlC,GAAYC,EAAaD,EAEtEvC,KAAK6O,uBAAuBrG,EAAElI,QAC9BN,KAAK2S,aAAanK,GAClBxI,KAAK+S,WAAW/S,KAAK+Q,iBACrB/Q,KAAK4N,kBAETzK,EAASjD,UAAUkL,YAAc,SAAU5C,GACvC,IAAIlF,EAAQtD,KACZwI,EAAEwK,iBACF,IAAI1S,EAASkI,EAAElI,OACf,IAAIA,EAAOkE,UAAUC,SAASrC,GAA9B,CAGApC,KAAK6O,uBAAuBvO,GAC5BmH,YAAUzH,KAAKyI,kBAAmBzG,GAClChC,KAAKmP,qBAAqB3G,EAAG,YAC7BxI,KAAK4N,iBACL,IAAI6C,GACApN,QAASrD,KAAKqD,QACd6O,MAAO1J,EACP2J,MAAOnS,KAAKkL,aAAclL,KAAKmL,UAC/BlF,OAAQjG,KAAKqO,uBAAwBrO,KAAKsO,oBAC1Cd,UAAWxN,KAAKyI,iBAChBoI,QAAQ,GAEZ7Q,KAAK2Q,QAAQ,cAAeF,EAAW,SAAUwC,GAC7C,IAAKA,EAAgBpC,OAEjB,GADAvN,EAAMsM,mBACFtM,EAAM4H,aAAalE,MAAMC,UAAU6D,QAAQ,KAAO,GAAKxH,EAAM6H,SAASnE,MAAMC,UAAU6D,QAAQ,KAAO,EAAG,CACxG,IAAIoI,EAAoB5P,EAAM6P,oBAAoB7P,EAAM4H,cACpDkI,EAAgB9P,EAAM6P,oBAAoB7P,EAAM6H,UACpD7H,EAAM+P,aAAeH,EAAoBE,EACzC9P,EAAMgQ,WAAahQ,EAAMiQ,yBAAyBjQ,EAAM+P,aAAe,UAGvE/P,EAAMgQ,WAAoC,eAAtBhQ,EAAMiC,YAAgCjC,EAAM4H,aAAasI,YAAclQ,EAAM6H,SAASqI,YACtGlQ,EAAM4H,aAAauI,aAAenQ,EAAM6H,SAASsI,iBAKrEtQ,EAASjD,UAAUiT,oBAAsB,SAAUhB,GAC/C,IAAIuB,EACJ,GAAIvB,EAAKnL,MAAMC,UAAU6D,QAAQ,KAAO,EACpC4I,EAAW1T,KAAK2T,qBAAqBxB,EAAKnL,MAAMC,gBAGhD,GAA6B,KAAzBkL,EAAKnL,MAAMC,UACXyM,EAAW1T,KAAK4T,yBAAyB5T,KAAK6T,qBAAqB1B,EAAKnL,MAAMC,gBAE7E,CACD,IAAI6M,EAA+B,eAArB9T,KAAKuF,YAAiC4M,EAAKqB,YAAcxT,KAAKyI,iBAAiB+K,YACxFrB,EAAKsB,aAAezT,KAAKyI,iBAAiBgL,aAC/CC,EAAW1T,KAAK4T,yBAAyBE,GAGjD,OAAOJ,GAEXvQ,EAASjD,UAAUyT,qBAAuB,SAAU/K,GAChD,OAAOmL,WAAWnL,EAAMc,MAAM,EAAGd,EAAMkC,QAAQ,QAEnD3H,EAASjD,UAAUqT,yBAA2B,SAAU3K,EAAOoL,GAC3D,IACIC,EADAC,EAAatL,EAAMuL,WAEvB,GAAID,EAAWpJ,QAAQ,MAAQ,EAAG,CAC9BmJ,EAAiBF,WAAWG,EAAWxK,MAAM,EAAGwK,EAAWpJ,QAAQ,OACnE,IAAIsJ,OAAc,EAKdA,EAJC7N,oBAAkByN,GAIiB,eAArBhU,KAAKuF,YAAgCvF,KAAKqD,QAAQmQ,YAAcxT,KAAKqD,QAAQoQ,aAH9EzT,KAAKgE,gBAAgBhE,KAAKwD,SAASsH,QAAQkJ,IAK7DC,EAAiBI,KAAKC,KAAKF,GAAeH,EAAiB,WAG3DA,EAAiB/N,SAASgO,EAAY,IAE1C,OAAOD,GAEX9Q,EAASjD,UAAU0T,yBAA2B,SAAUhL,GAEpD,OAAQA,GADgC,eAArB5I,KAAKuF,YAAgCvF,KAAKqD,QAAQmQ,YAAcxT,KAAKqD,QAAQoQ,cACjE,KAEnCtQ,EAASjD,UAAU2T,qBAAuB,SAAUjL,GAChD,OAAIA,EAAMkC,QAAQ,MAAQ,EACfiJ,WAAWnL,EAAMc,MAAM,EAAGd,EAAMkC,QAAQ,OAGxCiJ,WAAWnL,IAG1BzF,EAASjD,UAAUqU,iBAAmB,SAAUC,EAAWJ,GACvD,IAAIK,EACAjH,EAKJ,OAJAiH,EAAyC,eAArBzU,KAAKuF,YAAgCvF,KAAK6D,mBAAmBwL,EAAImF,EAChFxU,KAAK6D,mBAAmB0L,EAAIiF,EACjChH,EAAYiH,EAAoBL,GAChC5G,EAAaA,EAAY,EAAK,EAAKA,EAAY,EAAK,EAAIA,GACrC4G,GAEvBjR,EAASjD,UAAUwU,qBAAuB,SAAUlM,GAChDxI,KAAKmP,qBAAqB3G,EAAG,WAC7B,IAAImM,EAAkC,eAArB3U,KAAKuF,YAAgCvF,KAAKqD,QAAQsH,wBAAwBiK,KACvF5U,KAAKqD,QAAQsH,wBAAwBkK,IACrCC,EAA+B,eAArB9U,KAAKuF,YAAgCvF,KAAKqD,QAAQmQ,YAAcxT,KAAKqD,QAAQoQ,aAC3F,OAAOzT,KAAKuU,iBAAiBI,EAAWG,IAE5C3R,EAASjD,UAAU6U,UAAY,SAAU/L,EAAW1I,EAAQ0U,GACxD,IAAIC,EAA2B,QAAdD,EAAsB,EAAI,KAEvChL,EAAY,KAahB,MAZkB,QAAdgL,EACKzO,oBAAkBvG,KAAKwF,aAAawD,KACpCzC,oBAAkBvG,KAAKwF,aAAawD,GAAWI,OAChDY,EAAYhK,KAAKwF,aAAawD,GAAWI,KAIxC7C,oBAAkBvG,KAAKwF,aAAawD,KACpCzC,oBAAkBvG,KAAKwF,aAAawD,GAAWK,OAChDW,EAAYhK,KAAKwF,aAAawD,GAAWK,KAG7CrJ,KAAKwF,aAAa7E,OAAS,IAAM4F,oBAAkBvG,KAAKwF,aAAawD,MACpEzC,oBAAkByD,IACfA,EAAUc,QAAQ,KAAO,IACzBd,EAAYhK,KAAKuT,yBAAyBvJ,GAAWmK,YAElDnU,KAAK6T,qBAAqB7J,IAG1BiL,GAGf9R,EAASjD,UAAUmO,qBAAuB,WAEtC,OADqBnI,SAASlG,KAAKyI,iBAAiBzB,MAAMiG,MAAO,IAAM,GAAK,GAGhF9J,EAASjD,UAAUoO,iBAAmB,WAElC,OADqBpI,SAASlG,KAAKyI,iBAAiBzB,MAAMiG,MAAO,IAAM,KAChD,GAE3B9J,EAASjD,UAAU0N,eAAiB,WAChC5N,KAAKiN,MAAQ/G,SAASlG,KAAKyI,iBAAiBzB,MAAMiG,MAAO,IACzD,IAAIiI,EAAWlV,KAAKgN,YAAYhN,KAAKyI,iBAAkBzI,KAAKiN,OACxD9B,EAAWnL,KAAKkN,YAAYlN,KAAKyI,iBAAkBzI,KAAKiN,OACxDiI,GAAY/J,IACZnL,KAAKkL,aAAegK,EACpBlV,KAAKmL,SAAWA,EAChBnL,KAAKoS,cAAgBpS,KAAKqO,uBAC1BrO,KAAK+R,cAAgB/R,KAAKsO,qBAMlCnL,EAASjD,UAAUiV,cAAgB,SAAUhD,GACzC,MAA8B,eAArBnS,KAAKuF,YAAgC4M,EAAKqB,YAAYW,WAC3DhC,EAAKsB,aAAaU,YAE1BhR,EAASjD,UAAUkV,YAAc,SAAUpM,GACvC,IAAIqM,GAAU,EAMd,OALK9O,oBAAkBvG,KAAKwF,aAAawD,MACpCzC,oBAAkBvG,KAAKwF,aAAawD,GAAWG,OAChDnJ,KAAKwF,aAAawD,GAAWG,KAAK2B,QAAQ,MAAQ,IAClDuK,GAAU,GAEPA,GAEXlS,EAASjD,UAAUoV,kBAAoB,WACnCtV,KAAKuV,wBAAiE,KAAtCvV,KAAKkL,aAAalE,MAAMC,UAAoBjH,KAAKmV,cAAcnV,KAAKkL,cAChGlL,KAAKkL,aAAalE,MAAMC,UAC5BjH,KAAKwV,oBAAyD,KAAlCxV,KAAKmL,SAASnE,MAAMC,UAAoBjH,KAAKmV,cAAcnV,KAAKmL,UACxFnL,KAAKmL,SAASnE,MAAMC,UACpBjH,KAAKoV,YAAYpV,KAAKoS,iBACtBpS,KAAKuV,wBAA0BvV,KAAKuT,yBAAyBvT,KAAKuV,yBAAyBpB,WAC3FnU,KAAK8D,2BAA4B,GAEjC9D,KAAKoV,YAAYpV,KAAK+R,iBACtB/R,KAAKwV,oBAAsBxV,KAAKuT,yBAAyBvT,KAAKwV,qBAAqBrB,WACnFnU,KAAK+D,4BAA6B,GAEtC/D,KAAKyV,gBAAkBzV,KAAK6T,qBAAqB7T,KAAKuV,wBAAwBpB,YAC9EnU,KAAK0V,kBAAoB1V,KAAK6T,qBAAqB7T,KAAKwV,oBAAoBrB,aAEhFhR,EAASjD,UAAUyV,iBAAmB,SAAUrG,EAAOE,GACnD,IAAIoG,GAAqB,EAIzB,OAHKtG,IAAUtP,KAAK4D,oBAAoByL,GAAKG,IAAUxP,KAAK4D,oBAAoB2L,IAC5EqG,GAAqB,GAElBA,GAEXzS,EAASjD,UAAU2V,cAAgB,SAAUrN,GAWzC,MATkC,UAA9BxI,KAAK4O,aAAapG,EAAEyG,QAAuB1I,oBAAkBiC,EAAE0G,cAC1B,UAArClP,KAAK4O,aAAapG,EAAE0G,aACNlP,KAAK2V,iBAAiBnN,EAAE8G,MAAO9G,EAAEgH,OAGV,SAAtB9H,UAAQyG,KAAKC,KACxBpO,KAAK2V,iBAAiBnN,EAAEkH,QAAQ,GAAGJ,MAAO9G,EAAEkH,QAAQ,GAAGF,OACvDxP,KAAK2V,iBAAiBnN,EAAE8G,MAAO9G,EAAEgH,QAI7CrM,EAASjD,UAAU4V,UAAY,WAC3B9V,KAAKiE,OAAS,EACd,IAAIA,EAA8B,eAArBjE,KAAKuF,aAAiCvF,KAAKqD,QAAQmQ,YAAcxT,KAAKqD,QAAQ0S,aAAe,GACrG/V,KAAKqD,QAAQoQ,aAAezT,KAAKqD,QAAQ2S,cAAgB,EAC9DhW,KAAKiE,OAA+B,WAAtByD,UAAQyG,KAAKC,KAAoBpO,KAAKiE,OAASA,GAEjEd,EAASjD,UAAU2P,YAAc,SAAUrH,GACvC,GAAKxI,KAAK6V,cAAcrN,GAAxB,CAGAxI,KAAK4N,iBACL5N,KAAKsV,oBACL,IAAI7E,GACApN,QAASrD,KAAKqD,QACd6O,MAAO1J,EACP2J,MAAOnS,KAAKkL,aAAclL,KAAKmL,UAC/BlF,OAAQjG,KAAKoS,cAAepS,KAAK+R,eACjCkE,UAAWjW,KAAKyV,gBAAiBzV,KAAK0V,mBACtClI,UAAWxN,KAAKyI,kBAEpBzI,KAAK2Q,QAAQ,WAAYF,GACzB,IACIyF,EADAtB,EAAO5U,KAAKmW,wBAAwBnW,KAAK0U,qBAAqBlM,GAAIxI,KAAKyV,gBAAiBzV,KAAK0V,mBAmCjG,GAjCA1V,KAAK8V,YAEDI,EADqB,eAArBlW,KAAKuF,YACmBvF,KAAKqD,QAAQsH,wBAAwBiK,KAAOA,EAChE5U,KAAKyI,iBAAiBkC,wBAAwBiK,KAAO5U,KAAKiE,OAGtCjE,KAAKqD,QAAQsH,wBAAwBkK,IAAMD,EAC/D5U,KAAKyI,iBAAiBkC,wBAAwBkK,IAAM7U,KAAKiE,OAEjEjE,KAAKwV,oBACsC,iBAA9BxV,KAAwB,qBAAkBA,KAAKwV,oBAAoB1K,QAAQ,MAAQ,EACxF9K,KAAK6T,qBAAqB7T,KAAKwV,qBAAuBtP,SAASlG,KAAKwV,oBAAqB,IACjGxV,KAAKoW,qBAAuBF,EAAuBlW,KAAK6T,qBAAqB7T,KAAKuV,yBAClFvV,KAAKqW,qBAAuBrW,KAAKwV,oBAAsBU,EACvDlW,KAAKsW,uBACDtW,KAAKqW,qBAAuB,IAC5BrW,KAAKqW,qBAAuB,GAG5BrW,KAAKoW,qBAAuB,IAC5BpW,KAAKoW,qBAAuB,GAE3BpW,KAAKqW,qBAAuBrW,KAAKoW,qBAAwBpW,KAAKsT,aAC3DtT,KAAKqW,qBAAuBrW,KAAKoW,qBACjCpW,KAAKoW,qBAAuBpW,KAAKoW,sBAAyBpW,KAAKqW,qBAAuBrW,KAAKoW,qBACrFpW,KAAKsT,YAGXtT,KAAKqW,qBAAuBrW,KAAKqW,sBAAyBrW,KAAKqW,qBAAuBrW,KAAKoW,qBACrFpW,KAAKsT,aAIdtT,KAAKqW,qBAAuBrW,KAAKoW,qBAAwBpW,KAAKsT,WAAY,CAC3E,IAAIiD,EAAavW,KAAKsT,YAAetT,KAAKqW,qBAAuBrW,KAAKoW,sBACtEpW,KAAKqW,qBAAuBrW,KAAKqW,qBAAuBE,EAE5DvW,KAAKwW,6BACLxW,KAAKyW,qBACLzW,KAAKkL,aAAalE,MAAMC,UAAYjH,KAAKoW,qBACzCpW,KAAKmL,SAASnE,MAAMC,UAAYjH,KAAKqW,uBAEzClT,EAASjD,UAAUwW,iBAAmB,SAAU1N,EAAW2N,EAAkBxE,GACzE,IACIyE,EAEAC,EAHAC,EAAe,KAEfP,EAAa,EAkBjB,OAhBKhQ,oBAAkBvG,KAAKwF,aAAawD,KAAgBzC,oBAAkBvG,KAAKwF,aAAawD,GAAWI,OACpG0N,EAAe9W,KAAKwF,aAAawD,GAAWI,IAAI+K,YAE/C5N,oBAAkBuQ,KACfA,EAAahM,QAAQ,KAAO,IAC5BgM,EAAe9W,KAAKuT,yBAAyBuD,GAAc3C,YAG3DwC,GADJC,EAAoB5W,KAAK6T,qBAAqBiD,MAE1CP,EAAcI,EAAmBC,GAAsB,EAAI,EACtDD,EAAmBC,EACxB5W,KAAKsT,WAAatT,KAAKsT,WAAaiD,EACpCvW,KAAKqT,aAAerT,KAAK4T,yBAAyB5T,KAAKsT,YACvDuD,EAAeD,IAGhBrQ,oBAAkBsQ,GAAgBF,EAAmBE,GAEhE1T,EAASjD,UAAU6W,iBAAmB,SAAU/N,EAAW2N,EAAkBxE,GACzE,IACI6E,EACAH,EAFAI,EAAe,KAiBnB,OAdK1Q,oBAAkBvG,KAAKwF,aAAawD,KAAgBzC,oBAAkBvG,KAAKwF,aAAawD,GAAWK,OACpG4N,EAAejX,KAAKwF,aAAawD,GAAWK,IAAI8K,YAE/C5N,oBAAkB0Q,KACfA,EAAanM,QAAQ,KAAO,IAC5BmM,EAAejX,KAAKuT,yBAAyB0D,GAAc9C,YAG3DwC,GADJK,EAAoBhX,KAAK6T,qBAAqBoD,MAE1CjX,KAAKsT,WAAatT,KAAKsT,YAAcqD,EAAmBK,GACxDhX,KAAKqT,aAAerT,KAAK4T,yBAAyB5T,KAAKsT,YACvDuD,EAAeG,IAGhBzQ,oBAAkBsQ,GAAgBF,EAAmBE,GAEhE1T,EAASjD,UAAUoW,qBAAuB,WAEtCtW,KAAKoW,qBAAuBpW,KAAK0W,iBAAiB1W,KAAKoS,cAAepS,KAAKoW,qBAAsBpW,KAAKkL,cAEtGlL,KAAKqW,qBAAuBrW,KAAK0W,iBAAiB1W,KAAK+R,cAAe/R,KAAKqW,qBAAsBrW,KAAKmL,UAEtGnL,KAAKoW,qBAAuBpW,KAAK+W,iBAAiB/W,KAAKoS,cAAepS,KAAKoW,qBAAsBpW,KAAKkL,cAEtGlL,KAAKqW,qBAAuBrW,KAAK+W,iBAAiB/W,KAAK+R,cAAe/R,KAAKqW,qBAAsBrW,KAAKmL,WAE1GhI,EAASjD,UAAUgX,iBAAmB,WAClC,IAAIX,EACCvW,KAAKoW,qBAAuBpW,KAAKqW,qBAAwBrW,KAAKqT,eAC/DkD,EAAcvW,KAAKoW,qBAAuBpW,KAAKqW,qBAAwBrW,KAAKqT,aAC5ErT,KAAKoW,qBAAuBpW,KAAKoW,qBAAwBG,EAAa,EAAK,IAC3EvW,KAAKqW,qBAAuBrW,KAAKqW,qBAAwBE,EAAa,EAAK,KAE1EvW,KAAKoW,qBAAuBpW,KAAKqW,qBAAwBrW,KAAKqT,eAC/DkD,EAAavW,KAAKqT,cAAgBrT,KAAKoW,qBAAuBpW,KAAKqW,sBACnErW,KAAKoW,qBAAuBpW,KAAKoW,qBAAwBG,EAAa,EAAK,IAC3EvW,KAAKqW,qBAAuBrW,KAAKqW,qBAAwBE,EAAa,EAAK,MAGnFpT,EAASjD,UAAUsW,2BAA6B,WACxCxW,KAAK8D,2BAA6B9D,KAAK+D,4BACvC/D,KAAKoW,qBAAuB/B,KAAK8C,MAAMC,OAAO/C,KAAK8C,MAC7C,GADmDnX,KAAK4T,yBAAyB5T,KAAKoW,uBAChF,KACZpW,KAAKqW,qBAAuBhC,KAAK8C,MAAMC,OAAO/C,KAAK8C,MAC7C,GADmDnX,KAAK4T,yBAAyB5T,KAAKqW,uBAChF,KACsB,IAA9BrW,KAAKoW,uBACLpW,KAAKqW,qBAAuBrW,KAAKqT,cAEH,IAA9BrT,KAAKqW,uBACLrW,KAAKoW,qBAAuBpW,KAAKqT,cAEjCrT,KAAKoW,qBAAuBpW,KAAKqW,uBAAyBrW,KAAKqT,aAC/DrT,KAAKkX,oBAGLlX,KAAKoW,qBAAuBpW,KAAKoW,qBAAuB,IACxDpW,KAAKqW,qBAAuBrW,KAAKqW,qBAAuB,KAE5DrW,KAAKoW,qBAAwBpW,KAA8B,0BAAIA,KAAKoW,qBAChEpW,KAAKuT,yBAAyBvT,KAAKoW,sBAAwB,KAC/DpW,KAAKqW,qBAAwBrW,KAA+B,2BAAIA,KAAKqW,qBACjErW,KAAKuT,yBAAyBvT,KAAKqW,sBAAwB,KAC/DrW,KAAK8D,2BAA4B,EACjC9D,KAAK+D,4BAA6B,IAGlC/D,KAAKoW,qBAAuBpW,KAAKoW,qBAAuB,KACxDpW,KAAKqW,qBAAuBrW,KAAKqW,qBAAuB,OAGhElT,EAASjD,UAAUuW,mBAAqB,WAC/BzW,KAAKkL,aAAa1G,UAAUC,SAAS9C,IACtC3B,KAAKkL,aAAa1G,UAAU0C,IAAIvF,GAE/B3B,KAAKmL,SAAS3G,UAAUC,SAAS9C,IAClC3B,KAAKmL,SAAS3G,UAAU0C,IAAIvF,IAGpCwB,EAASjD,UAAUiW,wBAA0B,SAAUkB,EAAYC,EAAqB9B,GACpF,IAAI+B,EAAyC,eAArBvX,KAAKuF,YAAgCvF,KAAKyI,iBAAiB+O,WAC/ExX,KAAKyI,iBAAiBgP,UACtBC,EAAeH,EAAmBD,EAClCK,EAAgBnC,EAAsB+B,EACtCK,EAAe5X,KAAK+U,UAAU/U,KAAKoS,cAAepS,KAAKkL,aAAc,OACrE2M,EAAe7X,KAAK+U,UAAU/U,KAAK+R,cAAe/R,KAAKmL,SAAU,OACjE2M,EAAe9X,KAAK+U,UAAU/U,KAAKoS,cAAepS,KAAKkL,aAAc,OACrE6M,EAAe/X,KAAK+U,UAAU/U,KAAK+R,cAAe/R,KAAKmL,SAAU,OACjE6M,EAAgBX,EAiBpB,OAhBIA,EAAaM,EAAgBE,EAC7BG,EAAgBL,EAAgBE,EAE3BR,EAAaK,EAAeE,IACjCI,EAAgBN,EAAeE,GAE9BrR,oBAAkBuR,GAKbvR,oBAAkBwR,IACpBV,EAAaM,EAAgBI,IAC7BC,EAAgBL,EAAgBI,GANhCV,EAAaK,EAAeI,IAC5BE,EAAgBN,EAAeI,GAQhCE,GAEX7U,EAASjD,UAAU4P,UAAY,SAAUtH,GACrChB,eAAaxH,KAAKyI,kBAAmBzG,GACrChC,KAAKiQ,qBACL,IAAIQ,GACAyB,MAAO1J,EACPnF,QAASrD,KAAKqD,QACd8O,MAAOnS,KAAKkL,aAAclL,KAAKmL,UAC/BlF,OAAQjG,KAAKoS,cAAepS,KAAK+R,eACjCvE,UAAWxN,KAAKyI,iBAChBwN,UAAWjW,KAAKyV,gBAAiBzV,KAAK0V,oBAE1C1V,KAAK2Q,QAAQ,aAAcF,IAE/BtN,EAASjD,UAAU+X,eAAiB,SAAUhS,EAAOiS,GACjD,IACI/O,EADAW,EAAaoO,EAAMvX,OAEvBuF,SAASlG,KAAKkI,UAAUlI,KAAKqD,SAAU,IAClCkD,oBAAkBvG,KAAKwF,aAAaS,IAsBrCwE,oBAAkByN,EAAMjS,IAAUgH,MAAiB,EAARhH,IArBtCM,oBAAkBvG,KAAKwF,aAAaS,GAAOkD,OAgB5CnJ,KAAKmY,UAAW,EAChB1N,oBAAkByN,EAAMjS,IAAUgH,MAAiB,EAARhH,MAhB3CkD,EAAOnJ,KAAKwF,aAAaS,GAAOkD,KAC5BlD,EAAQ6D,IACRW,oBAAkByN,EAAMjS,IAAUmS,aAAcjP,EAAM8D,MAAiB,EAARhH,IAC3DA,EAAQ6D,EAAa,GAAuC,KAAlC9J,KAAKwF,aAAaS,GAAOkD,KACnD1B,YAAUyQ,EAAMjS,IAAStE,GAEnB3B,KAAKmY,WACXD,EAAMjS,GAAOe,MAAMC,UAAY,MAE9BhB,IAAU6D,EAAa,GAAM9J,KAAKmY,UAA8C,KAAlCnY,KAAKwF,aAAaS,GAAOkD,MACxE1B,YAAUyQ,EAAMjS,IAAStE,KAYzC3B,KAAKyD,UAAUiH,KAAa,EAARzE,IAExB9C,EAASjD,UAAUuG,YAAc,SAAU4R,EAAUC,GACjDA,EAAU9R,UAAY,GACtBxG,KAAKuY,gBAAgBD,EAAWD,IAGpClV,EAASjD,UAAUqY,gBAAkB,SAAUC,EAAKC,GAChD,IAAIC,EAAgBjZ,OAAOmF,KAAK+T,QAC5BC,EAAU5Y,KAAKqN,cAAc,OACjCrN,KAAK6Y,eAAeD,EAASH,EAAK,WACA,IAA9BG,EAAQE,WAAWnY,YAChB+I,MAAMnG,KAAKqV,EAAQE,YAAYnP,QAAQ,SAAUoP,GAChDP,EAAIlL,YAAYyL,MAEyB,IAAzCL,EAAc5N,QAAQ,eAAyB9K,KAAKgZ,kBAAmD,IAA/BP,EAAI3N,QAAQ,gBACpFmO,uBAAqBjZ,KAAKqD,QAAQ6V,GAAK,UAAYlZ,KAAKwD,SAAS7C,OAAOwT,WAAY,kBAAmBnU,KAAKwF,aAAaxF,KAAKwD,SAAS7C,OAAS,MAI5JwC,EAASjD,UAAU2Y,eAAiB,SAAUL,EAAKW,EAAKC,GACpD,IAAIV,EAAgBjZ,OAAOmF,KAAK+T,QACX,qBACjBQ,EAAM,EAAME,QAEhB,IAAIC,EAKAA,EAJC/S,oBAAkB4S,EAAII,WAIVC,UAAQL,GAHRK,UAAQL,EAAII,WAK7B,IAAIE,EACClT,oBAAkB+S,KAKfG,GAJyC,IAAzCf,EAAc5N,QAAQ,eAAyB9K,KAAKgZ,kBAAmD,IAA/BG,EAAIrO,QAAQ,eAItEwO,KAAetZ,KAAMoZ,EAAMpZ,KAAKqD,QAAQ6V,GAAK,UAAYlZ,KAAKwD,SAAS7C,OAAOwT,YAAY,GAH1FmF,KAAetZ,KAAMoZ,EAAMpZ,KAAKqD,QAAQ6V,GAAK,UAAYlZ,KAAKwD,SAAS7C,OAAOwT,WAAYnU,KAAKgZ,oBAMhHzS,oBAAkB+S,IAAeG,EAAY9Y,OAAS,MACpD+I,MAAMnG,KAAKkW,GAAa9P,QAAQ,SAAUC,GACzC4O,EAAIlL,YAAY1D,MAI5BzG,EAASjD,UAAUuL,gBAAkB,SAAU0G,EAAMlM,GACjDjG,KAAKwF,aAAaS,GAAOuD,YAAc/B,YAAU0K,GAAOhQ,GAAeqF,eAAa2K,GAAOhQ,IAE/FgB,EAASjD,UAAUwF,gBAAkB,SAAUpF,GAE3C,IAAK,IADDwJ,EAAaxJ,EAAO2I,SAAStI,OACxBK,EAAI,EAAGA,EAAIhB,KAAKwF,aAAa7E,OAAQK,IAC1C,GAAI8I,EAAa9J,KAAKwF,aAAa7E,OAAQ,CACvC,IAAI+Y,EAAe1Z,KAAKqN,cAAc,OACtCrN,KAAKqD,QAAQiK,YAAYoM,GACzB5P,GAA0B,EAGlCA,EAAaxJ,EAAO2I,SAAStI,OAC7B,IAAIuX,KAAWxO,MAAMnG,KAAKjD,EAAO2I,UAEjC,GADAjJ,KAAKmY,UAAW,EACZrO,EAAa,EACb,IAAS9I,EAAI,EAAGA,EAAI8I,EAAY9I,IAEF,QAAtBkX,EAAMlX,GAAG2Y,UAA4C,SAAtBzB,EAAMlX,GAAG2Y,WACxC3Z,KAAKwD,SAASkH,KAAKwN,EAAMlX,IACA,eAArBhB,KAAKuF,aACLkC,YAAUyQ,EAAMlX,KAAMK,EAAMC,EAAcM,IAC1C5B,KAAKiY,eAAejX,EAAGkX,KAGvBzQ,YAAUyQ,EAAMlX,KAAMK,EAAME,EAAcK,IAC1C5B,KAAKiY,eAAejX,EAAGkX,IAEtB3R,oBAAkBvG,KAAKwF,aAAaxE,KAAQuF,oBAAkBvG,KAAKwF,aAAaxE,GAAGsI,UACpFtJ,KAAKyG,YAAYzG,KAAKwF,aAAaxE,GAAGsI,QAAS4O,EAAMlX,IAEpDuF,oBAAkBvG,KAAKwF,aAAaxE,KACrChB,KAAKyL,gBAAgByM,EAAMlX,GAAIA,KAYnDmC,EAASjD,UAAU0Z,OAAS,SAAU3T,GAClCjG,KAAK8G,kBAAkBb,IAO3B9C,EAASjD,UAAU2Z,SAAW,SAAU5T,GACpCjG,KAAK+F,YAAYE,IAMrB9C,EAASjD,UAAU4Z,QAAU,WACpB9Z,KAAK+Z,cACNhX,EAAO7C,UAAU4Z,QAAQvW,KAAKvD,MAC9BqI,eAAaK,OAAOJ,SAAU,mBAAoBtI,KAAKuI,iBACvDsB,SAAO7J,KAAKqD,SACZrD,KAAKqD,QAAUrD,KAAKoH,QACpBpH,KAAKsH,cAAcgG,YAAYtN,KAAKoH,WAG5CjE,EAASjD,UAAU8Z,aAAe,SAAU7H,GAGxC,MAFqB,eAArBnS,KAAKuF,YAA+BkC,YAAU0K,IAAQ9Q,EAAMC,EAAcM,IACtE6F,YAAU0K,IAAQ9Q,EAAME,EAAcK,IACnCuQ,GAEXhP,EAASjD,UAAU+Z,iBAAmB,SAAUC,GAE5C,IAAK,IADDC,EAAQ7R,SAAS8R,iBAAiB,IAAMF,GACnClZ,EAAI,EAAGA,EAAImZ,EAAMxZ,OAAQK,IAC9BmZ,EAAMnZ,GAAGgG,MAAMqT,eAAe,UAGtClX,EAASjD,UAAUoa,aAAe,WAC9B,IAAK,IAAItZ,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,IACtChB,KAAKiY,eAAejX,EAAGhB,KAAKwD,WAGpCL,EAASjD,UAAUqa,gBAAkB,WACjC,IAAK,IAAIvZ,EAAI,EAAGA,EAAIhB,KAAK2D,QAAQhD,OAAQK,IACrC6I,SAAO7J,KAAK2D,QAAQ3C,IAExBhB,KAAK2D,YAETR,EAASjD,UAAUsa,YAAc,WAC7Bxa,KAAKsa,eACLta,KAAKua,kBACLva,KAAK2F,aAAa3F,KAAKqD,UAQ3BF,EAASjD,UAAUua,QAAU,SAAUC,EAAgBzU,GACnD,IAAI0U,EAAU3a,KAAKqN,cAAc,OACjCsN,EAAU3a,KAAKga,aAAaW,GAC5B1U,EAASA,EAAQjG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASsF,EACpE,IAAI2U,GACAzR,KAAM5C,oBAAkBmU,EAAevR,MAAQ,GAAKuR,EAAevR,KACnEC,IAAK7C,oBAAkBmU,EAAetR,KAAO,KAAOsR,EAAetR,IACnEC,IAAK9C,oBAAkBmU,EAAerR,KAAO,KAAOqR,EAAerR,IACnEC,QAAS/C,oBAAkBmU,EAAepR,SAAW,GAAKoR,EAAepR,QACzEC,YAAWhD,oBAAkBmU,EAAenR,YAAoBmR,EAAenR,UAC/EC,aAAajD,oBAAkBmU,EAAelR,cAAuBkR,EAAelR,YACpF3C,WAAWN,oBAAkBmU,EAAe7T,YAAqB6T,EAAe7T,WAEpF7G,KAAKwF,aAAaqV,OAAO5U,EAAO,EAAG2U,GACV,eAArB5a,KAAKuF,aACLvF,KAAKqD,QAAQyX,aAAaH,EAAS3a,KAAKqD,QAAQ+W,iBAAiB,IAAM9Y,GAAc2E,IACrFjG,KAAKia,iBAAiB3Y,KAGtBtB,KAAKqD,QAAQyX,aAAaH,EAAS3a,KAAKqD,QAAQ+W,iBAAiB,IAAM7Y,GAAc0E,IACrFjG,KAAKia,iBAAiB1Y,IAE1BvB,KAAKwD,SAASqX,OAAO5U,EAAO,EAAG0U,GAC/B3a,KAAKwa,cACLxa,KAAKyG,YAAYzG,KAAKwF,aAAaS,GAAOqD,QAASqR,GACnD3a,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAG6D,UAAUkE,OAAO/G,IAO7DwB,EAASjD,UAAU6a,WAAa,SAAU9U,GACtCA,EAASA,EAAQjG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASsF,EACpE,IAAI+U,EAAqC,eAArBhb,KAAKuF,YAAgCjE,EAAeC,EACpEgF,oBAAkBvG,KAAKqD,QAAQ+W,iBAAiB,IAAMY,GAAc/U,MAGxE4D,SAAO7J,KAAKqD,QAAQ+W,iBAAiB,IAAMY,GAAc/U,IACzDjG,KAAKwD,SAASqX,OAAO5U,EAAO,GAC5BjG,KAAKia,iBAAiBe,GACtBhb,KAAKwa,cACLxa,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAG6D,UAAUkE,OAAO/G,KAE7DvB,GACI6C,WAAS,SACVE,EAASjD,UAAW,cAAU,GACjCE,GACI6C,WAAS,SACVE,EAASjD,UAAW,aAAS,GAChCE,GACI6a,gBAAenY,IAChBK,EAASjD,UAAW,oBAAgB,GACvCE,GACI6C,WAAS,eACVE,EAASjD,UAAW,mBAAe,GACtCE,GACI6C,WAAS,KACVE,EAASjD,UAAW,gBAAY,GACnCE,GACI6C,YAAS,IACVE,EAASjD,UAAW,eAAW,GAClCE,GACI6C,WAAS,OACVE,EAASjD,UAAW,qBAAiB,GACxCE,GACI8a,WACD/X,EAASjD,UAAW,eAAW,GAClCE,GACI8a,WACD/X,EAASjD,UAAW,mBAAe,GACtCE,GACI8a,WACD/X,EAASjD,UAAW,gBAAY,GACnCE,GACI8a,WACD/X,EAASjD,UAAW,kBAAc,GACrCE,GACI8a,WACD/X,EAASjD,UAAW,sBAAkB,GACzCE,GACI8a,WACD/X,EAASjD,UAAW,oBAAgB,GACvCE,GACI8a,WACD/X,EAASjD,UAAW,iBAAa,GACpCE,GACI8a,WACD/X,EAASjD,UAAW,gBAAY,GACnCiD,EAAW/C,GACP+a,yBACDhY,IAELiY,aCpiDE/b,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAO5Dya,EAAgB,YAChBC,EAAW,aAGXC,EAAa,eAYbC,EAAe,kBACfC,EAAiB,oBAEjBC,EAAS,iBAKTC,EAAuB,SAAU5Y,GAEjC,SAAS4Y,IACL,OAAkB,OAAX5Y,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KA4C/D,OA9CAX,EAAUsc,EAAO5Y,GAIjB3C,GACI6C,WAAS,KACV0Y,EAAMzb,UAAW,UAAM,GAC1BE,GACI6C,WAAS,KACV0Y,EAAMzb,UAAW,gBAAY,GAChCE,GACI6C,WAAS,KACV0Y,EAAMzb,UAAW,cAAU,GAC9BE,GACI6C,WAAS,KACV0Y,EAAMzb,UAAW,eAAW,GAC/BE,GACI6C,YAAS,IACV0Y,EAAMzb,UAAW,eAAW,GAC/BE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,gBAAY,GAChCE,GACI6C,WAAS,IACV0Y,EAAMzb,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACV0Y,EAAMzb,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACV0Y,EAAMzb,UAAW,gBAAY,GAChCE,GACI6C,WAAS,MACV0Y,EAAMzb,UAAW,cAAU,GACvByb,GACTzY,iBAgBE0Y,EAAiC,SAAU7Y,GAE3C,SAAS6Y,EAAgBxY,EAASC,GAC9B,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAanD,OAZAsD,EAAMuY,KAAO,EACbvY,EAAMwY,QAAU,EAChBxY,EAAMyY,iBAAkB,EACxBzY,EAAM0Y,cAAe,EACrB1Y,EAAM2Y,MAAQ,EACd3Y,EAAM4Y,MAAQ,EACd5Y,EAAM6Y,OAAS,KACf7Y,EAAM8Y,QAAU,IAChB9Y,EAAM+Y,OAAS,EACf/Y,EAAMgZ,OAAS,EACfhZ,EAAMiZ,OAAS,EACfjZ,EAAMkZ,QAAU,EACTlZ,EAw+EX,OAv/EAjE,EAAUuc,EAAiB7Y,GAqB3B6Y,EAAgB1b,UAAUiH,UAAY,WAClCnH,KAAKyc,mBACLzc,KAAK0c,eACL1c,KAAK2c,uBACL3c,KAAK4c,kBACL5c,KAAK6c,uBACL7c,KAAK8c,0BACL9c,KAAK+c,oBACL/c,KAAKgd,kBACLhd,KAAKid,YAAepI,IAAK,GAAID,KAAM,GAAI9P,OAAQ,GAAIC,MAAO,IAC1D/E,KAAKkd,cACLld,KAAKmd,YACLnd,KAAKod,aACLpd,KAAKqd,sBAAuB,EAC5Brd,KAAKsd,oBACLtd,KAAKud,eACLvd,KAAKwd,qBAET5B,EAAgB1b,UAAUqd,aAAe,WACrC,IAAK,IAAIvc,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAC/BhB,KAAKyd,OAAOzc,GAAGkY,KAChBlZ,KAAK0d,oBAAoB1d,KAAKyd,OAAOzc,IAAMkY,GAAI,UAAYlZ,KAAK8b,QAAQ3H,aACxEnU,KAAK8b,QAAU9b,KAAK8b,QAAU,GAElC9b,KAAKod,UAAUpd,KAAKyd,OAAOzc,GAAGkY,KAAQyE,IAAK3d,KAAKyd,OAAOzc,GAAG2c,IAAKC,IAAK5d,KAAKyd,OAAOzc,GAAG4c,MAG3FhC,EAAgB1b,UAAU2d,mBAAqB,SAAU5Y,EAAU6Y,GAC/D,IAAItF,EAAMxY,KAAKqN,cAAc,OAO7B,OANIpI,GACAwC,YAAU+Q,IAAOvT,IAEjB6Y,GACAtF,EAAIzK,aAAa,KAAM+P,GAEpBtF,GAOXoD,EAAgB1b,UAAU6H,OAAS,WAC/B/H,KAAK+d,aACL/d,KAAKge,kBAAmB,EACpBhe,KAAKie,gBAAkBje,KAAKke,mBAC5Ble,KAAKme,iBAGbvC,EAAgB1b,UAAUie,cAAgB,WACtCne,KAAKoe,MAAQ9V,SAAS+E,cAAc,SACpC,IAAIgR,EAAQ/V,SAAS+E,cAAc,SACnCrN,KAAKoe,MAAM5Z,UAAU0C,IAAI,8BACzB,IAAK,IAAIlG,EAAI,EAAGA,EAAIhB,KAAKse,SAAUtd,IAAK,CAEpC,IAAK,IADDud,EAAKjW,SAAS+E,cAAc,MACvBjH,EAAI,EAAGA,EAAIpG,KAAKwe,QAASpY,IAAK,CACnC,IAAIqY,EAAKnW,SAAS+E,cAAc,MAChCoR,EAAGja,UAAU0C,IAAI,wBACjBlH,KAAK0e,eAAgB9V,OAAS+U,IAAK3c,EAAEmT,WAAYyJ,IAAKxX,EAAE+N,WAAYwK,MAAO,IAAKC,MAAO,MAASH,GAChGA,EAAG1Q,aAAa,KAAM,GAAK3H,GAC3BpG,KAAK6e,iBAAiBJ,EAAIzd,EAAGoF,GAC7BpG,KAAK8e,kBAAkBL,GAAMd,IAAK3c,EAAG4c,IAAKxX,EAAGuY,MAAO,EAAGC,MAAO,IAC9DL,EAAGjR,YAAYmR,GAEnBJ,EAAM/Q,YAAYiR,GAEtBve,KAAKoe,MAAM9Q,YAAY+Q,GACvBre,KAAKqD,QAAQiK,YAAYtN,KAAKoe,QAElCxC,EAAgB1b,UAAU6d,WAAa,WAEnC,GADA/d,KAAK+e,kBACD/e,KAAKqD,QAAQ2b,kBAAoB,EAAG,CACpC,IAAIC,KACJjf,KAAKiK,eAAgBwT,YAAc,GACnC,IAAK,IAAIzc,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAQK,IAClEie,EAAcvU,KAAM1K,KAAKqD,QAAQ+W,iBAAiB,YAAYpZ,IAElE,IAASA,EAAI,EAAGA,EAAIie,EAActe,OAAQK,IAAK,CAC3C,IAAIke,EAAeD,EAAcje,GAC7BhB,KAAK8F,WACL2B,YAAUyX,GAAe,SAE7Blf,KAAKmf,gBAAgBD,GACrBlf,KAAKof,SACLpf,KAAKse,SAET,IAAStd,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAAK,CACrCke,EAAelf,KAAKqD,QAAQ+G,cAAc,IAAMpK,KAAKyd,OAAOzc,GAAGkY,IAEnE,GADAlZ,KAAKqf,gBAAgBrf,KAAKyd,OAAOzc,IAC7BhB,KAAKsf,eAAiBtf,KAAKyd,OAAOzc,GAAG4c,KAAO5d,KAAKsf,eAAkBtf,KAAKyd,OAAOzc,GAAG4c,IAAM5d,KAAKyd,OAAOzc,GAAG2d,MAAQ,CAC/G,IAAIY,EAAWvf,KAAKsf,eAAiBtf,KAAKyd,OAAOzc,GAAG2d,MACpD3e,KAAK0d,oBAAoB1d,KAAKyd,OAAOzc,IAAM4c,IAAK2B,EAAW,EAAI,EAAIA,IAEvEvf,KAAKwf,gBAAgBN,EAAclf,KAAKyd,OAAOzc,IAC/C,IAAIye,EAAUzf,KAAK0f,aAAaR,EAAclf,KAAKyd,OAAOzc,GAAIhB,KAAKyd,OAAOzc,GAAGkY,IAAI,GACjFlZ,KAAKyc,gBAAgB/R,KAAK+U,GAC1Bzf,KAAK8e,kBAAkBI,EAAclf,KAAKyd,OAAOzc,IACjDhB,KAAK2f,WAAa3f,KACdA,KAAK4f,aAAejH,OAAOkH,WAAW,IAAM7f,KAAK4f,WAAa,KAAKE,UACnE9f,KAAK6e,iBAAiBK,EAAclf,KAAKyd,OAAOzc,GAAG2c,IAAK3d,KAAKyd,OAAOzc,GAAG4c,KACvE5d,KAAK+f,YAAcb,EACnBlf,KAAKggB,kBAAkBd,EAAclf,KAAKyd,OAAOzc,IACjDhB,KAAK+f,YAAc,MAEvB/f,KAAKigB,YAAYf,IAEjBlf,KAAKke,mBACLle,KAAKkgB,6BAITlgB,KAAKmgB,qBAAqBngB,KAAKyd,SAE/Bzd,KAAKogB,eAAkBpgB,KAAK4f,YAAcjH,OAAOkH,WAAW,IAAM7f,KAAK4f,WAAa,KAAKE,SACzF9f,KAAKqgB,sBAAsBrgB,KAAKyc,iBAEpCzc,KAAKsgB,cACLtgB,KAAKugB,aACLvgB,KAAKwgB,eACLxgB,KAAKygB,yBACLzgB,KAAK0gB,iBAAmB1gB,KAAKsf,eACvBtf,KAAKke,mBACPle,KAAK2gB,wBAET3gB,KAAK4gB,gBAEThF,EAAgB1b,UAAUge,gBAAkB,WACxC,OAAQle,KAAK4f,YAAcjH,OAAOkH,WAAW,IAAM7f,KAAK4f,WAAa,KAAKE,SAE9ElE,EAAgB1b,UAAUsd,kBAAoB,WAC1Cxd,KAAK6gB,YACA7gB,KAAKke,kBACNle,KAAK6gB,SAAS,GAAK7gB,KAAKqD,QAAQkE,eACzB8M,KAAKyM,MAAO9gB,KAAKqD,QAAQkE,cAAyB,aAAKvH,KAAK+gB,iBAGnE/gB,KAAK6gB,SAAS,GAAK7gB,KAAKqD,QAAQkE,eAC5B8M,KAAKyM,MAAO9gB,KAAKqD,QAAQkE,cAAyB,aACtDvH,KAAK6gB,SAAS,GAAK7gB,KAAKqD,QAAQkE,eACzB8M,KAAKyM,OAAO9gB,KAAKqD,QAAQkE,cAAciM,aAAgBxT,KAAKof,SAAW,GAAKpf,KAAKghB,YAAY,IACzFhhB,KAAKof,UAChBpf,KAAK6gB,SAAS,GAAK7gB,KAAK6gB,SAAS,GAAK7gB,KAAK+gB,kBAGnDnF,EAAgB1b,UAAUoe,OAAS,WAC/B,IAAIA,EAAS,EACb,GAAIte,KAAK6b,KAAO,EAEZ,OADAyC,EAASte,KAAK6b,KAGlB,IAAK,IAAI7a,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAChChB,KAAKyd,OAAOzc,GAAG4d,MAAQ5e,KAAKyd,OAAOzc,GAAG2c,IAAMW,IAC5CA,EAASte,KAAKyd,OAAOzc,GAAG4d,MAAQ5e,KAAKyd,OAAOzc,GAAG2c,KAMvD,OAH2B,IAAvB3d,KAAKyd,OAAO9c,SACZ2d,EAASte,KAAKwe,SAEXF,GAEX1C,EAAgB1b,UAAUkf,OAAS,WAC/B,IAAIA,EAAS,EAGb,OAFAA,EAASpf,KAAKwe,QACdxe,KAAKsf,eAAiBF,EACfA,GAEXxD,EAAgB1b,UAAU+gB,mBAAqB,WAC3C,IAAK,IAAIjgB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAAK,CACzC,IAAIkY,EAAKlZ,KAAKyd,OAAOzc,GAAGkY,GACxB,GAAI5Q,SAAS4Y,eAAehI,GAA5B,CACI,IAAIyE,EAAMzX,SAASoC,SAAS4Y,eAAehI,GAAIpQ,aAAa,YAAa,IACrE8U,EAAM1X,SAASoC,SAAS4Y,eAAehI,GAAIpQ,aAAa,YAAa,IACzE9I,KAAKod,UAAUpd,KAAKyd,OAAOzc,GAAGkY,KAAQyE,IAAKA,EAAKC,IAAKA,MAOjEhC,EAAgB1b,UAAUihB,iBAAmB,SAAUlc,EAAU6Y,EAASlT,GACtE,IAAIvH,EAAUrD,KAAKqN,cAAc,OAUjC,OATIzC,GACAnD,YAAUpE,IAAWuH,IAErB3F,GACAwC,YAAUpE,IAAW4B,IAErB6Y,GACAza,EAAQ0K,aAAa,KAAM+P,GAExBza,GAEXuY,EAAgB1b,UAAUkhB,eAAiB,SAAU/I,GACjD,GAAIA,EACA,IACI,GAAI/P,SAAS8R,iBAAiB/B,GAAU1X,OACpC,OAAO6Y,UAAQlR,SAAS8B,cAAciO,GAAU7R,UAAU6S,QAGlE,MAAOgI,GACH,OAAO7H,UAAQnB,KAK3BuD,EAAgB1b,UAAUohB,eAAiB,SAAUhY,EAASiY,EAAetS,EAAM+J,GAG/E,IAAK,IADDwI,KACK9c,EAAK,EAAGC,EAFA3E,KAAKohB,eAAe9X,EAEfgQ,IAAe,KAAM,KAAMrK,EAAM+J,GAAmBtU,EAAKC,EAAGhE,OAAQ+D,IAAM,CAC5F,IAAI+c,EAAO9c,EAAGD,GACd8c,EAAiB9W,KAAK+W,GAE1BC,YAAUhY,MAAMnG,KAAKie,GAAmBD,IAE5C3F,EAAgB1b,UAAUwf,aAAe,SAAUiC,EAAaC,EAAYC,EAAS7I,GASjF,GARAvR,YAAUka,IAtTN,UAKU,uBAkTd3hB,KAAKwb,aAAemG,EAAYvX,cAAc,sBAC1CuX,EAAYvX,cAAc,sBAC1BpK,KAAKmhB,iBAAiBS,EAAW3c,SAAU0c,EAAYzI,GAAK,WAAYuC,GAC5EkG,EAAYrU,YAAYtN,KAAKwb,cACxBoG,EAAWzc,SACZnF,KAAK8hB,aAAaH,GAElBC,EAAWlG,OAAQ,CACnB,IAAIqG,EAAwBJ,EAAYvX,cAAc,mBAClDuX,EAAYvX,cAAc,mBAAqBpK,KAAKmhB,iBAAiB,GAAIQ,EAAYzI,GAAK,WAAY,IAE1G,GADAzR,YAAUsa,IAAyBrG,KAC9BiG,EAAYvX,cAAc,mBAAoB,CAC/C,IAAI8O,EAAKlZ,KAAKqD,QAAQ6V,GAAK,iBAAmB2I,EAC9C7hB,KAAKshB,eAAeM,EAAWlG,OAAQqG,EAAuB7I,EAAIF,GAClEhZ,KAAKwb,aAAalO,YAAYyU,GAC9B9I,uBAAqBC,EAAI,iBAAkB0I,IAGnD,GAAIA,EAAWtY,QAAS,CACpBtJ,KAAKgiB,UAAYL,EAAYvX,cAAc,oBAAsBuX,EAAYvX,cAAc,oBACvFpK,KAAKmhB,iBAAiBS,EAAW3c,SAAU0c,EAAYzI,GAAK,QAASsC,GACzE,IAEIyG,EAAqB,iBAFNjiB,KAAKwb,aAAapR,cAAc,mBAC/CuO,OAAOuJ,iBAAiBliB,KAAKwb,aAAapR,cAAc,oBAAoBtF,OAAS,OAC/B,IAE1D,GADAqd,oBAASniB,KAAKgiB,WAAald,OAAQmd,KAC9BN,EAAYvX,cAAc,oBAAqB,CAC5C8O,EAAKlZ,KAAKqD,QAAQ6V,GAAK,kBAAoB2I,EAC/C7hB,KAAKshB,eAAeM,EAAWtY,QAAStJ,KAAKgiB,UAAW9I,EAAIF,GAC5DhZ,KAAKwb,aAAalO,YAAYtN,KAAKgiB,WACnC/I,uBAAqBC,EAAI,kBAAmB0I,IAGpD,OAAOD,GAEX/F,EAAgB1b,UAAU4hB,aAAe,SAAU5C,GAC/CzX,YAAUyX,IAvVJ,gBAyVVtD,EAAgB1b,UAAUif,gBAAkB,SAAUD,GAClD,IAAIkD,GACAzD,MAAOO,EAAamD,aAAa,cAAgBnc,SAASgZ,EAAapW,aAAa,cAAe,IAAM,EACzG8V,MAAOM,EAAamD,aAAa,cAAgBnc,SAASgZ,EAAapW,aAAa,cAAe,IAAM,EACzGwZ,SAAUpD,EAAamD,aAAa,iBAAmBnc,SAASgZ,EAAapW,aAAa,iBAAkB,IAAM,EAClHyZ,SAAUrD,EAAamD,aAAa,iBAAmBnc,SAASgZ,EAAapW,aAAa,iBAAkB,IAAM,EAClH0Z,SAAUtD,EAAamD,aAAa,iBAAmBnc,SAASgZ,EAAapW,aAAa,iBAAkB,IAAM,KAClH2Z,SAAUvD,EAAamD,aAAa,iBAAmBnc,SAASgZ,EAAapW,aAAa,iBAAkB,IAAM,KAClH6U,IAAKuB,EAAamD,aAAa,YAAcnc,SAASgZ,EAAapW,aAAa,YAAa,IAAM,EACnG8U,IAAKsB,EAAamD,aAAa,YAAcnc,SAASgZ,EAAapW,aAAa,YAAa,IAAM,EACnGoQ,GAAIgG,EAAapW,aAAa,MAC9B4Z,OAAQxD,EAAamD,aAAa,eAAiBnc,SAASgZ,EAAapW,aAAa,eAAgB,IAAM,IAC5G4S,OAAQwD,EAAa9U,cAAc,oBAAsB,kBACzDd,QAAS4V,EAAa9U,cAAc,qBAAuB,oBAE1DgY,EAAMlJ,KACPkJ,EAAMlJ,GAAK,UAAYlZ,KAAK8b,QAAQ3H,WACpC+K,EAAanR,aAAa,KAAMqU,EAAMlJ,IACtClZ,KAAK8b,QAAU9b,KAAK8b,QAAU,GAE9B6G,cAAYP,EAAMjd,WAClBid,EAAMjd,SAAU,GAEpB+Z,EAAalY,MAAM0b,OAAS,GAAKN,EAAMM,OAEvC,IAAIE,EAAY,IAAIjH,EAAM3b,KAAM,SAAUoiB,GAC1CpiB,KAAKyd,OAAO/S,KAAKkY,IAErBhH,EAAgB1b,UAAU2iB,aAAe,WACrC,GAAI7iB,KAAK8iB,cACL,IAAK,IAAI9hB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,yCAAyCzZ,OAAQK,IAAK,CACpG,IAAIkN,EAAmC,SAAtBxG,UAAQyG,KAAKC,KAAmB,wBAA0B,YAC3E/F,eAAanB,IAAIoB,SAAS8R,iBAAiB,aAAapZ,GAAIkN,EAAWlO,KAAK+iB,kBAAmB/iB,MACrE,SAAtB0H,UAAQyG,KAAKC,MACb/F,eAAanB,IAAIoB,SAAS8R,iBAAiB,aAAapZ,GAAI,aAAchB,KAAKgjB,uBAAwBhjB,QAKvH4b,EAAgB1b,UAAUqgB,WAAa,WACnC5H,OAAOlK,iBAAiB,SAAUzO,KAAKijB,QAAQC,KAAKljB,OACpDA,KAAK6iB,gBAETjH,EAAgB1b,UAAU6iB,kBAAoB,SAAUva,GACpDxI,KAAKmjB,YAAY3a,GACjBxI,KAAKojB,WAAa5a,EAAE8G,MACpBtP,KAAKqjB,WAAa7a,EAAEgH,MACpB,IAAI8T,EAAuC,SAAtB5b,UAAQyG,KAAKC,KAAmB,wBAA0B,YAC3EmV,EAAqC,SAAtB7b,UAAQyG,KAAKC,KAAmB,oBAAsB,UACzE/F,eAAanB,IAAIoB,SAAUgb,EAAetjB,KAAKwjB,kBAAmBxjB,MAC7DA,KAAKyjB,iBACNpb,eAAanB,IAAIoB,SAAUib,EAAavjB,KAAK0jB,gBAAiB1jB,MAC9DA,KAAKyjB,gBAAiB,IAI9B7H,EAAgB1b,UAAUijB,YAAc,SAAU3a,GAC9CxI,KAAKgc,cAAe,EACpB,IAAIpS,EAAK+Z,UAASnb,EAAe,cAAG,YAChCob,GAAS1R,MAAO1J,EAAGnF,QAASuG,GAChC5J,KAAK2Q,QAAQ,cAAeiT,GAC5B5jB,KAAK6jB,WAAarb,EAAEsb,cACpB9jB,KAAK+jB,UAAYzb,SAAS+E,cAAc,OACxCrN,KAAK+jB,UAAUvf,UAAU0C,IAAI,YAC7BO,YAAUzH,KAAKqD,UAAWgY,IAC1Brb,KAAKqD,QAAQiK,YAAYtN,KAAK+jB,WAC9B/jB,KAAKgkB,SAAW9d,SAAS0D,EAAG5C,MAAM4N,KAAM,IACxC5U,KAAKikB,SAAW/d,SAAS0D,EAAG5C,MAAM6N,IAAK,IACvC7U,KAAKkkB,aAAeta,EAAG4J,YACvBxT,KAAKmkB,cAAgBva,EAAG6J,aACxBzT,KAAKokB,cAAgBpkB,KAAKqkB,gBAAgBza,EAAGsP,IAAIyF,MACjD3e,KAAKskB,eAAiBtkB,KAAKqkB,gBAAgBza,EAAGsP,IAAI0F,MAClD5e,KAAKukB,YAAcvkB,KAAKqkB,gBAAgBza,EAAGsP,IAAIyE,KAEnD/B,EAAgB1b,UAAU8iB,uBAAyB,SAAUxa,GACzDxI,KAAKmjB,YAAY3a,GACjBxI,KAAKojB,WAAa5a,EAAEgc,eAAe,GAAGlV,MACtCtP,KAAKqjB,WAAa7a,EAAEgc,eAAe,GAAGhV,MACtCnH,eAAanB,IAAIoB,SAAU,YAAatI,KAAKykB,uBAAwBzkB,MAChEA,KAAKyjB,iBACNpb,eAAanB,IAAIoB,SAAU,WAAYtI,KAAK0jB,gBAAiB1jB,MAC7DA,KAAKyjB,gBAAiB,IAG9B7H,EAAgB1b,UAAUwkB,YAAc,WACpC,OAAQxe,SAAUlG,KAAK6gB,SAAS,GAAK,IAAK3a,SAASlG,KAAK6gB,SAAS,GAAI,MAEzEjF,EAAgB1b,UAAUykB,iBAAmB,SAAUnc,GACnDxI,KAAK4kB,WAAa5kB,KAAK6jB,WACvB,IACID,GAAS1R,MAAO1J,EAAGnF,QADdsgB,UAAS3jB,KAAe,WAAG,aAEpCA,KAAK2Q,QAAQ,SAAUiT,IAE3BhI,EAAgB1b,UAAU2kB,oBAAsB,SAAUjb,GACtD5J,KAAK8kB,QAAU9kB,KAAKqD,QAAQmQ,YAAc,EAC1CxT,KAAKmc,OAASnc,KAAK6gB,SAAS,GAAK7gB,KAAKoc,QAAU,EAChD5U,eAAaoC,GAAK,sBAClBnC,YAAUmC,IAAM0R,IAEhB,IAAK,IADDyJ,GAxcD,SACA,SACC,UACA,UAII,eADA,eAEA,eACA,gBAgcC/jB,EAAI,EAAGA,EAAIhB,KAAK4kB,WAAWpgB,UAAU7D,OAAQK,KACS,IAAvD+jB,EAAYja,QAAQ9K,KAAK4kB,WAAWpgB,UAAUxD,MAC9ChB,KAAKglB,YAAehlB,KAAK4kB,WAAWpgB,UAAUxD,KAI1D4a,EAAgB1b,UAAUsjB,kBAAoB,SAAUhb,GACpDxI,KAAK2kB,iBAAiBnc,GACtB,IAAIoB,EAAK+Z,UAAS3jB,KAAe,WAAG,YACpC,GAAIA,KAAKojB,aAAe5a,EAAE8G,OAAStP,KAAKqjB,aAAe7a,EAAEgH,MAAzD,CAGAxP,KAAK6kB,oBAAoBjb,GACzB,IAAIgY,EAAa5hB,KAAKqkB,gBAAgBza,EAAGd,aAAa,OACtD9I,KAAKqc,OAAS7T,EAAE8G,MAChBtP,KAAKsc,OAAS9T,EAAEgH,MAChB,IAAIyV,EAAQjlB,KAAKsc,OAAStc,KAAKqjB,WAAarjB,KAAKkc,MAC7CgJ,EAAQllB,KAAKqc,OAASrc,KAAKojB,WAAapjB,KAAKic,MACjDjc,KAAKic,MAAQjc,KAAKkc,MAAQ,EAC1Blc,KAAKqjB,WAAarjB,KAAKsc,OACvBtc,KAAKojB,WAAapjB,KAAKqc,OACvBrc,KAAKmlB,cAAcvb,EAAIgY,EAAYsD,EAAOD,KAE9CrJ,EAAgB1b,UAAUukB,uBAAyB,SAAUjc,GACzDxI,KAAK2kB,iBAAiBnc,GACtB,IAAIoB,EAAK+Z,UAAS3jB,KAAe,WAAG,YACpC,GAAIA,KAAKojB,aAAe5a,EAAEgc,eAAe,GAAGlV,OAAStP,KAAKqjB,aAAe7a,EAAEgc,eAAe,GAAGhV,MAA7F,CAGAxP,KAAK6kB,oBAAoBjb,GACzB,IAAIgY,EAAa5hB,KAAKqkB,gBAAgBza,EAAGd,aAAa,OACtD9I,KAAKqc,OAAS7T,EAAEgc,eAAe,GAAGlV,MAClCtP,KAAKsc,OAAS9T,EAAEgc,eAAe,GAAGhV,MAClC,IAAI0V,EAAQllB,KAAKqc,OAASrc,KAAKojB,WAAapjB,KAAKic,MAC7CgJ,EAAQjlB,KAAKsc,OAAStc,KAAKqjB,WAAarjB,KAAKkc,MACjDlc,KAAKic,MAAQjc,KAAKkc,MAAQ,EAC1Blc,KAAKojB,WAAapjB,KAAKqc,OACvBrc,KAAKqjB,WAAarjB,KAAKsc,OACvBtc,KAAKmlB,cAAcvb,EAAIgY,EAAYsD,EAAOD,KAG9CrJ,EAAgB1b,UAAUilB,cAAgB,SAAUvb,EAAIgY,EAAYwD,EAAUC,GAC1E,IAAIC,EAAWtlB,KAAKqkB,gBAAgBza,EAAGsP,IAAIyF,MACvC4G,EAAWvlB,KAAKqkB,gBAAgBza,EAAGsP,IAAI0F,MACvC4G,EAAKH,EACLI,EAAKL,EACLplB,KAAKglB,YAAYla,QAAQ,UAAY,IACjC9K,KAAKmkB,cAAgBqB,EAAKxlB,KAAK0lB,aAAa9D,IAC5CyD,EAAWrlB,KAAKmkB,cAAgBnkB,KAAK0lB,aAAa9D,GAClD5hB,KAAKkc,MAAQsJ,EAAKH,GAEbzD,EAAWa,UAAYziB,KAAKmkB,cAAgBqB,EAAKxlB,KAAK2lB,aAAa/D,IACxEyD,EAAWrlB,KAAKmkB,cAAgBnkB,KAAK2lB,aAAa/D,GAClD5hB,KAAKkc,MAAQsJ,EAAKH,GAEbrlB,KAAKikB,SAAWuB,EAAKxlB,KAAKuc,SAC/B8I,EAAWrlB,KAAKuc,OAASvc,KAAKikB,SAC9BjkB,KAAKkc,MAAQsJ,EAAKH,GAEtBrlB,KAAKikB,UAAYoB,EACjBrlB,KAAKmkB,eAAiBkB,GAEtBrlB,KAAKglB,YAAYla,QAAQ,UAAY,IACjC9K,KAAKmkB,cAAgBqB,EAAKxlB,KAAK0lB,aAAa9D,IAC5CyD,EAAWrlB,KAAK0lB,aAAa9D,GAAc5hB,KAAKmkB,cAChDnkB,KAAKkc,MAAQsJ,EAAKH,GAEbzD,EAAWa,UAAYziB,KAAKmkB,cAAgBqB,EAAKxlB,KAAK2lB,aAAa/D,IACxEyD,EAAWrlB,KAAK2lB,aAAa/D,GAAc5hB,KAAKmkB,cAChDnkB,KAAKkc,MAAQsJ,EAAKH,GAEbrlB,KAAKikB,SAAWjkB,KAAKmkB,cAAgBqB,EAAKxlB,KAAKmc,SACpDkJ,EAAWrlB,KAAKmc,OAASnc,KAAKikB,SAAWjkB,KAAKmkB,cAC9CnkB,KAAKkc,MAAQsJ,EAAKH,GAEtBrlB,KAAKmkB,eAAiBkB,GAEtBrlB,KAAKglB,YAAYla,QAAQ,SAAW,IAChC9K,KAAKkkB,aAAeuB,EAAKzlB,KAAK4lB,YAAYhE,IAC1CwD,EAAWplB,KAAKkkB,aAAelkB,KAAK4lB,YAAYhE,GAChD5hB,KAAKic,MAAQwJ,EAAKL,GAEbxD,EAAWY,UAAYxiB,KAAKkkB,aAAeuB,EAAKzlB,KAAK6lB,YAAYjE,IACtEwD,EAAWplB,KAAKkkB,aAAelkB,KAAK6lB,YAAYjE,GAChD5hB,KAAKic,MAAQwJ,EAAKL,GAEbplB,KAAKgkB,SAAWyB,EAAKzlB,KAAKwc,UAC/B4I,EAAWplB,KAAKwc,QAAUxc,KAAKgkB,SAC/BhkB,KAAKic,MAAQwJ,EAAKL,GAEtBplB,KAAKgkB,UAAYoB,EACjBplB,KAAKkkB,cAAgBkB,GAErBplB,KAAKglB,YAAYla,QAAQ,SAAW,IAChC9K,KAAKkkB,aAAeuB,EAAKzlB,KAAK4lB,YAAYhE,IAC1CwD,EAAWplB,KAAK4lB,YAAYhE,GAAc5hB,KAAKkkB,aAC/ClkB,KAAKic,MAAQwJ,EAAKL,GAEbxD,EAAWY,UAAYxiB,KAAKkkB,aAAeuB,EAAKzlB,KAAK6lB,YAAYjE,IACtEwD,EAAWplB,KAAK6lB,YAAYjE,GAAc5hB,KAAKkkB,aAC/ClkB,KAAKic,MAAQwJ,EAAKL,GAEbplB,KAAKgkB,SAAWhkB,KAAKkkB,aAAeuB,EAAKzlB,KAAK8kB,UACnDM,EAAWplB,KAAK8kB,QAAU9kB,KAAKgkB,SAAWhkB,KAAKkkB,aAC/ClkB,KAAKic,MAAQwJ,EAAKL,GAEtBplB,KAAKkkB,cAAgBkB,GAEzBxb,EAAG5C,MAAM6N,IAAM7U,KAAKikB,SAAW,KAC/Bra,EAAG5C,MAAM4N,KAAO5U,KAAKgkB,SAAW,KAChCpa,EAAG5C,MAAMjC,MAAQ/E,KAAKkkB,aAAe,KACrCta,EAAG5C,MAAMlC,OAAS9E,KAAKmkB,cAAgB,KACvC,IAAI1C,EAAOzhB,KAAK8lB,mBAAmBlE,EAAY5hB,KAAK4kB,YAQpD,GAPInD,EAAK7D,IAAM6D,EAAK9C,MAAQ3e,KAAKwe,SAC7Bxe,KAAK0d,oBAAoB+D,GAAQ9C,MAAO8C,EAAK9C,MAAQ,IAEzD3e,KAAK+jB,UAAU/c,MAAM6N,IAAQ4M,EAAK9D,IAAM3d,KAAK0kB,cAAc,GAAMjD,EAAK9D,IAAM3d,KAAKghB,YAAY,GAAQ,KACrGhhB,KAAK+jB,UAAU/c,MAAM4N,KAAS6M,EAAK7D,IAAM5d,KAAK0kB,cAAc,GAAQjD,EAAQ,IAAIzhB,KAAKghB,YAAY,GAAO,KACxGhhB,KAAK+jB,UAAU/c,MAAMlC,OAAW2c,EAAK7C,OAAS5e,KAAK0kB,cAAc,GAAM1kB,KAAKghB,YAAY,IAAS,KACjGhhB,KAAK+jB,UAAU/c,MAAMjC,MAAU0c,EAAK9C,OAAS3e,KAAK0kB,cAAc,GAAM1kB,KAAKghB,YAAY,IAAS,KAC5FsE,IAAa7D,EAAK9C,OAAS4G,IAAa9D,EAAK7C,MAAO,CACpD0G,EAAW7D,EAAK9C,MAChB4G,EAAW9D,EAAK7C,MAChB,IAAIwD,EAAQpiB,KAAKqkB,gBAAgBza,EAAGsP,IAChCtQ,GACAmd,YACIpI,IAAKyE,EAAMzE,IAAIxJ,WACfyJ,IAAKwE,EAAMxE,IAAIzJ,WACfwK,MAAOyD,EAAMzD,MAAMxK,WACnByK,MAAOwD,EAAMxD,MAAMzK,aAG3BnU,KAAK0e,cAAc9V,EAAOgB,GAC1B5J,KAAK+f,YAAcnW,EACnB5J,KAAKggB,kBAAkBpW,EAAI5J,KAAKqkB,gBAAgBza,EAAGsP,KACnDlZ,KAAKihB,qBACLjhB,KAAKsgB,gBAGb1E,EAAgB1b,UAAUwjB,gBAAkB,SAAUlb,GAClD,IAAIjC,oBAAkBvG,KAAK6jB,YAA3B,CAGA7jB,KAAKgmB,SAAWhmB,KAAK6jB,WACrB,IAAIja,EAAK+Z,UAAS3jB,KAAa,SAAG,YAC9B4jB,GAAS1R,MAAO1J,EAAGnF,QAASuG,GAEhC,GADA5J,KAAK2Q,QAAQ,aAAciT,GACvBha,EAAI,CACJnC,YAAUmC,GAAK,sBACf,IAAI0Z,EAAuC,SAAtB5b,UAAQyG,KAAKC,KAAmB,wBAA0B,YAC3EmV,EAAqC,SAAtB7b,UAAQyG,KAAKC,KAAmB,oBAAsB,UACzE/F,eAAaK,OAAOJ,SAAUgb,EAAetjB,KAAKwjB,mBAClDnb,eAAaK,OAAOJ,SAAUib,EAAavjB,KAAK0jB,iBACtB,SAAtBhc,UAAQyG,KAAKC,OACb/F,eAAaK,OAAOJ,SAAU,YAAatI,KAAKykB,wBAChDpc,eAAaK,OAAOJ,SAAU,WAAYtI,KAAK0jB,kBAEnD1jB,KAAKyjB,gBAAiB,EAClBzjB,KAAK+jB,WACLla,SAAO7J,KAAK+jB,WAEhB/jB,KAAK+jB,UAAY,KACjB,IAAInC,EAAa5hB,KAAKqkB,gBAAgBza,EAAGd,aAAa,OACtD9I,KAAK6e,iBAAiBjV,EAAIgY,EAAWjE,IAAKiE,EAAWhE,KACrD5d,KAAK8e,kBAAkBlV,EAAIgY,GAE/B5hB,KAAKgc,cAAe,EACpBhc,KAAKojB,WAAapjB,KAAKqjB,gBAAa4C,EACpCjmB,KAAKic,MAAQjc,KAAKkc,MAAQ,EAC1Blc,KAAK+f,YAAc,KACf/f,KAAKkmB,eACLlmB,KAAKmmB,mBAETnmB,KAAKwgB,eACLxgB,KAAKygB,2BAET7E,EAAgB1b,UAAU4lB,mBAAqB,SAAUrE,EAAMjZ,GAC3D,IAAI4d,GAAY,EACZxI,EAAM6D,EAAK7D,KAC+C,KAAzD,SAAU,gBAAgB9S,QAAQ9K,KAAKglB,eACxCpH,EAAM5d,KAAKqmB,gBAAgBrmB,KAAKgkB,UAAU,IAE9C,IAAIrG,EAAM8D,EAAK9D,KACgC,KAA1C,WAAW7S,QAAQ9K,KAAKglB,eACzBrH,EAAM3d,KAAKsmB,aAAatmB,KAAKikB,UAAU,GACnCjkB,KAAKukB,cAAgB5G,IACrB3d,KAAKukB,YAAc5G,EACnByI,GAAY,IAGpB,IAAIzH,EAAQ8C,EAAK9C,OACyC,KAArD,UAAW,WAAW7T,QAAQ9K,KAAKglB,eACpCrG,EAAQ3e,KAAKqmB,gBAAgBrmB,KAAKkkB,aAAe,EAAUlkB,KAAKghB,YAAY,IAAI,IAEpF,IAAIpC,EAAQ6C,EAAK7C,OACuC,KAAnD,SAAU,UAAU9T,QAAQ9K,KAAKglB,eACT,YAArBhlB,KAAKglB,aAA4BoB,KACjCxH,EAAQ5e,KAAKsmB,aAAatmB,KAAKmkB,cAAgB,EAAUnkB,KAAKghB,YAAY,IAAI,IAGlFS,EAAK7D,IAAM6D,EAAK9C,MAAQ3e,KAAKwe,UAC7BiD,EAAK9C,MAAQ8C,EAAK9C,MAAQ,GAO9B,OALgBhB,GAAO,GAAKC,GAAO,GAAKe,EAAQf,GAAO5d,KAAKof,UAAYR,EAAQjB,GAAO3d,KAAKse,UACK,IAA/Ete,KAAKumB,WAAW5I,EAAKC,EAAKe,EAAOC,EAAO5e,KAAKwmB,aAAa/E,EAAKvI,KAAKvY,SACzD,IAAtBX,KAAKymB,eACRzmB,KAAK0d,oBAAoB+D,GAAQ9D,IAAKA,EAAKC,IAAKA,EAAKe,MAAOA,EAAOC,MAAOA,IAEvE6C,GAEX7F,EAAgB1b,UAAUmmB,gBAAkB,SAAUK,EAAQC,GAC1D,IAAIC,EAAc5mB,KAAK6gB,SAAS,GAChC,OAAI8F,EACOtS,KAAKC,KAAKoS,EAASE,GAGnBvS,KAAKyM,MAAM4F,EAASE,IAGnChL,EAAgB1b,UAAUomB,aAAe,SAAUI,EAAQC,GACvD,OAAIA,EACOtS,KAAK8C,MAAMuP,EAAS1mB,KAAK6gB,SAAS,IAGlCxM,KAAK8C,MAAMuP,GAAU1mB,KAAK6gB,SAAS,GAAK7gB,KAAKghB,YAAY,MAGxEpF,EAAgB1b,UAAU0lB,YAAc,SAAUnE,GAC9C,OAAQA,EAAa,SAAIzhB,KAAK0kB,cAAc,IAGhD9I,EAAgB1b,UAAU2lB,YAAc,SAAUpE,GAC9C,OAAQA,EAAa,SAAIzhB,KAAK0kB,cAAc,IAGhD9I,EAAgB1b,UAAUwlB,aAAe,SAAUjE,GAC/C,OAAQA,EAAa,SAAIzhB,KAAK0kB,cAAc,IAGhD9I,EAAgB1b,UAAUylB,aAAe,SAAUlE,GAC/C,OAAQA,EAAa,SAAIzhB,KAAK0kB,cAAc,IAGhD9I,EAAgB1b,UAAUogB,YAAc,WACpCtgB,KAAK0c,eACL,IAAK,IAAI1b,EAAI,EAAG6lB,EAAI7mB,KAAKyc,gBAAgB9b,OAAQK,EAAI6lB,IAAK7lB,EACtDhB,KAAK8mB,SAAS9mB,KAAKyc,gBAAgBzb,KAG3C4a,EAAgB1b,UAAUimB,iBAAmB,WACzC,IAA2B,IAAvBnmB,KAAKkmB,cAAT,CAGA,IAAK,IAAIa,EAAW,EAAGF,EAAI7mB,KAAK0c,YAAY/b,OAAQomB,EAAWF,IAAKE,EAAU,CAC1E,IAAIvI,EAAUxe,KAAK0c,YAAYqK,GAC/B,GAAKvI,EAGL,IAAK,IAAIwI,EAAW,EAAGC,EAAMzI,EAAQ7d,OAAQqmB,EAAWC,IAAOD,EAAU,CACrE,IAAIvF,EAAOjD,EAAQwI,GACfvF,GACAzhB,KAAKknB,gBAAgBzF,IAIjCzhB,KAAKmnB,oBAGTvL,EAAgB1b,UAAUgnB,gBAAkB,SAAUzF,GAClD,IAA2B,IAAvBzhB,KAAKkmB,eAA2BzE,IAASzhB,KAAK+f,YAAlD,CASA,IANA,IAAIiH,EAAWhnB,KAAKqkB,gBAAgB5C,EAAKvI,IAAI0E,IACzCgB,EAAQ1Y,SAASub,EAAK3Y,aAAa,cAAe,IAClD6V,EAAQzY,SAASub,EAAK3Y,aAAa,cAAe,IAClDse,EAAe,KACfC,EAAkB,KAClBN,EAAW7gB,SAASub,EAAK3Y,aAAa,YAAa,IAAM,EACtDie,GAAY,GAAG,CAElB,GAAqB,IADT/mB,KAAKumB,WAAWQ,EAAUC,EAAUrI,EAAOC,EAAO6C,GACpD9gB,OACN,MAEJymB,EAAeL,EACfM,EAAkBL,IAChBD,EAEe,OAAjBK,GACApnB,KAAK8mB,SAASrF,EAAM2F,EAAcC,KAG1CzL,EAAgB1b,UAAU4mB,SAAW,SAAUrF,EAAM6F,EAAUC,EAAaC,GACxExnB,KAAK4c,kBACL,IAAI6K,EAASvhB,SAASub,EAAK3Y,aAAa,YAAa,IACjD6U,EAAMzX,SAASub,EAAK3Y,aAAa,YAAa,IAKlD,GAJK9I,KAAK0c,YAAYiB,KAClB3d,KAAK0c,YAAYiB,OAErB3d,KAAK0c,YAAYiB,GAAK8J,GAAUhG,OACnBwE,IAATxE,QAAmCwE,IAAbqB,QAA0CrB,IAAhBsB,EAA2B,CAC3E,QAAgCtB,IAA5BjmB,KAAKod,UAAUqE,EAAKvI,KAAqD,OAAhClZ,KAAKod,UAAUqE,EAAKvI,IAAIyE,UAC1B,IAAhC3d,KAAKod,UAAUqE,EAAKvI,IAAI0E,IAAqB,CAEhD,IAAI8J,EAAS1nB,KAAK0c,YAAY1c,KAAKod,UAAUqE,EAAKvI,IAAIyE,KAClD3d,KAAKod,UAAUqE,EAAKvI,KAAOwO,EAAO1nB,KAAKod,UAAUqE,EAAKvI,IAAI0E,OAAS6D,WAC5DiG,EAAO1nB,KAAKod,UAAUqE,EAAKvI,IAAI0E,KACtC5d,KAAKihB,qBACLjhB,KAAKsgB,eAIjBtgB,KAAKod,UAAUqE,EAAKvI,IAAIyE,IAAM2J,EAC9BtnB,KAAKod,UAAUqE,EAAKvI,IAAIyE,IAAM4J,EACzBvnB,KAAK0c,YAAYiB,KAClB3d,KAAK0c,YAAYiB,OAErB3d,KAAK0c,YAAYiB,GAAK8J,GAAUhG,GACK,IAAjCzhB,KAAKmd,SAASrS,QAAQ2W,IACtBzhB,KAAKmd,SAASzS,KAAK+W,GAEvBzhB,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgB5C,EAAKvI,KAAOyE,IAAK2J,EAAU1J,IAAK2J,IAC9E,IAAI3F,EAAa5hB,KAAKqkB,gBAAgB5C,EAAKvI,IAC3ClZ,KAAK0e,eAAgB9V,OAASgV,IAAKgE,EAAWhE,IAAIzJ,WAAYwJ,IAAKiE,EAAWjE,IAAIxJ,aAAgBsN,GAClGzhB,KAAK2nB,aAAalG,EAAMzhB,KAAKqkB,gBAAgB5C,EAAKvI,OAG1D0C,EAAgB1b,UAAUynB,aAAe,SAAUtkB,EAASue,GACxD5hB,KAAK6e,iBAAiBxb,EAASue,EAAWjE,IAAKiE,EAAWhE,KAC1D5d,KAAK8e,kBAAkBzb,EAASue,GAChC5hB,KAAK+e,kBACL/e,KAAKsgB,eAGT1E,EAAgB1b,UAAU+iB,QAAU,WAChC,GAAIjjB,KAAKke,kBACLle,KAAKkgB,4BAEJ,CACD,GAAIlgB,KAAKqD,QAAQmB,UAAUC,SAAS8W,GAAa,CAC7C/T,eAAaxH,KAAKqD,UAAWkY,IAC7B,IAAK,IAAIva,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAQK,IAAK,CACvE,IAAIwX,EAAMxY,KAAKqD,QAAQ+W,iBAAiB,YAAYpZ,GAChD4mB,EAAe5nB,KAAKqkB,gBAAgB7L,EAAIU,IACxCyE,EAAMzX,SAASsS,EAAI1P,aAAa,YAAa,IAC7C8U,EAAM1X,SAASsS,EAAI1P,aAAa,YAAa,IACjD9I,KAAK0d,oBAAoBkK,GAAgBjK,IAAKA,EAAKC,IAAKA,IACxD5d,KAAK8e,kBAAkBtG,EAAKxY,KAAKqkB,gBAAgB7L,EAAIU,KACrDlZ,KAAK6e,iBAAiBrG,EAAKmF,EAAKC,GAChC5d,KAAK+e,mBAGb/e,KAAK2gB,wBACL3gB,KAAKmnB,kBAETnnB,KAAK6nB,oBAAoB7nB,KAAKyc,iBAC9Bzc,KAAKigB,WAAWjgB,KAAKyc,iBACrBzc,KAAK6iB,eACL7iB,KAAK8nB,cAAc9nB,KAAKgd,iBAE5BpB,EAAgB1b,UAAUinB,gBAAkB,WACpCnnB,KAAKqD,QAAQ+G,cAAc,iCACvBpK,KAAKoe,OACLvU,SAAO7J,KAAKoe,OAEhBpe,KAAKme,kBAGbvC,EAAgB1b,UAAU4nB,cAAgB,SAAU9K,GAChD,GAAIhd,KAAKke,oBAAsBle,KAAKogB,cAChC,IAAK,IAAIpf,EAAI,EAAGA,EAAIgc,EAAerc,OAAQK,IACvCgc,EAAehc,GAAG8Y,cAGrB,CACD,IAAS9Y,EAAI,EAAGA,EAAIgc,EAAerc,OAAQK,IACvCgc,EAAehc,GAAG8Y,UAEtB9Z,KAAKqgB,sBAAsBrgB,KAAKyc,mBAGxCb,EAAgB1b,UAAU6nB,WAAa,WAenC,IAAK,IAdD3F,KACA4F,EAAU,SAAUrK,GAQpB,IAAK,IAPDsK,EAAU,SAAUrK,GACpBsK,EAAOzK,OAAO0K,OAAO,SAAUC,GACvBA,EAAMzK,MAAQA,GAAOyK,EAAMxK,MAAQA,GACnCwE,EAAM1X,KAAK0d,MAIdxK,EAAM,EAAGA,EAAMsK,EAAO1J,QAASZ,IACpCqK,EAAQrK,IAGZsK,EAASloB,KACJ2d,EAAM,EAAGA,GAAO3d,KAAK6b,KAAM8B,IAChCqK,EAAQrK,GAEZ,OAAOyE,GAEXxG,EAAgB1b,UAAUggB,sBAAwB,WAC9CzY,YAAUzH,KAAKqD,UAAWkY,IAC1B,IAAI8M,EAAeroB,KAAK+nB,aACxB/nB,KAAKsoB,YAAcD,EAAa1nB,OAChC,IAAK,IAAIK,EAAI,EAAGA,EAAIqnB,EAAa1nB,OAAQK,IAAK,CAC1C,IAAIke,EAAe5W,SAAS4Y,eAAemH,EAAarnB,GAAGkY,IACvDgG,IACAiD,oBAASjD,GAAgBna,MAAS,SAClCma,EAAalY,MAAMlC,OAAS,KAAO9E,KAAKqD,QAAQkE,eACzCvH,KAAKqD,QAAQkE,cAAciM,YAAcxT,KAAK+gB,iBAAmB,KACxE/gB,KAAK6gB,SAAS,GAAK7gB,KAAKqD,QAAQkE,eACxBvH,KAAKqD,QAAQkE,cAAciM,YAAcxT,KAAK+gB,gBACtD/gB,KAAK0d,oBAAoB2K,EAAarnB,IAAM2c,IAAK3c,EAAG4c,IAAK,IACzD5d,KAAK6e,iBAAiBK,EAAcmJ,EAAarnB,GAAG2c,IAAK0K,EAAarnB,GAAG4c,KACzE5d,KAAKigB,WAAWjgB,KAAKyc,iBACrBzc,KAAK8nB,cAAc9nB,KAAKgd,gBACxBhd,KAAK6nB,oBAAoB7nB,KAAKyc,kBAGtCzc,KAAK+e,mBAETnD,EAAgB1b,UAAUygB,sBAAwB,WAC9C3gB,KAAKqD,QAAQmB,UAAU0C,IAAI,gBAC3BlH,KAAKwd,oBACL,IAAK,IAAIxc,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAQK,IAAK,CACvE,IAAIwX,EAAMxY,KAAKqD,QAAQ+W,iBAAiB,YAAYpZ,GAChD4gB,EAAa5hB,KAAKqkB,gBAAgB7L,EAAIU,IAC1ClZ,KAAK8e,kBAAkBtG,EAAKoJ,GAEhC,IAAS5gB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IACpChB,KAAK6e,iBAAiBvW,SAAS4Y,eAAelhB,KAAKyd,OAAOzc,GAAGkY,IAAKlZ,KAAKyd,OAAOzc,GAAG2c,IAAK3d,KAAKyd,OAAOzc,GAAG4c,KAEzG5d,KAAK+e,mBAETnD,EAAgB1b,UAAU6e,gBAAkB,WACxC/e,KAAKuoB,eACLvoB,KAAKwoB,kBAET5M,EAAgB1b,UAAUsoB,eAAiB,WACvC,IAAIC,EACAC,EAEAD,EADAzoB,KAAKke,kBACWle,KAAKse,UAChBte,KAAKqD,QAAQkE,eAAiB8M,KAAKyM,MAAO9gB,KAAKqD,QAAQkE,cAAyB,aAAKvH,KAAK+gB,kBAC1F/gB,KAAKse,SAAW,GAAKte,KAAKghB,YAAY,GAAM,KAGjChhB,KAAKse,UAChBte,KAAK6gB,SAAS,GAAK7gB,KAAK+gB,kBAAoB/gB,KAAKse,SAAW,GAAKte,KAAKghB,YAAY,GAAM,KAEjGmB,oBAASniB,KAAKqD,SAAWyB,OAAU2jB,IACnCC,EAAa/P,OAAOuJ,iBAAiBliB,KAAKqD,SAAS0B,MACnDod,oBAASniB,KAAKqD,SAAW0B,MAAS2jB,KAEtC9M,EAAgB1b,UAAU4e,kBAAoB,SAAUI,EAAc0C,GAClEO,oBAASjD,GAAgBpa,OAAU0F,aAAWxK,KAAK2oB,gBAAgB/G,GAAY,MAC/EO,oBAASjD,GAAgBna,MAASyF,aAAWxK,KAAK2oB,gBAAgB/G,GAAY,OAElFhG,EAAgB1b,UAAU0oB,WAAa,SAAUR,EAAOpP,GACpDhZ,KAAKkd,WAAald,KAAK2oB,gBAAgBP,GACnCzF,cAAYyF,EAAMjjB,WAClBijB,EAAMjjB,SAAU,GAEpB,IAAIwc,EAAc3hB,KAAK6d,mBAAmBuK,EAAMnjB,SAAUmjB,EAAMlP,IAChEyI,EAAY3a,MAAM0b,OAAS,GAAK0F,EAAM1F,OACtC1iB,KAAKqD,QAAQiK,YAAYqU,GACzB,IAAIkH,EAAgB7oB,KAAK0f,aAAaiC,EAAayG,EAAOA,EAAMlP,GAAIF,GAIpE,OAHAhZ,KAAKyc,gBAAgB/R,KAAKme,GAC1B7oB,KAAKwf,gBAAgBmC,EAAayG,GAClCpoB,KAAK8e,kBAAkB6C,EAAayG,GAC7BzG,GAEX/F,EAAgB1b,UAAU2e,iBAAmB,SAAU8C,EAAahE,EAAKC,GACrE,GAAK+D,EAAL,CAGA,IAAI8G,EAAczoB,KAAK0kB,cAAc,GACjCgE,EAAa1oB,KAAK0kB,cAAc,GAChC9P,EAAe,IAARgJ,EAAY,EAAM,GAAS1X,SAASwiB,EAAWvU,WAAY,IAAMnU,KAAKghB,YAAY,IACzFnM,EAAc,IAAR8I,EAAY,EAAM,GAASzX,SAASuiB,EAAYtU,WAAY,IAAMnU,KAAKghB,YAAY,IAC7FmB,oBAASR,GAAe/M,KAAQA,EAAO,KAAMC,IAAOA,EAAM,SAE9D+G,EAAgB1b,UAAUqoB,aAAe,WAErC,GADAvoB,KAAK6b,KAAO,KACR7b,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAS,IAAMX,KAAKsoB,YAE9D,IAAK,IADDrJ,EAAgBjf,KAAKqD,QAAQ+W,iBAAiB,YACzCpZ,EAAI,EAAGA,EAAIie,EAActe,OAAQK,IAAK,CAC3C,IAAIke,EAAeD,EAAcje,GAC7BsmB,EAAWphB,SAASgZ,EAAapW,aAAa,YAAa,IAC3DggB,EAAS5iB,SAASgZ,EAAapW,aAAa,cAAe,IAC/D9I,KAAK6b,KAAOxH,KAAKhL,IAAIrJ,KAAK6b,KAAOyL,EAAWwB,OAG/C,CACG9oB,KAAKsoB,cACLtoB,KAAK6b,KAAO7b,KAAKsoB,YACjBtoB,KAAKsoB,YAAc,MAEvB,IAAStnB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IACpChB,KAAK6b,KAAOxH,KAAKhL,IAAIrJ,KAAK6b,KAAM7b,KAAKyd,OAAOzc,GAAG2c,OAI3D/B,EAAgB1b,UAAUmf,gBAAkB,SAAU+I,IAC7CA,EAAMzJ,OAASyJ,EAAMzJ,MAAQyJ,EAAM9F,SACpCtiB,KAAK0d,oBAAoB0K,GAASzJ,MAAOyJ,EAAM9F,WAEzC8F,EAAM5F,UAAY4F,EAAMzJ,MAAQyJ,EAAM5F,SAC5CxiB,KAAK0d,oBAAoB0K,GAASzJ,MAAOyJ,EAAM5F,WAE1C4F,EAAMzJ,MAAQ3e,KAAKwe,QACxBxe,KAAK0d,oBAAoB0K,GAASzJ,MAAO3e,KAAKwe,UAG9Cxe,KAAK0d,oBAAoB0K,GAASzJ,MAAOyJ,EAAMzJ,SAE9CyJ,EAAMxJ,OAASwJ,EAAMxJ,MAAQwJ,EAAM7F,SACpCviB,KAAK0d,oBAAoB0K,GAASxJ,MAAOwJ,EAAM7F,WAE1C6F,EAAM3F,UAAY2F,EAAMxJ,MAAQwJ,EAAM3F,SAC3CziB,KAAK0d,oBAAoB0K,GAASxJ,MAAOwJ,EAAM3F,WAG/CziB,KAAK0d,oBAAoB0K,GAASxJ,MAAOwJ,EAAMxJ,SAGvDhD,EAAgB1b,UAAU6oB,kBAAoB,SAAUX,GAChDA,EAAMxK,IAAMwK,EAAMzJ,MAAQ3e,KAAKwe,SAC/Bxe,KAAK0d,oBAAoB0K,GAASzJ,MAAOyJ,EAAMzJ,OAAS3e,KAAKwe,SAAW4J,EAAMxK,IAAMwK,EAAMzJ,WAGlG/C,EAAgB1b,UAAUwd,oBAAsB,SAAU0K,EAAOxf,GAE7Dwf,EAAMne,cAAcrB,GAAO,IAE/BgT,EAAgB1b,UAAUigB,qBAAuB,SAAU6I,GACvD,GAAIhpB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAS,GAAKX,KAAKyd,OAAO9c,OAAS,EAC7E,IAAK,IAAIyF,EAAI,EAAGA,EAAI4iB,EAAMroB,OAAQyF,IAAK,CACnCpG,KAAK2c,oBAAoBjS,KAAKse,EAAM5iB,IACpCpG,KAAKqf,gBAAgB2J,EAAM5iB,KACvBpG,KAAKsf,eAAiB0J,EAAM5iB,GAAGwX,KAAO5d,KAAKsf,eAAkB0J,EAAM5iB,GAAGwX,IAAMoL,EAAM5iB,GAAGuY,QACrF3e,KAAK0d,oBAAoBsL,EAAM5iB,IAAMwX,IAAK5d,KAAKsf,eAAiB0J,EAAM5iB,GAAGuY,QAE7E,IAAIsK,EAAOjpB,KAAK4oB,WAAWI,EAAM5iB,IAAI,GACjCpG,KAAK8F,WACL2B,YAAUwhB,GAAO,SAErBjpB,KAAKqD,QAAQiK,YAAY2b,GACrBjpB,KAAKke,mBAAqB9X,IAAM4iB,EAAMroB,OAAS,EAC/CX,KAAKkgB,yBAGLlgB,KAAK6e,iBAAiBoK,EAAMD,EAAM5iB,GAAGuX,IAAKqL,EAAM5iB,GAAGwX,KACnD5d,KAAK+f,YAAckJ,EACnBjpB,KAAKggB,kBAAkBiJ,EAAMD,EAAM5iB,IACnCpG,KAAK+f,YAAc,MAI/B/f,KAAKigB,WAAWjgB,KAAKyc,kBAEzBb,EAAgB1b,UAAUqmB,WAAa,SAAU5I,EAAKC,EAAKe,EAAOC,EAAOsK,GACrE,IAAIC,KACCxK,GAAUC,IACXD,EAAQC,EAAQ,IAEhBsK,GAAYA,aAAkBtpB,QAC9BspB,GAAUA,IAGd,IAAK,IADDzH,EACK2H,EAAI,EAAGA,EAAIxK,IAASwK,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAI1K,IAAS0K,IACzB5H,EAAOzhB,KAAKspB,SAAS3L,EAAMyL,EAAGxL,EAAMyL,EAAGH,KACzBA,IAAgE,IAAtDA,EAAOpe,QAAQxC,SAAS4Y,eAAeO,EAAKvI,OACX,IAArDiQ,EAAMre,QAAQxC,SAAS4Y,eAAeO,EAAKvI,MAC3CiQ,EAAMze,KAAKpC,SAAS4Y,eAAeO,EAAKvI,KAIpD,OAAOiQ,GAGXvN,EAAgB1b,UAAUqpB,wBAA0B,SAAUC,EAAa5L,EAAKpF,GAC5E,IAAIlV,EAAQtD,KACRwe,KACAiL,KAeJ,GAdAD,EAAY7f,QAAQ,SAAUtG,GAC1B,IAAIkkB,EAAcrhB,SAAS7C,EAAQyF,aAAa,YAAa,IACzD4gB,EAAaxjB,SAAS7C,EAAQyF,aAAa,cAAe,IAC9D,GAAI8U,EAAMta,EAAMkb,SAAW+I,GAAe3J,EACtC,GAAI8L,EAAa,EACb,IAAK,IAAI1oB,EAAIumB,EAAavmB,EAAIumB,EAAcmC,EAAY1oB,IACpDwd,EAAQ9T,KAAK1J,QAIjBwd,EAAQ9T,KAAK6c,KAIrB/I,EAAQ7d,OAAS,EACjB,IAAK,IAAIK,EAAI4c,EAAM,EAAG5c,GAAKhB,KAAKwe,QAAU,EAAGxd,KACb,IAAxBwd,EAAQ1T,QAAQ9J,IAAaA,IAAM4c,IACD,IAA9B6L,EAAc3e,QAAQ9J,IACtByoB,EAAc/e,KAAK1J,GAKnC,IAAI2oB,EAAiB3pB,KAAK4pB,mBAAmBpR,EAAK,SAClDmR,EAAehgB,QAAQ,SAAU4V,GACzBA,EAAW3B,IAA4C,IAArC6L,EAAc3e,QAAQyU,IACxCkK,EAAc5O,OAAO4O,EAAc3e,QAAQyU,GAAW,KAW9D,OARwBvf,KAAK4pB,mBAAmB5pB,KAAK6pB,gBAAiB,QACpDlgB,QAAQ,SAAUiU,GAC5BA,EAAM1X,SAASsS,EAAI1P,aAAa,YAAa,MAAwC,IAAjC6gB,EAAe7e,QAAQ8S,KAC3C,IAAhC6L,EAAc3e,QAAQ8S,IACtB6L,EAAc/e,KAAKkT,KAG3B6L,EAAgBA,EAAcK,KAAK,SAAUC,EAAMrW,GAAY,OAAOqW,EAAOrW,KAGjFkI,EAAgB1b,UAAU0pB,mBAAqB,SAAUvmB,EAAS4L,GAI9D,IAAK,IAHD+a,KACArL,EAAQzY,SAAS7C,EAAQyF,aAAa,cAAe,IACrD8U,EAAM1X,SAAS7C,EAAQyF,aAAa,YAAa,IAC5C9H,EAAI4c,EAAM5c,EAAI4c,EAAMe,GAAS3d,GAAKhB,KAAKwe,QAAUxd,IACtDgpB,EAActf,KAAK1J,GAEvB,OAAOgpB,GAEXpO,EAAgB1b,UAAU+pB,uBAAyB,SAAUT,EAAa5L,EAAKpF,GAC3E,IAAIlV,EAAQtD,KACRypB,KACAjL,KAeJ,GAdAgL,EAAY7f,QAAQ,SAAUtG,GAC1B,IAAIkc,EAAWrZ,SAAS7C,EAAQyF,aAAa,YAAa,IACtDggB,EAAS5iB,SAAS7C,EAAQyF,aAAa,cAAe,IAC1D,GAAI8U,GAAOta,EAAMkb,SAAWe,GAAY3B,EACpC,GAAIkL,EAAS,EACT,IAAK,IAAI9nB,EAAIue,EAAUve,EAAIue,EAAWuJ,EAAQ9nB,IAC1Cwd,EAAQ9T,KAAK1J,QAIjBwd,EAAQ9T,KAAK6U,KAIrBf,EAAQ7d,OAAS,EACjB,IAAK,IAAIK,EAAI,EAAGA,GAAK4c,EAAK5c,KACM,IAAxBwd,EAAQ1T,QAAQ9J,IAAaA,IAAM4c,IACD,IAA9B6L,EAAc3e,QAAQ9J,IACtByoB,EAAc/e,KAAK1J,GAKnC,IAAI2oB,EAAiB3pB,KAAK4pB,mBAAmBpR,EAAK,QAClDmR,EAAehgB,QAAQ,SAAU4V,GACzBA,EAAW3B,IAA4C,IAArC6L,EAAc3e,QAAQyU,IACxCkK,EAAc5O,OAAO4O,EAAc3e,QAAQyU,GAAW,KAY9D,OATwBvf,KAAK4pB,mBAAmB5pB,KAAK6pB,gBAAiB,QACpDlgB,QAAQ,SAAUiU,GAC5BA,EAAM1X,SAASsS,EAAI1P,aAAa,YAAa,MAAwC,IAAjC6gB,EAAe7e,QAAQ8S,KAC3C,IAAhC6L,EAAc3e,QAAQ8S,IACtB6L,EAAc/e,KAAKkT,KAG3B6L,EAAgBA,EAAcK,KAAK,SAAUC,EAAMG,GAAQ,OAAOH,EAAOG,IACzET,EAAgBA,EAAcU,WAGlCvO,EAAgB1b,UAAUkqB,oBAAsB,SAAUzM,EAAKC,EAAKgB,EAAOD,EAAOnG,GAC9ExY,KAAKqqB,oBAAiBpE,EACtBjmB,KAAKsqB,qBAAkBrE,EACvB,IACIsE,EACAC,EAFAC,GAAe,EAGfC,KACJ1qB,KAAK2qB,mBAAgB1E,EACrB,IAAI2E,EAAW1kB,SAASsS,EAAI1P,aAAa,cAAe,IACpD+hB,EAAS3kB,SAASsS,EAAI1P,aAAa,YAAa,IAoCpD,IAlCiC,KADjC4hB,EAAa1qB,KAAK8qB,eAAe9qB,KAAKumB,WAAW5I,EAAK,EAAG3d,KAAKwe,QAASI,QACxD9T,QAAQ0N,IACnBkS,EAAWhgB,KAAK8N,IAEpB+R,EAAcvqB,KAAKiqB,uBAAuBS,EAAY9M,EAAKpF,IAC3C7X,OAAS,GACrBX,KAAKqqB,eAAiBrqB,KAAK+qB,iBAAiBR,EAAa/R,EAAKmF,EAAKC,EAAKe,EAAOC,GAC3E5e,KAAKgrB,oBAAsBH,EAAS7qB,KAAKqkB,gBAAgBrkB,KAAK6pB,gBAAgB3Q,IAAIyF,QAClF3e,KAAKqqB,gBAAiB,GAEtBrqB,KAAKqqB,eACLrqB,KAAKsqB,iBAAkB,GAGvBtqB,KAAKqqB,gBAAiB,EACtBG,EAAexqB,KAAKupB,wBAAwBmB,EAAY9M,EAAKpF,GAC7DxY,KAAKsqB,gBAAkBE,EAAa7pB,OAAS,GAAIX,KAAKirB,kBAAkBT,EAAchS,EAAKmF,EAAKC,EAAKe,EAAOC,GACxG5e,KAAKgrB,oBAAsBJ,EAAWC,IACtC7qB,KAAKsqB,iBAAkB,GAEtBtqB,KAAKsqB,kBACNtqB,KAAKsqB,iBAAkB,MAK/BE,EAAexqB,KAAKupB,wBAAwBmB,EAAY9M,EAAKpF,GAC7DxY,KAAKsqB,gBAAkBE,EAAa7pB,OAAS,GAAIX,KAAKirB,kBAAkBT,EAAchS,EAAKmF,EAAKC,EAAKe,EAAOC,GACxG5e,KAAKgrB,oBAAsBJ,EAAWC,IACtC7qB,KAAKsqB,iBAAkB,GAEvBtqB,KAAKsqB,kBACLtqB,KAAKqqB,gBAAiB,KAGzBrqB,KAAKsqB,kBAAoBtqB,KAAKqqB,gBAAkB1M,EAAM,EAAG,CAC1D,IAAIuN,EAASlrB,KAAKqkB,gBAAgB7L,EAAIU,IAAIyE,IACtCwN,GAAW,EACXnrB,KAAKorB,WAAaF,IAClBC,GAAW,GAEf,IAAK,IAAI7D,EAAW3J,EAAK2J,GAAY,EAAGA,IAAY,CAChD,IAAIjkB,EAAWrD,KAAKqkB,gBAAgB7L,EAAIU,IAAI0F,MAAQ,GAAKuM,EAAYnrB,KAAK6pB,gBAAkBrR,EACvF8O,IAAa4D,IAAYtM,EAAQ,EAAI0I,IAAa4D,EAAStM,EAAQ,EAAI0I,IAAa4D,EAAStM,IAC7B,IAAjE5e,KAAKumB,WAAWe,EAAU1J,EAAKe,EAAOC,EAAOvb,GAAS1C,SACtDwqB,GAAW,EACXnrB,KAAK2qB,eAAgB,EACrB3qB,KAAKqrB,eAAiB9kB,oBAAkBvG,KAAKqrB,gBAAkB/D,EAAWtnB,KAAKqrB,eAC/ErrB,KAAKgrB,kBAAoBpN,IAUrC,OANI5d,KAAKsqB,iBAAmBtqB,KAAKqqB,gBAAkBrqB,KAAK2qB,iBACpDF,GAAe,EACXlkB,oBAAkBvG,KAAKqrB,kBACvBrrB,KAAKqrB,eAAiB1N,IAGvB8M,GAEX7O,EAAgB1b,UAAUorB,oBAAsB,SAAUC,EAAS5M,GAG/D,IAAK,IAFD6M,GAAmB,EACnBC,KACKzqB,EAAI,EAAGA,EAAIuqB,EAAQ5qB,OAAQK,IAChC,GAAIuqB,EAAQvqB,EAAI,GAAKuqB,EAAQvqB,IAAO,GAAKuqB,EAAQvqB,EAAI,GAAKuqB,EAAQvqB,KAAQ,GAWtE,GAVAyqB,EAAkB/gB,KAAK6gB,EAAQvqB,IACjB,IAAV2d,GACA8M,EAAkB/gB,KAAK6gB,EAAQvqB,EAAI,IAEnCA,IAAMuqB,EAAQ5qB,OAAS,IACvB8qB,EAAkB/gB,KAAK6gB,EAAQvqB,EAAI,IAC/ByqB,EAAkB9qB,OAASge,GAC3B8M,EAAkB5Q,QAAQ,IAG9B4Q,EAAkB9qB,SAAWge,EAM7B,OALA6M,GAAmB,EACnBxrB,KAAKgrB,kBAAoBS,EAAkB3B,KAAK,SAAUC,EAAMrW,GAAY,OAAOqW,EAAOrW,IAAa,GACnG1T,KAAKgrB,kBAAoB,IACzBhrB,KAAKgrB,kBAAoB,GAEtBQ,OAIXC,KAIR,OAAOD,GAEX5P,EAAgB1b,UAAU4qB,eAAiB,SAAUY,GAEjD,IAAK,IADDlC,KACKxoB,EAAI,EAAGA,EAAI0qB,EAAK/qB,OAAQK,IAC7BwoB,EAAY9e,KAAKghB,EAAK1qB,IAE1B,OAAOwoB,GAEX5N,EAAgB1b,UAAU6qB,iBAAmB,SAAUY,EAAQnT,EAAKmF,EAAKC,EAAKe,EAAOC,GACjF,IAAIgN,EACJ,GAAc,IAAVjN,GAAyB,IAAVC,GAAe+M,EAAOhrB,OAAS,EAC9CX,KAAKgrB,kBAAoBW,EAAO,GAChCC,GAAmB,OAElB,GAAIjN,EAAQ,GAAe,IAAVC,EAClBgN,EAAmB5rB,KAAKsrB,oBAAoBK,EAAQhN,QAEnD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAIkN,OAAU,EAId,GAHIF,EAAOhrB,QAAU,IACjBkrB,GAAU,GAEVA,EACA,IAAK,IAAI7qB,EAAI,EAAGA,EAAI2qB,EAAOhrB,OAAQK,IAAK,CAEpC,GAA8B,IADThB,KAAKumB,WAAW5I,EAAKgO,EAAO3qB,GAAI2d,EAAOC,EAAO5e,KAAK6pB,iBACrDlpB,OAGf,OAFAX,KAAKgrB,kBAAoBW,EAAO3qB,GAChC4qB,GAAmB,EAInBA,GAAmB,QAM/BA,EAAmB5rB,KAAK8rB,WAAWH,EAAQhN,EAAOhB,EAAKiB,EAAOpG,GAGtE,OAAOoT,GAEXhQ,EAAgB1b,UAAU+qB,kBAAoB,SAAUM,EAAS/S,EAAKmF,EAAKC,EAAKe,EAAOC,GACnF,IAAImN,EACJ,GAAc,IAAVpN,GAAyB,IAAVC,GAAe2M,EAAQ5qB,OAAS,EAC/CX,KAAKgrB,kBAAoBO,EAAQ,GACjCQ,GAAoB,OAEnB,GAAIpN,EAAQ,GAAe,IAAVC,EAClBmN,EAAoB/rB,KAAKsrB,oBAAoBC,EAAS5M,QAErD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAIkN,OAAU,EAId,GAHIN,EAAQ5qB,QAAU,IAClBkrB,GAAU,GAEVA,EACA,IAAK,IAAI7qB,EAAI,EAAGA,EAAIuqB,EAAQ5qB,OAAQK,IAAK,CAErC,IAAK,IADDgrB,EAAiBhsB,KAAKumB,WAAW5I,EAAK4N,EAAQvqB,GAAI2d,EAAOC,EAAO5e,KAAK6pB,iBAChEoC,EAAY,EAAGA,EAAYD,EAAerrB,OAAQsrB,IACnD/lB,SAASsS,EAAI1P,aAAa,YAAa,MAAQyiB,EAAQvqB,IACvDgrB,EAAenR,OAAOmR,EAAelhB,QAAQkhB,EAAeC,IAAa,GAGjF,GAA8B,IAA1BD,EAAerrB,OAGf,OAFAorB,GAAoB,EACpB/rB,KAAKgrB,kBAAoBO,EAAQvqB,GAC1B+qB,EAGPA,GAAoB,QAMhCA,EAAoB/rB,KAAK8rB,WAAWP,EAAS5M,EAAOhB,EAAKiB,EAAOpG,GAGxE,OAAOuT,GAEXnQ,EAAgB1b,UAAU4rB,WAAa,SAAUP,EAAS5M,EAAOhB,EAAKiB,EAAOpG,GAGzE,IAAK,IAFDuT,EACAG,KACK9lB,EAAI,EAAGA,EAAImlB,EAAQ5qB,OAAQyF,IAAK,CAErC,GADcpG,KAAKsrB,oBAAoBC,EAAS5M,GACnC,CACT,IAAIwN,KAGJ,GAFAA,EAAWzhB,KAAK1K,KAAK6pB,iBACrBsC,EAAWzhB,KAAK8N,GACgB,IAA5B0T,EAAiBvrB,OAGjB,OAFAorB,GAAoB,EACpB/rB,KAAKgrB,kBAAoBhrB,KAAKgrB,kBACvBe,EAGPA,GAAoB,GAIhC,OAAOA,GAEXnQ,EAAgB1b,UAAUksB,mBAAqB,SAAUC,GAsBrD,IAAK,IApBD7C,EADA0C,KAEAI,EAAU,SAAU3O,GACpB6L,KACA6C,EAAe1iB,QAAQ,SAAUtG,GACzBA,GAAWA,EAAQyF,aAAa,cAAgB6U,EAAIxJ,YACpDqV,EAAY9e,KAAKrH,KAUzB,IAAK,IAPDkpB,EAAU,SAAU9E,GACpB+B,EAAY7f,QAAQ,SAAU8X,GACtBA,GAAQA,EAAK3Y,aAAa,cAAgB2e,EAAOtT,YACjD+X,EAAiBxhB,KAAK+W,MAIzBgG,EAAS+E,EAAOhO,QAAU,EAAGiJ,GAAU,EAAGA,IAC/C8E,EAAQ9E,IAGZ+E,EAASxsB,KACJ2d,EAAM3d,KAAK6b,KAAO,EAAG8B,GAAO,EAAGA,IACpC2O,EAAQ3O,GAEZ,OAAOuO,GAEXtQ,EAAgB1b,UAAUusB,cAAgB,SAAUJ,EAAgBzK,EAAYpJ,GAC5E,IAAIlV,EAAQtD,KAmBZ,OAlBKA,KAAK+f,aACN/f,KAAKsgB,cAET+L,EAAe1iB,QAAQ,SAAUtG,GAC7BC,EAAMumB,gBAAkBxmB,EACxB,IAAI+e,EAAQ9e,EAAM+gB,gBAAgBhhB,EAAQ6V,IACtCwT,GAAUppB,EAAM8mB,oBAAoBhI,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMxD,MAAOwD,EAAMzD,MAAOnG,GACxF,GAAI4J,EAAMzD,MAAQ,GAAK+N,EACnB,IAAK,IAAIpF,EAAWlF,EAAMzE,IAAK2J,EAAW1F,EAAWjE,IAAMiE,EAAWhD,MAAO0I,IAAY,CACpEhkB,EAAMijB,WAAWe,EAAUlF,EAAMxE,IAAKwE,EAAMzD,MAAOyD,EAAMxD,MAAOvb,GACtEsG,QAAQ,SAAU8X,GACrB4K,EAAevhB,QAAQ2W,IAAS,GAChC4K,EAAexR,OAAOwR,EAAevhB,QAAQ2W,GAAO,QAMjE4K,GAEXzQ,EAAgB1b,UAAUysB,YAAc,SAAUvK,EAAO/e,GACrD,IAAIkjB,EAAavmB,KAAKumB,WAAWnE,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMzD,MAAOyD,EAAMxD,MAAO5e,KAAK+f,aACtF,IAAK/f,KAAK+f,aAAe/f,KAAK4sB,gBAAkB5sB,KAAKgc,cAAgBhc,KAAK+b,gBACtE,OAAOwK,EAEX,GAAIvmB,KAAK+f,aAAe/f,KAAKod,YAAcpd,KAAK6sB,YAC5C,IAAK,IAAI7rB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAAK,CACzC,IAAI8rB,EAAYxkB,SAAS4Y,eAAelhB,KAAKyd,OAAOzc,GAAGkY,IACvD,GAAI4T,IAAc9sB,KAAK+f,YAAvB,CAGA,IAAIuH,EAAWtnB,KAAK6sB,YAAYC,EAAU5T,IAAIyE,IAC1C4B,EAAWvf,KAAK6sB,YAAYC,EAAU5T,IAAI0E,IAC9C5d,KAAK6e,iBAAiBiO,EAAWxF,EAAU/H,GAC3Cvf,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgByI,EAAU5T,KAAOyE,IAAK2J,EAAU1J,IAAK2B,IACnFvf,KAAK0e,eAAgB9V,OAASgV,IAAK2B,EAASpL,WAAYwJ,IAAK2J,EAASnT,aAAgB2Y,GACtF9sB,KAAKihB,sBAWb,OARAjhB,KAAK0c,YAAc1c,KAAK+sB,WACxBxG,EAAavmB,KAAKumB,WAAWnE,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMzD,MAAOyD,EAAMxD,MAAO5e,KAAK+f,aAClF/f,KAAKsgB,cACLtgB,KAAKihB,qBACDjhB,KAAKgtB,gBAAkBhtB,KAAKgtB,eAAersB,OAAS,IAAqD,IAAhD4lB,EAAWzb,QAAQ9K,KAAKgtB,eAAe,KAChGhtB,KAAK6sB,YAAY7sB,KAAKgtB,eAAe,GAAG9T,IAAIyE,MAAQyE,EAAMzE,KAC1D4I,EAAW7b,KAAK1K,KAAKgtB,eAAe,IAEjCzG,GAEX3K,EAAgB1b,UAAU+sB,iBAAmB,SAAU1G,EAAYljB,GAG/D,IAAK,IAFD6pB,GAAY,EACZC,EAAWntB,KAAKqkB,gBAAgBhhB,EAAQ6V,IACnCkU,EAAQ,EAAGA,EAAQ7G,EAAW5lB,OAAQysB,IAE3C,IAAK,IADDC,EAAertB,KAAKqkB,gBAAgBkC,EAAW6G,GAAOlU,IACjDlY,EAAI,EAAGA,EAAImsB,EAASvO,MAAO5d,IAAK,CACrC,IAAIssB,KACJA,EAAW5iB,KAAKrH,GAChBiqB,EAAW5iB,KAAK6b,EAAW6G,IAG3B,GADYptB,KAAKumB,WAAW4G,EAASxP,IAAM3c,EAAGqsB,EAAazP,IAAKyP,EAAa1O,MAAO0O,EAAazO,MAAO0O,GAC1F3sB,OAAS,EAEnB,OADAusB,GAAY,GACL,EAOnB,OAAOA,GAEXtR,EAAgB1b,UAAUqtB,iBAAmB,SAAUhH,EAAYljB,EAASue,GACxE,IAAK5hB,KAAK+f,aAAqC,IAAtBwG,EAAW5lB,OAChC,OAAO,EAEX,IAAI6sB,EACAC,EAAavnB,SAASqgB,EAAW,GAAGzd,aAAa,YAAa,IAOlE,GANI9I,KAAKorB,SAAWqC,EAChBD,EAAY,EAEPxtB,KAAKorB,SAAWqC,IACrBD,EAAY,IAEXxtB,KAAKitB,iBAAiB1G,EAAYljB,GACnC,OAAO,EAGX,IAAK,IADDqqB,GAAc,EACTC,EAAS,EAAGA,EAASpH,EAAW5lB,OAAQgtB,IAC7C,GAAIpH,EAAW5lB,QAAU,GAAKX,KAAK6sB,YAAY7sB,KAAK+f,YAAY7G,IAAIyE,MAAQ3d,KAAKod,UAAUpd,KAAK+f,YAAY7G,IAAIyE,IAC5G,OAAO,EAMf,IAAK,IAHDiQ,EAA2B,IAAdJ,EACbxtB,KAAKqkB,gBAAgBrkB,KAAK+f,YAAY7G,IAAIyE,IAAM3d,KAAKqkB,gBAAgBrkB,KAAK+f,YAAY7G,IAAI0F,MACxF5e,KAAKorB,SACFgC,EAAQ,EAAGA,EAAQ7G,EAAW5lB,OAAQysB,IAAS,CACpD,IAAIS,EAAkB7tB,KAAKqkB,gBAAgBkC,EAAW6G,GAAOlU,IACzD4U,EAAkB9tB,KAAKqkB,gBAAgBhhB,EAAQ6V,IAC/CgQ,KACJ,GAA8B,IAA1B2E,EAAgBjP,MAChBsK,EAAOxe,KAAK6b,EAAW6G,SAEtB,GAAIS,EAAgBjP,MAAQ,EAC7B,GAAkB,IAAd4O,GAAmBM,EAAgBnQ,MAAS3d,KAAK6sB,YAAYgB,EAAgB3U,IAAIyE,IAAMkQ,EAAgBjP,MAAQ,EAC/GsK,EAAOxe,KAAK6b,EAAW6G,QAEtB,CAAA,GAAkB,IAAdI,GAAmBM,EAAgBnQ,MAAS3d,KAAK6sB,YAAYgB,EAAgB3U,IAAO,IAIzF,OAAO,EAHPgQ,EAAOxe,KAAK6b,EAAW6G,IAM3BS,EAAgBjP,OAASkP,EAAgBlP,OACzCsK,EAAOxe,KAAK6b,EAAW6G,IAI3B,GADgBptB,KAAKumB,WAAWqH,EAAYC,EAAgBjQ,IAAKiQ,EAAgBlP,MAAOkP,EAAgBjP,MAAOsK,GAC7FvoB,OAAS,EAEvB,OADA+sB,GAAc,EAIVN,IAAU7G,EAAW5lB,OAAS,IAC9B+sB,GAAc,GAK1B,OAAOA,GAEX9R,EAAgB1b,UAAU6tB,UAAY,SAAUxH,EAAYljB,EAASue,GACjE,IACI4L,EADAlqB,EAAQtD,KAERguB,KACJA,EAAgBtjB,KAAKrH,GACrB,IAAIoqB,EAAavnB,SAASqgB,EAAW,GAAGzd,aAAa,YAAa,IAC9D9I,KAAKorB,SAAWqC,EAChBD,EAAY,EAEPxtB,KAAKorB,SAAWqC,IACrBD,EAAY,GAEhB,IAAIS,EAAkC,IAAdT,EAAkBC,EAAa7L,EAAWhD,MAAQ5e,KAAKorB,SAC/EprB,KAAK0d,oBAAoBkE,GAAcjE,IAAmB,IAAd6P,EAAkBC,EAAaQ,EAAoB,IAC/F,IAAK,IAAIb,EAAQ,EAAGA,EAAQ7G,EAAW5lB,OAAQysB,IAC3CY,EAAgBtjB,KAAK6b,EAAW6G,IAChCptB,KAAK6e,iBAAiB0H,EAAW6G,GAAQa,EAAoBjuB,KAAKqkB,gBAAgBkC,EAAW6G,GAAOlU,IAAK0E,KACzG5d,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgBkC,EAAW6G,GAAOlU,KAAOyE,IAAKsQ,IAC5E1H,EAAW6G,GAAOrf,aAAa,WAAYkgB,EAAkB9Z,YAEjE9Q,EAAQ0K,aAAa,WAAY6T,EAAWjE,IAAIxJ,YAChDnU,KAAK6e,iBAAiB7e,KAAK+jB,UAAWnC,EAAWjE,IAAKiE,EAAWhE,KACjE,IAAK,IAAI5c,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IACpChB,KAAKod,UAAUpd,KAAKyd,OAAOzc,GAAGkY,KAAQyE,IAAK3d,KAAKyd,OAAOzc,GAAG2c,IAAKC,IAAK5d,KAAKyd,OAAOzc,GAAG4c,KAEvF5d,KAAKorB,SAAWxJ,EAAWjE,IAC3B3d,KAAKihB,qBACL+M,EAAgBrkB,QAAQ,SAAU8X,GAC9Bne,EAAMupB,YAAYpL,EAAKvI,IAAM5V,EAAM8Z,UAAUqE,EAAKvI,IAElD,IAAK,IADDgV,EAAY5qB,EAAM+gB,gBAAgB5C,EAAKvI,IAClClY,EAAI,EAAGA,EAAIsC,EAAMoZ,YAAY/b,OAAQK,IAC1C,GAAKsC,EAAMoZ,YAAY1b,GAGvB,IAAK,IAAIoF,EAAI,EAAGA,EAAI9C,EAAMoZ,YAAY1b,GAAGL,OAAQyF,IACzC9C,EAAMoZ,YAAY1b,GAAGoF,KAAOqb,IAC5Bne,EAAMoZ,YAAY1b,GAAGoF,QAAK6f,GAIjC3iB,EAAMoZ,YAAYwR,EAAUvQ,OAC7Bra,EAAMoZ,YAAYwR,EAAUvQ,SAEhCra,EAAMoZ,YAAYwR,EAAUvQ,KAAKuQ,EAAUtQ,KAAO6D,EAClDne,EAAMypB,WAAazpB,EAAMoZ,eAGjCd,EAAgB1b,UAAU8f,kBAAoB,SAAU3c,EAASue,GAC7D5hB,KAAK+c,oBACL,IAAIoR,KAEAC,KAQJ,IALID,EADAnuB,KAAK+f,aAAe/f,KAAKge,iBACVhe,KAAK2sB,YAAY/K,EAAYve,GAG7BrD,KAAKumB,WAAW3E,EAAWjE,IAAKiE,EAAWhE,IAAKgE,EAAWjD,MAAOiD,EAAWhD,MAAOvb,IAEtF1C,OAAS,EAItB,GAHAwtB,EAAenuB,KAAKosB,mBAAmB+B,GACvCA,EAAenuB,KAAKysB,cAAc0B,EAAcvM,EAAYve,IACvCkD,oBAAkBvG,KAAKorB,WAAYprB,KAAKutB,iBAAiBY,EAAc9qB,EAASue,GAEjG5hB,KAAK+tB,UAAUI,EAAc9qB,EAASue,QAGtC,IAAK,IAAI5gB,EAAI,EAAGA,EAAImtB,EAAaxtB,OAAQK,IAAK,CAC1C,IAAIohB,EAAQpiB,KAAKqkB,gBAAgB8J,EAAantB,GAAGkY,IAKjD,GAJAlZ,KAAK6pB,gBAAkBsE,EAAantB,GACpChB,KAAKqrB,eAAiB,KACtBrrB,KAAKgrB,kBAAoB,KACJhrB,KAAKoqB,oBAAoBhI,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMxD,MAAOwD,EAAMzD,MAAOtb,KACnEkD,oBAAkBvG,KAAKgrB,mBAAoB,CAClEhrB,KAAK6e,iBAAiBsP,EAAantB,GAAIhB,KAAKqrB,eAAgBrrB,KAAKgrB,mBACjEhrB,KAAKod,UAAW+Q,EAAantB,GAAK,KAAO2c,IAAK3d,KAAKqrB,eAAgBzN,IAAK5d,KAAKgrB,mBAC7E,IAAIpiB,GACAmd,YACIpI,IAAK3d,KAAKqrB,eAAelX,WACzByJ,IAAK5d,KAAKgrB,kBAAkB7W,aAMpC,GAHAnU,KAAK0e,cAAc9V,EAAOulB,EAAantB,IACvChB,KAAK0d,oBAAoB0E,GAASxE,IAAK5d,KAAKgrB,kBAAmBrN,IAAK3d,KAAKqrB,iBACzErrB,KAAKqrB,eAAiB,KAClBrqB,EAAImtB,EAAaxtB,OACjB,cAIJytB,EAAgB1jB,KAAKyjB,EAAantB,IAKlD,GAAIotB,EAAgBztB,OAAS,EAAG,CAC5B,IAAI0tB,EAAUruB,KACdouB,EAAgBzkB,QAAQ,SAAU2kB,IACiB,IAA3CD,EAAQzR,eAAe9R,QAAQwjB,IAC/BD,EAAQzR,eAAelS,KAAK4jB,KAGhCtuB,KAAK4c,iBAA4D,IAA1C5c,KAAK4c,eAAe9R,QAAQzH,IACnDrD,KAAK4c,eAAe/B,OAAO7a,KAAK4c,eAAe9R,QAAQzH,GAAU,GAEjE+qB,EAAgBztB,OAAS,IACzBX,KAAKuuB,gBAAgB3M,EAAWjE,IAAK3d,KAAK4c,eAAgBvZ,GAC1DrD,KAAKwuB,2BAGRxuB,KAAKyuB,YACNzuB,KAAKsgB,cAETtgB,KAAK+e,kBACL/e,KAAKmnB,mBAETvL,EAAgB1b,UAAUsuB,wBAA0B,WAChD,IAAK,IAAIxtB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IACpC,GAAIhB,KAAK+c,iBAAiB/c,KAAKyd,OAAOzc,GAAGkY,KAAoD,OAA7ClZ,KAAK+c,iBAAiB/c,KAAKyd,OAAOzc,GAAGkY,IAAc,CAC/FlZ,KAAK4c,gBAAkB5c,KAAK+c,iBAAiB/c,KAAKyd,OAAOzc,GAAGkY,IAAIV,KAChE,IAAIjY,EAAMP,KAAKyd,OAAOzc,GAAGkY,GACzBlZ,KAAKuuB,gBAAgBvuB,KAAK+c,iBAAiBxc,GAAKod,IAAK3d,KAAK4c,eAAgB5c,KAAK+c,iBAAiBxc,GAAKmuB,UAIjH9S,EAAgB1b,UAAUyuB,uBAAyB,SAAUlN,GACzD,IAAK,IAAI2L,EAAQ,EAAGA,EAAQ3tB,OAAOmF,KAAK5E,KAAK+c,kBAAkBpc,OAAQysB,IACnEptB,KAAK+c,iBAAiB0E,EAAKvI,IAAM,MAGzC0C,EAAgB1b,UAAUquB,gBAAkB,SAAU5Q,EAAKnF,EAAKkW,GAC5D,GAAKA,EAAL,CAGA,IAAIE,EAAW1oB,SAASwoB,EAAO5lB,aAAa,cAAe,IACvD+lB,EAAS3oB,SAASwoB,EAAO5lB,aAAa,YAAa,IACvD9I,KAAK6c,qBAAsB7c,KAAK4c,gBAAmB5c,KAAK8uB,eAAiB9uB,KAAK4c,gBAC9E,IAAK,IAAI5b,EAAI,EAAGA,EAAIhB,KAAK6c,oBAAoBlc,OAAQK,IAAK,CACtD,GAAwC,IAApChB,KAAK6c,oBAAoBlc,OACzB,OAEJ,IAAK,IAAIouB,EAAM,EAAGA,EAAM/uB,KAAK6c,oBAAoBlc,OAAQouB,IACrD/uB,KAAK+c,iBAAiB/c,KAAK6c,oBAAoBkS,GAAK7V,KAChDV,IAAKxY,KAAK6c,oBAAoBkS,GAC9BpR,IAAKA,EACL+Q,OAAQA,GAGhB,IAAId,EAAaiB,EAASD,EACtBI,EAAa9oB,SAASlG,KAAK6c,oBAAoB7b,GAAG8H,aAAa,cAAe,IAC9EmmB,EAAe/oB,SAASlG,KAAK6c,oBAAoB7b,GAAG8H,aAAa,YAAa,IAC9EomB,EAAahpB,SAASlG,KAAK6c,oBAAoB7b,GAAG8H,aAAa,cAAe,IAC9EyW,OAAW,EACX6O,OAAkB,EAOtB,IANqD,IAAjDpuB,KAAK8c,uBAAuBhS,QAAQ4jB,IACpC1uB,KAAK8c,uBAAuBpS,KAAKgkB,IAEqC,IAAtE1uB,KAAK8c,uBAAuBhS,QAAQ9K,KAAK6c,oBAAoB7b,KAC7DhB,KAAK8c,uBAAuBpS,KAAK1K,KAAK6c,oBAAoB7b,IAE1DguB,EAAa,GAAKE,EAAa,EAAG,CAClC,IAAIC,EAAsBnvB,KAAKqkB,gBAAgBrkB,KAAK6c,oBAAoB7b,GAAGkY,IAC3EqG,EAAW4P,EAAoBvR,IAE/B,IAAK,IADDwR,EAAQ9mB,SAAS4Y,eAAeiO,EAAoBjW,IAC/CmW,EAAIF,EAAoBxR,IAAK0R,EAAIR,EAASD,EAAUS,IAAK,CAC9DrvB,KAAKyuB,YAAa,EAClBzuB,KAAK0d,oBAAoByR,GAAuBxR,IAAKwR,EAAoBxR,IAAM,IAC/EyR,EAAMrhB,aAAa,WAAYohB,EAAoBxR,IAAIxJ,YACvDnU,KAAK6e,iBAAiBuQ,EAAOD,EAAoBxR,IAAK4B,GACtDvf,KAAK2uB,uBAAuBS,GAC5BpvB,KAAKod,UAAWgS,EAAQ,KAAOzR,IAAKwR,EAAoBxR,IAAKC,IAAK2B,GAClE,IAAIqC,EAAa5hB,KAAKqkB,gBAAgB+K,EAAMlW,IAC5ClZ,KAAK0d,oBAAoBkE,GAAchE,IAAK2B,EAAU5B,IAAKwR,EAAoBxR,MAC/E,IAAI2R,EAAWppB,SAASkpB,EAAMtmB,aAAa,YAAa,IACpD+hB,EAAS3kB,SAASkpB,EAAMtmB,aAAa,YAAa,IAClD6V,EAAQzY,SAASkpB,EAAMtmB,aAAa,cAAe,IACnD8V,EAAQ1Y,SAASkpB,EAAMtmB,aAAa,cAAe,IACnDymB,KACJA,EAAgB7kB,KAAK0kB,GACrBG,EAAgB7kB,KAAKgkB,GACrBN,EAAkBpuB,KAAKumB,WAAW+I,EAAUzE,EAAQlM,EAAOC,EAAO2Q,GAC9DvvB,KAAK+f,cAA8D,IAA/CqO,EAAgBtjB,QAAQ9K,KAAK+f,cACjDqO,EAAgBvT,OAAOuT,EAAgBtjB,QAAQ9K,KAAK+f,aAAc,GAEtE/f,KAAKwvB,eAAepB,EAAiBvD,EAAQyE,EAAUF,GAE3DpvB,KAAKyuB,YAAa,MAEjB,CACGzuB,KAAK4sB,iBACL5sB,KAAK4sB,gBAAiB,GAE1B5sB,KAAK6c,oBAAoB7b,GAAG+M,aAAa,WAAY6f,EAAWzZ,YAChE,IAAImZ,KACJA,EAAW5iB,KAAK1K,KAAK6c,oBAAoB7b,IACzCssB,EAAW5iB,KAAKgkB,GAChBN,EAAkBpuB,KAAKumB,WAAWqH,EAAYqB,EAAcC,EAAYF,EAAY1B,GAChFttB,KAAK+f,cAA8D,IAA/CqO,EAAgBtjB,QAAQ9K,KAAK+f,cACjDqO,EAAgBvT,OAAOuT,EAAgBtjB,QAAQ9K,KAAK+f,aAAc,GAEtER,EAAWrZ,SAASlG,KAAK6c,oBAAoB7b,GAAG8H,aAAa,YAAa,IAC1E9I,KAAK6e,iBAAiB7e,KAAK6c,oBAAoB7b,GAAI4sB,EAAYrO,GAC/Dvf,KAAK2uB,uBAAuB3uB,KAAK6c,oBAAoB7b,IACrDhB,KAAKod,UAAWpd,KAAK6c,oBAAoB7b,GAAK,KAAO2c,IAAKiQ,EAAYhQ,IAAK2B,GACvEqC,EAAa5hB,KAAKqkB,gBAAgBrkB,KAAK6c,oBAAoB7b,GAAGkY,IAClElZ,KAAK0d,oBAAoBkE,GAAchE,IAAK2B,EAAU5B,IAAKiQ,IAC3D5tB,KAAKwvB,eAAepB,EAAiB7O,EAAUqO,EAAY5tB,KAAK6c,oBAAoB7b,QAIhG4a,EAAgB1b,UAAUsvB,eAAiB,SAAUpB,EAAiB7O,EAAUqO,EAAY6B,GACxF,IAAI7N,EAAa5hB,KAAKqkB,gBAAgBoL,EAAMvW,IAE5C,GADAlZ,KAAK0d,oBAAoBkE,GAAcjE,IAAKiQ,EAAYhQ,IAAK2B,IACzD6O,EAAgBztB,OAAS,EAAG,CAC5B,IAAI+uB,EAAU1vB,KACdA,KAAK4c,kBACL5c,KAAK8uB,gBAAiB,EACtBV,EAAgBzkB,QAAQ,SAAU2kB,GAC9BoB,EAAQ9S,eAAelS,KAAK4jB,KAGhC,IAAK,IADDqB,EAAqBzpB,SAASupB,EAAM3mB,aAAa,YAAa,IACzDqD,EAAI,EAAGA,EAAInM,KAAK4c,eAAejc,OAAQwL,IAC5CnM,KAAKuuB,gBAAgBoB,EAAoB3vB,KAAK4c,eAAgB6S,GAElEzvB,KAAK8uB,gBAAiB,MAErB,CAID,GAHK9uB,KAAK4sB,gBACN5sB,KAAKsgB,cAELtgB,KAAK8c,uBAAuBnc,OAAS,EAoBrC,IAAK,IAnBDivB,EAAU,SAAU/vB,GACpB,IAAIgwB,EAAS3pB,SAAS4pB,EAAOhT,uBAAuBjd,GAAGiJ,aAAa,YAAa,IAC7EinB,EAAa7pB,SAAS4pB,EAAOhT,uBAAuBjd,GAAGiJ,aAAa,YAAa,IACjF6V,EAAQzY,SAAS4pB,EAAOhT,uBAAuBjd,GAAGiJ,aAAa,cAAe,IAC9E8V,EAAQ1Y,SAAS4pB,EAAOhT,uBAAuBjd,GAAGiJ,aAAa,cAAe,IAC9EknB,OAAmB,EACvBA,EAAmBF,EAAOvJ,WAAWsJ,EAAQE,EAAYpR,EAAOC,EAAOkR,EAAOhT,wBAC1EgT,EAAO/P,cAAiE,IAAlDiQ,EAAiBllB,QAAQglB,EAAO/P,cACtDiQ,EAAiBnV,OAAOmV,EAAiBllB,QAAQglB,EAAO/P,aAAc,GAE1E,IAAIkQ,EAAQH,EACZE,EAAiBrmB,QAAQ,SAAU2kB,GAC/B2B,EAAMrT,eAAelS,KAAK4jB,KAE1B0B,EAAiBrvB,OAAS,GAC1BmvB,EAAOvB,gBAAgBsB,EAAQC,EAAOlT,eAAgBkT,EAAOhT,uBAAuBjd,KAGxFiwB,EAAS9vB,KACJH,EAAI,EAAGA,EAAIG,KAAK8c,uBAAuBnc,OAAQd,IACpD+vB,EAAQ/vB,GAGhBG,KAAK8c,4BAGblB,EAAgB1b,UAAU2nB,oBAAsB,SAAU5I,GACtD,IAAK,IAAIje,EAAI,EAAGA,EAAIie,EAActe,OAAQK,IAGtC,IAAK,IADDkvB,EADUjR,EAAcje,GACEoZ,iBAAiB,aACtC+V,EAAM,EAAGA,EAAMD,EAAgBvvB,OAAQwvB,IAC5CtmB,SAAOqmB,EAAgBC,KAInCvU,EAAgB1b,UAAU+f,WAAa,SAAUxD,GAC7C,IAAK,IAAIzb,EAAI,EAAGA,EAAIyb,EAAgB9b,OAAQK,IAAK,CAC7C,IAAIqC,EAAUoZ,EAAgBzb,GAC1BovB,EAAe3T,EAAgBzb,GAAGoJ,cAAc,sBAChDpK,KAAKogB,eACDpgB,KAAKqwB,iBAAmBhtB,EAAQ+W,iBAAiBpa,KAAKqwB,iBAAiB,IACvE5oB,YAAUpE,EAAQ+W,iBAAiBpa,KAAKqwB,iBAAiB,KA9uD7D,gBAivDArwB,KAAK8iB,eACL9iB,KAAK4f,aAAe5f,KAAKke,mBACzBle,KAAKswB,iBAAiBjtB,EAAS+sB,KAI3CxU,EAAgB1b,UAAUowB,iBAAmB,SAAU9X,EAAK+X,GACxDvwB,KAAKsd,iBAAmBtd,KAAKwwB,iBAC7B,IAAK,IAAIpqB,EAAI,EAAGA,EAAIpG,KAAKsd,iBAAiB3c,OAAQyF,IAAK,CACnD,IAAIqqB,EAAUzwB,KAAKqN,cAAc,QAC7BqjB,OAAgB,EACpBH,EAAUjjB,YAAYmjB,GAGlBC,EAF6B,WAA7B1wB,KAAKsd,iBAAiBlX,IAAgD,WAA7BpG,KAAKsd,iBAAiBlX,IAClC,YAA7BpG,KAAKsd,iBAAiBlX,IAAiD,YAA7BpG,KAAKsd,iBAAiBlX,GAvvDnE,WACA,WA4vDDqB,YAAUgpB,IAAWC,EAAe1wB,KAAKsd,iBAAiBlX,GAnwDzD,eAswDTwV,EAAgB1b,UAAUsf,gBAAkB,SAAUnc,EAASue,GAC3D,IAAIhZ,GACAA,OACI+V,MAAOiD,EAAWjD,MAAMxK,WACxByK,MAAOgD,EAAWhD,MAAMzK,WACxBmO,SAAUV,EAAWU,SAASnO,WAC9BoO,SAAUX,EAAWW,SAASpO,WAC9BqO,SAAWjc,oBAAkBqb,EAAWY,eAA6CyD,EAAjCrE,EAAWY,SAASrO,WACxEsO,SAAWlc,oBAAkBqb,EAAWa,eAA6CwD,EAAjCrE,EAAWa,SAAStO,WACxEwJ,IAAKiE,EAAWjE,IAAIxJ,WACpByJ,IAAKgE,EAAWhE,IAAIzJ,aAG5BnU,KAAK0e,cAAc9V,EAAOvF,IAE9BuY,EAAgB1b,UAAUyoB,gBAAkB,SAAU/G,GAClD,IAEI8G,EACAiI,EAHAC,EAAa5wB,KAAK0kB,cAAc,GAChCmM,EAAY7wB,KAAK0kB,cAAc,GAenC,OAXIgE,EADA9G,GAAqC,oBAA0C,iBAAtBA,EAAgB,OAAkBA,EAAWjD,MAAQ,EAChGiD,EAAWjD,MAAQkS,GAAcjP,EAAWjD,MAAQ,GAAK3e,KAAKghB,YAAY,GAG3E6P,EAGbF,EADA/O,GAAsC,oBAAYA,EAAWhD,MAAQ,GAAmC,iBAAtBgD,EAAgB,MACnFA,EAAWhD,MAAQgS,GAAehP,EAAWhD,MAAQ,GAAK5e,KAAKghB,YAAY,GAG5ExW,aAAWomB,IAErBD,EAAajI,IAEzB9M,EAAgB1b,UAAU4wB,uBAAyB,SAAUlN,GACzD,IACImN,EAAa7qB,SAAS0d,EAAKvgB,QAAQ2D,MAAM6N,IAAK,IAC9Cmc,EAAc9qB,SAAS0d,EAAKvgB,QAAQ2D,MAAM4N,KAAM,IAIpD,OAHUP,KAAK8C,MAAM4Z,GAAc/wB,KAAK0kB,cAAc,GAAK1kB,KAAKghB,YAAY,KAClE3M,KAAK8C,MAAM6Z,GAAehxB,KAAK0kB,cAAc,KAAM1kB,KAAKghB,YAAY,OAIlFpF,EAAgB1b,UAAUmgB,sBAAwB,SAAU4Q,GAExD,IAAK,IADD3tB,EAAQtD,KACHgB,EAAI,EAAGA,EAAIiwB,EAAYtwB,OAAQK,IAAK,CACzC,IAAI2gB,EAAcsP,EAAYjwB,GAE1BhB,KAAKkxB,QAAU,IAAIC,YAAUxP,GACzB3O,gBAAgB,EAChByc,OAAO,EACP2B,SAAUpxB,KAAKqD,QACfguB,OAAQrxB,KAAKqwB,gBAAkBrwB,KAAKqwB,gBAAkB,WACtDiB,MAAO,YACPC,UAAWvxB,KAAKwxB,gBAAgBtO,KAAKljB,MACrCyxB,SAAU,SAAU7N,GAChB,IAAIxB,EAAQ9e,EAAM+gB,gBAAgB/gB,EAAMyc,YAAY7G,IAChD5V,EAAMmjB,cACNnjB,EAAMijB,WAAWnE,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMzD,MAAOyD,EAAMxD,MAAOtb,EAAMyc,aAAapf,OAAS,GAC7F2C,EAAMouB,kBAAkB9N,GACxBtgB,EAAMub,iBAAiBvb,EAAMyc,YAAaqC,EAAMzE,IAAKyE,EAAMxE,KAC3Dta,EAAM0c,kBAAkB1c,EAAMyc,YAAaqC,IAG3C9e,EAAMub,iBAAiBvb,EAAMyc,YAAaqC,EAAMzE,IAAKyE,EAAMxE,KAE/D,IAAI+T,KACJruB,EAAMyc,YAAc,KACpB,IAAI0B,EAAOne,EAAMkjB,aAAa5C,GAC1BtgB,EAAMygB,WACNla,SAAOvG,EAAMygB,WAEjBvc,eAAalE,EAAMD,UAAWgY,IAC9B7T,eAAaoc,EAAKvgB,UAAWiY,IAC7BhY,EAAMygB,UAAY,KAClBH,EAAKvgB,QAAQmB,UAAUkE,OAAO,cAC9B,IAAIiV,EAAMra,EAAMwtB,uBAAuBlN,GAAM,GACzChG,EAAMta,EAAMwtB,uBAAuBlN,GAAM,GACzChC,EAAate,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,IAChD5V,EAAMmjB,cACsG,IAA5GnjB,EAAMijB,WAAW5I,EAAKC,EAAKgE,EAAWjD,MAAOiD,EAAWhD,MAAOtW,SAAS4Y,eAAeO,EAAKvI,KAAKvY,QACjG2C,EAAMoa,oBAAoBpa,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,KAAOyE,IAAKA,EAAKC,IAAKA,IACnFta,EAAM8Z,UAAUwG,EAAKvgB,QAAQ6V,IAAIyE,IAAMA,EACvCra,EAAM8Z,UAAUwG,EAAKvgB,QAAQ6V,IAAI0E,IAAMA,EACvCta,EAAMob,eAAgB9V,OAASgV,IAAKA,EAAIzJ,WAAYwJ,IAAKA,EAAIxJ,aAAgByP,EAAKvgB,SAClFC,EAAMgd,gBAGNhd,EAAMoa,oBAAoBpa,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,KACzDyE,IAAKra,EAAM8Z,UAAUwG,EAAKvgB,QAAQ6V,IAAIyE,IACtCC,IAAKta,EAAM8Z,UAAUwG,EAAKvgB,QAAQ6V,IAAI0E,MAE1CgG,EAAKvgB,QAAQ0K,aAAa,WAAYzK,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,IAAI0E,IAAIzJ,YACjFyP,EAAKvgB,QAAQ0K,aAAa,WAAYzK,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,IAAIyE,IAAIxJ,YACjF7Q,EAAMgd,eAEV,IAAIsR,EAAgBtuB,EAAM+gB,gBAAgBT,EAAKvgB,QAAQ6V,IACvD5V,EAAMub,iBAAiB+E,EAAKvgB,QAASuuB,EAAcjU,IAAKiU,EAAchU,KACtEta,EAAMkd,eACNld,EAAMmd,yBACN,IAAK,IAAIoR,EAAM,EAAGA,EAAMvuB,EAAMma,OAAO9c,OAAQkxB,IACrCvuB,EAAMma,OAAOoU,GAAKlU,MAAQra,EAAMwuB,mBAAmBD,GAAKlU,KACxDra,EAAMma,OAAOoU,GAAKjU,MAAQta,EAAMwuB,mBAAmBD,GAAKjU,KACxD+T,EAAcjnB,KAAKpH,EAAMma,OAAOoU,IAGxC,GAAIF,EAAchxB,OAAS,EAAG,CAC1B,IAAIoxB,GAAgBJ,cAAeA,GACnCruB,EAAMqN,QAAQ,SAAUohB,GAE5BzuB,EAAM0uB,mBAAsB9f,MAAO0R,EAAK1R,MAAO7O,QAASugB,EAAKvgB,SAC7DC,EAAMqN,QAAQ,WAAYiT,GAC1BtgB,EAAMuf,gBAEVoP,KAAM,SAAUrO,GACZtgB,EAAM4uB,kBACFhgB,MAAO0R,EAAK1R,MACZ7O,QAASugB,EAAKvgB,QACd/C,OAAQqjB,UAASC,EAAW,OAAG,aAEnCtgB,EAAMqN,QAAQ,OAAQrN,EAAM4uB,kBAC5B5uB,EAAM6uB,YAAYvO,OAGyB,IAA/C5jB,KAAKgd,eAAelS,QAAQ9K,KAAKkxB,UACjClxB,KAAKgd,eAAetS,KAAK1K,KAAKkxB,WAM9CtV,EAAgB1b,UAAUsgB,aAAe,WACrCxgB,KAAKmmB,mBACLnmB,KAAKihB,qBACLjhB,KAAKsgB,eAET1E,EAAgB1b,UAAUsxB,gBAAkB,SAAU5N,GAClD5jB,KAAKoyB,eAAkBlgB,MAAO0R,EAAK1R,MAAO7O,QAASugB,EAAKvgB,QAASwN,QAAQ,GACzE7Q,KAAK2Q,QAAQ,YAAa3Q,KAAKoyB,eAC/BpyB,KAAK8xB,mBAAqB9xB,KAAKqyB,YAAYryB,KAAKyd,QAChDzd,KAAK+f,YAAc6D,EAAKvgB,QACxBrD,KAAK6sB,YAAcyF,KAAKC,MAAMD,KAAKE,UAAUxyB,KAAK6sB,cAClD,IAAI4F,EAAczyB,KAAKorB,SAAWllB,SAAS0d,EAAKvgB,QAAQyF,aAAa,YAAa,IAClF9I,KAAK0yB,SAAWxsB,SAAS0d,EAAKvgB,QAAQyF,aAAa,YAAa,IAChE,IAAI8lB,EAAW1oB,SAAS0d,EAAKvgB,QAAQyF,aAAa,cAAe,IAC7D2pB,EAAc7D,IAAa5uB,KAAK6b,OAChC7b,KAAK6b,KAAO7b,KAAK6b,KAAO+S,EACxB5uB,KAAKwoB,iBAELxoB,KAAKkxB,QAAQyB,eAEjB3yB,KAAK+jB,UAAYzb,SAAS+E,cAAc,OACxCrN,KAAK+jB,UAAUvf,UAAU0C,IAAI,YAC7BlH,KAAK+jB,UAAUvf,UAAU0C,IAAI,uBAC7Bib,oBAASniB,KAAK+jB,WAAa6O,SAAY,aACvCnrB,YAAUzH,KAAKqD,UAAWgY,IAC1B5T,YAAUmc,EAAKvgB,UAAWiY,IAC1Btb,KAAKqD,QAAQiK,YAAYtN,KAAK+jB,WAC9B/jB,KAAK+jB,UAAYzb,SAAS8B,cAAc,aACxCpK,KAAK+jB,UAAU/c,MAAMlC,OAAU9E,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,IAAI0F,MAAQ5e,KAAK6gB,SAAS,GAAM,KACjG7gB,KAAK+jB,UAAU/c,MAAMjC,MAAS/E,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,IAAIyF,MAAQ3e,KAAK6gB,SAAS,GAAM,KAChG,IAAI+Q,EAAgB5xB,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,IACtDlZ,KAAK6e,iBAAiB7e,KAAK+jB,UAAW6N,EAAcjU,IAAKiU,EAAchU,MAI3EhC,EAAgB1b,UAAUmyB,YAAc,SAAUQ,EAAQvyB,QACvC2lB,IAAX3lB,IACAA,MAEJ,IAAK,IAAIU,EAAI,EAAGA,EAAI6xB,EAAOlyB,OAAQK,IAAK,CAE/BV,EAAOU,KACRV,EAAOU,OAGX,IAAK,IAAIquB,KAAKwD,EAAO7xB,GACjBV,EAAOU,GAAGquB,GAAKwD,EAAO7xB,GAAGquB,GAGjC,OAAO/uB,GAGXsb,EAAgB1b,UAAUiyB,YAAc,SAAUvO,GAC9C,IAAIkP,EACA5H,EACA6H,EACAnV,EAAMmV,EAAU/yB,KAAK8wB,uBAAuBlN,GAAM,GAClDjG,EAAM3d,KAAK8wB,uBAAuBlN,GAAM,GAC5C5jB,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,KAAOyE,IAAKA,EAAKC,IAAKA,IACjF,IAAIgE,EAAa5hB,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,IACnD,GAAIlZ,KAAKymB,eACLzmB,KAAK0e,eAAgB9V,OAASgV,IAAKA,EAAIzJ,WAAYwJ,IAAKA,EAAIxJ,aAAgByP,EAAKvgB,SACjFrD,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,KAAOyE,IAAKA,EAAKC,IAAKA,IACjFkV,EAAS9yB,KAAKod,UAAWwG,EAAKvgB,QAAU,IAAGua,IAC3CsN,EAASlrB,KAAKod,UAAWwG,EAAKvgB,QAAU,IAAGsa,IAC3C3d,KAAKod,UAAWwG,EAAKvgB,QAAU,KAAOsa,IAAKA,EAAKC,IAAKA,GACrD5d,KAAKihB,sBACDjhB,KAAK0yB,WAAaI,GAAU9yB,KAAKorB,WAAaF,KAC9ClrB,KAAK0xB,kBAAkB9N,GACnB5jB,KAAK0yB,WAAaI,IAClB9yB,KAAKorB,SAAWF,GAEhBlrB,KAAKorB,WAAaF,IAClBlrB,KAAK0yB,SAAWI,GAEhB9yB,KAAKymB,eAAc,CACnBzmB,KAAK+f,YAAc6D,EAAKvgB,QACxB,IAAI+e,EAAQR,EACZ5hB,KAAKgtB,eAAiBhtB,KAAKumB,WAAWnE,EAAMzE,IAAKyE,EAAMxE,IAAKwE,EAAMzD,MAAOyD,EAAMxD,MAAOgF,EAAKvgB,SACvFue,EAAWhE,KAAO5d,KAAK0gB,mBACvB1gB,KAAKgtB,mBAEThtB,KAAKggB,kBAAkB4D,EAAKvgB,QAASue,GACrC5hB,KAAKmmB,oBAIS,IAAtBnmB,KAAKymB,cACLzmB,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,KAAOyE,IAAKA,EAAKC,IAAKA,IAEjF5d,KAAKod,UAAUwG,EAAKvgB,QAAQ6V,IAAIyE,MAAQA,GAAO3d,KAAKod,UAAUwG,EAAKvgB,QAAQ6V,IAAI0E,MAAQA,IACvF5d,KAAK0d,oBAAoB1d,KAAKqkB,gBAAgBT,EAAKvgB,QAAQ6V,KAAOyE,IAAKA,EAAKC,IAAKA,IACjF5d,KAAK0e,eAAgB9V,OAASgV,IAAKA,EAAIzJ,WAAYwJ,IAAKA,EAAIxJ,aAAgByP,EAAKvgB,UAEjFrD,KAAK0yB,WAAaK,IAClB/yB,KAAK0yB,SAAWI,EAChB9yB,KAAKmmB,oBAEJnmB,KAAKymB,cACNzmB,KAAK0xB,kBAAkB9N,GAE3B5jB,KAAK6nB,oBAAoB7nB,KAAKyc,iBAC9Bzc,KAAKigB,WAAWjgB,KAAKyc,iBACjBzc,KAAKymB,cAIb7K,EAAgB1b,UAAUsmB,aAAe,SAAU5C,GAE/C,IAAK,IADDnC,EACKzgB,EAAI,EAAGA,EAAIhB,KAAKyc,gBAAgB9b,OAAQK,IACzChB,KAAKyc,gBAAgBzb,GAAGkY,MAAS0K,EAAKvgB,SACnCugB,EAAKvgB,QAAQ6V,IAAO0K,KACvBnC,EAAOzhB,KAAKyc,gBAAgBzb,IAGpC,OAAOygB,GAEX7F,EAAgB1b,UAAUopB,SAAW,SAAU3L,EAAK8J,EAAQuL,IACpDA,GAAkBA,aAAwBpzB,QAC1CozB,GAAgBA,IAGpB,IADA,IAAIpU,EAAQ,EACLjB,GAAO,GAAG,CAGb,IAFA,IAAIgB,EAAQ,EACRf,EAAM6J,EACH7J,GAAO,GAAG,CACb,IAAIuL,EAAQnpB,KAAK0c,YAAYiB,GAC7B,GAAIwL,EAAO,CACP,IAAI1H,EAAO0H,EAAMvL,GACjB,GAAI6D,KAAUuR,IACsB,IAAhCA,EAAaloB,QAAQ2W,KAAiBvb,SAASub,EAAK3Y,aAAa,cAAe,KAAO6V,GACpFzY,SAASub,EAAK3Y,aAAa,cAAe,KAAO8V,EACpD,OAAO6C,IAGb9C,IACAf,IAEJD,IACAiB,EAEN,OAAO,MAGXhD,EAAgB1b,UAAUwxB,kBAAoB,SAAU9N,GACpD,IAAIqP,EACAC,EACAtU,EAAQ1Y,SAAS0d,EAAKvgB,QAAQyF,aAAa,cAAe,IAC1D8U,EAAM1X,SAAS0d,EAAKvgB,QAAQyF,aAAa,YAAa,IACtD6U,EAAMzX,SAAS0d,EAAKvgB,QAAQyF,aAAa,YAAa,IACtD6V,EAAQzY,SAAS0d,EAAKvgB,QAAQyF,aAAa,cAAe,IAC1D4f,EAAa1oB,KAAK0kB,cAAc,GAChC+D,EAAczoB,KAAK0kB,cAAc,GACjC7P,EAAc,IAAR8I,EAAY,EAAM,GAASzX,SAASuiB,EAAYtU,WAAY,IAAMnU,KAAKghB,YAAY,IACzFpM,EAAe,IAARgJ,EAAY,EAAM,GAAS1X,SAASwiB,EAAWvU,WAAY,IAAMnU,KAAKghB,YAAY,IAC7FiS,EAAcjzB,KAAK0kB,cAAc,GACjCwO,EAAelzB,KAAK0kB,cAAc,GAClC1kB,KAAKid,WAAWpI,IAAM7U,KAAK+jB,UAAU/c,MAAM6N,IAAMA,EAAM,KACvD7U,KAAKid,WAAWrI,KAAO5U,KAAK+jB,UAAU/c,MAAM4N,KAAOA,EAAO,KAC1D5U,KAAKid,WAAWnY,OAAS9E,KAAK+jB,UAAU/c,MAAMlC,OAAW8Z,EAAQqU,GAAiBrU,EAAQ,GAAK5e,KAAKghB,YAAY,GAAO,KACvHhhB,KAAKid,WAAWlY,MAAQ/E,KAAK+jB,UAAU/c,MAAMjC,MAAU4Z,EAAQuU,GAAkBvU,EAAQ,GAAK3e,KAAKghB,YAAY,GAAO,MAG1HpF,EAAgB1b,UAAUmkB,gBAAkB,SAAUvG,GAElD,IAAK,IADDqV,EACKnyB,EAAI,EAAGA,EAAIhB,KAAKyd,OAAO9c,OAAQK,IAChChB,KAAKyd,OAAOzc,GAAGkY,KAAO4E,IACtBqV,EAAsBnzB,KAAKyd,OAAOzc,IAG1C,OAAOmyB,GAKXvX,EAAgB1b,UAAUkzB,SAAW,SAAUhL,GAC3CpoB,KAAKof,SACAgJ,EAAM9F,WACP8F,EAAM9F,SAAW,GAEhB8F,EAAM7F,WACP6F,EAAM7F,SAAW,GAEhB6F,EAAMlP,KACPkP,EAAMlP,GAAK,UAAYlZ,KAAK8b,QAAQ3H,WACpCnU,KAAK8b,QAAU9b,KAAK8b,QAAU,GAGlC,IAAI8G,EAAY,IAAIjH,EAAM3b,KAAM,SAAUooB,GAC1CpoB,KAAKyd,OAAO/S,KAAKkY,GACjB5iB,KAAKqf,gBAAgBuD,IACjB5iB,KAAKsf,eAAiBsD,EAAUhF,KAAO5d,KAAKsf,eAAkBsD,EAAUhF,IAAMgF,EAAUjE,QACxF3e,KAAK0d,oBAAoBkF,GAAahF,IAAK5d,KAAKsf,eAAiBsD,EAAUjE,QAE/E,IAAIsK,EAAOjpB,KAAK4oB,WAAWhG,GAAW,GACtC5iB,KAAKod,UAAUwF,EAAU1J,KAAQyE,IAAKiF,EAAUjF,IAAKC,IAAKgF,EAAUhF,KACpE5d,KAAK6sB,YAAYjK,EAAU1J,KAAQyE,IAAKiF,EAAUjF,IAAKC,IAAKgF,EAAUhF,KACtE5d,KAAKihB,qBACLjhB,KAAKqD,QAAQgwB,sBAAsB,aAAcpK,GACjD,IAAIsH,EAAYtH,EAAK7e,cAAc,sBA6BnC,GA5BIpK,KAAKke,mBACLle,KAAKkgB,wBACLlgB,KAAK6nB,oBAAoB7nB,KAAKyc,mBAG9Bzc,KAAK4sB,gBAAiB,EACtB5sB,KAAK+f,YAAckJ,EACdjpB,KAAKgtB,iBACNhtB,KAAKgtB,mBAEThtB,KAAK6e,iBAAiBoK,EAAMrG,EAAUjF,IAAKiF,EAAUhF,KACrD5d,KAAKggB,kBAAkBiJ,EAAMrG,GAC7B5iB,KAAK4sB,gBAAiB,GAEtB5sB,KAAK8iB,eACL9iB,KAAK4f,aAAe5f,KAAKke,mBACzBle,KAAKswB,iBAAiBrH,EAAMsH,GAE5BvwB,KAAKogB,eACLpgB,KAAK4f,aAAe5f,KAAKke,mBACzBle,KAAKqgB,uBAAuB/X,SAAS4Y,eAAe0B,EAAU1J,MAE9DlZ,KAAKkmB,eACLlmB,KAAKmmB,mBAETnmB,KAAKihB,qBACLjhB,KAAKsgB,cACLtgB,KAAKygB,yBACDzgB,KAAK8iB,cACL,IAAK,IAAI9hB,EAAI,EAAGA,EAAIioB,EAAK7O,iBAAiB,aAAazZ,OAAQK,IAAK,CAChE,IAAIkN,EAAmC,SAAtBxG,UAAQyG,KAAKC,KAAmB,wBAA0B,YAC3E/F,eAAanB,IAAI+hB,EAAK7O,iBAAiB,aAAapZ,GAAIkN,EAAWlO,KAAK+iB,kBAAmB/iB,MACjE,SAAtB0H,UAAQyG,KAAKC,MACb/F,eAAanB,IAAI+hB,EAAK7O,iBAAiB,aAAapZ,GAAI,aAAchB,KAAKgjB,uBAAwBhjB,QAQnH4b,EAAgB1b,UAAUozB,YAAc,SAAUlL,GAC9C,GAAKA,EAAMlP,GAAX,CAGA,IAAI0Y,EAAgB5xB,KAAKqkB,gBAAgB+D,EAAMlP,IAC/C,GAAK0Y,EAAL,CAGA5xB,KAAKof,SACLgJ,EAAMxK,IAAOwK,EAAMxK,IAAM,EAAK,EAAMwK,EAAMxK,IAAM5d,KAAKwe,QAAYxe,KAAKwe,QAAU,EAAI4J,EAAMxK,IACtFrX,oBAAkB6hB,EAAMxK,OACxBwK,EAAMxK,IAAMgU,EAAchU,KAE9B5d,KAAK0d,oBAAoBkU,EAAexJ,GACxCpoB,KAAKqf,gBAAgBuS,GACrB,IAAI3I,EAAO3gB,SAAS4Y,eAAekH,EAAMlP,IAMzC,GALAlZ,KAAK+f,YAAckJ,EACnBjpB,KAAKwb,aAAeyN,EAAK7e,cAAc,sBACnC6e,EAAK7e,cAAc,sBACnBpK,KAAKmhB,iBAAiByQ,EAAc3sB,SAAUgkB,EAAK/P,GAAK,WAAYuC,GACxEwN,EAAK3b,YAAYtN,KAAKwb,cAClBoW,EAAclW,OAAQ,CACtB,IAAIqG,EAAwBkH,EAAK7e,cAAc,mBAC3C6e,EAAK7e,cAAc,mBAAqBpK,KAAKmhB,iBAAiB,GAAI8H,EAAK/P,GAAK,WAAY,IAC5FzR,YAAUsa,IAAyBrG,IACnCqG,EAAsBvb,UAAY,GAClC,IAAI0S,EAAKlZ,KAAKqD,QAAQ6V,GAAK,iBAAmB0Y,EAAc1Y,GAC5DlZ,KAAKshB,eAAesQ,EAAclW,OAAQqG,EAAuB7I,GAAI,GACrElZ,KAAKwb,aAAalO,YAAYyU,QAG1BkH,EAAK7e,cAAc,oBACnBP,SAAOof,EAAK7e,cAAc,oBAGlC,GAAIwnB,EAActoB,QAAS,CACvBtJ,KAAKgiB,UAAYiH,EAAK7e,cAAc,oBAAsB6e,EAAK7e,cAAc,oBACzEpK,KAAKmhB,iBAAiByQ,EAAc3sB,SAAUgkB,EAAK/P,GAAK,QAASsC,GACrExb,KAAKgiB,UAAUxb,UAAY,GAC3B,IAEIyb,EAAqB,iBAFNjiB,KAAKwb,aAAapR,cAAc,mBAC/CuO,OAAOuJ,iBAAiBliB,KAAKwb,aAAapR,cAAc,oBAAoBtF,OAAS,OAC/B,IAC1Dqd,oBAASniB,KAAKgiB,WAAald,OAAQmd,IAC/B/I,EAAKlZ,KAAKqD,QAAQ6V,GAAK,kBAAoB0Y,EAAc1Y,GAC7DlZ,KAAKshB,eAAesQ,EAActoB,QAAStJ,KAAKgiB,UAAW9I,GAAI,GAC/DlZ,KAAKwb,aAAalO,YAAYtN,KAAKgiB,gBAG/BiH,EAAK7e,cAAc,qBACnBP,SAAOof,EAAK7e,cAAc,qBAGlCpK,KAAKwf,gBAAgByJ,EAAM2I,GAC3B5xB,KAAK8e,kBAAkBmK,EAAM2I,GAC7B5xB,KAAK6e,iBAAiBoK,EAAM2I,EAAcjU,IAAKiU,EAAchU,KAC7D5d,KAAKggB,kBAAkBiJ,EAAM2I,GAC7B5xB,KAAK+f,YAAc,KACnB/f,KAAKwgB,eACLxgB,KAAKygB,4BAET7E,EAAgB1b,UAAUugB,uBAAyB,WAC/CzgB,KAAK+sB,WAAa/sB,KAAK0c,YACvB1c,KAAK6sB,YAAcyF,KAAKC,MAAMD,KAAKE,UAAUxyB,KAAKod,aAKtDxB,EAAgB1b,UAAUqzB,UAAY,WAGlC,IAAK,IAFDC,EAAaxzB,KAAKqyB,YAAYryB,KAAKyd,QACnCgW,KACKzyB,EAAI,EAAGA,EAAIwyB,EAAW7yB,OAAQK,IACnCyyB,EAAa/oB,MACTwO,GAAIsa,EAAWxyB,GAAGkY,GAAIyE,IAAK6V,EAAWxyB,GAAG2c,IAAKC,IAAK4V,EAAWxyB,GAAG4c,IAAKe,MAAO6U,EAAWxyB,GAAG2d,MAC3FC,MAAO4U,EAAWxyB,GAAG4d,MAAO0D,SAAUkR,EAAWxyB,GAAGshB,SAAUC,SAAUiR,EAAWxyB,GAAGuhB,SACtFC,SAAUgR,EAAWxyB,GAAGwhB,SAAUC,SAAU+Q,EAAWxyB,GAAGyhB,WAGlE,UAKJ7G,EAAgB1b,UAAUwzB,UAAY,WAClC,IAAK,IAAI1yB,EAAI,EAAGA,EAAIhB,KAAKyc,gBAAgB9b,OAAQK,IAC7C6I,SAAO7J,KAAKyc,gBAAgBzb,IAEhChB,KAAKqD,QAAQmD,UAAY,GACzBxG,KAAK6b,KAAO,EACZ7b,KAAK2c,uBACL3c,KAAKwoB,iBACLxoB,KAAKsgB,cACLtgB,KAAK0c,eACL1c,KAAK6c,uBACL7c,KAAK4c,kBACL5c,KAAK8c,0BACL9c,KAAKyc,mBACLzc,KAAKod,aACLpd,KAAK6sB,eACL7sB,KAAKyd,UACLzd,KAAKwgB,eACLxgB,KAAKygB,0BAKT7E,EAAgB1b,UAAUyzB,YAAc,SAAUza,GAE9C,IAAK,IADD5V,EAAQtD,KACHgB,EAAI,EAAGA,EAAIhB,KAAKyc,gBAAgB9b,OAAQK,IACzChB,KAAKyc,gBAAgBzb,GAAGkY,KAAOA,IAC/BrP,SAAO7J,KAAKyc,gBAAgBzb,IAC5BhB,KAAKyc,gBAAgB5B,OAAO7Z,EAAG,IAE/BhB,KAAKyd,OAAOzc,GAAGkY,KAAOA,IACtBlZ,KAAKyd,OAAO5C,OAAO7Z,EAAG,GACtBhB,KAAKihB,qBACLjhB,KAAKsgB,eAGbtgB,KAAKwgB,eACLxgB,KAAK2c,oBAAoBhT,QAAQ,SAAU8X,GACnCA,EAAKvI,KAAOA,GACZ5V,EAAMqZ,oBAAoB9B,OAAOvX,EAAMqZ,oBAAoB7R,QAAQ2W,GAAO,KAGlFzhB,KAAKygB,0BAKT7E,EAAgB1b,UAAU0zB,UAAY,SAAU1a,EAAIyE,EAAKC,GACrD5d,KAAK+b,iBAAkB,EACvB,IAAI6V,EAAgB5xB,KAAKqkB,gBAAgBnL,GACrC0E,EAAM,EACNA,EAAM,EAEDA,EAAM5d,KAAKwe,UAChBZ,EAAM5d,KAAKwe,QAAU,GAEzBxe,KAAK0d,oBAAoBkU,GAAiBjU,IAAKA,EAAKC,IAAKA,IACzD,IAAIpF,EAAMlQ,SAAS4Y,eAAehI,GAClClZ,KAAK+f,YAAcvH,EACnBxY,KAAK0e,eAAgB9V,OAASgV,IAAKA,EAAIzJ,WAAYwJ,IAAKA,EAAIxJ,aAAgBqE,GAC5ExY,KAAK6e,iBAAiBrG,EAAKmF,EAAKC,GAChC5d,KAAKggB,kBAAkBxH,EAAKoZ,GAC5B5xB,KAAK+e,kBACL/e,KAAKwgB,eACLxgB,KAAKygB,yBACLzgB,KAAK+b,iBAAkB,GAE3BH,EAAgB1b,UAAUwe,cAAgB,SAAU9V,EAAO4P,GACvD,IAAK,IAAIxX,EAAI,EAAGA,EAAIvB,OAAOmF,KAAKgE,GAAOjI,OAAQK,IACvCvB,OAAOmF,KAAKgE,KACRA,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI4c,KAC7BpF,EAAIzK,aAAa,WAAYnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI4c,IAAIzJ,YAE9DvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI2c,KAC7BnF,EAAIzK,aAAa,WAAYnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI2c,IAAIxJ,YAE9DvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI2d,OAC7BnG,EAAIzK,aAAa,aAAcnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI2d,MAAMxK,YAElEvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI4d,OAC7BpG,EAAIzK,aAAa,aAAcnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAI4d,MAAMzK,YAElEvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIshB,UAC7B9J,EAAIzK,aAAa,gBAAiBnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIshB,SAASnO,YAExEvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIuhB,UAC7B/J,EAAIzK,aAAa,gBAAiBnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIuhB,SAASpO,YAExEvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIwhB,UAC7BhK,EAAIzK,aAAa,gBAAiBnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIwhB,SAASrO,YAExEvL,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIyhB,UAC7BjK,EAAIzK,aAAa,gBAAiBnF,EAAMnJ,OAAOmF,KAAKgE,GAAO5H,IAAIyhB,SAAStO,cAQxFyH,EAAgB1b,UAAU2zB,YAAc,SAAU3a,EAAIyF,EAAOC,GACzD,IAAIgT,EAAgB5xB,KAAKqkB,gBAAgBnL,GACzClZ,KAAKgc,cAAe,EACpBhc,KAAK0d,oBAAoBkU,GAAiBjT,MAAOA,EAAOC,MAAOA,IAC/D5e,KAAKqf,gBAAgBuS,GACrB5xB,KAAK+oB,kBAAkB6I,GACvB,IAAIpZ,EAAMlQ,SAAS4Y,eAAehI,GAClClZ,KAAK+f,YAAcvH,EACnBxY,KAAK0e,eAAgB9V,OAAS+V,MAAOiT,EAAcjT,MAAMxK,WAAYyK,MAAOgT,EAAchT,MAAMzK,aAAgBqE,GAChHxY,KAAK8e,kBAAkBtG,EAAKoZ,GAC5B5xB,KAAKggB,kBAAkBxH,EAAKoZ,GAC5B5xB,KAAKwgB,eACLxgB,KAAK+e,kBACL/e,KAAKgc,cAAe,GAKxBJ,EAAgB1b,UAAU4Z,QAAU,WAChCtS,eAAaxH,KAAKqD,UAAW,oBAAqB,QAAS,eAAgB,cAC3ErD,KAAKqD,QAAQywB,gBAAgB,SAC7B,IAAK,IAAI9yB,EAAI,EAAGA,EAAIhB,KAAKgd,eAAerc,OAAQK,IAC5ChB,KAAKgd,eAAehc,GAAG8Y,UAE3B9Z,KAAKqD,QAAQmD,UAAY,GACzBzD,EAAO7C,UAAU4Z,QAAQvW,KAAKvD,OAElC4b,EAAgB1b,UAAU0gB,aAAe,WACrC5gB,KAAK8F,UAAY2B,YAAUzH,KAAKqD,SAAU,SAAWmE,eAAaxH,KAAKqD,SAAU,UAErFuY,EAAgB1b,UAAU6zB,gBAAkB,SAAU7a,GAGlD,IAAK,IAFD8a,EACAxb,EAAMlQ,SAAS4Y,eAAehI,GACzBlY,EAAI,EAAGA,EAAIhB,KAAKgd,eAAerc,OAAQK,IAE5C,GADAgzB,EAAoBh0B,KAAKgd,eAAehc,GAAGqC,UAAYmV,EAAMxY,KAAKgd,eAAehc,GAAK,KAElF,OAAOgzB,EAGf,OAAOA,GAOXpY,EAAgB1b,UAAU+zB,yBAA2B,WACjDj0B,KAAK2gB,wBACL3gB,KAAKwoB,iBACLxoB,KAAKuoB,eACL,IAAK,IAAIvnB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAQK,IAAK,CACvE,IAAIwX,EAAMxY,KAAKqD,QAAQ+W,iBAAiB,YAAYpZ,GAChD4gB,EAAa5hB,KAAKqkB,gBAAgB7L,EAAIU,IAC1ClZ,KAAK8e,kBAAkBtG,EAAKoJ,GAC5B5hB,KAAK6e,iBAAiBrG,EAAKoJ,EAAWjE,IAAKiE,EAAWhE,OAG9DhC,EAAgB1b,UAAUg0B,wBAA0B,SAAUzW,GAC1Dzd,KAAK0zB,YACL1zB,KAAKiK,eAAgBwT,OAAQA,IAAU,GACvCzd,KAAKud,eACLvd,KAAK+d,aACD/d,KAAKie,eACLje,KAAKme,iBAGbvC,EAAgB1b,UAAUi0B,iBAAmB,SAAU1W,GACnD,IAAIna,EAAQtD,KACPuG,oBAAkBkX,KACnBzd,KAAK8b,QAAU,EACf2B,EAAO9T,QAAQ,SAAUye,GAChBA,EAAMlP,KACP5V,EAAMoa,oBAAoB0K,GAASlP,GAAI,UAAY5V,EAAMwY,QAAQ3H,aACjE7Q,EAAMwY,QAAUxY,EAAMwY,QAAU,OAUhDF,EAAgB1b,UAAUmE,kBAAoB,SAAUC,EAASC,GAC7D,IAAIjB,EAAQtD,KACRsE,EAAQmZ,QACRzd,KAAKm0B,iBAAiB7vB,EAAQmZ,QAElC,IAAK,IAAI/Y,EAAK,EAAGC,EAAKlF,OAAOmF,KAAKN,GAAUI,EAAKC,EAAGhE,OAAQ+D,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,YACD1E,KAAKiK,eAAgBnE,UAAWxB,EAAQwB,YAAa,GACrD9F,KAAK4gB,eACL,MACJ,IAAK,aACD5gB,KAAKiK,eAAgB2V,WAAYtb,EAAQsb,aAAc,GACnD5f,KAAKke,mBACLle,KAAKkgB,wBAET,MACJ,IAAK,gBACDlgB,KAAKiK,eAAgBmW,cAAe9b,EAAQ8b,gBAAiB,GAC7DpgB,KAAK8nB,cAAc9nB,KAAKgd,gBACxB,MACJ,IAAK,gBAED,GADAhd,KAAKiK,eAAgB6Y,cAAexe,EAAQwe,gBAAiB,GACzD9iB,KAAK8iB,cACL9iB,KAAKigB,WAAWjgB,KAAKyc,iBACrBzc,KAAK6iB,mBAEJ,CACD,IAAK,IAAI7hB,EAAI,EAAGA,EAAIsH,SAAS8R,iBAAiB,aAAazZ,OAAQK,IAAK,CACpE,IAAIkN,EAAmC,SAAtBxG,UAAQyG,KAAKC,KAAmB,wBAA0B,YACvE/K,EAAUiF,SAAS8R,iBAAiB,aAAapZ,GACrDqH,eAAaK,OAAOrF,EAAS6K,EAAWlO,KAAK+iB,mBACnB,SAAtBrb,UAAQyG,KAAKC,MACb/F,eAAaK,OAAOrF,EAAS,aAAcrD,KAAKgjB,wBAGxDhjB,KAAK6nB,oBAAoB7nB,KAAKyc,iBAElC,MACJ,IAAK,cACDzc,KAAKiK,eAAgB+W,YAAa1c,EAAQ0c,cAAe,GACzDhhB,KAAKi0B,2BACLj0B,KAAKmnB,kBACL,MACJ,IAAK,kBACDnnB,KAAKiK,eAAgBomB,gBAAiB/rB,EAAQ+rB,kBAAmB,GACjE,IAASrvB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ+W,iBAAiB,YAAYzZ,OAAQK,IAAK,CACvE,IAAIwX,EAAMxY,KAAKqD,QAAQ+W,iBAAiB,YAAYpZ,GAC5BhB,KAAK+zB,gBAAgBvb,EAAIU,IAC/BmY,OAASrxB,KAAKqwB,gBAEpC,MACJ,IAAK,gBACDrwB,KAAKiK,eAAgBic,cAAe5hB,EAAQ4hB,gBAAiB,GAC7DlmB,KAAKmmB,mBACL,MACJ,IAAK,gBACGnmB,KAAKie,eACLje,KAAKiK,eAAgBgU,cAAe3Z,EAAQ2Z,gBAAiB,GAC7Dje,KAAKme,iBAGDne,KAAKoe,OACLvU,SAAO7J,KAAKoe,OAGpB,MACJ,IAAK,eACDpe,KAAKiK,eAAgBwc,aAAcniB,EAAQmiB,eAAgB,GAC3D,MACJ,IAAK,SACIzmB,KAAKqd,qBAONrd,KAAKqd,sBAAuB,GAN5Brd,KAAKge,kBAAmB,EACxBhe,KAAKk0B,wBAAwB5vB,EAAQmZ,QACrCzd,KAAKge,kBAAmB,EACxBhe,KAAKqd,sBAAuB,GAKhC,MACJ,IAAK,UACDrd,KAAKge,kBAAmB,EACpB1Z,EAAQmZ,SAAWzd,KAAKqd,sBACxBrd,KAAKk0B,wBAAwB5vB,EAAQmZ,QACrCzd,KAAKqd,sBAAuB,GAG5Brd,KAAKqd,sBAAuB,EAEhCrd,KAAKiK,eAAgBuU,QAASla,EAAQka,UAAW,GACjDxe,KAAKyc,mBACLzc,KAAKsf,eAAiBtf,KAAKwe,QAC3Bxe,KAAKwd,oBACLxd,KAAKyd,OAAO9T,QAAQ,SAAUye,GAE1B,GADA9kB,EAAM+b,gBAAgB+I,GAClB9kB,EAAMgc,eAAiB8I,EAAMxK,KAAOta,EAAMgc,eAAkB8I,EAAMxK,IAAMwK,EAAMzJ,MAAQ,CACtF,IAAIY,EAAWjc,EAAMgc,eAAiB8I,EAAMzJ,MAC5Crb,EAAMoa,oBAAoB0K,GAASxK,IAAK2B,EAAW,EAAI,EAAIA,IAC3Djc,EAAMkc,gBAAgBlX,SAAS4Y,eAAekH,EAAMlP,IAAKkP,GAE7D9kB,EAAMwb,kBAAkBxW,SAAS4Y,eAAekH,EAAMlP,IAAKkP,GAC3D9kB,EAAMmZ,gBAAgB/R,KAAKpC,SAAS4Y,eAAekH,EAAMlP,KACzD5V,EAAMub,iBAAiBvW,SAAS4Y,eAAekH,EAAMlP,IAAKkP,EAAMzK,IAAKyK,EAAMxK,KAC3Eta,EAAMyc,YAAczX,SAAS4Y,eAAekH,EAAMlP,IAClD5V,EAAM0c,kBAAkB1X,SAAS4Y,eAAekH,EAAMlP,IAAKkP,GAC3D9kB,EAAMyc,YAAc,OAExB/f,KAAKwgB,eACLxgB,KAAKygB,yBACLzgB,KAAKge,kBAAmB,EACxBhe,KAAKmnB,qBASrBvL,EAAgB1b,UAAU0H,eAAiB,WAEvC,OAAO5H,KAAK6H,cADK,YAQrB+T,EAAgB1b,UAAU4H,cAAgB,WACtC,MAAO,mBAEX1H,GACI6C,YAAS,IACV2Y,EAAgB1b,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACV2Y,EAAgB1b,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACV2Y,EAAgB1b,UAAW,oBAAgB,GAC9CE,GACI6C,YAAS,IACV2Y,EAAgB1b,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,IACV2Y,EAAgB1b,UAAW,uBAAmB,GACjDE,GACI6C,YAAU,EAAG,KACd2Y,EAAgB1b,UAAW,mBAAe,GAC7CE,GACI6C,WAAS,IACV2Y,EAAgB1b,UAAW,eAAW,GACzCE,GACI6C,YAAS,IACV2Y,EAAgB1b,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,OACV2Y,EAAgB1b,UAAW,uBAAmB,GACjDE,GACI6C,WAAS,UACV2Y,EAAgB1b,UAAW,cAAU,GACxCE,GACI6C,WAAS,qBACV2Y,EAAgB1b,UAAW,kBAAc,GAC5CE,GACI6a,gBAAeU,IAChBC,EAAgB1b,UAAW,cAAU,GACxCE,GACI6C,YAAU,kBACX2Y,EAAgB1b,UAAW,wBAAoB,GAClDE,GACI8a,WACDU,EAAgB1b,UAAW,cAAU,GACxCE,GACI8a,WACDU,EAAgB1b,UAAW,iBAAa,GAC3CE,GACI8a,WACDU,EAAgB1b,UAAW,YAAQ,GACtCE,GACI8a,WACDU,EAAgB1b,UAAW,gBAAY,GAC1CE,GACI8a,WACDU,EAAgB1b,UAAW,mBAAe,GAC7CE,GACI8a,WACDU,EAAgB1b,UAAW,cAAU,GACxCE,GACI8a,WACDU,EAAgB1b,UAAW,kBAAc,GAC5CE,GACI8a,WACDU,EAAgB1b,UAAW,eAAW,GACzCE,GACI8a,WACDU,EAAgB1b,UAAW,iBAAa,GAC3C0b,EAAkBxb,GACd+a,yBACDS,IAELR"}