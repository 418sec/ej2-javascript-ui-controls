{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, this.element.id + type); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        var _this = this;\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                setTimeout(function () { updateBlazorTemplate(_this.element.id + 'header', 'Header'); }, 0);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                setTimeout(function () { updateBlazorTemplate(_this.element.id + 'content', 'content'); }, 0);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        var _this = this;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            this.renderTemplate(panelInstance.header, headerTemplateElement, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            resetBlazorTemplate(this.element.id + 'header', 'Header');\n            setTimeout(function () { updateBlazorTemplate(_this.element.id + 'header', 'Header'); }, 0);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            this.renderTemplate(panelInstance.content, this.panelBody, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            resetBlazorTemplate(this.element.id + 'content', 'Content');\n            setTimeout(function () { updateBlazorTemplate(_this.element.id + 'content', 'Content'); }, 0);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childNodes","childEle","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","disablePanel","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","resetBlazorTemplate","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing"],"mappings":"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"}