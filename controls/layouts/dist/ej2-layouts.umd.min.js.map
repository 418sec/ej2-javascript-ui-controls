{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < this.separatorSize) ? '0px' :\n                        (nextPaneSize - this.separatorSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < this.separatorSize) ? '0px' :\n                        (prePaneSize - this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + this.separatorSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneExpanded = this.nextPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n            }\n            else {\n                this.expand(index);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}