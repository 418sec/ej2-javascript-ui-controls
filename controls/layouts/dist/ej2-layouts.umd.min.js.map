{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboardlayout/dashboardlayout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation.toLowerCase());\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        e.target.classList.add(SPLIT_BAR_HOVER);\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.previousPane.style.flexGrow = '1';\n        this.nextPane.style.flexGrow = '0';\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            (this.currentBarIndex !== 0) ?\n                this.previousPane.previousElementSibling.style.flexGrow = '' : this.nextPane.style.flexGrow = '';\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        var expandEventArgs = this.afterAction(e);\n        this.trigger('expanded', expandEventArgs);\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        var collapseEventArgs = this.afterAction(e);\n        this.trigger('collapsed', collapseEventArgs);\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        var templateFn;\n        if (this.element.nodeName === 'EJS-SPLITTER' || typeof (template) !== 'object') {\n            templateFn = compile(template);\n        }\n        else {\n            templateFn = compile(template.outerHTML);\n        }\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement);\n                this.panelContent.appendChild(headerTemplateElement);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody);\n                this.panelContent.appendChild(this.panelBody);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n                EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = (e.currentTarget).closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    // tslint:disable-next-line:max-func-body-length\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = this.moveTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                diffY = this.minTop - this.elementY;\n                this.mOffY = dY - diffY;\n            }\n            this.elementY += diffY;\n            this.elementHeight -= diffY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                diffX = this.minLeft - this.elementX;\n                this.mOffX = dX - diffX;\n            }\n            this.elementX += diffX;\n            this.elementWidth -= diffX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = this.upTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.onResize = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles || [southEast, southWest, north, west, south, east];\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n                sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n                minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : 1,\n                minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : 1,\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n                col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined,\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            _this.trigger('change', changedPanels);\n                        }\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.trigger('drag', args);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.trigger('dragStart', args);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        this.bindEvents();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.setMinMaxValues(panelInstance);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        var ele = document.getElementById(id);\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","nodeName","compile","outerHTML","item","append","childElement","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","ele","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","trim","error","renderTemplate","appendElement","templateElements","templateFn","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","upResizeHandler","onResize","bind","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMinWidth","getResizeRowColumn","attributes","upTarget","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","moveItemsUpwards","allowFloating","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","undefined","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","drag","onDragStart","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing"],"mappings":"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"}