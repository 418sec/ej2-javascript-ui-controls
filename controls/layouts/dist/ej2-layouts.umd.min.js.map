{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.children[elementIndex];\n        return paneEle.classList.contains('e-pane') ? paneEle : null;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}