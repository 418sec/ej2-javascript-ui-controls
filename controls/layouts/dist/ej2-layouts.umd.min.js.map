{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    for (var j = 0; j < this.element.children.length; j++) {\n                        if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                            separator = this.element.children[j];\n                        }\n                    }\n                    this.allBars.push(separator);\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate"],"mappings":"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"}